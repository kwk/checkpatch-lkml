WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: include/linux/lzo.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: include/linux/lzo.h:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: include/linux/lzo.h:20:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#87: FILE: include/linux/lzo.h:32:
+#define lzo1x_worst_compress(x) (x + (x / 64) + 16 + 3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#87: FILE: include/linux/lzo.h:32:
+#define lzo1x_worst_compress(x) (x + (x / 64) + 16 + 3)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: include/linux/lzo.h:34:
+const unsigned char * lzo_copyright(void);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: include/linux/lzo.h:37:
+int lzo1x_1_compress(const unsigned char *src, unsigned long src_len,
+			unsigned char *dst, unsigned long *dst_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: include/linux/lzo.h:42:
+int lzo1x_decompress_safe(const unsigned char *src, unsigned long src_len,
+			unsigned char *dst, unsigned long *dst_len,

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#123: FILE: lib/Kconfig:74:
+config LZO
+	tristate "LZO compressor/decompressor"
+	help
+	  minilzo implementation in kernelspace.
+
 #
 # compression support is select'ed if needed
 #

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: lib/lzo/lzoconf.h:1:
+/* lzoconf.h -- configuration for the LZO real-time data compression library

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: lib/lzo/lzoconf.h:2:
+/* lzoconf.h -- configuration for the LZO real-time data compression library
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#174: FILE: lib/lzo/lzoconf.h:19:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: lib/lzo/lzoconf.h:20:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: lib/lzo/lzoconf.h:31:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: lib/lzo/lzoconf.h:42:
+     typedef unsigned int       lzo_uint;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#197: FILE: lib/lzo/lzoconf.h:42:
+     typedef unsigned int       lzo_uint;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: lib/lzo/lzoconf.h:43:
+     typedef int                lzo_int;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#198: FILE: lib/lzo/lzoconf.h:43:
+     typedef int                lzo_int;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#200: FILE: lib/lzo/lzoconf.h:45:
+#elif (ULONG_MAX >= LZO_0xffffffffL)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <LZO_0xffffffffL>
#200: FILE: lib/lzo/lzoconf.h:45:
+#elif (ULONG_MAX >= LZO_0xffffffffL)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: lib/lzo/lzoconf.h:46:
+     typedef unsigned long      lzo_uint;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#201: FILE: lib/lzo/lzoconf.h:46:
+     typedef unsigned long      lzo_uint;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: lib/lzo/lzoconf.h:47:
+     typedef long               lzo_int;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#202: FILE: lib/lzo/lzoconf.h:47:
+     typedef long               lzo_int;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#209: FILE: lib/lzo/lzoconf.h:54:
+#if (UINT_MAX >= LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: lib/lzo/lzoconf.h:55:
+     typedef unsigned int       lzo_uint32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#210: FILE: lib/lzo/lzoconf.h:55:
+     typedef unsigned int       lzo_uint32;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: lib/lzo/lzoconf.h:56:
+     typedef int                lzo_int32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#211: FILE: lib/lzo/lzoconf.h:56:
+     typedef int                lzo_int32;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#213: FILE: lib/lzo/lzoconf.h:58:
+#elif (ULONG_MAX >= LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: lib/lzo/lzoconf.h:59:
+     typedef unsigned long      lzo_uint32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#214: FILE: lib/lzo/lzoconf.h:59:
+     typedef unsigned long      lzo_uint32;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: lib/lzo/lzoconf.h:60:
+     typedef long               lzo_int32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#215: FILE: lib/lzo/lzoconf.h:60:
+     typedef long               lzo_int32;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#234: FILE: lib/lzo/lzoconf.h:79:
+#define lzo_uint32p             lzo_uint32 *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#235: FILE: lib/lzo/lzoconf.h:80:
+#define lzo_int32p              lzo_int32 *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#239: FILE: lib/lzo/lzoconf.h:84:
+#define lzo_voidpp              lzo_voidp *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#240: FILE: lib/lzo/lzoconf.h:85:
+#define lzo_bytepp              lzo_bytep *

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: lib/lzo/lzoconf.h:87:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#245: FILE: lib/lzo/lzoconf.h:90:
+typedef int

ERROR:SPACING: space prohibited after that open parenthesis '('
#246: FILE: lib/lzo/lzoconf.h:91:
+(*lzo_compress_t)   ( const lzo_bytep src, lzo_uint  src_len,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: lib/lzo/lzoconf.h:92:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: lib/lzo/lzoconf.h:92:
+(*lzo_compress_t)   ( const lzo_bytep src, lzo_uint  src_len,
+                                        lzo_bytep dst, lzo_uintp dst_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: lib/lzo/lzoconf.h:92:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: lib/lzo/lzoconf.h:93:
+                                        lzo_voidp wrkmem );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: lib/lzo/lzoconf.h:93:
+                                        lzo_voidp wrkmem );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#248: FILE: lib/lzo/lzoconf.h:93:
+                                        lzo_voidp wrkmem );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#250: FILE: lib/lzo/lzoconf.h:95:
+typedef int

ERROR:SPACING: space prohibited after that open parenthesis '('
#251: FILE: lib/lzo/lzoconf.h:96:
+(*lzo_decompress_t) ( const lzo_bytep src, lzo_uint  src_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: lib/lzo/lzoconf.h:97:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: lib/lzo/lzoconf.h:97:
+(*lzo_decompress_t) ( const lzo_bytep src, lzo_uint  src_len,
+                                        lzo_bytep dst, lzo_uintp dst_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: lib/lzo/lzoconf.h:97:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: lib/lzo/lzoconf.h:98:
+                                        lzo_voidp wrkmem );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: lib/lzo/lzoconf.h:98:
+                                        lzo_voidp wrkmem );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#253: FILE: lib/lzo/lzoconf.h:98:
+                                        lzo_voidp wrkmem );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#255: FILE: lib/lzo/lzoconf.h:100:
+typedef int

ERROR:SPACING: space prohibited after that open parenthesis '('
#256: FILE: lib/lzo/lzoconf.h:101:
+(*lzo_optimize_t)   (       lzo_bytep src, lzo_uint  src_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: lib/lzo/lzoconf.h:102:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: lib/lzo/lzoconf.h:102:
+(*lzo_optimize_t)   (       lzo_bytep src, lzo_uint  src_len,
+                                        lzo_bytep dst, lzo_uintp dst_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: lib/lzo/lzoconf.h:102:
+                                        lzo_bytep dst, lzo_uintp dst_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: lib/lzo/lzoconf.h:103:
+                                        lzo_voidp wrkmem );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: lib/lzo/lzoconf.h:103:
+                                        lzo_voidp wrkmem );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#258: FILE: lib/lzo/lzoconf.h:103:
+                                        lzo_voidp wrkmem );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#260: FILE: lib/lzo/lzoconf.h:105:
+typedef int

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: lib/lzo/lzoconf.h:107:
+                                         lzo_bytep dst, lzo_uintp dst_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: lib/lzo/lzoconf.h:107:
+(*lzo_compress_dict_t)(const lzo_bytep src, lzo_uint  src_len,
+                                         lzo_bytep dst, lzo_uintp dst_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: lib/lzo/lzoconf.h:107:
+                                         lzo_bytep dst, lzo_uintp dst_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: lib/lzo/lzoconf.h:108:
+                                         lzo_voidp wrkmem,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: lib/lzo/lzoconf.h:108:
+                                         lzo_voidp wrkmem,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: lib/lzo/lzoconf.h:109:
+                                   const lzo_bytep dict, lzo_uint dict_len );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: lib/lzo/lzoconf.h:109:
+                                   const lzo_bytep dict, lzo_uint dict_len );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#264: FILE: lib/lzo/lzoconf.h:109:
+                                   const lzo_bytep dict, lzo_uint dict_len );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#266: FILE: lib/lzo/lzoconf.h:111:
+typedef int

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: lib/lzo/lzoconf.h:113:
+                                           lzo_bytep dst, lzo_uintp dst_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: lib/lzo/lzoconf.h:113:
+(*lzo_decompress_dict_t)(const lzo_bytep src, lzo_uint  src_len,
+                                           lzo_bytep dst, lzo_uintp dst_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: lib/lzo/lzoconf.h:113:
+                                           lzo_bytep dst, lzo_uintp dst_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: lib/lzo/lzoconf.h:114:
+                                           lzo_voidp wrkmem,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: lib/lzo/lzoconf.h:114:
+                                           lzo_voidp wrkmem,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: lib/lzo/lzoconf.h:115:
+                                     const lzo_bytep dict, lzo_uint dict_len );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: lib/lzo/lzoconf.h:115:
+                                     const lzo_bytep dict, lzo_uint dict_len );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#270: FILE: lib/lzo/lzoconf.h:115:
+                                     const lzo_bytep dict, lzo_uint dict_len );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#277: FILE: lib/lzo/lzodefs.h:1:
+/* lzodefs.h -- architecture, OS and compiler specific defines

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#278: FILE: lib/lzo/lzodefs.h:2:
+/* lzodefs.h -- architecture, OS and compiler specific defines
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#295: FILE: lib/lzo/lzodefs.h:19:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#296: FILE: lib/lzo/lzodefs.h:20:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <LZO_0xffffL>
#307: FILE: lib/lzo/lzodefs.h:31:
+#define LZO_0xffffL             65535ul

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#312: FILE: lib/lzo/lzodefs.h:36:
+#elif (UINT_MAX == LZO_0xffffL) && defined(__C166__)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#318: FILE: lib/lzo/lzodefs.h:42:
+#elif defined(__386__) || defined(__i386__) || defined(__i386) || defined(_M_IX86) || defined(_M_I386)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#320: FILE: lib/lzo/lzodefs.h:44:
+#elif (UINT_MAX == LZO_0xffffL) && defined(__m32c__)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#326: FILE: lib/lzo/lzodefs.h:50:
+#elif (UINT_MAX == LZO_0xffffL) && defined(__C251__)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#328: FILE: lib/lzo/lzodefs.h:52:
+#elif (UINT_MAX == LZO_0xffffL) && defined(__C51__)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#332: FILE: lib/lzo/lzodefs.h:56:
+#elif (UINT_MAX == LZO_0xffffL) && defined(__MSP430__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#338: FILE: lib/lzo/lzodefs.h:62:
+#define __LZO_LSR(x,b)    (((x)+0ul) >> (b))
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: lib/lzo/lzodefs.h:62:
+#define __LZO_LSR(x,b)    (((x)+0ul) >> (b))
                                ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#340: FILE: lib/lzo/lzodefs.h:64:
+#if (USHRT_MAX == LZO_0xffffL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: lib/lzo/lzodefs.h:66:
+#elif (__LZO_LSR(USHRT_MAX,7) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: lib/lzo/lzodefs.h:68:
+#elif (__LZO_LSR(USHRT_MAX,15) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: lib/lzo/lzodefs.h:70:
+#elif (__LZO_LSR(USHRT_MAX,31) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: lib/lzo/lzodefs.h:72:
+#elif (__LZO_LSR(USHRT_MAX,63) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: lib/lzo/lzodefs.h:74:
+#elif (__LZO_LSR(USHRT_MAX,127) == 1)
                           ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#356: FILE: lib/lzo/lzodefs.h:80:
+#if (UINT_MAX == LZO_0xffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#358: FILE: lib/lzo/lzodefs.h:82:
+#elif (UINT_MAX == LZO_0xffffffffL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#360: FILE: lib/lzo/lzodefs.h:84:
+#elif (__LZO_LSR(UINT_MAX,7) == 1)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: lib/lzo/lzodefs.h:86:
+#elif (__LZO_LSR(UINT_MAX,15) == 1)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#364: FILE: lib/lzo/lzodefs.h:88:
+#elif (__LZO_LSR(UINT_MAX,31) == 1)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: lib/lzo/lzodefs.h:90:
+#elif (__LZO_LSR(UINT_MAX,63) == 1)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: lib/lzo/lzodefs.h:92:
+#elif (__LZO_LSR(UINT_MAX,127) == 1)
                          ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#374: FILE: lib/lzo/lzodefs.h:98:
+#if (ULONG_MAX == LZO_0xffffffffL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: lib/lzo/lzodefs.h:100:
+#elif (__LZO_LSR(ULONG_MAX,7) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: lib/lzo/lzodefs.h:102:
+#elif (__LZO_LSR(ULONG_MAX,15) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: lib/lzo/lzodefs.h:104:
+#elif (__LZO_LSR(ULONG_MAX,31) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: lib/lzo/lzodefs.h:106:
+#elif (__LZO_LSR(ULONG_MAX,63) == 1)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: lib/lzo/lzodefs.h:108:
+#elif (__LZO_LSR(ULONG_MAX,127) == 1)
                           ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#394: FILE: lib/lzo/lzodefs.h:118:
+#if defined(LZO_ARCH_C166) || defined(LZO_ARCH_MCS51) || defined(LZO_ARCH_MCS251) || defined(LZO_ARCH_MSP430)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#411: FILE: lib/lzo/lzodefs.h:135:
+#elif (LZO_SIZEOF_LONG == 8) && ((defined(__mips__) && defined(__R5900__)) || defined(__MIPS_PSX2__))

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#423: FILE: lib/lzo/lzodefs.h:147:
+#if defined(LZO_ARCH_AMD64) || defined(LZO_ARCH_CRIS) || defined(LZO_ARCH_I386) || defined(LZO_ARCH_MSP430)

CHECK:SPACING: No space is necessary after a cast
#447: FILE: lib/lzo/lzodefs.h:171:
+#define LZO_UNUSED(var)         ((void) var)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#450: FILE: lib/lzo/lzodefs.h:174:
+#    define LZO_COMPILE_TIME_ASSERT_HEADER(e)  extern int __lzo_cta[1-2*!(e)];
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#450: FILE: lib/lzo/lzodefs.h:174:
+#    define LZO_COMPILE_TIME_ASSERT_HEADER(e)  extern int __lzo_cta[1-2*!(e)];
                                                                        ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#450: FILE: lib/lzo/lzodefs.h:174:
+#    define LZO_COMPILE_TIME_ASSERT_HEADER(e)  extern int __lzo_cta[1-2*!(e)];

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#458: FILE: lib/lzo/lzointf.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#475: FILE: lib/lzo/lzointf.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#476: FILE: lib/lzo/lzointf.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#487: FILE: lib/lzo/lzointf.c:30:
+EXPORT_SYMBOL_GPL(lzo_copyright);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#488: FILE: lib/lzo/lzointf.c:31:
+EXPORT_SYMBOL_GPL(lzo1x_1_compress);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#489: FILE: lib/lzo/lzointf.c:32:
+EXPORT_SYMBOL_GPL(lzo1x_decompress_safe);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#499: FILE: lib/lzo/minilzo.c:1:
+/* minilzo.c -- mini subset of the LZO real-time data compression library

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#500: FILE: lib/lzo/minilzo.c:2:
+/* minilzo.c -- mini subset of the LZO real-time data compression library
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#517: FILE: lib/lzo/minilzo.c:19:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#518: FILE: lib/lzo/minilzo.c:20:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: lib/lzo/minilzo.c:54:
+#define lzo_memcmp(a,b,c)     memcmp(a,b,c)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: lib/lzo/minilzo.c:54:
+#define lzo_memcmp(a,b,c)     memcmp(a,b,c)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: lib/lzo/minilzo.c:54:
+#define lzo_memcmp(a,b,c)     memcmp(a,b,c)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: lib/lzo/minilzo.c:54:
+#define lzo_memcmp(a,b,c)     memcmp(a,b,c)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: lib/lzo/minilzo.c:55:
+#define lzo_memcpy(a,b,c)     memcpy(a,b,c)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: lib/lzo/minilzo.c:55:
+#define lzo_memcpy(a,b,c)     memcpy(a,b,c)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: lib/lzo/minilzo.c:55:
+#define lzo_memcpy(a,b,c)     memcpy(a,b,c)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: lib/lzo/minilzo.c:55:
+#define lzo_memcpy(a,b,c)     memcpy(a,b,c)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: lib/lzo/minilzo.c:56:
+#define lzo_memmove(a,b,c)    memmove(a,b,c)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: lib/lzo/minilzo.c:56:
+#define lzo_memmove(a,b,c)    memmove(a,b,c)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: lib/lzo/minilzo.c:56:
+#define lzo_memmove(a,b,c)    memmove(a,b,c)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: lib/lzo/minilzo.c:56:
+#define lzo_memmove(a,b,c)    memmove(a,b,c)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: lib/lzo/minilzo.c:57:
+#define lzo_memset(a,b,c)     memset(a,b,c)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: lib/lzo/minilzo.c:57:
+#define lzo_memset(a,b,c)     memset(a,b,c)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: lib/lzo/minilzo.c:57:
+#define lzo_memset(a,b,c)     memset(a,b,c)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: lib/lzo/minilzo.c:57:
+#define lzo_memset(a,b,c)     memset(a,b,c)
                                         ^

CHECK:SPACING: No space is necessary after a cast
#564: FILE: lib/lzo/minilzo.c:66:
+#define LZO_BYTE(x)       ((unsigned char) (x))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: lib/lzo/minilzo.c:68:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#566: FILE: lib/lzo/minilzo.c:68:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#566: FILE: lib/lzo/minilzo.c:68:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#567: FILE: lib/lzo/minilzo.c:69:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#567: FILE: lib/lzo/minilzo.c:69:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#567: FILE: lib/lzo/minilzo.c:69:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#568: FILE: lib/lzo/minilzo.c:70:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#569: FILE: lib/lzo/minilzo.c:71:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:SPACING: No space is necessary after a cast
#571: FILE: lib/lzo/minilzo.c:73:
+#define lzo_sizeof(type)    ((lzo_uint) (sizeof(type)))

CHECK:SPACING: No space is necessary after a cast
#573: FILE: lib/lzo/minilzo.c:75:
+#define LZO_HIGH(array)     ((lzo_uint) (sizeof(array)/sizeof(*(array))))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#573: FILE: lib/lzo/minilzo.c:75:
+#define LZO_HIGH(array)     ((lzo_uint) (sizeof(array)/sizeof(*(array))))
                                                       ^

CHECK:SPACING: No space is necessary after a cast
#581: FILE: lib/lzo/minilzo.c:83:
+#define LZO_USIZE(bits)     ((lzo_uint) 1 << (bits))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#585: FILE: lib/lzo/minilzo.c:87:
+#define DMUL(a,b) ((lzo_xint) ((a) * (b)))
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: lib/lzo/minilzo.c:100:
+  LZO_COMPILE_TIME_ASSERT_HEADER(sizeof(short) == 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: lib/lzo/minilzo.c:103:
+  LZO_COMPILE_TIME_ASSERT_HEADER(sizeof(lzo_uint32) == 4)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: lib/lzo/minilzo.c:105:
+  LZO_COMPILE_TIME_ASSERT_HEADER(sizeof(lzo_uint32) == 4)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
                            ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
+    lzo_memcpy(dest,src,len); dest += len; src += len

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
+    lzo_memcpy(dest,src,len); dest += len; src += len

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'src' - possible side-effects?
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
+    lzo_memcpy(dest,src,len); dest += len; src += len

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#606: FILE: lib/lzo/minilzo.c:108:
+#define MEMCPY8_DS(dest,src,len) \
+    lzo_memcpy(dest,src,len); dest += len; src += len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: lib/lzo/minilzo.c:109:
+    lzo_memcpy(dest,src,len); dest += len; src += len$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: lib/lzo/minilzo.c:109:
+    lzo_memcpy(dest,src,len); dest += len; src += len
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: lib/lzo/minilzo.c:109:
+    lzo_memcpy(dest,src,len); dest += len; src += len
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: lib/lzo/minilzo.c:111:
+#define BZERO8_PTR(s,l,n) \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: lib/lzo/minilzo.c:111:
+#define BZERO8_PTR(s,l,n) \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: lib/lzo/minilzo.c:112:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: lib/lzo/minilzo.c:112:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: lib/lzo/minilzo.c:112:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#610: FILE: lib/lzo/minilzo.c:112:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
                           ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dest' may be better as '(dest)' to avoid precedence issues
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src' may be better as '(src)' to avoid precedence issues
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'len' may be better as '(len)' to avoid precedence issues
#612: FILE: lib/lzo/minilzo.c:114:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; while (--len > 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: lib/lzo/minilzo.c:115:
+    do *dest++ = *src++; while (--len > 0)$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#613: FILE: lib/lzo/minilzo.c:115:
+    do *dest++ = *src++; while (--len > 0)
        ^

CHECK:SPACING: No space is necessary after a cast
#615: FILE: lib/lzo/minilzo.c:117:
+#define PTR(a)              ((lzo_uintptr_t) (a))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: lib/lzo/minilzo.c:121:
+#define PTR_ALIGNED2_4(a,b) (((PTR_LINEAR(a) | PTR_LINEAR(b)) & 3) == 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: lib/lzo/minilzo.c:122:
+#define PTR_ALIGNED2_8(a,b) (((PTR_LINEAR(a) | PTR_LINEAR(b)) & 7) == 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#621: FILE: lib/lzo/minilzo.c:123:
+#define PTR_LT(a,b)         (PTR(a) < PTR(b))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#622: FILE: lib/lzo/minilzo.c:124:
+#define PTR_GE(a,b)         (PTR(a) >= PTR(b))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#623: FILE: lib/lzo/minilzo.c:125:
+#define PTR_DIFF(a,b)       (PTR(a) - PTR(b))
                   ^

CHECK:SPACING: No space is necessary after a cast
#624: FILE: lib/lzo/minilzo.c:126:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#624: FILE: lib/lzo/minilzo.c:126:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))
             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#624: FILE: lib/lzo/minilzo.c:126:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))
                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#632: FILE: lib/lzo/minilzo.c:134:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: lib/lzo/minilzo.c:141:
+    LZO_VERSION_STRING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: lib/lzo/minilzo.c:143:
+    "\r\n\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: lib/lzo/minilzo.c:144:
+    "LZO data compression library.\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: lib/lzo/minilzo.c:145:
+    "$Copyright: LZO (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Markus Franz Xaver Johannes Oberhumer\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: lib/lzo/minilzo.c:146:
+    "<markus@oberhumer.com>\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: lib/lzo/minilzo.c:147:
+    "http://www.oberhumer.com $\n\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: lib/lzo/minilzo.c:148:
+    "$Id: LZO version: v" LZO_VERSION_STRING ", " LZO_VERSION_DATE " $\n"$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#646: FILE: lib/lzo/minilzo.c:148:
+    "$Id: LZO version: v" LZO_VERSION_STRING ", " LZO_VERSION_DATE " $\n"

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: lib/lzo/minilzo.c:149:
+    "$Built: " __DATE__ " " __TIME__ " $\n"$

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#647: FILE: lib/lzo/minilzo.c:149:
+    "$Built: " __DATE__ " " __TIME__ " $\n"

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#647: FILE: lib/lzo/minilzo.c:149:
+    "$Built: " __DATE__ " " __TIME__ " $\n"

CHECK:SPACING: No space is necessary after a cast
#653: FILE: lib/lzo/minilzo.c:155:
+    return (const lzo_bytep) __lzo_copyright;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: lib/lzo/minilzo.c:155:
+    return (const lzo_bytep) __lzo_copyright;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#665: FILE: lib/lzo/minilzo.c:167:
+#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: lib/lzo/minilzo.c:168:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)
                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#666: FILE: lib/lzo/minilzo.c:168:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#666: FILE: lib/lzo/minilzo.c:168:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#717: FILE: lib/lzo/minilzo.c:219:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#750: FILE: lib/lzo/minilzo.c:252:
+#if (D_BITS != DL_BITS + DD_BITS)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#783: FILE: lib/lzo/minilzo.c:285:
+#  define _DV2_A(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#783: FILE: lib/lzo/minilzo.c:285:
+#  define _DV2_A(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#783: FILE: lib/lzo/minilzo.c:285:
+#  define _DV2_A(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#783: FILE: lib/lzo/minilzo.c:285:
+#  define _DV2_A(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift2' may be better as '(shift2)' to avoid precedence issues
#783: FILE: lib/lzo/minilzo.c:285:
+#  define _DV2_A(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: lib/lzo/minilzo.c:286:
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: lib/lzo/minilzo.c:286:
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])$

ERROR:SPACING: space prohibited after that open parenthesis '('
#784: FILE: lib/lzo/minilzo.c:286:
+        (((( (lzo_xint)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#785: FILE: lib/lzo/minilzo.c:287:
+#  define _DV2_B(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#785: FILE: lib/lzo/minilzo.c:287:
+#  define _DV2_B(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#785: FILE: lib/lzo/minilzo.c:287:
+#  define _DV2_B(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#785: FILE: lib/lzo/minilzo.c:287:
+#  define _DV2_B(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift2' may be better as '(shift2)' to avoid precedence issues
#785: FILE: lib/lzo/minilzo.c:287:
+#  define _DV2_B(p,shift1,shift2) \
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: lib/lzo/minilzo.c:288:
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: lib/lzo/minilzo.c:288:
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])$

ERROR:SPACING: space prohibited after that open parenthesis '('
#786: FILE: lib/lzo/minilzo.c:288:
+        (((( (lzo_xint)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#787: FILE: lib/lzo/minilzo.c:289:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#787: FILE: lib/lzo/minilzo.c:289:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#787: FILE: lib/lzo/minilzo.c:289:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#787: FILE: lib/lzo/minilzo.c:289:
+#  define _DV3_B(p,shift1,shift2,shift3) \
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: lib/lzo/minilzo.c:290:
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: lib/lzo/minilzo.c:290:
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#788: FILE: lib/lzo/minilzo.c:290:
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: lib/lzo/minilzo.c:290:
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: lib/lzo/minilzo.c:290:
+        ((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#790: FILE: lib/lzo/minilzo.c:292:
+#  define _DV2_A(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#790: FILE: lib/lzo/minilzo.c:292:
+#  define _DV2_A(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#790: FILE: lib/lzo/minilzo.c:292:
+#  define _DV2_A(p,shift1,shift2) \
+        (( (lzo_xint)(p[0]) << shift1) ^ p[1])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#790: FILE: lib/lzo/minilzo.c:292:
+#  define _DV2_A(p,shift1,shift2) \
+        (( (lzo_xint)(p[0]) << shift1) ^ p[1])

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: lib/lzo/minilzo.c:293:
+        (( (lzo_xint)(p[0]) << shift1) ^ p[1])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: lib/lzo/minilzo.c:293:
+        (( (lzo_xint)(p[0]) << shift1) ^ p[1])$

ERROR:SPACING: space prohibited after that open parenthesis '('
#791: FILE: lib/lzo/minilzo.c:293:
+        (( (lzo_xint)(p[0]) << shift1) ^ p[1])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#792: FILE: lib/lzo/minilzo.c:294:
+#  define _DV2_B(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#792: FILE: lib/lzo/minilzo.c:294:
+#  define _DV2_B(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#792: FILE: lib/lzo/minilzo.c:294:
+#  define _DV2_B(p,shift1,shift2) \
+        (( (lzo_xint)(p[1]) << shift1) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#792: FILE: lib/lzo/minilzo.c:294:
+#  define _DV2_B(p,shift1,shift2) \
+        (( (lzo_xint)(p[1]) << shift1) ^ p[2])

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: lib/lzo/minilzo.c:295:
+        (( (lzo_xint)(p[1]) << shift1) ^ p[2])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: lib/lzo/minilzo.c:295:
+        (( (lzo_xint)(p[1]) << shift1) ^ p[2])$

ERROR:SPACING: space prohibited after that open parenthesis '('
#793: FILE: lib/lzo/minilzo.c:295:
+        (( (lzo_xint)(p[1]) << shift1) ^ p[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: lib/lzo/minilzo.c:299:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: lib/lzo/minilzo.c:299:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: lib/lzo/minilzo.c:299:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#797: FILE: lib/lzo/minilzo.c:299:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: lib/lzo/minilzo.c:300:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: lib/lzo/minilzo.c:300:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: lib/lzo/minilzo.c:300:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#798: FILE: lib/lzo/minilzo.c:300:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: lib/lzo/minilzo.c:301:
+#define DA2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: lib/lzo/minilzo.c:301:
+#define DA2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#799: FILE: lib/lzo/minilzo.c:301:
+#define DA2(p,s1,s2) \
+        (((((lzo_xint)((p)[2]) << (s2)) + (p)[1]) << (s1)) + (p)[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: lib/lzo/minilzo.c:302:
+        (((((lzo_xint)((p)[2]) << (s2)) + (p)[1]) << (s1)) + (p)[0])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: lib/lzo/minilzo.c:302:
+        (((((lzo_xint)((p)[2]) << (s2)) + (p)[1]) << (s1)) + (p)[0])$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: lib/lzo/minilzo.c:303:
+#define DS2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: lib/lzo/minilzo.c:303:
+#define DS2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#801: FILE: lib/lzo/minilzo.c:303:
+#define DS2(p,s1,s2) \
+        (((((lzo_xint)((p)[2]) << (s2)) - (p)[1]) << (s1)) - (p)[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: lib/lzo/minilzo.c:304:
+        (((((lzo_xint)((p)[2]) << (s2)) - (p)[1]) << (s1)) - (p)[0])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: lib/lzo/minilzo.c:304:
+        (((((lzo_xint)((p)[2]) << (s2)) - (p)[1]) << (s1)) - (p)[0])$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: lib/lzo/minilzo.c:305:
+#define DX2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: lib/lzo/minilzo.c:305:
+#define DX2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#803: FILE: lib/lzo/minilzo.c:305:
+#define DX2(p,s1,s2) \
+        (((((lzo_xint)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: lib/lzo/minilzo.c:306:
+        (((((lzo_xint)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: lib/lzo/minilzo.c:306:
+        (((((lzo_xint)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#805: FILE: lib/lzo/minilzo.c:307:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#806: FILE: lib/lzo/minilzo.c:308:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#807: FILE: lib/lzo/minilzo.c:309:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])

CHECK:SPACING: No space is necessary after a cast
#808: FILE: lib/lzo/minilzo.c:310:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#808: FILE: lib/lzo/minilzo.c:310:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#808: FILE: lib/lzo/minilzo.c:310:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#809: FILE: lib/lzo/minilzo.c:311:
+#define DM(v)           DMS(v,0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#812: FILE: lib/lzo/minilzo.c:314:
+#  define _DINDEX(dv,p)     (_DV_A((p),DL_SHIFT))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#812: FILE: lib/lzo/minilzo.c:314:
+#  define _DINDEX(dv,p)     (_DV_A((p),DL_SHIFT))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#816: FILE: lib/lzo/minilzo.c:318:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#816: FILE: lib/lzo/minilzo.c:318:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#816: FILE: lib/lzo/minilzo.c:318:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#817: FILE: lib/lzo/minilzo.c:319:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#817: FILE: lib/lzo/minilzo.c:319:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#817: FILE: lib/lzo/minilzo.c:319:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#817: FILE: lib/lzo/minilzo.c:319:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: lib/lzo/minilzo.c:320:
+#  define _DINDEX(dv,p)     (dv)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#823: FILE: lib/lzo/minilzo.c:325:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#823: FILE: lib/lzo/minilzo.c:325:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#823: FILE: lib/lzo/minilzo.c:325:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#824: FILE: lib/lzo/minilzo.c:326:
+#  define DVAL_NEXT(dv,p) \
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#824: FILE: lib/lzo/minilzo.c:326:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#824: FILE: lib/lzo/minilzo.c:326:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dv' may be better as '(dv)' to avoid precedence issues
#824: FILE: lib/lzo/minilzo.c:326:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#824: FILE: lib/lzo/minilzo.c:326:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: lib/lzo/minilzo.c:327:
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: lib/lzo/minilzo.c:327:
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#825: FILE: lib/lzo/minilzo.c:327:
+                dv ^= (lzo_xint)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#826: FILE: lib/lzo/minilzo.c:328:
+#  define _DINDEX(dv,p)     ((DMUL(0x9f5f,dv)) >> 5)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#826: FILE: lib/lzo/minilzo.c:328:
+#  define _DINDEX(dv,p)     ((DMUL(0x9f5f,dv)) >> 5)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: lib/lzo/minilzo.c:333:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: lib/lzo/minilzo.c:333:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#831: FILE: lib/lzo/minilzo.c:333:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#832: FILE: lib/lzo/minilzo.c:334:
+#  define DVAL_NEXT(dv,p) \
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#832: FILE: lib/lzo/minilzo.c:334:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#832: FILE: lib/lzo/minilzo.c:334:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dv' may be better as '(dv)' to avoid precedence issues
#832: FILE: lib/lzo/minilzo.c:334:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#832: FILE: lib/lzo/minilzo.c:334:
+#  define DVAL_NEXT(dv,p) \
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: lib/lzo/minilzo.c:335:
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: lib/lzo/minilzo.c:335:
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#833: FILE: lib/lzo/minilzo.c:335:
+                dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_xint)(p[2]) << (2*5)))
                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: lib/lzo/minilzo.c:336:
+#  define _DINDEX(dv,p)     ((DMUL(0x9f5f,dv)) >> 5)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: lib/lzo/minilzo.c:336:
+#  define _DINDEX(dv,p)     ((DMUL(0x9f5f,dv)) >> 5)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#842: FILE: lib/lzo/minilzo.c:344:
+#define DINDEX(dv,p)        ((lzo_uint)((_DINDEX(dv,p)) & DL_MASK) << DD_BITS)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#842: FILE: lib/lzo/minilzo.c:344:
+#define DINDEX(dv,p)        ((lzo_uint)((_DINDEX(dv,p)) & DL_MASK) << DD_BITS)
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#852: FILE: lib/lzo/minilzo.c:354:
+#  define DVAL_FIRST(dv,p)  ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: lib/lzo/minilzo.c:354:
+#  define DVAL_FIRST(dv,p)  ((void) 0)
                        ^

CHECK:SPACING: No space is necessary after a cast
#853: FILE: lib/lzo/minilzo.c:355:
+#  define DVAL_NEXT(dv,p)   ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#853: FILE: lib/lzo/minilzo.c:355:
+#  define DVAL_NEXT(dv,p)   ((void) 0)
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: lib/lzo/minilzo.c:363:
+    lzo_xint df;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#862: FILE: lib/lzo/minilzo.c:364:
+    lzo_xint df;
+    DVAL_FIRST(df,(p));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: lib/lzo/minilzo.c:364:
+    DVAL_FIRST(df,(p));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#862: FILE: lib/lzo/minilzo.c:364:
+    DVAL_FIRST(df,(p));
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: lib/lzo/minilzo.c:365:
+    assert(DINDEX(dv,p) == DINDEX(df,p));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#863: FILE: lib/lzo/minilzo.c:365:
+    assert(DINDEX(dv,p) == DINDEX(df,p));
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#863: FILE: lib/lzo/minilzo.c:365:
+    assert(DINDEX(dv,p) == DINDEX(df,p));
                                     ^

CHECK:SPACING: No space is necessary after a cast
#866: FILE: lib/lzo/minilzo.c:368:
+#  define DVAL_ASSERT(dv,p) ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#866: FILE: lib/lzo/minilzo.c:368:
+#  define DVAL_ASSERT(dv,p) ((void) 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: lib/lzo/minilzo.c:373:
+#  define DENTRY(p,in)                          (p)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: lib/lzo/minilzo.c:374:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: lib/lzo/minilzo.c:374:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: lib/lzo/minilzo.c:374:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: lib/lzo/minilzo.c:374:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#872: FILE: lib/lzo/minilzo.c:374:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]

CHECK:SPACING: No space is necessary after a cast
#874: FILE: lib/lzo/minilzo.c:376:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: lib/lzo/minilzo.c:376:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))
                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#874: FILE: lib/lzo/minilzo.c:376:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: lib/lzo/minilzo.c:377:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: lib/lzo/minilzo.c:377:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: lib/lzo/minilzo.c:377:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: lib/lzo/minilzo.c:377:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#875: FILE: lib/lzo/minilzo.c:377:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                                                            ^

ERROR:SPACING: space prohibited after that open square bracket '['
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:SPACING: space prohibited before that close square bracket ']'
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#880: FILE: lib/lzo/minilzo.c:382:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#881: FILE: lib/lzo/minilzo.c:383:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: lib/lzo/minilzo.c:384:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: lib/lzo/minilzo.c:384:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: lib/lzo/minilzo.c:384:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: lib/lzo/minilzo.c:384:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                                                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#882: FILE: lib/lzo/minilzo.c:384:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                                  ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#886: FILE: lib/lzo/minilzo.c:388:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
                                                 ^

ERROR:SPACING: space prohibited after that open square bracket '['
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#887: FILE: lib/lzo/minilzo.c:389:
+        dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                                     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#888: FILE: lib/lzo/minilzo.c:390:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: lib/lzo/minilzo.c:391:
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: lib/lzo/minilzo.c:391:
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: lib/lzo/minilzo.c:391:
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
                                            ^

ERROR:SPACING: space prohibited after that open square bracket '['
#889: FILE: lib/lzo/minilzo.c:391:
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#889: FILE: lib/lzo/minilzo.c:391:
+        dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#890: FILE: lib/lzo/minilzo.c:392:
+#  define UPDATE_P(ptr,drun,p,in)   \
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK
                                    ^

ERROR:SPACING: space prohibited after that open square bracket '['
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#891: FILE: lib/lzo/minilzo.c:393:
+        (ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#897: FILE: lib/lzo/minilzo.c:399:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: lib/lzo/minilzo.c:400:
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: lib/lzo/minilzo.c:400:
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m_pos"
#898: FILE: lib/lzo/minilzo.c:400:
+        (m_pos == NULL || (m_off = pd(ip, m_pos)) > max_offset)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
+        PTR_LT(m_pos,in) || \
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
+         m_off > max_offset )))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
+        PTR_LT(m_pos,in) || \
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
+         m_off > max_offset )))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
+        PTR_LT(m_pos,in) || \
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
+         m_off > max_offset )))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ip' may be better as '(ip)' to avoid precedence issues
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
+        PTR_LT(m_pos,in) || \
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
+         m_off > max_offset )))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#900: FILE: lib/lzo/minilzo.c:402:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
+        PTR_LT(m_pos,in) || \
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
+         m_off > max_offset )))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: lib/lzo/minilzo.c:403:
+    (BOUNDS_CHECKING_OFF_IN_EXPR(( \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: lib/lzo/minilzo.c:404:
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \$

CHECK:SPACING: No space is necessary after a cast
#902: FILE: lib/lzo/minilzo.c:404:
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: lib/lzo/minilzo.c:404:
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#902: FILE: lib/lzo/minilzo.c:404:
+        m_pos = ip - (lzo_uint) PTR_DIFF(ip,m_pos), \
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: lib/lzo/minilzo.c:405:
+        PTR_LT(m_pos,in) || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: lib/lzo/minilzo.c:405:
+        PTR_LT(m_pos,in) || \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: lib/lzo/minilzo.c:405:
+        PTR_LT(m_pos,in) || \
                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: lib/lzo/minilzo.c:406:
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \$

CHECK:SPACING: No space is necessary after a cast
#904: FILE: lib/lzo/minilzo.c:406:
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: lib/lzo/minilzo.c:406:
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: lib/lzo/minilzo.c:406:
+        (m_off = (lzo_uint) PTR_DIFF(ip,m_pos)) <= 0 || \
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: lib/lzo/minilzo.c:407:
+         m_off > max_offset )))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: lib/lzo/minilzo.c:407:
+         m_off > max_offset )))$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#905: FILE: lib/lzo/minilzo.c:407:
+         m_off > max_offset )))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_off == 0 || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_off' may be better as '(m_off)' to avoid precedence issues
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_off == 0 || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_off == 0 || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#909: FILE: lib/lzo/minilzo.c:411:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+        (m_off == 0 || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: lib/lzo/minilzo.c:412:
+        (m_off == 0 || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: lib/lzo/minilzo.c:412:
+        (m_off == 0 || \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: lib/lzo/minilzo.c:413:
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: lib/lzo/minilzo.c:413:
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: lib/lzo/minilzo.c:414:
+         (m_pos = (ip) - (m_off), 0) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: lib/lzo/minilzo.c:414:
+         (m_pos = (ip) - (m_off), 0) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#912: FILE: lib/lzo/minilzo.c:414:
+         (m_pos = (ip) - (m_off), 0) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+        (pd(ip, in) <= m_off || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_off' may be better as '(m_off)' to avoid precedence issues
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+        (pd(ip, in) <= m_off || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'in' - possible side-effects?
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+        (pd(ip, in) <= m_off || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+        (pd(ip, in) <= m_off || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#914: FILE: lib/lzo/minilzo.c:416:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+        (pd(ip, in) <= m_off || \
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \
+         (m_pos = (ip) - (m_off), 0) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: lib/lzo/minilzo.c:417:
+        (pd(ip, in) <= m_off || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: lib/lzo/minilzo.c:417:
+        (pd(ip, in) <= m_off || \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: lib/lzo/minilzo.c:418:
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: lib/lzo/minilzo.c:418:
+         ((m_off = pd(ip, in) - m_off) > max_offset) || \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: lib/lzo/minilzo.c:419:
+         (m_pos = (ip) - (m_off), 0) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: lib/lzo/minilzo.c:419:
+         (m_pos = (ip) - (m_off), 0) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#917: FILE: lib/lzo/minilzo.c:419:
+         (m_pos = (ip) - (m_off), 0) )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#927: FILE: lib/lzo/minilzo.c:429:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: lib/lzo/minilzo.c:439:
+do_compress ( const lzo_bytep in , lzo_uint  in_len,

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#937: FILE: lib/lzo/minilzo.c:439:
+do_compress ( const lzo_bytep in , lzo_uint  in_len,
                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#937: FILE: lib/lzo/minilzo.c:439:
+do_compress ( const lzo_bytep in , lzo_uint  in_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: lib/lzo/minilzo.c:440:
+                    lzo_bytep out, lzo_uintp out_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: lib/lzo/minilzo.c:440:
+do_compress ( const lzo_bytep in , lzo_uint  in_len,
+                    lzo_bytep out, lzo_uintp out_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: lib/lzo/minilzo.c:440:
+                    lzo_bytep out, lzo_uintp out_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: lib/lzo/minilzo.c:441:
+                    lzo_voidp wrkmem )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: lib/lzo/minilzo.c:441:
+                    lzo_voidp wrkmem )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#939: FILE: lib/lzo/minilzo.c:441:
+                    lzo_voidp wrkmem )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: lib/lzo/minilzo.c:443:
+    register const lzo_bytep ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: lib/lzo/minilzo.c:444:
+    lzo_bytep op;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: lib/lzo/minilzo.c:445:
+    const lzo_bytep const in_end = in + in_len;$

WARNING:CONST_CONST: 'const lzo_bytep const' should probably be 'const lzo_bytep'
#943: FILE: lib/lzo/minilzo.c:445:
+    const lzo_bytep const in_end = in + in_len;

Using `const <type> const *` is generally meant to be
written `const <type> * const`.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: lib/lzo/minilzo.c:446:
+    const lzo_bytep const ip_end = in + in_len - M2_MAX_LEN - 5;$

WARNING:CONST_CONST: 'const lzo_bytep const' should probably be 'const lzo_bytep'
#944: FILE: lib/lzo/minilzo.c:446:
+    const lzo_bytep const ip_end = in + in_len - M2_MAX_LEN - 5;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: lib/lzo/minilzo.c:447:
+    const lzo_bytep ii;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: lib/lzo/minilzo.c:448:
+    lzo_dict_p const dict = (lzo_dict_p) wrkmem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: lib/lzo/minilzo.c:450:
+    op = out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: lib/lzo/minilzo.c:451:
+    ip = in;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: lib/lzo/minilzo.c:452:
+    ii = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: lib/lzo/minilzo.c:454:
+    ip += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: lib/lzo/minilzo.c:455:
+    for (;;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#953: FILE: lib/lzo/minilzo.c:455:
+    for (;;)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: lib/lzo/minilzo.c:456:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: lib/lzo/minilzo.c:457:
+        register const lzo_bytep m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: lib/lzo/minilzo.c:457:
+        register const lzo_bytep m_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: lib/lzo/minilzo.c:458:
+        lzo_uint m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: lib/lzo/minilzo.c:458:
+        lzo_uint m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: lib/lzo/minilzo.c:459:
+        lzo_uint m_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: lib/lzo/minilzo.c:459:
+        lzo_uint m_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: lib/lzo/minilzo.c:460:
+        lzo_uint dindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: lib/lzo/minilzo.c:460:
+        lzo_uint dindex;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: lib/lzo/minilzo.c:462:
+        DINDEX1(dindex,ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: lib/lzo/minilzo.c:462:
+        DINDEX1(dindex,ip);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: lib/lzo/minilzo.c:462:
+        DINDEX1(dindex,ip);
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#961: FILE: lib/lzo/minilzo.c:463:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
+            goto literal;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: lib/lzo/minilzo.c:464:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: lib/lzo/minilzo.c:465:
+            goto literal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: lib/lzo/minilzo.c:465:
+            goto literal;$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#964: FILE: lib/lzo/minilzo.c:466:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: lib/lzo/minilzo.c:467:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: lib/lzo/minilzo.c:467:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#965: FILE: lib/lzo/minilzo.c:467:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])
+            goto try_match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: lib/lzo/minilzo.c:468:
+            goto try_match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: lib/lzo/minilzo.c:468:
+            goto try_match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: lib/lzo/minilzo.c:469:
+        DINDEX2(dindex,ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: lib/lzo/minilzo.c:469:
+        DINDEX2(dindex,ip);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: lib/lzo/minilzo.c:469:
+        DINDEX2(dindex,ip);
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: lib/lzo/minilzo.c:471:
+        GINDEX(m_pos,m_off,dict,dindex,in);
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
+            goto literal;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: lib/lzo/minilzo.c:472:
+        if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: lib/lzo/minilzo.c:473:
+            goto literal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: lib/lzo/minilzo.c:473:
+            goto literal;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: lib/lzo/minilzo.c:474:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: lib/lzo/minilzo.c:474:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#972: FILE: lib/lzo/minilzo.c:474:
+        if (m_off <= M2_MAX_OFFSET || m_pos[3] == ip[3])
+            goto try_match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: lib/lzo/minilzo.c:475:
+            goto try_match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: lib/lzo/minilzo.c:475:
+            goto try_match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: lib/lzo/minilzo.c:476:
+        goto literal;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: lib/lzo/minilzo.c:476:
+        goto literal;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: lib/lzo/minilzo.c:480:
+        if (* (const lzo_ushortp) m_pos != * (const lzo_ushortp) ip)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: lib/lzo/minilzo.c:480:
+        if (* (const lzo_ushortp) m_pos != * (const lzo_ushortp) ip)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: lib/lzo/minilzo.c:482:
+        if (m_pos[0] != ip[0] || m_pos[1] != ip[1])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: lib/lzo/minilzo.c:482:
+        if (m_pos[0] != ip[0] || m_pos[1] != ip[1])$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: lib/lzo/minilzo.c:484:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: lib/lzo/minilzo.c:484:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: lib/lzo/minilzo.c:485:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: lib/lzo/minilzo.c:485:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: lib/lzo/minilzo.c:486:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: lib/lzo/minilzo.c:486:
+        else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#984: FILE: lib/lzo/minilzo.c:486:
+        else
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#984: FILE: lib/lzo/minilzo.c:486:
+        else
+        {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#984: FILE: lib/lzo/minilzo.c:486:
+        }
+        else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: lib/lzo/minilzo.c:487:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: lib/lzo/minilzo.c:487:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: lib/lzo/minilzo.c:488:
+            if __lzo_likely(m_pos[2] == ip[2])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: lib/lzo/minilzo.c:488:
+            if __lzo_likely(m_pos[2] == ip[2])$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#986: FILE: lib/lzo/minilzo.c:488:
+            if __lzo_likely(m_pos[2] == ip[2])
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: lib/lzo/minilzo.c:489:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: lib/lzo/minilzo.c:489:
+            {$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#988: FILE: lib/lzo/minilzo.c:490:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: lib/lzo/minilzo.c:491:
+                if (m_off <= M2_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: lib/lzo/minilzo.c:491:
+                if (m_off <= M2_MAX_OFFSET)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#989: FILE: lib/lzo/minilzo.c:491:
+                if (m_off <= M2_MAX_OFFSET)
+                    goto match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: lib/lzo/minilzo.c:492:
+                    goto match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: lib/lzo/minilzo.c:492:
+                    goto match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: lib/lzo/minilzo.c:493:
+                if (lit <= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: lib/lzo/minilzo.c:493:
+                if (lit <= 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#991: FILE: lib/lzo/minilzo.c:493:
+                if (lit <= 3)
+                    goto match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: lib/lzo/minilzo.c:494:
+                    goto match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: lib/lzo/minilzo.c:494:
+                    goto match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: lib/lzo/minilzo.c:495:
+                if (lit == 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: lib/lzo/minilzo.c:495:
+                if (lit == 3)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#993: FILE: lib/lzo/minilzo.c:495:
+                if (lit == 3)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#993: FILE: lib/lzo/minilzo.c:495:
+                if (lit == 3)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: lib/lzo/minilzo.c:496:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: lib/lzo/minilzo.c:496:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: lib/lzo/minilzo.c:497:
+                    assert(op - 2 > out); op[-2] |= LZO_BYTE(3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: lib/lzo/minilzo.c:497:
+                    assert(op - 2 > out); op[-2] |= LZO_BYTE(3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: lib/lzo/minilzo.c:498:
+                    *op++ = *ii++; *op++ = *ii++; *op++ = *ii++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: lib/lzo/minilzo.c:498:
+                    *op++ = *ii++; *op++ = *ii++; *op++ = *ii++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: lib/lzo/minilzo.c:499:
+                    goto code_match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: lib/lzo/minilzo.c:499:
+                    goto code_match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: lib/lzo/minilzo.c:500:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: lib/lzo/minilzo.c:500:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: lib/lzo/minilzo.c:501:
+                if (m_pos[3] == ip[3])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: lib/lzo/minilzo.c:501:
+                if (m_pos[3] == ip[3])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#999: FILE: lib/lzo/minilzo.c:501:
+                if (m_pos[3] == ip[3])
[...]
+                    goto match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: lib/lzo/minilzo.c:503:
+                    goto match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: lib/lzo/minilzo.c:503:
+                    goto match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: lib/lzo/minilzo.c:504:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: lib/lzo/minilzo.c:504:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: lib/lzo/minilzo.c:505:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: lib/lzo/minilzo.c:505:
+            else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1003: FILE: lib/lzo/minilzo.c:505:
+            else
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1003: FILE: lib/lzo/minilzo.c:505:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: lib/lzo/minilzo.c:506:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: lib/lzo/minilzo.c:506:
+            {$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1005: FILE: lib/lzo/minilzo.c:507:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1006: FILE: lib/lzo/minilzo.c:508:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: lib/lzo/minilzo.c:509:
+                if (m_off <= M1_MAX_OFFSET && lit > 0 && lit <= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: lib/lzo/minilzo.c:509:
+                if (m_off <= M1_MAX_OFFSET && lit > 0 && lit <= 3)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: lib/lzo/minilzo.c:511:
+                if (m_off <= M1_MAX_OFFSET && lit == 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: lib/lzo/minilzo.c:511:
+                if (m_off <= M1_MAX_OFFSET && lit == 3)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: lib/lzo/minilzo.c:513:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: lib/lzo/minilzo.c:513:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: lib/lzo/minilzo.c:514:
+                    register lzo_uint t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: lib/lzo/minilzo.c:514:
+                    register lzo_uint t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: lib/lzo/minilzo.c:516:
+                    t = lit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: lib/lzo/minilzo.c:516:
+                    t = lit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: lib/lzo/minilzo.c:517:
+                    assert(op - 2 > out); op[-2] |= LZO_BYTE(t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: lib/lzo/minilzo.c:517:
+                    assert(op - 2 > out); op[-2] |= LZO_BYTE(t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: lib/lzo/minilzo.c:518:
+                    do *op++ = *ii++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: lib/lzo/minilzo.c:518:
+                    do *op++ = *ii++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1016: FILE: lib/lzo/minilzo.c:518:
+                    do *op++ = *ii++; while (--t > 0);
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: lib/lzo/minilzo.c:519:
+                    assert(ii == ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: lib/lzo/minilzo.c:519:
+                    assert(ii == ip);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: lib/lzo/minilzo.c:520:
+                    m_off -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: lib/lzo/minilzo.c:520:
+                    m_off -= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1019: FILE: lib/lzo/minilzo.c:521:
+                    *op++ = LZO_BYTE(M1_MARKER | ((m_off & 3) << 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: lib/lzo/minilzo.c:521:
+                    *op++ = LZO_BYTE(M1_MARKER | ((m_off & 3) << 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: lib/lzo/minilzo.c:522:
+                    *op++ = LZO_BYTE(m_off >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: lib/lzo/minilzo.c:522:
+                    *op++ = LZO_BYTE(m_off >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: lib/lzo/minilzo.c:523:
+                    ip += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: lib/lzo/minilzo.c:523:
+                    ip += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: lib/lzo/minilzo.c:524:
+                    goto match_done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: lib/lzo/minilzo.c:524:
+                    goto match_done;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: lib/lzo/minilzo.c:525:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: lib/lzo/minilzo.c:525:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: lib/lzo/minilzo.c:527:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: lib/lzo/minilzo.c:527:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: lib/lzo/minilzo.c:528:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: lib/lzo/minilzo.c:528:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: lib/lzo/minilzo.c:531:
+        UPDATE_I(dict,0,dindex,ip,in);
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1030: FILE: lib/lzo/minilzo.c:532:
+        ++ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: lib/lzo/minilzo.c:532:
+        ++ip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: lib/lzo/minilzo.c:533:
+        if __lzo_unlikely(ip >= ip_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: lib/lzo/minilzo.c:533:
+        if __lzo_unlikely(ip >= ip_end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: lib/lzo/minilzo.c:534:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: lib/lzo/minilzo.c:534:
+            break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: lib/lzo/minilzo.c:535:
+        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: lib/lzo/minilzo.c:535:
+        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1036: FILE: lib/lzo/minilzo.c:538:
+        UPDATE_I(dict,0,dindex,ip,in);
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: lib/lzo/minilzo.c:539:
+        if (pd(ip,ii) > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: lib/lzo/minilzo.c:539:
+        if (pd(ip,ii) > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1037: FILE: lib/lzo/minilzo.c:539:
+        if (pd(ip,ii) > 0)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1037: FILE: lib/lzo/minilzo.c:539:
+        if (pd(ip,ii) > 0)
+        {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1037: FILE: lib/lzo/minilzo.c:539:
+        if (pd(ip,ii) > 0)
                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: lib/lzo/minilzo.c:540:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: lib/lzo/minilzo.c:540:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: lib/lzo/minilzo.c:541:
+            register lzo_uint t = pd(ip,ii);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: lib/lzo/minilzo.c:541:
+            register lzo_uint t = pd(ip,ii);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1039: FILE: lib/lzo/minilzo.c:541:
+            register lzo_uint t = pd(ip,ii);
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: lib/lzo/minilzo.c:543:
+            if (t <= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: lib/lzo/minilzo.c:543:
+            if (t <= 3)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1041: FILE: lib/lzo/minilzo.c:543:
+            if (t <= 3)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: lib/lzo/minilzo.c:544:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: lib/lzo/minilzo.c:544:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: lib/lzo/minilzo.c:545:
+                assert(op - 2 > out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: lib/lzo/minilzo.c:545:
+                assert(op - 2 > out);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: lib/lzo/minilzo.c:546:
+                op[-2] |= LZO_BYTE(t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: lib/lzo/minilzo.c:546:
+                op[-2] |= LZO_BYTE(t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1045: FILE: lib/lzo/minilzo.c:547:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: lib/lzo/minilzo.c:547:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: lib/lzo/minilzo.c:548:
+            else if (t <= 18)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: lib/lzo/minilzo.c:548:
+            else if (t <= 18)$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1046: FILE: lib/lzo/minilzo.c:548:
+            }
+            else if (t <= 18)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: lib/lzo/minilzo.c:549:
+                *op++ = LZO_BYTE(t - 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: lib/lzo/minilzo.c:549:
+                *op++ = LZO_BYTE(t - 3);$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1047: FILE: lib/lzo/minilzo.c:549:
+                *op++ = LZO_BYTE(t - 3);
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1048: FILE: lib/lzo/minilzo.c:550:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: lib/lzo/minilzo.c:550:
+            else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1048: FILE: lib/lzo/minilzo.c:550:
+            else
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1049: FILE: lib/lzo/minilzo.c:551:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: lib/lzo/minilzo.c:551:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: lib/lzo/minilzo.c:552:
+                register lzo_uint tt = t - 18;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: lib/lzo/minilzo.c:552:
+                register lzo_uint tt = t - 18;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: lib/lzo/minilzo.c:554:
+                *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: lib/lzo/minilzo.c:554:
+                *op++ = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: lib/lzo/minilzo.c:555:
+                while (tt > 255)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: lib/lzo/minilzo.c:555:
+                while (tt > 255)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1053: FILE: lib/lzo/minilzo.c:555:
+                while (tt > 255)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1053: FILE: lib/lzo/minilzo.c:555:
+                while (tt > 255)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: lib/lzo/minilzo.c:556:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: lib/lzo/minilzo.c:556:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: lib/lzo/minilzo.c:557:
+                    tt -= 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: lib/lzo/minilzo.c:557:
+                    tt -= 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: lib/lzo/minilzo.c:558:
+                    *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: lib/lzo/minilzo.c:558:
+                    *op++ = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: lib/lzo/minilzo.c:559:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: lib/lzo/minilzo.c:559:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: lib/lzo/minilzo.c:560:
+                assert(tt > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: lib/lzo/minilzo.c:560:
+                assert(tt > 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: lib/lzo/minilzo.c:561:
+                *op++ = LZO_BYTE(tt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: lib/lzo/minilzo.c:561:
+                *op++ = LZO_BYTE(tt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: lib/lzo/minilzo.c:562:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: lib/lzo/minilzo.c:562:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: lib/lzo/minilzo.c:563:
+            do *op++ = *ii++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: lib/lzo/minilzo.c:563:
+            do *op++ = *ii++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1061: FILE: lib/lzo/minilzo.c:563:
+            do *op++ = *ii++; while (--t > 0);
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: lib/lzo/minilzo.c:564:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: lib/lzo/minilzo.c:564:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: lib/lzo/minilzo.c:566:
+        assert(ii == ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: lib/lzo/minilzo.c:566:
+        assert(ii == ip);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: lib/lzo/minilzo.c:567:
+        ip += 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: lib/lzo/minilzo.c:567:
+        ip += 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: lib/lzo/minilzo.c:568:
+        if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++ ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: lib/lzo/minilzo.c:568:
+        if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++ ||$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1066: FILE: lib/lzo/minilzo.c:568:
+        if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++ ||
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++
+#ifdef LZO1Y
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++
+            || m_pos[12] != *ip++ || m_pos[13] != *ip++ || m_pos[14] != *ip++
+#endif
+           )
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1066: FILE: lib/lzo/minilzo.c:568:
+        if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++ ||
[...]
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: lib/lzo/minilzo.c:569:
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: lib/lzo/minilzo.c:569:
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: lib/lzo/minilzo.c:571:
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1069: FILE: lib/lzo/minilzo.c:571:
+#ifdef LZO1Y
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: lib/lzo/minilzo.c:571:
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++$

ERROR:SPACING: space prohibited after that open square bracket '['
#1069: FILE: lib/lzo/minilzo.c:571:
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: lib/lzo/minilzo.c:572:
+            || m_pos[12] != *ip++ || m_pos[13] != *ip++ || m_pos[14] != *ip++$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1070: FILE: lib/lzo/minilzo.c:572:
+            || m_pos[ 9] != *ip++ || m_pos[10] != *ip++ || m_pos[11] != *ip++
+            || m_pos[12] != *ip++ || m_pos[13] != *ip++ || m_pos[14] != *ip++

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: lib/lzo/minilzo.c:572:
+            || m_pos[12] != *ip++ || m_pos[13] != *ip++ || m_pos[14] != *ip++$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: lib/lzo/minilzo.c:574:
+           )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: lib/lzo/minilzo.c:574:
+           )$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: lib/lzo/minilzo.c:575:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: lib/lzo/minilzo.c:575:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: lib/lzo/minilzo.c:576:
+            --ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: lib/lzo/minilzo.c:576:
+            --ip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: lib/lzo/minilzo.c:577:
+            m_len = pd(ip, ii);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: lib/lzo/minilzo.c:577:
+            m_len = pd(ip, ii);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: lib/lzo/minilzo.c:578:
+            assert(m_len >= 3); assert(m_len <= M2_MAX_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: lib/lzo/minilzo.c:578:
+            assert(m_len >= 3); assert(m_len <= M2_MAX_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: lib/lzo/minilzo.c:580:
+            if (m_off <= M2_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: lib/lzo/minilzo.c:580:
+            if (m_off <= M2_MAX_OFFSET)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1078: FILE: lib/lzo/minilzo.c:580:
+            if (m_off <= M2_MAX_OFFSET)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1079: FILE: lib/lzo/minilzo.c:581:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: lib/lzo/minilzo.c:581:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1080: FILE: lib/lzo/minilzo.c:582:
+                m_off -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: lib/lzo/minilzo.c:582:
+                m_off -= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1082: FILE: lib/lzo/minilzo.c:584:
+                *op++ = LZO_BYTE(((m_len - 1) << 5) | ((m_off & 7) << 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: lib/lzo/minilzo.c:584:
+                *op++ = LZO_BYTE(((m_len - 1) << 5) | ((m_off & 7) << 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1083: FILE: lib/lzo/minilzo.c:585:
+                *op++ = LZO_BYTE(m_off >> 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: lib/lzo/minilzo.c:585:
+                *op++ = LZO_BYTE(m_off >> 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1085: FILE: lib/lzo/minilzo.c:587:
+                *op++ = LZO_BYTE(((m_len + 1) << 4) | ((m_off & 3) << 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: lib/lzo/minilzo.c:587:
+                *op++ = LZO_BYTE(((m_len + 1) << 4) | ((m_off & 3) << 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: lib/lzo/minilzo.c:588:
+                *op++ = LZO_BYTE(m_off >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: lib/lzo/minilzo.c:588:
+                *op++ = LZO_BYTE(m_off >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: lib/lzo/minilzo.c:590:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: lib/lzo/minilzo.c:590:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1089: FILE: lib/lzo/minilzo.c:591:
+            else if (m_off <= M3_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: lib/lzo/minilzo.c:591:
+            else if (m_off <= M3_MAX_OFFSET)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1089: FILE: lib/lzo/minilzo.c:591:
+            else if (m_off <= M3_MAX_OFFSET)
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1089: FILE: lib/lzo/minilzo.c:591:
+            }
+            else if (m_off <= M3_MAX_OFFSET)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1090: FILE: lib/lzo/minilzo.c:592:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: lib/lzo/minilzo.c:592:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1091: FILE: lib/lzo/minilzo.c:593:
+                m_off -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: lib/lzo/minilzo.c:593:
+                m_off -= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1092: FILE: lib/lzo/minilzo.c:594:
+                *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: lib/lzo/minilzo.c:594:
+                *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1093: FILE: lib/lzo/minilzo.c:595:
+                goto m3_m4_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: lib/lzo/minilzo.c:595:
+                goto m3_m4_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1094: FILE: lib/lzo/minilzo.c:596:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: lib/lzo/minilzo.c:596:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1095: FILE: lib/lzo/minilzo.c:597:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: lib/lzo/minilzo.c:597:
+            else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 12)
#1095: FILE: lib/lzo/minilzo.c:597:
+            else
[...]
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1095: FILE: lib/lzo/minilzo.c:597:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1097: FILE: lib/lzo/minilzo.c:599:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: lib/lzo/minilzo.c:599:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1098: FILE: lib/lzo/minilzo.c:600:
+                m_off -= 0x4000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: lib/lzo/minilzo.c:600:
+                m_off -= 0x4000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1099: FILE: lib/lzo/minilzo.c:601:
+                assert(m_off > 0); assert(m_off <= 0x7fff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: lib/lzo/minilzo.c:601:
+                assert(m_off > 0); assert(m_off <= 0x7fff);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1100: FILE: lib/lzo/minilzo.c:602:
+                *op++ = LZO_BYTE(M4_MARKER |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: lib/lzo/minilzo.c:602:
+                *op++ = LZO_BYTE(M4_MARKER |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: lib/lzo/minilzo.c:603:
+                                 ((m_off & 0x4000) >> 11) | (m_len - 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: lib/lzo/minilzo.c:603:
+                                 ((m_off & 0x4000) >> 11) | (m_len - 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: lib/lzo/minilzo.c:604:
+                goto m3_m4_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: lib/lzo/minilzo.c:604:
+                goto m3_m4_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: lib/lzo/minilzo.c:605:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: lib/lzo/minilzo.c:605:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1105: FILE: lib/lzo/minilzo.c:607:
+                goto m4_match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: lib/lzo/minilzo.c:607:
+                goto m4_match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: lib/lzo/minilzo.c:609:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: lib/lzo/minilzo.c:609:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1108: FILE: lib/lzo/minilzo.c:610:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: lib/lzo/minilzo.c:610:
+        else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1108: FILE: lib/lzo/minilzo.c:610:
+        else
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1108: FILE: lib/lzo/minilzo.c:610:
+        else
+        {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1108: FILE: lib/lzo/minilzo.c:610:
+        }
+        else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1109: FILE: lib/lzo/minilzo.c:611:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: lib/lzo/minilzo.c:611:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1110: FILE: lib/lzo/minilzo.c:612:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: lib/lzo/minilzo.c:612:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1111: FILE: lib/lzo/minilzo.c:613:
+                const lzo_bytep end = in_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: lib/lzo/minilzo.c:613:
+                const lzo_bytep end = in_end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: lib/lzo/minilzo.c:614:
+                const lzo_bytep m = m_pos + M2_MAX_LEN + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: lib/lzo/minilzo.c:614:
+                const lzo_bytep m = m_pos + M2_MAX_LEN + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: lib/lzo/minilzo.c:615:
+                while (ip < end && *m == *ip)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1113: FILE: lib/lzo/minilzo.c:615:
+                const lzo_bytep m = m_pos + M2_MAX_LEN + 1;
+                while (ip < end && *m == *ip)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: lib/lzo/minilzo.c:615:
+                while (ip < end && *m == *ip)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1113: FILE: lib/lzo/minilzo.c:615:
+                while (ip < end && *m == *ip)
+                    m++, ip++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1114: FILE: lib/lzo/minilzo.c:616:
+                    m++, ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: lib/lzo/minilzo.c:616:
+                    m++, ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: lib/lzo/minilzo.c:617:
+                m_len = pd(ip, ii);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: lib/lzo/minilzo.c:617:
+                m_len = pd(ip, ii);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: lib/lzo/minilzo.c:618:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: lib/lzo/minilzo.c:618:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: lib/lzo/minilzo.c:619:
+            assert(m_len > M2_MAX_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: lib/lzo/minilzo.c:619:
+            assert(m_len > M2_MAX_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: lib/lzo/minilzo.c:621:
+            if (m_off <= M3_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: lib/lzo/minilzo.c:621:
+            if (m_off <= M3_MAX_OFFSET)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1119: FILE: lib/lzo/minilzo.c:621:
+            if (m_off <= M3_MAX_OFFSET)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: lib/lzo/minilzo.c:622:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: lib/lzo/minilzo.c:622:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: lib/lzo/minilzo.c:623:
+                m_off -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: lib/lzo/minilzo.c:623:
+                m_off -= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: lib/lzo/minilzo.c:624:
+                if (m_len <= 33)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: lib/lzo/minilzo.c:624:
+                if (m_len <= 33)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1122: FILE: lib/lzo/minilzo.c:624:
+                if (m_len <= 33)
+                    *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: lib/lzo/minilzo.c:625:
+                    *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: lib/lzo/minilzo.c:625:
+                    *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1123: FILE: lib/lzo/minilzo.c:625:
+                    *op++ = LZO_BYTE(M3_MARKER | (m_len - 2));
                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: lib/lzo/minilzo.c:626:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: lib/lzo/minilzo.c:626:
+                else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1124: FILE: lib/lzo/minilzo.c:626:
+                else
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1124: FILE: lib/lzo/minilzo.c:626:
+                else
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: lib/lzo/minilzo.c:627:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: lib/lzo/minilzo.c:627:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: lib/lzo/minilzo.c:628:
+                    m_len -= 33;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: lib/lzo/minilzo.c:628:
+                    m_len -= 33;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: lib/lzo/minilzo.c:629:
+                    *op++ = M3_MARKER | 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: lib/lzo/minilzo.c:629:
+                    *op++ = M3_MARKER | 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1128: FILE: lib/lzo/minilzo.c:630:
+                    goto m3_m4_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: lib/lzo/minilzo.c:630:
+                    goto m3_m4_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1129: FILE: lib/lzo/minilzo.c:631:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: lib/lzo/minilzo.c:631:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1130: FILE: lib/lzo/minilzo.c:632:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: lib/lzo/minilzo.c:632:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1131: FILE: lib/lzo/minilzo.c:633:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: lib/lzo/minilzo.c:633:
+            else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1131: FILE: lib/lzo/minilzo.c:633:
+            else
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1131: FILE: lib/lzo/minilzo.c:633:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: lib/lzo/minilzo.c:634:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: lib/lzo/minilzo.c:634:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: lib/lzo/minilzo.c:638:
+                m_off -= 0x4000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: lib/lzo/minilzo.c:638:
+                m_off -= 0x4000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: lib/lzo/minilzo.c:639:
+                assert(m_off > 0); assert(m_off <= 0x7fff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: lib/lzo/minilzo.c:639:
+                assert(m_off > 0); assert(m_off <= 0x7fff);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: lib/lzo/minilzo.c:640:
+                if (m_len <= M4_MAX_LEN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: lib/lzo/minilzo.c:640:
+                if (m_len <= M4_MAX_LEN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1138: FILE: lib/lzo/minilzo.c:640:
+                if (m_len <= M4_MAX_LEN)
+                    *op++ = LZO_BYTE(M4_MARKER |

ERROR:CODE_INDENT: code indent should use tabs where possible
#1139: FILE: lib/lzo/minilzo.c:641:
+                    *op++ = LZO_BYTE(M4_MARKER |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: lib/lzo/minilzo.c:641:
+                    *op++ = LZO_BYTE(M4_MARKER |$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1139: FILE: lib/lzo/minilzo.c:641:
+                    *op++ = LZO_BYTE(M4_MARKER |
                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: lib/lzo/minilzo.c:642:
+                                     ((m_off & 0x4000) >> 11) | (m_len - 2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: lib/lzo/minilzo.c:642:
+                                     ((m_off & 0x4000) >> 11) | (m_len - 2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1141: FILE: lib/lzo/minilzo.c:643:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: lib/lzo/minilzo.c:643:
+                else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1141: FILE: lib/lzo/minilzo.c:643:
+                else
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1141: FILE: lib/lzo/minilzo.c:643:
+                else
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: lib/lzo/minilzo.c:644:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: lib/lzo/minilzo.c:644:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1143: FILE: lib/lzo/minilzo.c:645:
+                    m_len -= M4_MAX_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: lib/lzo/minilzo.c:645:
+                    m_len -= M4_MAX_LEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1144: FILE: lib/lzo/minilzo.c:646:
+                    *op++ = LZO_BYTE(M4_MARKER | ((m_off & 0x4000) >> 11));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: lib/lzo/minilzo.c:646:
+                    *op++ = LZO_BYTE(M4_MARKER | ((m_off & 0x4000) >> 11));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1146: FILE: lib/lzo/minilzo.c:648:
+                    while (m_len > 255)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: lib/lzo/minilzo.c:648:
+                    while (m_len > 255)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1146: FILE: lib/lzo/minilzo.c:648:
+                    while (m_len > 255)
+                    {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: lib/lzo/minilzo.c:649:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: lib/lzo/minilzo.c:649:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1148: FILE: lib/lzo/minilzo.c:650:
+                        m_len -= 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: lib/lzo/minilzo.c:650:
+                        m_len -= 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: lib/lzo/minilzo.c:651:
+                        *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: lib/lzo/minilzo.c:651:
+                        *op++ = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: lib/lzo/minilzo.c:652:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: lib/lzo/minilzo.c:652:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: lib/lzo/minilzo.c:653:
+                    assert(m_len > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: lib/lzo/minilzo.c:653:
+                    assert(m_len > 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: lib/lzo/minilzo.c:654:
+                    *op++ = LZO_BYTE(m_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: lib/lzo/minilzo.c:654:
+                    *op++ = LZO_BYTE(m_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: lib/lzo/minilzo.c:655:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: lib/lzo/minilzo.c:655:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1154: FILE: lib/lzo/minilzo.c:656:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: lib/lzo/minilzo.c:656:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1157: FILE: lib/lzo/minilzo.c:659:
+            *op++ = LZO_BYTE((m_off & 63) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: lib/lzo/minilzo.c:659:
+            *op++ = LZO_BYTE((m_off & 63) << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: lib/lzo/minilzo.c:660:
+            *op++ = LZO_BYTE(m_off >> 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: lib/lzo/minilzo.c:660:
+            *op++ = LZO_BYTE(m_off >> 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: lib/lzo/minilzo.c:661:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: lib/lzo/minilzo.c:661:
+        }$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1161: FILE: lib/lzo/minilzo.c:663:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1164: FILE: lib/lzo/minilzo.c:666:
+        ii = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: lib/lzo/minilzo.c:666:
+        ii = ip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1165: FILE: lib/lzo/minilzo.c:667:
+        if __lzo_unlikely(ip >= ip_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: lib/lzo/minilzo.c:667:
+        if __lzo_unlikely(ip >= ip_end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: lib/lzo/minilzo.c:668:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: lib/lzo/minilzo.c:668:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: lib/lzo/minilzo.c:669:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: lib/lzo/minilzo.c:671:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: lib/lzo/minilzo.c:672:
+    return pd(in_end,ii);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1170: FILE: lib/lzo/minilzo.c:672:
+    return pd(in_end,ii);
                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1174: FILE: lib/lzo/minilzo.c:676:
+DO_COMPRESS      ( const lzo_bytep in , lzo_uint  in_len,

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1174: FILE: lib/lzo/minilzo.c:676:
+DO_COMPRESS      ( const lzo_bytep in , lzo_uint  in_len,
                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1174: FILE: lib/lzo/minilzo.c:676:
+DO_COMPRESS      ( const lzo_bytep in , lzo_uint  in_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1175: FILE: lib/lzo/minilzo.c:677:
+                         lzo_bytep out, lzo_uintp out_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: lib/lzo/minilzo.c:677:
+DO_COMPRESS      ( const lzo_bytep in , lzo_uint  in_len,
+                         lzo_bytep out, lzo_uintp out_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: lib/lzo/minilzo.c:677:
+                         lzo_bytep out, lzo_uintp out_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1176: FILE: lib/lzo/minilzo.c:678:
+                         lzo_voidp wrkmem )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: lib/lzo/minilzo.c:678:
+                         lzo_voidp wrkmem )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1176: FILE: lib/lzo/minilzo.c:678:
+                         lzo_voidp wrkmem )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: lib/lzo/minilzo.c:680:
+    lzo_bytep op = out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: lib/lzo/minilzo.c:681:
+    lzo_uint t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: lib/lzo/minilzo.c:683:
+    if __lzo_unlikely(in_len <= M2_MAX_LEN + 5)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1182: FILE: lib/lzo/minilzo.c:684:
+        t = in_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: lib/lzo/minilzo.c:684:
+        t = in_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: lib/lzo/minilzo.c:685:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1183: FILE: lib/lzo/minilzo.c:685:
+    else
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: lib/lzo/minilzo.c:686:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: lib/lzo/minilzo.c:687:
+        t = do_compress(in,in_len,op,out_len,wrkmem);
                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: lib/lzo/minilzo.c:688:
+        op += *out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: lib/lzo/minilzo.c:688:
+        op += *out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: lib/lzo/minilzo.c:689:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: lib/lzo/minilzo.c:691:
+    if (t > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1189: FILE: lib/lzo/minilzo.c:691:
+    if (t > 0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: lib/lzo/minilzo.c:692:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: lib/lzo/minilzo.c:693:
+        const lzo_bytep ii = in + in_len - t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: lib/lzo/minilzo.c:693:
+        const lzo_bytep ii = in + in_len - t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1193: FILE: lib/lzo/minilzo.c:695:
+        if (op == out && t <= 238)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: lib/lzo/minilzo.c:695:
+        if (op == out && t <= 238)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1193: FILE: lib/lzo/minilzo.c:695:
+        if (op == out && t <= 238)
+            *op++ = LZO_BYTE(17 + t);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1194: FILE: lib/lzo/minilzo.c:696:
+            *op++ = LZO_BYTE(17 + t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: lib/lzo/minilzo.c:696:
+            *op++ = LZO_BYTE(17 + t);$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1194: FILE: lib/lzo/minilzo.c:696:
+            *op++ = LZO_BYTE(17 + t);
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1195: FILE: lib/lzo/minilzo.c:697:
+        else if (t <= 3)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: lib/lzo/minilzo.c:697:
+        else if (t <= 3)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1195: FILE: lib/lzo/minilzo.c:697:
+        else if (t <= 3)
+            op[-2] |= LZO_BYTE(t);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1196: FILE: lib/lzo/minilzo.c:698:
+            op[-2] |= LZO_BYTE(t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: lib/lzo/minilzo.c:698:
+            op[-2] |= LZO_BYTE(t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1197: FILE: lib/lzo/minilzo.c:699:
+        else if (t <= 18)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: lib/lzo/minilzo.c:699:
+        else if (t <= 18)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1197: FILE: lib/lzo/minilzo.c:699:
+        else if (t <= 18)
+            *op++ = LZO_BYTE(t - 3);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1198: FILE: lib/lzo/minilzo.c:700:
+            *op++ = LZO_BYTE(t - 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: lib/lzo/minilzo.c:700:
+            *op++ = LZO_BYTE(t - 3);$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1198: FILE: lib/lzo/minilzo.c:700:
+            *op++ = LZO_BYTE(t - 3);
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1199: FILE: lib/lzo/minilzo.c:701:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: lib/lzo/minilzo.c:701:
+        else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1199: FILE: lib/lzo/minilzo.c:701:
+        else
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1199: FILE: lib/lzo/minilzo.c:701:
+        else
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1200: FILE: lib/lzo/minilzo.c:702:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1200: FILE: lib/lzo/minilzo.c:702:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1201: FILE: lib/lzo/minilzo.c:703:
+            lzo_uint tt = t - 18;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1201: FILE: lib/lzo/minilzo.c:703:
+            lzo_uint tt = t - 18;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1203: FILE: lib/lzo/minilzo.c:705:
+            *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: lib/lzo/minilzo.c:705:
+            *op++ = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1204: FILE: lib/lzo/minilzo.c:706:
+            while (tt > 255)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: lib/lzo/minilzo.c:706:
+            while (tt > 255)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1204: FILE: lib/lzo/minilzo.c:706:
+            while (tt > 255)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1205: FILE: lib/lzo/minilzo.c:707:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: lib/lzo/minilzo.c:707:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1206: FILE: lib/lzo/minilzo.c:708:
+                tt -= 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: lib/lzo/minilzo.c:708:
+                tt -= 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1207: FILE: lib/lzo/minilzo.c:709:
+                *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: lib/lzo/minilzo.c:709:
+                *op++ = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1208: FILE: lib/lzo/minilzo.c:710:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: lib/lzo/minilzo.c:710:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1209: FILE: lib/lzo/minilzo.c:711:
+            assert(tt > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: lib/lzo/minilzo.c:711:
+            assert(tt > 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: lib/lzo/minilzo.c:712:
+            *op++ = LZO_BYTE(tt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: lib/lzo/minilzo.c:712:
+            *op++ = LZO_BYTE(tt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: lib/lzo/minilzo.c:713:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: lib/lzo/minilzo.c:713:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: lib/lzo/minilzo.c:714:
+        do *op++ = *ii++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: lib/lzo/minilzo.c:714:
+        do *op++ = *ii++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1212: FILE: lib/lzo/minilzo.c:714:
+        do *op++ = *ii++; while (--t > 0);
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: lib/lzo/minilzo.c:715:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: lib/lzo/minilzo.c:717:
+    *op++ = M4_MARKER | 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: lib/lzo/minilzo.c:718:
+    *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: lib/lzo/minilzo.c:719:
+    *op++ = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: lib/lzo/minilzo.c:721:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: lib/lzo/minilzo.c:722:
+    return LZO_E_OK;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: lib/lzo/minilzo.c:731:
+
+

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1266: FILE: lib/lzo/minilzo.c:768:
+#    define NEED_IP(x) \
+            if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: lib/lzo/minilzo.c:769:
+            if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1267: FILE: lib/lzo/minilzo.c:769:
+            if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1267: FILE: lib/lzo/minilzo.c:769:
+            if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1277: FILE: lib/lzo/minilzo.c:779:
+#    define NEED_OP(x) \
+            if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: lib/lzo/minilzo.c:780:
+            if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: lib/lzo/minilzo.c:780:
+            if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1278: FILE: lib/lzo/minilzo.c:780:
+            if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#1283: FILE: lib/lzo/minilzo.c:785:
+#  define TEST_LB(m_pos)        if (m_pos < out || m_pos >= op) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#1283: FILE: lib/lzo/minilzo.c:785:
+#  define TEST_LB(m_pos)        if (m_pos < out || m_pos >= op) goto lookbehind_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1283: FILE: lib/lzo/minilzo.c:785:
+#  define TEST_LB(m_pos)        if (m_pos < out || m_pos >= op) goto lookbehind_overrun

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1284: FILE: lib/lzo/minilzo.c:786:
+#  define TEST_LBO(m_pos,o)     if (m_pos < out || m_pos >= op - (o)) goto lookbehind_overrun
                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#1284: FILE: lib/lzo/minilzo.c:786:
+#  define TEST_LBO(m_pos,o)     if (m_pos < out || m_pos >= op - (o)) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#1284: FILE: lib/lzo/minilzo.c:786:
+#  define TEST_LBO(m_pos,o)     if (m_pos < out || m_pos >= op - (o)) goto lookbehind_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1284: FILE: lib/lzo/minilzo.c:786:
+#  define TEST_LBO(m_pos,o)     if (m_pos < out || m_pos >= op - (o)) goto lookbehind_overrun

CHECK:SPACING: No space is necessary after a cast
#1286: FILE: lib/lzo/minilzo.c:788:
+#  define TEST_LB(m_pos)        ((void) 0)

CHECK:SPACING: No space is necessary after a cast
#1287: FILE: lib/lzo/minilzo.c:789:
+#  define TEST_LBO(m_pos,o)     ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1287: FILE: lib/lzo/minilzo.c:789:
+#  define TEST_LBO(m_pos,o)     ((void) 0)
                         ^

CHECK:SPACING: No space is necessary after a cast
#1308: FILE: lib/lzo/minilzo.c:810:
+#  define NEED_IP(x)            ((void) 0)

CHECK:SPACING: No space is necessary after a cast
#1313: FILE: lib/lzo/minilzo.c:815:
+#  define NEED_OP(x)            ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1324: FILE: lib/lzo/minilzo.c:826:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)
                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1324: FILE: lib/lzo/minilzo.c:826:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1328: FILE: lib/lzo/minilzo.c:830:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1328: FILE: lib/lzo/minilzo.c:830:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1330: FILE: lib/lzo/minilzo.c:832:
+#  define COPY4(dst,src)    __COPY4((lzo_uintptr_t)(dst),(lzo_uintptr_t)(src))
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1330: FILE: lib/lzo/minilzo.c:832:
+#  define COPY4(dst,src)    __COPY4((lzo_uintptr_t)(dst),(lzo_uintptr_t)(src))
                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1335: FILE: lib/lzo/minilzo.c:837:
+DO_DECOMPRESS  ( const lzo_bytep in , lzo_uint  in_len,

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1335: FILE: lib/lzo/minilzo.c:837:
+DO_DECOMPRESS  ( const lzo_bytep in , lzo_uint  in_len,
                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1335: FILE: lib/lzo/minilzo.c:837:
+DO_DECOMPRESS  ( const lzo_bytep in , lzo_uint  in_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: lib/lzo/minilzo.c:838:
+                       lzo_bytep out, lzo_uintp out_len,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: lib/lzo/minilzo.c:838:
+DO_DECOMPRESS  ( const lzo_bytep in , lzo_uint  in_len,
+                       lzo_bytep out, lzo_uintp out_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: lib/lzo/minilzo.c:838:
+                       lzo_bytep out, lzo_uintp out_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: lib/lzo/minilzo.c:839:
+                       lzo_voidp wrkmem )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: lib/lzo/minilzo.c:839:
+                       lzo_voidp wrkmem )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1337: FILE: lib/lzo/minilzo.c:839:
+                       lzo_voidp wrkmem )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: lib/lzo/minilzo.c:842:
+    register lzo_bytep op;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: lib/lzo/minilzo.c:843:
+    register const lzo_bytep ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: lib/lzo/minilzo.c:844:
+    register lzo_uint t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: lib/lzo/minilzo.c:846:
+    lzo_uint m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: lib/lzo/minilzo.c:847:
+    const lzo_bytep dict_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: lib/lzo/minilzo.c:849:
+    register const lzo_bytep m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: lib/lzo/minilzo.c:852:
+    const lzo_bytep const ip_end = in + in_len;$

WARNING:CONST_CONST: 'const lzo_bytep const' should probably be 'const lzo_bytep'
#1350: FILE: lib/lzo/minilzo.c:852:
+    const lzo_bytep const ip_end = in + in_len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: lib/lzo/minilzo.c:854:
+    lzo_bytep const op_end = out + *out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: lib/lzo/minilzo.c:857:
+    lzo_uint last_m_off = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: lib/lzo/minilzo.c:860:
+    LZO_UNUSED(wrkmem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: lib/lzo/minilzo.c:863:
+    if (dict)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1361: FILE: lib/lzo/minilzo.c:863:
+    if (dict)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: lib/lzo/minilzo.c:864:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1363: FILE: lib/lzo/minilzo.c:865:
+        if (dict_len > M4_MAX_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: lib/lzo/minilzo.c:865:
+        if (dict_len > M4_MAX_OFFSET)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1363: FILE: lib/lzo/minilzo.c:865:
+        if (dict_len > M4_MAX_OFFSET)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1363: FILE: lib/lzo/minilzo.c:865:
+        if (dict_len > M4_MAX_OFFSET)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1364: FILE: lib/lzo/minilzo.c:866:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: lib/lzo/minilzo.c:866:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: lib/lzo/minilzo.c:867:
+            dict += dict_len - M4_MAX_OFFSET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: lib/lzo/minilzo.c:867:
+            dict += dict_len - M4_MAX_OFFSET;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: lib/lzo/minilzo.c:868:
+            dict_len = M4_MAX_OFFSET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: lib/lzo/minilzo.c:868:
+            dict_len = M4_MAX_OFFSET;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: lib/lzo/minilzo.c:869:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: lib/lzo/minilzo.c:869:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: lib/lzo/minilzo.c:870:
+        dict_end = dict + dict_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: lib/lzo/minilzo.c:870:
+        dict_end = dict + dict_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: lib/lzo/minilzo.c:871:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: lib/lzo/minilzo.c:872:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1370: FILE: lib/lzo/minilzo.c:872:
+    else
+    {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1370: FILE: lib/lzo/minilzo.c:872:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: lib/lzo/minilzo.c:873:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1372: FILE: lib/lzo/minilzo.c:874:
+        dict_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: lib/lzo/minilzo.c:874:
+        dict_len = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: lib/lzo/minilzo.c:875:
+        dict_end = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: lib/lzo/minilzo.c:875:
+        dict_end = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: lib/lzo/minilzo.c:876:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: lib/lzo/minilzo.c:879:
+    *out_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: lib/lzo/minilzo.c:881:
+    op = out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: lib/lzo/minilzo.c:882:
+    ip = in;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: lib/lzo/minilzo.c:884:
+    if (*ip > 17)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1382: FILE: lib/lzo/minilzo.c:884:
+    if (*ip > 17)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: lib/lzo/minilzo.c:885:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: lib/lzo/minilzo.c:886:
+        t = *ip++ - 17;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: lib/lzo/minilzo.c:886:
+        t = *ip++ - 17;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: lib/lzo/minilzo.c:887:
+        if (t < 4)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: lib/lzo/minilzo.c:887:
+        if (t < 4)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1385: FILE: lib/lzo/minilzo.c:887:
+        if (t < 4)
+            goto match_next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: lib/lzo/minilzo.c:888:
+            goto match_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: lib/lzo/minilzo.c:888:
+            goto match_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: lib/lzo/minilzo.c:889:
+        assert(t > 0); NEED_OP(t); NEED_IP(t+1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: lib/lzo/minilzo.c:889:
+        assert(t > 0); NEED_OP(t); NEED_IP(t+1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1387: FILE: lib/lzo/minilzo.c:889:
+        assert(t > 0); NEED_OP(t); NEED_IP(t+1);
                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: lib/lzo/minilzo.c:890:
+        do *op++ = *ip++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: lib/lzo/minilzo.c:890:
+        do *op++ = *ip++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1388: FILE: lib/lzo/minilzo.c:890:
+        do *op++ = *ip++; while (--t > 0);
            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: lib/lzo/minilzo.c:891:
+        goto first_literal_run;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: lib/lzo/minilzo.c:891:
+        goto first_literal_run;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: lib/lzo/minilzo.c:892:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: lib/lzo/minilzo.c:894:
+    while (TEST_IP && TEST_OP)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1392: FILE: lib/lzo/minilzo.c:894:
+    while (TEST_IP && TEST_OP)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: lib/lzo/minilzo.c:895:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1394: FILE: lib/lzo/minilzo.c:896:
+        t = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: lib/lzo/minilzo.c:896:
+        t = *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1395: FILE: lib/lzo/minilzo.c:897:
+        if (t >= 16)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: lib/lzo/minilzo.c:897:
+        if (t >= 16)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1395: FILE: lib/lzo/minilzo.c:897:
+        if (t >= 16)
+            goto match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1396: FILE: lib/lzo/minilzo.c:898:
+            goto match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: lib/lzo/minilzo.c:898:
+            goto match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1397: FILE: lib/lzo/minilzo.c:899:
+        if (t == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: lib/lzo/minilzo.c:899:
+        if (t == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1397: FILE: lib/lzo/minilzo.c:899:
+        if (t == 0)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1397: FILE: lib/lzo/minilzo.c:899:
+        if (t == 0)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1398: FILE: lib/lzo/minilzo.c:900:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: lib/lzo/minilzo.c:900:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1399: FILE: lib/lzo/minilzo.c:901:
+            NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1399: FILE: lib/lzo/minilzo.c:901:
+            NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: lib/lzo/minilzo.c:902:
+            while (*ip == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: lib/lzo/minilzo.c:902:
+            while (*ip == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1400: FILE: lib/lzo/minilzo.c:902:
+            while (*ip == 0)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1401: FILE: lib/lzo/minilzo.c:903:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: lib/lzo/minilzo.c:903:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1402: FILE: lib/lzo/minilzo.c:904:
+                t += 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1402: FILE: lib/lzo/minilzo.c:904:
+                t += 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1403: FILE: lib/lzo/minilzo.c:905:
+                ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: lib/lzo/minilzo.c:905:
+                ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: lib/lzo/minilzo.c:906:
+                NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: lib/lzo/minilzo.c:906:
+                NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1405: FILE: lib/lzo/minilzo.c:907:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: lib/lzo/minilzo.c:907:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1406: FILE: lib/lzo/minilzo.c:908:
+            t += 15 + *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: lib/lzo/minilzo.c:908:
+            t += 15 + *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1407: FILE: lib/lzo/minilzo.c:909:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: lib/lzo/minilzo.c:909:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1408: FILE: lib/lzo/minilzo.c:910:
+        assert(t > 0); NEED_OP(t+3); NEED_IP(t+4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: lib/lzo/minilzo.c:910:
+        assert(t > 0); NEED_OP(t+3); NEED_IP(t+4);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1408: FILE: lib/lzo/minilzo.c:910:
+        assert(t > 0); NEED_OP(t+3); NEED_IP(t+4);
                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1408: FILE: lib/lzo/minilzo.c:910:
+        assert(t > 0); NEED_OP(t+3); NEED_IP(t+4);
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1411: FILE: lib/lzo/minilzo.c:913:
+        if (PTR_ALIGNED2_4(op,ip))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1411: FILE: lib/lzo/minilzo.c:913:
+        if (PTR_ALIGNED2_4(op,ip))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1411: FILE: lib/lzo/minilzo.c:913:
+        if (PTR_ALIGNED2_4(op,ip))
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1411: FILE: lib/lzo/minilzo.c:913:
+        if (PTR_ALIGNED2_4(op,ip))
[...]
+#endif

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1411: FILE: lib/lzo/minilzo.c:913:
+        if (PTR_ALIGNED2_4(op,ip))
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1412: FILE: lib/lzo/minilzo.c:914:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: lib/lzo/minilzo.c:914:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1414: FILE: lib/lzo/minilzo.c:916:
+        COPY4(op,ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: lib/lzo/minilzo.c:916:
+        COPY4(op,ip);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1414: FILE: lib/lzo/minilzo.c:916:
+        COPY4(op,ip);
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1415: FILE: lib/lzo/minilzo.c:917:
+        op += 4; ip += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1415: FILE: lib/lzo/minilzo.c:917:
+        op += 4; ip += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1416: FILE: lib/lzo/minilzo.c:918:
+        if (--t > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1416: FILE: lib/lzo/minilzo.c:918:
+        if (--t > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1416: FILE: lib/lzo/minilzo.c:918:
+        if (--t > 0)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1416: FILE: lib/lzo/minilzo.c:918:
+        if (--t > 0)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1417: FILE: lib/lzo/minilzo.c:919:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: lib/lzo/minilzo.c:919:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1418: FILE: lib/lzo/minilzo.c:920:
+            if (t >= 4)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: lib/lzo/minilzo.c:920:
+            if (t >= 4)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1418: FILE: lib/lzo/minilzo.c:920:
+            if (t >= 4)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1419: FILE: lib/lzo/minilzo.c:921:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: lib/lzo/minilzo.c:921:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1420: FILE: lib/lzo/minilzo.c:922:
+                do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: lib/lzo/minilzo.c:922:
+                do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1420: FILE: lib/lzo/minilzo.c:922:
+                do {
+                    COPY4(op,ip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1421: FILE: lib/lzo/minilzo.c:923:
+                    COPY4(op,ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: lib/lzo/minilzo.c:923:
+                    COPY4(op,ip);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1421: FILE: lib/lzo/minilzo.c:923:
+                    COPY4(op,ip);
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1422: FILE: lib/lzo/minilzo.c:924:
+                    op += 4; ip += 4; t -= 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: lib/lzo/minilzo.c:924:
+                    op += 4; ip += 4; t -= 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1423: FILE: lib/lzo/minilzo.c:925:
+                } while (t >= 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: lib/lzo/minilzo.c:925:
+                } while (t >= 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: lib/lzo/minilzo.c:926:
+                if (t > 0) do *op++ = *ip++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: lib/lzo/minilzo.c:926:
+                if (t > 0) do *op++ = *ip++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1424: FILE: lib/lzo/minilzo.c:926:
+                if (t > 0) do *op++ = *ip++; while (--t > 0);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1425: FILE: lib/lzo/minilzo.c:927:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: lib/lzo/minilzo.c:927:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1426: FILE: lib/lzo/minilzo.c:928:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: lib/lzo/minilzo.c:928:
+            else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1426: FILE: lib/lzo/minilzo.c:928:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1427: FILE: lib/lzo/minilzo.c:929:
+                do *op++ = *ip++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1427: FILE: lib/lzo/minilzo.c:929:
+                do *op++ = *ip++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1427: FILE: lib/lzo/minilzo.c:929:
+                do *op++ = *ip++; while (--t > 0);
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: lib/lzo/minilzo.c:930:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: lib/lzo/minilzo.c:930:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1430: FILE: lib/lzo/minilzo.c:932:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: lib/lzo/minilzo.c:932:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: lib/lzo/minilzo.c:933:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: lib/lzo/minilzo.c:933:
+        else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1431: FILE: lib/lzo/minilzo.c:933:
+        }
+        else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: lib/lzo/minilzo.c:937:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: lib/lzo/minilzo.c:937:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: lib/lzo/minilzo.c:938:
+            *op++ = *ip++; *op++ = *ip++; *op++ = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: lib/lzo/minilzo.c:938:
+            *op++ = *ip++; *op++ = *ip++; *op++ = *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: lib/lzo/minilzo.c:939:
+            do *op++ = *ip++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: lib/lzo/minilzo.c:939:
+            do *op++ = *ip++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1437: FILE: lib/lzo/minilzo.c:939:
+            do *op++ = *ip++; while (--t > 0);
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: lib/lzo/minilzo.c:940:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: lib/lzo/minilzo.c:940:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: lib/lzo/minilzo.c:945:
+        t = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: lib/lzo/minilzo.c:945:
+        t = *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: lib/lzo/minilzo.c:946:
+        if (t >= 16)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: lib/lzo/minilzo.c:946:
+        if (t >= 16)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1444: FILE: lib/lzo/minilzo.c:946:
+        if (t >= 16)
+            goto match;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: lib/lzo/minilzo.c:947:
+            goto match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: lib/lzo/minilzo.c:947:
+            goto match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: lib/lzo/minilzo.c:950:
+        m_off = (1 + M2_MAX_OFFSET) + (t << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: lib/lzo/minilzo.c:950:
+        m_off = (1 + M2_MAX_OFFSET) + (t << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: lib/lzo/minilzo.c:951:
+        last_m_off = m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: lib/lzo/minilzo.c:951:
+        last_m_off = m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: lib/lzo/minilzo.c:953:
+        m_off = (1 + M2_MAX_OFFSET) + (t >> 2) + (*ip++ << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: lib/lzo/minilzo.c:953:
+        m_off = (1 + M2_MAX_OFFSET) + (t >> 2) + (*ip++ << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: lib/lzo/minilzo.c:955:
+        NEED_OP(3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: lib/lzo/minilzo.c:955:
+        NEED_OP(3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1454: FILE: lib/lzo/minilzo.c:956:
+        t = 3; COPY_DICT(t,m_off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: lib/lzo/minilzo.c:956:
+        t = 3; COPY_DICT(t,m_off)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1454: FILE: lib/lzo/minilzo.c:956:
+        t = 3; COPY_DICT(t,m_off)
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: lib/lzo/minilzo.c:959:
+        t = (1 + M2_MAX_OFFSET) + (t << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: lib/lzo/minilzo.c:959:
+        t = (1 + M2_MAX_OFFSET) + (t << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1458: FILE: lib/lzo/minilzo.c:960:
+        m_pos = op - t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: lib/lzo/minilzo.c:960:
+        m_pos = op - t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1459: FILE: lib/lzo/minilzo.c:961:
+        last_m_off = t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: lib/lzo/minilzo.c:961:
+        last_m_off = t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1461: FILE: lib/lzo/minilzo.c:963:
+        m_pos = op - (1 + M2_MAX_OFFSET);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: lib/lzo/minilzo.c:963:
+        m_pos = op - (1 + M2_MAX_OFFSET);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: lib/lzo/minilzo.c:964:
+        m_pos -= t >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: lib/lzo/minilzo.c:964:
+        m_pos -= t >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1463: FILE: lib/lzo/minilzo.c:965:
+        m_pos -= *ip++ << 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: lib/lzo/minilzo.c:965:
+        m_pos -= *ip++ << 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1465: FILE: lib/lzo/minilzo.c:967:
+        TEST_LB(m_pos); NEED_OP(3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1465: FILE: lib/lzo/minilzo.c:967:
+        TEST_LB(m_pos); NEED_OP(3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1466: FILE: lib/lzo/minilzo.c:968:
+        *op++ = *m_pos++; *op++ = *m_pos++; *op++ = *m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: lib/lzo/minilzo.c:968:
+        *op++ = *m_pos++; *op++ = *m_pos++; *op++ = *m_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1468: FILE: lib/lzo/minilzo.c:970:
+        goto match_done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: lib/lzo/minilzo.c:970:
+        goto match_done;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1470: FILE: lib/lzo/minilzo.c:972:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: lib/lzo/minilzo.c:972:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: lib/lzo/minilzo.c:974:
+            if (t >= 64)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: lib/lzo/minilzo.c:974:
+            if (t >= 64)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1472: FILE: lib/lzo/minilzo.c:974:
+            if (t >= 64)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1473: FILE: lib/lzo/minilzo.c:975:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1473: FILE: lib/lzo/minilzo.c:975:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1476: FILE: lib/lzo/minilzo.c:978:
+                m_off = 1 + ((t >> 2) & 7) + (*ip++ << 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: lib/lzo/minilzo.c:978:
+                m_off = 1 + ((t >> 2) & 7) + (*ip++ << 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: lib/lzo/minilzo.c:979:
+                t = (t >> 5) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: lib/lzo/minilzo.c:979:
+                t = (t >> 5) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1479: FILE: lib/lzo/minilzo.c:981:
+                m_off = 1 + ((t >> 2) & 3) + (*ip++ << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: lib/lzo/minilzo.c:981:
+                m_off = 1 + ((t >> 2) & 3) + (*ip++ << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1480: FILE: lib/lzo/minilzo.c:982:
+                t = (t >> 4) - 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: lib/lzo/minilzo.c:982:
+                t = (t >> 4) - 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1482: FILE: lib/lzo/minilzo.c:984:
+                m_off = t & 0x1f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: lib/lzo/minilzo.c:984:
+                m_off = t & 0x1f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1483: FILE: lib/lzo/minilzo.c:985:
+                if (m_off >= 0x1c)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: lib/lzo/minilzo.c:985:
+                if (m_off >= 0x1c)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1483: FILE: lib/lzo/minilzo.c:985:
+                if (m_off >= 0x1c)
+                    m_off = last_m_off;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1484: FILE: lib/lzo/minilzo.c:986:
+                    m_off = last_m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: lib/lzo/minilzo.c:986:
+                    m_off = last_m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1485: FILE: lib/lzo/minilzo.c:987:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: lib/lzo/minilzo.c:987:
+                else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1485: FILE: lib/lzo/minilzo.c:987:
+                else
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1485: FILE: lib/lzo/minilzo.c:987:
+                else
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1486: FILE: lib/lzo/minilzo.c:988:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: lib/lzo/minilzo.c:988:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: lib/lzo/minilzo.c:989:
+                    m_off = 1 + (m_off << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: lib/lzo/minilzo.c:989:
+                    m_off = 1 + (m_off << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: lib/lzo/minilzo.c:990:
+                    last_m_off = m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: lib/lzo/minilzo.c:990:
+                    last_m_off = m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: lib/lzo/minilzo.c:991:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: lib/lzo/minilzo.c:991:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: lib/lzo/minilzo.c:992:
+                t = (t >> 5) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: lib/lzo/minilzo.c:992:
+                t = (t >> 5) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: lib/lzo/minilzo.c:996:
+                m_pos = op - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: lib/lzo/minilzo.c:996:
+                m_pos = op - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1495: FILE: lib/lzo/minilzo.c:997:
+                m_pos -= (t >> 2) & 7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: lib/lzo/minilzo.c:997:
+                m_pos -= (t >> 2) & 7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1496: FILE: lib/lzo/minilzo.c:998:
+                m_pos -= *ip++ << 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: lib/lzo/minilzo.c:998:
+                m_pos -= *ip++ << 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: lib/lzo/minilzo.c:999:
+                t = (t >> 5) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: lib/lzo/minilzo.c:999:
+                t = (t >> 5) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1499: FILE: lib/lzo/minilzo.c:1001:
+                m_pos = op - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: lib/lzo/minilzo.c:1001:
+                m_pos = op - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1500: FILE: lib/lzo/minilzo.c:1002:
+                m_pos -= (t >> 2) & 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: lib/lzo/minilzo.c:1002:
+                m_pos -= (t >> 2) & 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: lib/lzo/minilzo.c:1003:
+                m_pos -= *ip++ << 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: lib/lzo/minilzo.c:1003:
+                m_pos -= *ip++ << 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1502: FILE: lib/lzo/minilzo.c:1004:
+                t = (t >> 4) - 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: lib/lzo/minilzo.c:1004:
+                t = (t >> 4) - 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1504: FILE: lib/lzo/minilzo.c:1006:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1504: FILE: lib/lzo/minilzo.c:1006:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1505: FILE: lib/lzo/minilzo.c:1007:
+                    lzo_uint off = t & 0x1f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: lib/lzo/minilzo.c:1007:
+                    lzo_uint off = t & 0x1f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1506: FILE: lib/lzo/minilzo.c:1008:
+                    m_pos = op;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1506: FILE: lib/lzo/minilzo.c:1008:
+                    lzo_uint off = t & 0x1f;
+                    m_pos = op;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: lib/lzo/minilzo.c:1008:
+                    m_pos = op;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1507: FILE: lib/lzo/minilzo.c:1009:
+                    if (off >= 0x1c)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: lib/lzo/minilzo.c:1009:
+                    if (off >= 0x1c)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1507: FILE: lib/lzo/minilzo.c:1009:
+                    if (off >= 0x1c)
+                    {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1508: FILE: lib/lzo/minilzo.c:1010:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: lib/lzo/minilzo.c:1010:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1509: FILE: lib/lzo/minilzo.c:1011:
+                        assert(last_m_off > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: lib/lzo/minilzo.c:1011:
+                        assert(last_m_off > 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1510: FILE: lib/lzo/minilzo.c:1012:
+                        m_pos -= last_m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: lib/lzo/minilzo.c:1012:
+                        m_pos -= last_m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1511: FILE: lib/lzo/minilzo.c:1013:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: lib/lzo/minilzo.c:1013:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1512: FILE: lib/lzo/minilzo.c:1014:
+                    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: lib/lzo/minilzo.c:1014:
+                    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1512: FILE: lib/lzo/minilzo.c:1014:
+                    else
+                    {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1512: FILE: lib/lzo/minilzo.c:1014:
+                    }
+                    else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: lib/lzo/minilzo.c:1015:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: lib/lzo/minilzo.c:1015:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: lib/lzo/minilzo.c:1016:
+                        off = 1 + (off << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: lib/lzo/minilzo.c:1016:
+                        off = 1 + (off << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1515: FILE: lib/lzo/minilzo.c:1017:
+                        m_pos -= off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: lib/lzo/minilzo.c:1017:
+                        m_pos -= off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1516: FILE: lib/lzo/minilzo.c:1018:
+                        last_m_off = off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: lib/lzo/minilzo.c:1018:
+                        last_m_off = off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1517: FILE: lib/lzo/minilzo.c:1019:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: lib/lzo/minilzo.c:1019:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: lib/lzo/minilzo.c:1020:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: lib/lzo/minilzo.c:1020:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: lib/lzo/minilzo.c:1021:
+                t = (t >> 5) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: lib/lzo/minilzo.c:1021:
+                t = (t >> 5) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1521: FILE: lib/lzo/minilzo.c:1023:
+                TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: lib/lzo/minilzo.c:1023:
+                TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1521: FILE: lib/lzo/minilzo.c:1023:
+                TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1521: FILE: lib/lzo/minilzo.c:1023:
+                TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);
                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1522: FILE: lib/lzo/minilzo.c:1024:
+                goto copy_match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: lib/lzo/minilzo.c:1024:
+                goto copy_match;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1524: FILE: lib/lzo/minilzo.c:1026:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1524: FILE: lib/lzo/minilzo.c:1026:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1525: FILE: lib/lzo/minilzo.c:1027:
+            else if (t >= 32)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1525: FILE: lib/lzo/minilzo.c:1027:
+            else if (t >= 32)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1525: FILE: lib/lzo/minilzo.c:1027:
+            else if (t >= 32)
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1525: FILE: lib/lzo/minilzo.c:1027:
+            }
+            else if (t >= 32)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1526: FILE: lib/lzo/minilzo.c:1028:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: lib/lzo/minilzo.c:1028:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1527: FILE: lib/lzo/minilzo.c:1029:
+                t &= 31;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: lib/lzo/minilzo.c:1029:
+                t &= 31;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1528: FILE: lib/lzo/minilzo.c:1030:
+                if (t == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: lib/lzo/minilzo.c:1030:
+                if (t == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1528: FILE: lib/lzo/minilzo.c:1030:
+                if (t == 0)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1528: FILE: lib/lzo/minilzo.c:1030:
+                if (t == 0)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1529: FILE: lib/lzo/minilzo.c:1031:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: lib/lzo/minilzo.c:1031:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1530: FILE: lib/lzo/minilzo.c:1032:
+                    NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: lib/lzo/minilzo.c:1032:
+                    NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1531: FILE: lib/lzo/minilzo.c:1033:
+                    while (*ip == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: lib/lzo/minilzo.c:1033:
+                    while (*ip == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1531: FILE: lib/lzo/minilzo.c:1033:
+                    while (*ip == 0)
+                    {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1532: FILE: lib/lzo/minilzo.c:1034:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: lib/lzo/minilzo.c:1034:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1533: FILE: lib/lzo/minilzo.c:1035:
+                        t += 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: lib/lzo/minilzo.c:1035:
+                        t += 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1534: FILE: lib/lzo/minilzo.c:1036:
+                        ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: lib/lzo/minilzo.c:1036:
+                        ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1535: FILE: lib/lzo/minilzo.c:1037:
+                        NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: lib/lzo/minilzo.c:1037:
+                        NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1536: FILE: lib/lzo/minilzo.c:1038:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: lib/lzo/minilzo.c:1038:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1537: FILE: lib/lzo/minilzo.c:1039:
+                    t += 31 + *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: lib/lzo/minilzo.c:1039:
+                    t += 31 + *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1538: FILE: lib/lzo/minilzo.c:1040:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: lib/lzo/minilzo.c:1040:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1541: FILE: lib/lzo/minilzo.c:1043:
+                m_off = 1 + (ip[0] << 6) + (ip[1] >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: lib/lzo/minilzo.c:1043:
+                m_off = 1 + (ip[0] << 6) + (ip[1] >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1542: FILE: lib/lzo/minilzo.c:1044:
+                last_m_off = m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: lib/lzo/minilzo.c:1044:
+                last_m_off = m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1544: FILE: lib/lzo/minilzo.c:1046:
+                m_off = 1 + (ip[0] >> 2) + (ip[1] << 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: lib/lzo/minilzo.c:1046:
+                m_off = 1 + (ip[0] >> 2) + (ip[1] << 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1548: FILE: lib/lzo/minilzo.c:1050:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: lib/lzo/minilzo.c:1050:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1549: FILE: lib/lzo/minilzo.c:1051:
+                    lzo_uint off = 1 + (ip[0] << 6) + (ip[1] >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: lib/lzo/minilzo.c:1051:
+                    lzo_uint off = 1 + (ip[0] << 6) + (ip[1] >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1550: FILE: lib/lzo/minilzo.c:1052:
+                    m_pos = op - off;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1550: FILE: lib/lzo/minilzo.c:1052:
+                    lzo_uint off = 1 + (ip[0] << 6) + (ip[1] >> 2);
+                    m_pos = op - off;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: lib/lzo/minilzo.c:1052:
+                    m_pos = op - off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1551: FILE: lib/lzo/minilzo.c:1053:
+                    last_m_off = off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: lib/lzo/minilzo.c:1053:
+                    last_m_off = off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1552: FILE: lib/lzo/minilzo.c:1054:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: lib/lzo/minilzo.c:1054:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1554: FILE: lib/lzo/minilzo.c:1056:
+                m_pos = op - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: lib/lzo/minilzo.c:1056:
+                m_pos = op - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1555: FILE: lib/lzo/minilzo.c:1057:
+                m_pos -= (* (const lzo_ushortp) ip) >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: lib/lzo/minilzo.c:1057:
+                m_pos -= (* (const lzo_ushortp) ip) >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1557: FILE: lib/lzo/minilzo.c:1059:
+                m_pos = op - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: lib/lzo/minilzo.c:1059:
+                m_pos = op - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: lib/lzo/minilzo.c:1060:
+                m_pos -= (ip[0] >> 2) + (ip[1] << 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: lib/lzo/minilzo.c:1060:
+                m_pos -= (ip[0] >> 2) + (ip[1] << 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1561: FILE: lib/lzo/minilzo.c:1063:
+                ip += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: lib/lzo/minilzo.c:1063:
+                ip += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1562: FILE: lib/lzo/minilzo.c:1064:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: lib/lzo/minilzo.c:1064:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1563: FILE: lib/lzo/minilzo.c:1065:
+            else if (t >= 16)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: lib/lzo/minilzo.c:1065:
+            else if (t >= 16)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1563: FILE: lib/lzo/minilzo.c:1065:
+            else if (t >= 16)
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1563: FILE: lib/lzo/minilzo.c:1065:
+            }
+            else if (t >= 16)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1564: FILE: lib/lzo/minilzo.c:1066:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: lib/lzo/minilzo.c:1066:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1566: FILE: lib/lzo/minilzo.c:1068:
+                m_off = (t & 8) << 11;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: lib/lzo/minilzo.c:1068:
+                m_off = (t & 8) << 11;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1568: FILE: lib/lzo/minilzo.c:1070:
+                m_pos = op;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: lib/lzo/minilzo.c:1070:
+                m_pos = op;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1569: FILE: lib/lzo/minilzo.c:1071:
+                m_pos -= (t & 8) << 11;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: lib/lzo/minilzo.c:1071:
+                m_pos -= (t & 8) << 11;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: lib/lzo/minilzo.c:1073:
+                t &= 7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: lib/lzo/minilzo.c:1073:
+                t &= 7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1572: FILE: lib/lzo/minilzo.c:1074:
+                if (t == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1572: FILE: lib/lzo/minilzo.c:1074:
+                if (t == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1572: FILE: lib/lzo/minilzo.c:1074:
+                if (t == 0)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1572: FILE: lib/lzo/minilzo.c:1074:
+                if (t == 0)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: lib/lzo/minilzo.c:1075:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: lib/lzo/minilzo.c:1075:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: lib/lzo/minilzo.c:1076:
+                    NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: lib/lzo/minilzo.c:1076:
+                    NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1575: FILE: lib/lzo/minilzo.c:1077:
+                    while (*ip == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: lib/lzo/minilzo.c:1077:
+                    while (*ip == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1575: FILE: lib/lzo/minilzo.c:1077:
+                    while (*ip == 0)
+                    {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1576: FILE: lib/lzo/minilzo.c:1078:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: lib/lzo/minilzo.c:1078:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1577: FILE: lib/lzo/minilzo.c:1079:
+                        t += 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: lib/lzo/minilzo.c:1079:
+                        t += 255;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1578: FILE: lib/lzo/minilzo.c:1080:
+                        ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: lib/lzo/minilzo.c:1080:
+                        ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1579: FILE: lib/lzo/minilzo.c:1081:
+                        NEED_IP(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1579: FILE: lib/lzo/minilzo.c:1081:
+                        NEED_IP(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1580: FILE: lib/lzo/minilzo.c:1082:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: lib/lzo/minilzo.c:1082:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1581: FILE: lib/lzo/minilzo.c:1083:
+                    t += 7 + *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: lib/lzo/minilzo.c:1083:
+                    t += 7 + *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1582: FILE: lib/lzo/minilzo.c:1084:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: lib/lzo/minilzo.c:1084:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: lib/lzo/minilzo.c:1087:
+                m_off += (ip[0] << 6) + (ip[1] >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: lib/lzo/minilzo.c:1087:
+                m_off += (ip[0] << 6) + (ip[1] >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: lib/lzo/minilzo.c:1089:
+                m_off += (ip[0] >> 2) + (ip[1] << 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: lib/lzo/minilzo.c:1089:
+                m_off += (ip[0] >> 2) + (ip[1] << 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: lib/lzo/minilzo.c:1091:
+                ip += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: lib/lzo/minilzo.c:1091:
+                ip += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: lib/lzo/minilzo.c:1092:
+                if (m_off == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: lib/lzo/minilzo.c:1092:
+                if (m_off == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1590: FILE: lib/lzo/minilzo.c:1092:
+                if (m_off == 0)
+                    goto eof_found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1591: FILE: lib/lzo/minilzo.c:1093:
+                    goto eof_found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: lib/lzo/minilzo.c:1093:
+                    goto eof_found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1592: FILE: lib/lzo/minilzo.c:1094:
+                m_off += 0x4000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: lib/lzo/minilzo.c:1094:
+                m_off += 0x4000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1594: FILE: lib/lzo/minilzo.c:1096:
+                last_m_off = m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: lib/lzo/minilzo.c:1096:
+                last_m_off = m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: lib/lzo/minilzo.c:1100:
+                m_pos -= (ip[0] << 6) + (ip[1] >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: lib/lzo/minilzo.c:1100:
+                m_pos -= (ip[0] << 6) + (ip[1] >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1600: FILE: lib/lzo/minilzo.c:1102:
+                m_pos -= (* (const lzo_ushortp) ip) >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: lib/lzo/minilzo.c:1102:
+                m_pos -= (* (const lzo_ushortp) ip) >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1602: FILE: lib/lzo/minilzo.c:1104:
+                m_pos -= (ip[0] >> 2) + (ip[1] << 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: lib/lzo/minilzo.c:1104:
+                m_pos -= (ip[0] >> 2) + (ip[1] << 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1604: FILE: lib/lzo/minilzo.c:1106:
+                ip += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: lib/lzo/minilzo.c:1106:
+                ip += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1605: FILE: lib/lzo/minilzo.c:1107:
+                if (m_pos == op)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1605: FILE: lib/lzo/minilzo.c:1107:
+                if (m_pos == op)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1605: FILE: lib/lzo/minilzo.c:1107:
+                if (m_pos == op)
+                    goto eof_found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1606: FILE: lib/lzo/minilzo.c:1108:
+                    goto eof_found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1606: FILE: lib/lzo/minilzo.c:1108:
+                    goto eof_found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: lib/lzo/minilzo.c:1109:
+                m_pos -= 0x4000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1607: FILE: lib/lzo/minilzo.c:1109:
+                m_pos -= 0x4000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1609: FILE: lib/lzo/minilzo.c:1111:
+                last_m_off = pd((const lzo_bytep)op, m_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: lib/lzo/minilzo.c:1111:
+                last_m_off = pd((const lzo_bytep)op, m_pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: lib/lzo/minilzo.c:1114:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1612: FILE: lib/lzo/minilzo.c:1114:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1613: FILE: lib/lzo/minilzo.c:1115:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1613: FILE: lib/lzo/minilzo.c:1115:
+            else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1613: FILE: lib/lzo/minilzo.c:1115:
+            else
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1613: FILE: lib/lzo/minilzo.c:1115:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1614: FILE: lib/lzo/minilzo.c:1116:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: lib/lzo/minilzo.c:1116:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1617: FILE: lib/lzo/minilzo.c:1119:
+                m_off = 1 + (t << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: lib/lzo/minilzo.c:1119:
+                m_off = 1 + (t << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: lib/lzo/minilzo.c:1120:
+                last_m_off = m_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: lib/lzo/minilzo.c:1120:
+                last_m_off = m_off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1620: FILE: lib/lzo/minilzo.c:1122:
+                m_off = 1 + (t >> 2) + (*ip++ << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1620: FILE: lib/lzo/minilzo.c:1122:
+                m_off = 1 + (t >> 2) + (*ip++ << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: lib/lzo/minilzo.c:1124:
+                NEED_OP(2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: lib/lzo/minilzo.c:1124:
+                NEED_OP(2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1623: FILE: lib/lzo/minilzo.c:1125:
+                t = 2; COPY_DICT(t,m_off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: lib/lzo/minilzo.c:1125:
+                t = 2; COPY_DICT(t,m_off)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1623: FILE: lib/lzo/minilzo.c:1125:
+                t = 2; COPY_DICT(t,m_off)
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1626: FILE: lib/lzo/minilzo.c:1128:
+                t = 1 + (t << 6) + (*ip++ >> 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: lib/lzo/minilzo.c:1128:
+                t = 1 + (t << 6) + (*ip++ >> 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: lib/lzo/minilzo.c:1129:
+                m_pos = op - t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1627: FILE: lib/lzo/minilzo.c:1129:
+                m_pos = op - t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1628: FILE: lib/lzo/minilzo.c:1130:
+                last_m_off = t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: lib/lzo/minilzo.c:1130:
+                last_m_off = t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1630: FILE: lib/lzo/minilzo.c:1132:
+                m_pos = op - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1630: FILE: lib/lzo/minilzo.c:1132:
+                m_pos = op - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1631: FILE: lib/lzo/minilzo.c:1133:
+                m_pos -= t >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1631: FILE: lib/lzo/minilzo.c:1133:
+                m_pos -= t >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: lib/lzo/minilzo.c:1134:
+                m_pos -= *ip++ << 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1632: FILE: lib/lzo/minilzo.c:1134:
+                m_pos -= *ip++ << 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: lib/lzo/minilzo.c:1136:
+                TEST_LB(m_pos); NEED_OP(2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: lib/lzo/minilzo.c:1136:
+                TEST_LB(m_pos); NEED_OP(2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: lib/lzo/minilzo.c:1137:
+                *op++ = *m_pos++; *op++ = *m_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: lib/lzo/minilzo.c:1137:
+                *op++ = *m_pos++; *op++ = *m_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: lib/lzo/minilzo.c:1139:
+                goto match_done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: lib/lzo/minilzo.c:1139:
+                goto match_done;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: lib/lzo/minilzo.c:1140:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1638: FILE: lib/lzo/minilzo.c:1140:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1642: FILE: lib/lzo/minilzo.c:1144:
+            NEED_OP(t+3-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: lib/lzo/minilzo.c:1144:
+            NEED_OP(t+3-1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1642: FILE: lib/lzo/minilzo.c:1144:
+            NEED_OP(t+3-1);
                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1642: FILE: lib/lzo/minilzo.c:1144:
+            NEED_OP(t+3-1);
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1643: FILE: lib/lzo/minilzo.c:1145:
+            t += 3-1; COPY_DICT(t,m_off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: lib/lzo/minilzo.c:1145:
+            t += 3-1; COPY_DICT(t,m_off)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1643: FILE: lib/lzo/minilzo.c:1145:
+            t += 3-1; COPY_DICT(t,m_off)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: lib/lzo/minilzo.c:1145:
+            t += 3-1; COPY_DICT(t,m_off)
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1647: FILE: lib/lzo/minilzo.c:1149:
+            TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: lib/lzo/minilzo.c:1149:
+            TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1647: FILE: lib/lzo/minilzo.c:1149:
+            TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1647: FILE: lib/lzo/minilzo.c:1149:
+            TEST_LB(m_pos); assert(t > 0); NEED_OP(t+3-1);
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: lib/lzo/minilzo.c:1152:
+            if (t >= 2 * 4 - (3 - 1) && PTR_ALIGNED2_4(op,m_pos))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: lib/lzo/minilzo.c:1152:
+            if (t >= 2 * 4 - (3 - 1) && PTR_ALIGNED2_4(op,m_pos))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1650: FILE: lib/lzo/minilzo.c:1152:
+            if (t >= 2 * 4 - (3 - 1) && PTR_ALIGNED2_4(op,m_pos))
+            {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1650: FILE: lib/lzo/minilzo.c:1152:
+            if (t >= 2 * 4 - (3 - 1) && PTR_ALIGNED2_4(op,m_pos))
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: lib/lzo/minilzo.c:1153:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: lib/lzo/minilzo.c:1153:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: lib/lzo/minilzo.c:1154:
+                assert((op - m_pos) >= 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: lib/lzo/minilzo.c:1154:
+                assert((op - m_pos) >= 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: lib/lzo/minilzo.c:1156:
+            if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: lib/lzo/minilzo.c:1156:
+            if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1654: FILE: lib/lzo/minilzo.c:1156:
+            if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1655: FILE: lib/lzo/minilzo.c:1157:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: lib/lzo/minilzo.c:1157:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1657: FILE: lib/lzo/minilzo.c:1159:
+                COPY4(op,m_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1657: FILE: lib/lzo/minilzo.c:1159:
+                COPY4(op,m_pos);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1657: FILE: lib/lzo/minilzo.c:1159:
+                COPY4(op,m_pos);
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1658: FILE: lib/lzo/minilzo.c:1160:
+                op += 4; m_pos += 4; t -= 4 - (3 - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: lib/lzo/minilzo.c:1160:
+                op += 4; m_pos += 4; t -= 4 - (3 - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1659: FILE: lib/lzo/minilzo.c:1161:
+                do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1659: FILE: lib/lzo/minilzo.c:1161:
+                do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1659: FILE: lib/lzo/minilzo.c:1161:
+                do {
+                    COPY4(op,m_pos);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: lib/lzo/minilzo.c:1162:
+                    COPY4(op,m_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: lib/lzo/minilzo.c:1162:
+                    COPY4(op,m_pos);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1660: FILE: lib/lzo/minilzo.c:1162:
+                    COPY4(op,m_pos);
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1661: FILE: lib/lzo/minilzo.c:1163:
+                    op += 4; m_pos += 4; t -= 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: lib/lzo/minilzo.c:1163:
+                    op += 4; m_pos += 4; t -= 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: lib/lzo/minilzo.c:1164:
+                } while (t >= 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: lib/lzo/minilzo.c:1164:
+                } while (t >= 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: lib/lzo/minilzo.c:1165:
+                if (t > 0) do *op++ = *m_pos++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1663: FILE: lib/lzo/minilzo.c:1165:
+                if (t > 0) do *op++ = *m_pos++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1663: FILE: lib/lzo/minilzo.c:1165:
+                if (t > 0) do *op++ = *m_pos++; while (--t > 0);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: lib/lzo/minilzo.c:1166:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: lib/lzo/minilzo.c:1166:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: lib/lzo/minilzo.c:1167:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: lib/lzo/minilzo.c:1167:
+            else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 12)
#1665: FILE: lib/lzo/minilzo.c:1167:
+            else
[...]
+            {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1665: FILE: lib/lzo/minilzo.c:1167:
+            }
+            else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: lib/lzo/minilzo.c:1169:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1667: FILE: lib/lzo/minilzo.c:1169:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: lib/lzo/minilzo.c:1171:
+                *op++ = *m_pos++; *op++ = *m_pos++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: lib/lzo/minilzo.c:1171:
+                *op++ = *m_pos++; *op++ = *m_pos++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: lib/lzo/minilzo.c:1172:
+                do *op++ = *m_pos++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: lib/lzo/minilzo.c:1172:
+                do *op++ = *m_pos++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1670: FILE: lib/lzo/minilzo.c:1172:
+                do *op++ = *m_pos++; while (--t > 0);
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1671: FILE: lib/lzo/minilzo.c:1173:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1671: FILE: lib/lzo/minilzo.c:1173:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: lib/lzo/minilzo.c:1179:
+            t = ip[-1] & 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: lib/lzo/minilzo.c:1179:
+            t = ip[-1] & 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1679: FILE: lib/lzo/minilzo.c:1181:
+            t = ip[-2] & 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1679: FILE: lib/lzo/minilzo.c:1181:
+            t = ip[-2] & 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1681: FILE: lib/lzo/minilzo.c:1183:
+            if (t == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1681: FILE: lib/lzo/minilzo.c:1183:
+            if (t == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1682: FILE: lib/lzo/minilzo.c:1184:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1682: FILE: lib/lzo/minilzo.c:1184:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1685: FILE: lib/lzo/minilzo.c:1187:
+            assert(t > 0); assert(t < 4); NEED_OP(t); NEED_IP(t+1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: lib/lzo/minilzo.c:1187:
+            assert(t > 0); assert(t < 4); NEED_OP(t); NEED_IP(t+1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1685: FILE: lib/lzo/minilzo.c:1187:
+            assert(t > 0); assert(t < 4); NEED_OP(t); NEED_IP(t+1);
                                                                ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1686: FILE: lib/lzo/minilzo.c:1188:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1687: FILE: lib/lzo/minilzo.c:1189:
+            do *op++ = *ip++; while (--t > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1687: FILE: lib/lzo/minilzo.c:1189:
+            do *op++ = *ip++; while (--t > 0);$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1687: FILE: lib/lzo/minilzo.c:1189:
+            do *op++ = *ip++; while (--t > 0);
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1689: FILE: lib/lzo/minilzo.c:1191:
+            *op++ = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1689: FILE: lib/lzo/minilzo.c:1191:
+            *op++ = *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1690: FILE: lib/lzo/minilzo.c:1192:
+            if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1690: FILE: lib/lzo/minilzo.c:1192:
+            if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1690: FILE: lib/lzo/minilzo.c:1192:
+            if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }

ERROR:CODE_INDENT: code indent should use tabs where possible
#1692: FILE: lib/lzo/minilzo.c:1194:
+            t = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: lib/lzo/minilzo.c:1194:
+            t = *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: lib/lzo/minilzo.c:1195:
+        } while (TEST_IP && TEST_OP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: lib/lzo/minilzo.c:1195:
+        } while (TEST_IP && TEST_OP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: lib/lzo/minilzo.c:1196:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: lib/lzo/minilzo.c:1199:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1698: FILE: lib/lzo/minilzo.c:1200:
+    return LZO_E_EOF_NOT_FOUND;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: lib/lzo/minilzo.c:1204:
+    assert(t == 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: lib/lzo/minilzo.c:1205:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: lib/lzo/minilzo.c:1206:
+    return (ip == ip_end ? LZO_E_OK :$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1705: FILE: lib/lzo/minilzo.c:1207:
+           (ip < ip_end  ? LZO_E_INPUT_NOT_CONSUMED : LZO_E_INPUT_OVERRUN));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: lib/lzo/minilzo.c:1207:
+           (ip < ip_end  ? LZO_E_INPUT_NOT_CONSUMED : LZO_E_INPUT_OVERRUN));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: lib/lzo/minilzo.c:1211:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1710: FILE: lib/lzo/minilzo.c:1212:
+    return LZO_E_INPUT_OVERRUN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1715: FILE: lib/lzo/minilzo.c:1217:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1716: FILE: lib/lzo/minilzo.c:1218:
+    return LZO_E_OUTPUT_OVERRUN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: lib/lzo/minilzo.c:1223:
+    *out_len = pd(op, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1722: FILE: lib/lzo/minilzo.c:1224:
+    return LZO_E_LOOKBEHIND_OVERRUN;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 830 errors, 653 warnings, 156 checks, 1636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
