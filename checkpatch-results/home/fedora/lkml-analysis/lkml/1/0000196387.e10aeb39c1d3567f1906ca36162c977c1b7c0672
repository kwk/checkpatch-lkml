CHECK:BRACES: braces {} should be used on all arms of this statement
#91: FILE: drivers/dma/dmaengine.c:90:
+	if (chan) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#95: FILE: drivers/dma/dmaengine.c:94:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#116: FILE: drivers/dma/dmaengine.c:111:
+	if (chan) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#120: FILE: drivers/dma/dmaengine.c:115:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chan->dev"
#222: FILE: drivers/dma/dmaengine.c:646:
+		if (chan->dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#271: FILE: drivers/dma/dmaengine.c:901:
 	WARN_ONCE(tx->parent, "%s: speculatively walking dependency chain for"
+		  " %s\n", __func__, dma_chan_name(tx->chan));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#293: FILE: drivers/dma/dmatest.c:328:
 	if (!dtc) {
+		pr_warning("dmatest: No memory for %s\n", dma_chan_name(chan));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#347: FILE: drivers/dma/dw_dmac.c:77:
+}
+static struct device *chan2parent(struct dma_chan *chan)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/dma/dw_dmac.c:121:
+		dma_sync_single_for_cpu(chan2parent(&dwc->chan),
 				child->txd.phys, sizeof(child->lli),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: drivers/dma/dw_dmac.c:124:
+	dma_sync_single_for_cpu(chan2parent(&dwc->chan),
 			desc->txd.phys, sizeof(desc->lli),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/dma/dw_dmac.c:142:
+			dev_vdbg(chan2dev(&dwc->chan),
 					"moving child desc %p to freelist\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_crit(... to dev_printk(KERN_CRIT, ...
#466: FILE: drivers/dma/dw_dmac.c:320:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/dma/dw_dmac.c:321:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),
 			"  desc: s0x%x d0x%x l0x%x c0x%x:%x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_crit(... to dev_printk(KERN_CRIT, ...
#475: FILE: drivers/dma/dw_dmac.c:354:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/dma/dw_dmac.c:355:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),
 			"Bad descriptor submitted for DMA!\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_crit(... to dev_printk(KERN_CRIT, ...
#478: FILE: drivers/dma/dw_dmac.c:356:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/dma/dw_dmac.c:357:
+	dev_printk(KERN_CRIT, chan2dev(&dwc->chan),
 			"  cookie: %d\n", bad_desc->txd.cookie);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/dma/dw_dmac.c:455:
+		dev_vdbg(chan2dev(tx->chan), "tx_submit: started %u\n",
 				desc->txd.cookie);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/dma/dw_dmac.c:460:
+		dev_vdbg(chan2dev(tx->chan), "tx_submit: queued %u\n",
 				desc->txd.cookie);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/dma/dw_dmac.c:485:
+	dev_vdbg(chan2dev(chan), "prep_dma_memcpy d0x%x s0x%x l0x%zx f0x%lx\n",
 			dest, src, len, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/dma/dw_dmac.c:529:
+			dma_sync_single_for_device(chan2parent(chan),
 					prev->txd.phys, sizeof(prev->lli),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/dma/dw_dmac.c:544:
+	dma_sync_single_for_device(chan2parent(chan),
 			prev->txd.phys, sizeof(prev->lli),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/dma/dw_dmac.c:620:
+				dma_sync_single_for_device(chan2parent(chan),
 						prev->txd.phys,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/dma/dw_dmac.c:666:
+				dma_sync_single_for_device(chan2parent(chan),
 						prev->txd.phys,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/dma/dw_dmac.c:686:
+	dma_sync_single_for_device(chan2parent(chan),
 			prev->txd.phys, sizeof(prev->lli),

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#611: FILE: drivers/dma/dw_dmac.c:820:
 		if (!desc) {
+			dev_info(chan2dev(chan),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: drivers/dma/dw_dmac.c:821:
+			dev_info(chan2dev(chan),
 				"only allocated %d descriptors\n", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: drivers/dma/dw_dmac.c:831:
+		desc->txd.phys = dma_map_single(chan2parent(chan), &desc->lli,
 				sizeof(desc->lli), DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: drivers/dma/dw_dmac.c:859:
+	dev_dbg(chan2dev(chan), "free_chan_resources (descs allocated=%u)\n",
 			dwc->descs_allocated);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/dma/dw_dmac.c:881:
+		dma_unmap_single(chan2parent(chan), desc->txd.phys,
 				sizeof(desc->lli), DMA_TO_DEVICE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 24 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
