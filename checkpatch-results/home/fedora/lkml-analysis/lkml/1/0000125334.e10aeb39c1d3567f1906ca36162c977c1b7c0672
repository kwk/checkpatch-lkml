WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: include/asm-generic/cache.h:1:
+#ifndef __ASM_GENERIC_CACHE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#75: FILE: include/asm-generic/cache.h:10:
+#define L1_CACHE_BYTES		(1 << L1_CACHE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: include/asm-generic/cacheflush.h:1:
+#ifndef __ASM_CACHEFLUSH_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: include/asm-generic/cacheflush.h:20:
+#define flush_icache_page(vma,pg)		do { } while (0)
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: include/asm-generic/cacheflush.h:21:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: include/asm-generic/cacheflush.h:21:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: include/asm-generic/cacheflush.h:21:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: include/asm-generic/mmu.h:1:
+#ifndef __ASM_GENERIC_MMU_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#128: FILE: include/asm-generic/mmu.h:9:
+typedef struct {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: include/asm-generic/mmu_context.h:1:
+#ifndef __ASM_GENERIC_MMU_CONTEXT_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: include/asm-generic/mmu_context.h:15:
+static inline void enter_lazy_tlb(struct mm_struct *mm,
+			struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: include/asm-generic/mmu_context.h:20:
+static inline int init_new_context(struct task_struct *tsk,
+			struct mm_struct *mm)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: include/asm-generic/mmu_context.h:30:
+static inline void deactivate_mm(struct task_struct *task,
+			struct mm_struct *mm)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: include/asm-generic/mmu_context.h:35:
+static inline void switch_mm(struct mm_struct *prev,
+			struct mm_struct *next,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#192: FILE: include/asm-generic/page.h:1:
+#ifndef __ASM_GENERIC_PAGE_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: include/asm-generic/page.h:12:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#208: FILE: include/asm-generic/page.h:17:
+#define PAGE_SIZE	(1 << PAGE_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#210: FILE: include/asm-generic/page.h:19:
+#define PAGE_SIZE	(1UL << PAGE_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#212: FILE: include/asm-generic/page.h:21:
+#define PAGE_MASK	(~(PAGE_SIZE-1))
                  	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: include/asm-generic/page.h:31:
+#define copy_page(to,from)	memcpy((to), (from), PAGE_SIZE)
                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#230: FILE: include/asm-generic/page.h:39:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#233: FILE: include/asm-generic/page.h:42:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#236: FILE: include/asm-generic/page.h:45:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#239: FILE: include/asm-generic/page.h:48:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#242: FILE: include/asm-generic/page.h:51:
+typedef struct page *pgtable_t;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#245: FILE: include/asm-generic/page.h:54:
+#define pmd_val(x)	((&x)->pmd[0])

ERROR:SPACING: space prohibited before that close parenthesis ')'
#249: FILE: include/asm-generic/page.h:58:
+#define __pte(x)	((pte_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#250: FILE: include/asm-generic/page.h:59:
+#define __pmd(x)	((pmd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#251: FILE: include/asm-generic/page.h:60:
+#define __pgd(x)	((pgd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#252: FILE: include/asm-generic/page.h:61:
+#define __pgprot(x)	((pgprot_t) { (x) } )

CHECK:SPACING: No space is necessary after a cast
#268: FILE: include/asm-generic/page.h:77:
+#define __pa(x) ((unsigned long) (x) - PAGE_OFFSET)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#273: FILE: include/asm-generic/page.h:82:
+#define virt_to_page(addr)	(mem_map + (((unsigned long)(addr)-PAGE_OFFSET) >> PAGE_SHIFT))
                           	                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'kaddr' - possible side-effects?
#282: FILE: include/asm-generic/page.h:91:
+#define	virt_addr_valid(kaddr)	(((void *)(kaddr) >= (void *)PAGE_OFFSET) && \
+				((void *)(kaddr) < (void *)memory_end))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: include/asm-generic/pgalloc.h:1:
+#ifndef __ASM_GENERIC_PGALLOC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#315: FILE: include/asm-generic/segment.h:1:
+#ifndef __ASM_GENERIC_SEGMENT_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#330: FILE: include/asm-generic/tlbflush.h:1:
+#ifndef __ASM_GENERIC_TLBFLUSH_H

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: include/asm-generic/tlbflush.h:14:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#346: FILE: include/asm-generic/tlbflush.h:17:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125334.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 16 warnings, 14 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125334.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
