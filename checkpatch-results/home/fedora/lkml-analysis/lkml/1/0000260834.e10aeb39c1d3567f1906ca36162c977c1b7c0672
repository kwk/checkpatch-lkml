CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#49: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#49: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#50: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#50: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#59: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#59: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#68: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:61:
+#define S3C2440_SDIDCON_DS_BYTE       (0<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#69: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#69: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#70: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:63:
+#define S3C2440_SDIDCON_DS_WORD       (2<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#78: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#78: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#94: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#94: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:98:
+#define S3C2440_SDIFSTA_FIFOFAIL       (3<<14)  /* 3 is correct (2 bits) */
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#100: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#100: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#101: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#101: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: drivers/mmc/host/s3cmci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'host' - possible side-effects?
#153: FILE: drivers/mmc/host/s3cmci.c:44:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#153: FILE: drivers/mmc/host/s3cmci.c:44:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'channels' - possible side-effects?
#153: FILE: drivers/mmc/host/s3cmci.c:44:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'channels' may be better as '(channels)' to avoid precedence issues
#153: FILE: drivers/mmc/host/s3cmci.c:44:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#154: FILE: drivers/mmc/host/s3cmci.c:45:
+	do {					  \
+	if (dbgmap_err & channels) 		  \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/mmc/host/s3cmci.c:46:
+^Iif (dbgmap_err & channels) ^I^I  \$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#163: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#163: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#163: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                  ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ressource' - possible side-effects?
#163: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/mmc/host/s3cmci.c:71:
+^Icon ^I= readl(host->base + S3C2410_SDICON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: drivers/mmc/host/s3cmci.c:72:
+^Ipre ^I= readl(host->base + S3C2410_SDIPRE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: drivers/mmc/host/s3cmci.c:73:
+^Icmdarg ^I= readl(host->base + S3C2410_SDICMDARG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: drivers/mmc/host/s3cmci.c:74:
+^Icmdcon ^I= readl(host->base + S3C2410_SDICMDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: drivers/mmc/host/s3cmci.c:75:
+^Icmdsta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: drivers/mmc/host/s3cmci.c:76:
+^Ir0 ^I= readl(host->base + S3C2410_SDIRSP0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/mmc/host/s3cmci.c:77:
+^Ir1 ^I= readl(host->base + S3C2410_SDIRSP1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: drivers/mmc/host/s3cmci.c:78:
+^Ir2 ^I= readl(host->base + S3C2410_SDIRSP2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: drivers/mmc/host/s3cmci.c:79:
+^Ir3 ^I= readl(host->base + S3C2410_SDIRSP3);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: drivers/mmc/host/s3cmci.c:80:
+^Itimer ^I= readl(host->base + S3C2410_SDITIMER);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#190: FILE: drivers/mmc/host/s3cmci.c:81:
+^Ibsize ^I= readl(host->base + S3C2410_SDIBSIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: drivers/mmc/host/s3cmci.c:82:
+^Idatcon ^I= readl(host->base + S3C2410_SDIDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/mmc/host/s3cmci.c:83:
+^Idatcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: drivers/mmc/host/s3cmci.c:84:
+^Idatsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: drivers/mmc/host/s3cmci.c:85:
+^Ifsta ^I= readl(host->base + S3C2410_SDIFSTA);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/mmc/host/s3cmci.c:89:
+	dbg(host, dbg_debug, "%s  CON:[%08x]  PRE:[%08x]  TMR:[%08x]\n",
+				prefix, con, pre, timer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/mmc/host/s3cmci.c:92:
+	dbg(host, dbg_debug, "%s CCON:[%08x] CARG:[%08x] CSTA:[%08x]\n",
+				prefix, cmdcon, cmdarg, cmdsta);

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: drivers/mmc/host/s3cmci.c:95:
+	dbg(host, dbg_debug, "%s DCON:[%08x] FSTA:[%08x]"
+			       " DSTA:[%08x] DCNT:[%08x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: drivers/mmc/host/s3cmci.c:99:
+	dbg(host, dbg_debug, "%s   R0:[%08x]   R1:[%08x]"
+			       "   R2:[%08x]   R3:[%08x]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/mmc/host/s3cmci.c:132:
+		dbg(host, dbglvl, "CMD[OK] %s R0:0x%08x\n",
+			host->dbgmsg_cmd, cmd->resp[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/mmc/host/s3cmci.c:135:
+		dbg(host, dbglvl, "CMD[ERR %i] %s Status:%s\n",
+			cmd->error, host->dbgmsg_cmd, host->status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/mmc/host/s3cmci.c:145:
+		dbg(host, dbglvl, "DAT[ERR %i] %s DCNT:0x%08x\n",
+			cmd->data->error, host->dbgmsg_dat,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#259: FILE: drivers/mmc/host/s3cmci.c:150:
+static void dbg_dumpcmd(struct s3cmci_host *host,
+			struct mmc_command *cmd, int fail) { }

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#262: FILE: drivers/mmc/host/s3cmci.c:153:
+static void prepare_dbgmsg(struct s3cmci_host *host, struct mmc_command *cmd,
+			   int stop) { }

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#306: FILE: drivers/mmc/host/s3cmci.c:197:
+	if ((!host->mrq) || (!host->mrq->data))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq->data'
#306: FILE: drivers/mmc/host/s3cmci.c:197:
+	if ((!host->mrq) || (!host->mrq->data))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/mmc/host/s3cmci.c:202:
+		dbg(host, dbg_debug, "no more buffers (%i/%i)\n",
+		      host->pio_sgptr, host->mrq->data->sg_len);

WARNING:SPLIT_STRING: quoted string split across lines
#363: FILE: drivers/mmc/host/s3cmci.c:254:
+				dbg(host, dbg_pio, "pio_read(): "
+				    "complete (no more data).\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/mmc/host/s3cmci.c:305:
+			res = get_data_buffer(host, &host->pio_words,
+							&host->pio_ptr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#427: FILE: drivers/mmc/host/s3cmci.c:318:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#444: FILE: drivers/mmc/host/s3cmci.c:335:
+	struct s3cmci_host *host = (struct s3cmci_host *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#446: FILE: drivers/mmc/host/s3cmci.c:337:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#457: FILE: drivers/mmc/host/s3cmci.c:348:
+			dbg(host, dbg_err, "unfinished %s "
+			    "- pio_count:[%u] pio_words:[%u]\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#472: FILE: drivers/mmc/host/s3cmci.c:363:
+ *   host->mrq ^I^I^Ipoints to current request$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_NONE'
#514: FILE: drivers/mmc/host/s3cmci.c:405:
+	if ((host->complete_what == COMPLETION_NONE) ||
+	    (host->complete_what == COMPLETION_FINALIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_FINALIZE'
#514: FILE: drivers/mmc/host/s3cmci.c:405:
+	if ((host->complete_what == COMPLETION_NONE) ||
+	    (host->complete_what == COMPLETION_FINALIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_WRITE'
#536: FILE: drivers/mmc/host/s3cmci.c:427:
+		if ((host->pio_active == XFER_WRITE) &&
+		    (mci_fsta & S3C2410_SDIFSTA_TFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#538: FILE: drivers/mmc/host/s3cmci.c:429:
+		    (mci_fsta & S3C2410_SDIFSTA_TFDET)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_READ'
#544: FILE: drivers/mmc/host/s3cmci.c:435:
+		if ((host->pio_active == XFER_READ) &&
+		    (mci_fsta & S3C2410_SDIFSTA_RFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#546: FILE: drivers/mmc/host/s3cmci.c:437:
+		    (mci_fsta & S3C2410_SDIFSTA_RFDET)) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#594: FILE: drivers/mmc/host/s3cmci.c:485:
+	/* errors handled after this point are only relevant
+	   when a data transfer is in progress */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: drivers/mmc/host/s3cmci.c:485:
+	   when a data transfer is in progress */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#669: FILE: drivers/mmc/host/s3cmci.c:560:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#673: FILE: drivers/mmc/host/s3cmci.c:564:
+ * ISR for the CardDetect Pin
+*/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#698: FILE: drivers/mmc/host/s3cmci.c:589:
+	BUG_ON(!host->mrq);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#699: FILE: drivers/mmc/host/s3cmci.c:590:
+	BUG_ON(!host->mrq->data);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#700: FILE: drivers/mmc/host/s3cmci.c:591:
+	BUG_ON(!host->dmatogo);

WARNING:SPLIT_STRING: quoted string split across lines
#706: FILE: drivers/mmc/host/s3cmci.c:597:
+		dbg(host, dbg_fail, "DMA FAILED: csta=0x%08x dsta=0x%08x "
+			"fsta=0x%08x dcnt:0x%08x result:0x%08x toGo:%u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#716: FILE: drivers/mmc/host/s3cmci.c:607:
+		dbg(host, dbg_dma, "DMA DONE  Size:%i DSTA:[%08x] "
+			"DCNT:[%08x] toGo:%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: drivers/mmc/host/s3cmci.c:614:
+	dbg(host, dbg_dma, "DMA FINISHED Size:%i DSTA:%08x DCNT:%08x\n",
+		size, mci_dsta, mci_dcnt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#732: FILE: drivers/mmc/host/s3cmci.c:623:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#739: FILE: drivers/mmc/host/s3cmci.c:630:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->error == 0'
#753: FILE: drivers/mmc/host/s3cmci.c:644:
+	if (cmd->data && (cmd->error == 0) &&
+	    (cmd->data->error == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data->error == 0'
#753: FILE: drivers/mmc/host/s3cmci.c:644:
+	if (cmd->data && (cmd->error == 0) &&
+	    (cmd->data->error == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->dma_complete'
#755: FILE: drivers/mmc/host/s3cmci.c:646:
+		if (host->dodma && (!host->dma_complete)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->cmd_is_stop'
#786: FILE: drivers/mmc/host/s3cmci.c:677:
+	if (cmd->data && cmd->data->stop && (!host->cmd_is_stop)) {

WARNING:TYPO_SPELLING: 'Calulate' may be misspelled - perhaps 'Calculate'?
#796: FILE: drivers/mmc/host/s3cmci.c:687:
+	/* Calulate the amout of bytes transfer if there was no error */
 	   ^^^^^^^^

WARNING:TYPO_SPELLING: 'amout' may be misspelled - perhaps 'amount'?
#796: FILE: drivers/mmc/host/s3cmci.c:687:
+	/* Calulate the amout of bytes transfer if there was no error */
 	                ^^^^^

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#804: FILE: drivers/mmc/host/s3cmci.c:695:
+	/* If we had an error while transfering data we flush the
 	                            ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#805: FILE: drivers/mmc/host/s3cmci.c:696:
+	 * DMA channel and the fifo to clear out any garbage. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#832: FILE: drivers/mmc/host/s3cmci.c:723:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/mmc/host/s3cmci.c:739:
+		s3c2410_dma_config(host->dma, 4,
+			(S3C2410_DCON_HWTRIG | S3C2410_DCON_CH0_SDI));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: drivers/mmc/host/s3cmci.c:748:
+static void s3cmci_send_command(struct s3cmci_host *host,
+					struct mmc_command *cmd)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#901: FILE: drivers/mmc/host/s3cmci.c:792:
+	       (S3C2410_SDIDSTA_TXDATAON | S3C2410_SDIDSTA_RXDATAON)) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#973: FILE: drivers/mmc/host/s3cmci.c:864:
+	BUG_ON((data->flags & BOTH_DIR) == BOTH_DIR);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#996: FILE: drivers/mmc/host/s3cmci.c:887:
+	BUG_ON((data->flags & BOTH_DIR) == BOTH_DIR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: drivers/mmc/host/s3cmci.c:905:
+		dbg(host, dbg_dma, "enqueue %i:%u@%u\n", i,
+			sg_dma_address(&data->sg[i]),

CHECK:SPACING: No space is necessary after a cast
#1017: FILE: drivers/mmc/host/s3cmci.c:908:
+		res = s3c2410_dma_enqueue(host->dma, (void *) host,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1042: FILE: drivers/mmc/host/s3cmci.c:933:
+	/* Clear command, data and fifo status registers
+	   Fifo clear only necessary on 2440, but doesn't hurt on 2410

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1130: FILE: drivers/mmc/host/s3cmci.c:1021:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1130: FILE: drivers/mmc/host/s3cmci.c:1021:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_ON'
#1154: FILE: drivers/mmc/host/s3cmci.c:1045:
+	if ((ios->power_mode == MMC_POWER_ON) ||
+	    (ios->power_mode == MMC_POWER_UP)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_UP'
#1154: FILE: drivers/mmc/host/s3cmci.c:1045:
+	if ((ios->power_mode == MMC_POWER_ON) ||
+	    (ios->power_mode == MMC_POWER_UP)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1157: FILE: drivers/mmc/host/s3cmci.c:1048:
+		dbg(host, dbg_conf, "running at %lukHz (requested: %ukHz).\n",
+			host->real_rate/1000, ios->clock/1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/mmc/host/s3cmci.c:1048:
+			host->real_rate/1000, ios->clock/1000);
 			               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/mmc/host/s3cmci.c:1048:
+			host->real_rate/1000, ios->clock/1000);
 			                                ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1178: FILE: drivers/mmc/host/s3cmci.c:1069:
+static int __devinit s3cmci_probe(struct platform_device *pdev, int is2440)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1191: FILE: drivers/mmc/host/s3cmci.c:1082:
+^Ihost->mmc ^I= mmc;$

CHECK:SPACING: No space is necessary after a cast
#1196: FILE: drivers/mmc/host/s3cmci.c:1087:
+	tasklet_init(&host->pio_tasklet, pio_tasklet, (unsigned long) host);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1209: FILE: drivers/mmc/host/s3cmci.c:1100:
+^Ihost->complete_what ^I= COMPLETION_NONE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1210: FILE: drivers/mmc/host/s3cmci.c:1101:
+^Ihost->pio_active ^I= XFER_NONE;$

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1218: FILE: drivers/mmc/host/s3cmci.c:1109:
+			"failed to get io memory region resouce.\n");
 			                                ^^^^^^^

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1225: FILE: drivers/mmc/host/s3cmci.c:1116:
+				       RESSIZE(host->mem), pdev->name);
 				       ^^^^^^^

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1233: FILE: drivers/mmc/host/s3cmci.c:1124:
+	host->base = ioremap(host->mem->start, RESSIZE(host->mem));
 	                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1242: FILE: drivers/mmc/host/s3cmci.c:1133:
+		dev_err(&pdev->dev, "failed to get interrupt resouce.\n");
 		                                             ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: drivers/mmc/host/s3cmci.c:1146:
+	 * ensure we don't lock the system with un-serviceable requests. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1291: FILE: drivers/mmc/host/s3cmci.c:1182:
+^Immc->ops ^I= &s3cmci_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1294: FILE: drivers/mmc/host/s3cmci.c:1185:
+^Immc->f_min ^I= host->clk_rate / (host->clk_div * 256);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1295: FILE: drivers/mmc/host/s3cmci.c:1186:
+^Immc->f_max ^I= host->clk_rate / host->clk_div;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1307: FILE: drivers/mmc/host/s3cmci.c:1198:
+	    (host->is2440?"2440":""),
 	                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1307: FILE: drivers/mmc/host/s3cmci.c:1198:
+	    (host->is2440?"2440":""),
 	                        ^

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1337: FILE: drivers/mmc/host/s3cmci.c:1228:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1345: FILE: drivers/mmc/host/s3cmci.c:1236:
+static int __devexit s3cmci_remove(struct platform_device *pdev)

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1361: FILE: drivers/mmc/host/s3cmci.c:1252:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1367: FILE: drivers/mmc/host/s3cmci.c:1258:
+static int __devinit s3cmci_probe_2410(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1372: FILE: drivers/mmc/host/s3cmci.c:1263:
+static int __devinit s3cmci_probe_2412(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1377: FILE: drivers/mmc/host/s3cmci.c:1268:
+static int __devinit s3cmci_probe_2440(struct platform_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1403: FILE: drivers/mmc/host/s3cmci.c:1294:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1431: FILE: drivers/mmc/host/s3cmci.c:1322:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1458: FILE: drivers/mmc/host/s3cmci.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1496: FILE: drivers/mmc/host/s3cmci.h:39:
+	unsigned		sdiimsk;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1497: FILE: drivers/mmc/host/s3cmci.h:40:
+	unsigned		sdidata;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1504: FILE: drivers/mmc/host/s3cmci.h:47:
+	spinlock_t		complete_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1520: FILE: drivers/mmc/host/s3cmci.h:63:
+^Ichar ^I^I^Idbgmsg_cmd[301];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1521: FILE: drivers/mmc/host/s3cmci.h:64:
+^Ichar ^I^I^Idbgmsg_dat[301];$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 64 warnings, 70 checks, 1492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260834.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
