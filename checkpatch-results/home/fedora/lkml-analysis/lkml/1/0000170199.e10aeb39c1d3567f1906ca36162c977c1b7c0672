CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/mips/lasat/sysctl.c:75:
+int proc_dolasatint(ctl_table *table, int write,
 		       void *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: arch/mips/lasat/sysctl.c:93:
+int proc_dolasatrtc(ctl_table *table, int write,
 		       void *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/mips/lasat/sysctl.c:154:
+int proc_lasat_ip(ctl_table *table, int write,
 		       void *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: arch/mips/lasat/sysctl.c:231:
+int proc_lasat_prid(ctl_table *table, int write,
 		       void *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: arch/s390/appldata/appldata_base.c:244:
+appldata_timer_handler(ctl_table *ctl, int write,
 			   void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/s390/appldata/appldata_base.c:286:
+appldata_interval_handler(ctl_table *ctl, int write,
 			   void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: arch/s390/appldata/appldata_base.c:332:
+appldata_generic_handler(ctl_table *ctl, int write,
 			   void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/s390/kernel/debug.c:889:
+s390dbf_procactive(ctl_table *table, int write,
                      void __user *buffer, size_t *lenp, loff_t *ppos)

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#318: FILE: arch/x86/include/asm/nmi.h:43:
+extern int proc_nmi_enabled(struct ctl_table *, int ,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: arch/x86/include/asm/nmi.h:44:
+extern int proc_nmi_enabled(struct ctl_table *, int ,
 			void __user *, size_t *, loff_t *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/x86/kernel/nmi.c:516:
+int proc_nmi_enabled(struct ctl_table *table, int write,
 			void __user *buffer, size_t *length, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/cdrom/cdrom.c:3416:
+static int cdrom_sysctl_info(ctl_table *ctl, int write,
                            void __user *buffer, size_t *lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#426: FILE: drivers/net/wireless/arlan-proc.c:405:
+static int arlan_sysctl_info(ctl_table * ctl, int write,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/net/wireless/arlan-proc.c:406:
+static int arlan_sysctl_info(ctl_table * ctl, int write,
 		      void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/net/wireless/arlan-proc.c:642:
+static int arlan_sysctl_info161719(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/net/wireless/arlan-proc.c:643:
+static int arlan_sysctl_info161719(ctl_table * ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: drivers/net/wireless/arlan-proc.c:676:
+static int arlan_sysctl_infotxRing(ctl_table * ctl, int write,

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_infotxRing>
#458: FILE: drivers/net/wireless/arlan-proc.c:676:
+static int arlan_sysctl_infotxRing(ctl_table * ctl, int write,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: drivers/net/wireless/arlan-proc.c:677:
+static int arlan_sysctl_infotxRing(ctl_table * ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#472: FILE: drivers/net/wireless/arlan-proc.c:705:
+static int arlan_sysctl_inforxRing(ctl_table * ctl, int write,

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_inforxRing>
#472: FILE: drivers/net/wireless/arlan-proc.c:705:
+static int arlan_sysctl_inforxRing(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/net/wireless/arlan-proc.c:706:
+static int arlan_sysctl_inforxRing(ctl_table * ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#486: FILE: drivers/net/wireless/arlan-proc.c:733:
+static int arlan_sysctl_info18(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/net/wireless/arlan-proc.c:734:
+static int arlan_sysctl_info18(ctl_table * ctl, int write,
 			void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#504: FILE: drivers/net/wireless/arlan-proc.c:769:
+static int arlan_configure(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/net/wireless/arlan-proc.c:770:
+static int arlan_configure(ctl_table * ctl, int write,
 		    void __user *buffer, size_t * lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#517: FILE: drivers/net/wireless/arlan-proc.c:794:
+static int arlan_sysctl_reset(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/net/wireless/arlan-proc.c:795:
+static int arlan_sysctl_reset(ctl_table * ctl, int write,
 		       void __user *buffer, size_t * lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/parport/procfs.c:35:
+static int do_active_device(ctl_table *table, int write,
 		      void __user *result, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: fs/file_table.c:77:
+int proc_nr_files(ctl_table *table, int write,
                      void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: fs/file_table.c:84:
+int proc_nr_files(ctl_table *table, int write,
                      void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#700: FILE: include/linux/hugetlb.h:20:
+int hugetlb_sysctl_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#700: FILE: include/linux/hugetlb.h:20:
+int hugetlb_sysctl_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#700: FILE: include/linux/hugetlb.h:20:
+int hugetlb_sysctl_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#700: FILE: include/linux/hugetlb.h:20:
+int hugetlb_sysctl_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#700: FILE: include/linux/hugetlb.h:20:
+int hugetlb_sysctl_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#701: FILE: include/linux/hugetlb.h:21:
+int hugetlb_overcommit_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#701: FILE: include/linux/hugetlb.h:21:
+int hugetlb_overcommit_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#701: FILE: include/linux/hugetlb.h:21:
+int hugetlb_overcommit_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#701: FILE: include/linux/hugetlb.h:21:
+int hugetlb_overcommit_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#701: FILE: include/linux/hugetlb.h:21:
+int hugetlb_overcommit_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#702: FILE: include/linux/hugetlb.h:22:
+int hugetlb_treat_movable_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#702: FILE: include/linux/hugetlb.h:22:
+int hugetlb_treat_movable_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#702: FILE: include/linux/hugetlb.h:22:
+int hugetlb_treat_movable_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#702: FILE: include/linux/hugetlb.h:22:
+int hugetlb_treat_movable_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#702: FILE: include/linux/hugetlb.h:22:
+int hugetlb_treat_movable_handler(struct ctl_table *, int, void __user *, size_t *, loff_t *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: include/linux/mm.h:1281:
+int drop_caches_sysctl_handler(struct ctl_table *, int,
 					void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#725: FILE: include/linux/mmzone.h:749:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#725: FILE: include/linux/mmzone.h:749:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#725: FILE: include/linux/mmzone.h:749:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#725: FILE: include/linux/mmzone.h:749:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#725: FILE: include/linux/mmzone.h:749:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: include/linux/mmzone.h:750:
+int min_free_kbytes_sysctl_handler(struct ctl_table *, int,
 					void __user *, size_t *, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#729: FILE: include/linux/mmzone.h:752:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#729: FILE: include/linux/mmzone.h:752:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#729: FILE: include/linux/mmzone.h:752:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#729: FILE: include/linux/mmzone.h:752:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#729: FILE: include/linux/mmzone.h:752:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#732: FILE: include/linux/mmzone.h:754:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#732: FILE: include/linux/mmzone.h:754:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#732: FILE: include/linux/mmzone.h:754:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#732: FILE: include/linux/mmzone.h:754:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#732: FILE: include/linux/mmzone.h:754:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: include/linux/mmzone.h:755:
+int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int,
 					void __user *, size_t *, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#782: FILE: include/linux/swap.h:243:
+extern int scan_unevictable_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: include/linux/swap.h:244:
+extern int scan_unevictable_handler(struct ctl_table *, int,
 					void __user *, size_t *, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#805: FILE: include/linux/sysctl.h:981:
+extern int proc_dostring(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#808: FILE: include/linux/sysctl.h:983:
+extern int proc_dointvec(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#811: FILE: include/linux/sysctl.h:985:
+extern int proc_dointvec_minmax(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#814: FILE: include/linux/sysctl.h:987:
+extern int proc_dointvec_jiffies(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#817: FILE: include/linux/sysctl.h:989:
+extern int proc_dointvec_userhz_jiffies(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#820: FILE: include/linux/sysctl.h:991:
+extern int proc_dointvec_ms_jiffies(struct ctl_table *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#823: FILE: include/linux/sysctl.h:993:
+extern int proc_doulongvec_minmax(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#856: FILE: include/linux/writeback.h:134:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#856: FILE: include/linux/writeback.h:134:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#856: FILE: include/linux/writeback.h:134:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#856: FILE: include/linux/writeback.h:134:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#856: FILE: include/linux/writeback.h:134:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: ipc/ipc_sysctl.c:31:
+static int proc_ipc_dointvec(ctl_table *table, int write,
 	void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1015: FILE: kernel/sysctl.c:156:
+static int proc_do_cad_pid(struct ctl_table *table, int write,
 		  void __user *buffer, size_t *lenp, loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1018: FILE: kernel/sysctl.c:158:
+static int proc_taint(struct ctl_table *table, int write,
 			       void __user *buffer, size_t *lenp, loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1066: FILE: kernel/sysctl.c:2302:
+static int do_proc_dointvec(struct ctl_table *table, int write,
 		  void __user *buffer, size_t *lenp, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: kernel/sysctl.c:2325:
+int proc_dointvec(struct ctl_table *table, int write,
 		     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: kernel/sysctl.c:2327:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: kernel/sysctl.c:2327:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: kernel/sysctl.c:2327:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: kernel/sysctl.c:2327:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: kernel/sysctl.c:2327:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1103: FILE: kernel/sysctl.c:2336:
+static int proc_taint(struct ctl_table *table, int write,
 			       void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1129: FILE: kernel/sysctl.c:2412:
+int proc_dointvec_minmax(struct ctl_table *table, int write,
 		  void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: kernel/sysctl.c:2555:
+    return do_proc_doulongvec_minmax(table, write, buffer, lenp, ppos, 1l, 1l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: kernel/sysctl.c:2579:
+    return do_proc_doulongvec_minmax(table, write, buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: kernel/sysctl.c:2669:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: kernel/sysctl.c:2669:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: kernel/sysctl.c:2669:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: kernel/sysctl.c:2669:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: kernel/sysctl.c:2669:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: kernel/sysctl.c:2691:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1239: FILE: kernel/sysctl.c:2691:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1239: FILE: kernel/sysctl.c:2691:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1239: FILE: kernel/sysctl.c:2691:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1239: FILE: kernel/sysctl.c:2691:
+    return do_proc_dointvec(table,write,buffer,lenp,ppos,
                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: kernel/sysctl.c:2755:
+int proc_dointvec_minmax(struct ctl_table *table, int write,
 		    void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: kernel/sysctl.c:2761:
+int proc_dointvec_jiffies(struct ctl_table *table, int write,
 		    void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: kernel/sysctl.c:2767:
+int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write,
 		    void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1326: FILE: kernel/sysctl.c:2779:
+int proc_doulongvec_minmax(struct ctl_table *table, int write,
 		    void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1383: FILE: kernel/utsname_sysctl.c:46:
+static int proc_do_uts_string(ctl_table *table, int write,
 		  void __user *buffer, size_t *lenp, loff_t *ppos)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1390: FILE: kernel/utsname_sysctl.c:52:
+	r = proc_dostring(&uts_table,write,buffer,lenp, ppos);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1390: FILE: kernel/utsname_sysctl.c:52:
+	r = proc_dostring(&uts_table,write,buffer,lenp, ppos);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1390: FILE: kernel/utsname_sysctl.c:52:
+	r = proc_dostring(&uts_table,write,buffer,lenp, ppos);
 	                                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1631: FILE: net/bridge/br_netfilter.c:941:
+int brnf_sysctl_call_tables(ctl_table * ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1649: FILE: net/decnet/dn_dev.c:168:
+static int dn_forwarding_proc(ctl_table *, int,
 			void __user *, size_t *, loff_t *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: net/ipv6/addrconf.c:3977:
+int addrconf_sysctl_forward(ctl_table *ctl, int write,
 			   void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1864: FILE: net/ipv6/ndisc.c:1739:
+int ndisc_ifinfo_sysctl_change(struct ctl_table *ctl, int write, void __user *buffer, size_t *lenp, loff_t *ppos)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: net/irda/irsysctl.c:94:
+static int do_discovery(ctl_table *table, int write,
                     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: net/irda/irsysctl.c:98:
+       ret = proc_dointvec(table, write, buffer, lenp, ppos);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1983: FILE: net/phonet/sysctl.c:60:
+static int proc_local_port_range(ctl_table *table, int write,
 				void __user *buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2012: FILE: net/sunrpc/sysctl.c:75:
+proc_dodebug(ctl_table *table, int write,
 				void __user *buffer, size_t *lenp, loff_t *ppos)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170199.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 24 errors, 87 warnings, 53 checks, 1671 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170199.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
