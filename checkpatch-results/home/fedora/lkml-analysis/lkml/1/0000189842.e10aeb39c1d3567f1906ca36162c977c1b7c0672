WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: drivers/block/dst/dcore.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#96: FILE: drivers/block/dst/dcore.c:43:
+static char dst_name[] = "Dementianting goldfish";

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/block/dst/dcore.c:63:
+^I.name ^I^I= "dst",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: drivers/block/dst/dcore.c:64:
+^I.match ^I^I= &dst_dev_match,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: drivers/block/dst/dcore.c:75:
+^I.bus ^I^I= &dst_dev_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: drivers/block/dst/dcore.c:76:
+^I.release ^I= &dst_node_release$

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#181: FILE: drivers/block/dst/dcore.c:128:
+static struct block_device_operations dst_blk_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#211: FILE: drivers/block/dst/dcore.c:158:
+		printk(KERN_INFO "DST node %s attached read-only.\n", n->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/block/dst/dcore.c:192:
+static ssize_t dst_show_size(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/block/dst/dcore.c:203:
+static ssize_t dst_show_local(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/block/dst/dcore.c:215:
+static ssize_t dst_show_type(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/block/dst/dcore.c:222:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&info->net.addr;
+		return sprintf(buf, "%u.%u.%u.%u:%d\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: drivers/block/dst/dcore.c:226:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&info->net.addr;
+		return sprintf(buf,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#293: FILE: drivers/block/dst/dcore.c:240:
+		for (i=0; i<addrlen; ++i) {
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#293: FILE: drivers/block/dst/dcore.c:240:
+		for (i=0; i<addrlen; ++i) {
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#318: FILE: drivers/block/dst/dcore.c:265:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#318: FILE: drivers/block/dst/dcore.c:265:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/block/dst/dcore.c:267:
+		err = device_create_file(&n->info->device,
+				&dst_node_attrs[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/block/dst/dcore.c:276:
+		device_remove_file(&n->info->device,
+				&dst_node_attrs[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#338: FILE: drivers/block/dst/dcore.c:285:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#338: FILE: drivers/block/dst/dcore.c:285:
+	for (i=0; i<ARRAY_SIZE(dst_node_attrs); ++i)
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/block/dst/dcore.c:287:
+		device_remove_file(&n->info->device,
+				&dst_node_attrs[i]);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n->info)...) over kzalloc(sizeof(struct dst_info)...)
#360: FILE: drivers/block/dst/dcore.c:307:
+	n->info = kzalloc(sizeof(struct dst_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/block/dst/dcore.c:318:
+		dprintk(KERN_ERR "Failed to register node '%s', err: %d.\n",
+				n->name, err);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#402: FILE: drivers/block/dst/dcore.c:349:
+	unsigned hash = dst_hash(n->name, sizeof(n->name));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#433: FILE: drivers/block/dst/dcore.c:380:
+		blkdev_put(n->bdev, FMODE_READ|FMODE_WRITE);
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/block/dst/dcore.c:420:
+	dprintk("%s: n: %p, refcnt: %d.\n",
+			__func__, n, atomic_read(&n->refcnt));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#499: FILE: drivers/block/dst/dcore.c:446:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#502: FILE: drivers/block/dst/dcore.c:449:
+	err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#506: FILE: drivers/block/dst/dcore.c:453:
+	inode = nd.path.dentry->d_inode;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#520: FILE: drivers/block/dst/dcore.c:467:
+	path_put(&nd.path);
 	          ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/block/dst/dcore.c:477:
+static int dst_setup_export(struct dst_node *n, struct dst_ctl *ctl,
+		struct dst_export_ctl *le)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#541: FILE: drivers/block/dst/dcore.c:488:
+	n->bdev = open_by_devnum(dev, FMODE_READ|FMODE_WRITE);
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#558: FILE: drivers/block/dst/dcore.c:505:
+	blkdev_put(n->bdev, FMODE_READ|FMODE_WRITE);
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/block/dst/dcore.c:527:
+static struct dst_node *dst_alloc_node(struct dst_ctl *ctl,
+		int (*start)(struct dst_node *),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct dst_node)...)
#586: FILE: drivers/block/dst/dcore.c:533:
+	n = kzalloc(sizeof(struct dst_node), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: drivers/block/dst/dcore.c:575:
+	n->pool = thread_pool_create(num, n->name, dst_thread_network_init,
+			dst_thread_network_cleanup, n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: drivers/block/dst/dcore.c:629:
+static int dst_add_remote(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/block/dst/dcore.c:662:
+static int dst_add_export(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: drivers/block/dst/dcore.c:692:
+	printk(KERN_INFO "STOPPED name: '%s', size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/block/dst/dcore.c:693:
+	printk(KERN_INFO "STOPPED name: '%s', size: %llu.\n",
+			n->name, n->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/block/dst/dcore.c:730:
+static int dst_del_node(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: drivers/block/dst/dcore.c:742:
+static int dst_crypto_init(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#816: FILE: drivers/block/dst/dcore.c:763:
+static int dst_security_init(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct dst_secure)...)
#826: FILE: drivers/block/dst/dcore.c:773:
+	s = kmalloc(sizeof(struct dst_secure), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/block/dst/dcore.c:790:
+static int dst_start_node(struct dst_node *n, struct dst_ctl *ctl,
+		void *data, unsigned int size)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#857: FILE: drivers/block/dst/dcore.c:804:
+	printk(KERN_INFO "STARTED name: '%s', size: %llu.\n", n->name, n->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: drivers/block/dst/dcore.c:892:
+	dst_hashtable = kcalloc(dst_hashtable_size, sizeof(struct list_head),
+			GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#949: FILE: drivers/block/dst/dcore.c:896:
+	for (i=0; i<dst_hashtable_size; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#949: FILE: drivers/block/dst/dcore.c:896:
+	for (i=0; i<dst_hashtable_size; ++i)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#960: FILE: drivers/block/dst/dcore.c:907:
+	for (i=0; i<dst_hashtable_size; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#960: FILE: drivers/block/dst/dcore.c:907:
+	for (i=0; i<dst_hashtable_size; ++i) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#995: FILE: drivers/block/dst/dcore.c:942:
+	printk(KERN_INFO "Distributed storage, '%s' release.\n", dst_name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1048: FILE: include/linux/dst.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1089: FILE: include/linux/dst.h:42:
+struct dst_ctl
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1108: FILE: include/linux/dst.h:61:
+struct dst_ctl_ack
+{

WARNING:TYPO_SPELLING: 'Unfortunaltely' may be misspelled - perhaps 'Unfortunately'?
#1115: FILE: include/linux/dst.h:68:
+ * Unfortunaltely socket address structure is not exported to userspace
    ^^^^^^^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1131: FILE: include/linux/dst.h:84:
+struct dst_network_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1141: FILE: include/linux/dst.h:94:
+struct dst_crypto_ctl
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1155: FILE: include/linux/dst.h:108:
+#define DST_PERM_READ		(1<<0)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1155: FILE: include/linux/dst.h:108:
+#define DST_PERM_READ		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1156: FILE: include/linux/dst.h:109:
+#define DST_PERM_WRITE		(1<<1)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1156: FILE: include/linux/dst.h:109:
+#define DST_PERM_WRITE		(1<<1)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1165: FILE: include/linux/dst.h:118:
+struct dst_secure_user
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1175: FILE: include/linux/dst.h:128:
+struct dst_export_ctl
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1181: FILE: include/linux/dst.h:134:
+^IDST_CFG^I= 1, ^I^I/* Request remote configuration */$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1189: FILE: include/linux/dst.h:142:
+struct dst_cmd
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1243: FILE: include/linux/dst.h:196:
+#define dprintk(f, a...) printk(KERN_NOTICE f, ##a)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#1245: FILE: include/linux/dst.h:198:
+static inline void __attribute__ ((format (printf, 1, 2)))

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1252: FILE: include/linux/dst.h:205:
+struct dst_trans
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1273: FILE: include/linux/dst.h:226:
+	 * Well, computers does not speak, they have unique id instead */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1284: FILE: include/linux/dst.h:237:
+struct dst_crypto_engine
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1312: FILE: include/linux/dst.h:265:
+struct dst_state
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1317: FILE: include/linux/dst.h:270:
+^Iwait_queue_t ^I^Iwait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1318: FILE: include/linux/dst.h:271:
+^Iwait_queue_head_t ^I*whead;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1320: FILE: include/linux/dst.h:273:
+^Iwait_queue_head_t ^Ithread_wait;$

WARNING:SPACING: Unnecessary space before function pointer name
#1332: FILE: include/linux/dst.h:285:
+	void			(* cleanup)(struct dst_state *st);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1332: FILE: include/linux/dst.h:285:
+	void			(* cleanup)(struct dst_state *st);
 	    			 ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1336: FILE: include/linux/dst.h:289:
+	spinlock_t		request_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1360: FILE: include/linux/dst.h:313:
+struct dst_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1375: FILE: include/linux/dst.h:328:
+struct dst_node
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1384: FILE: include/linux/dst.h:337:
+	 * Only valid for exporting nodes */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1385: FILE: include/linux/dst.h:338:
+^Istruct block_device ^I*bdev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: include/linux/dst.h:356:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1409: FILE: include/linux/dst.h:362:
+	struct mutex		security_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1419: FILE: include/linux/dst.h:372:
+^Iint ^I^I^I(*start)(struct dst_node *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_node *' should also have an identifier name
#1419: FILE: include/linux/dst.h:372:
+	int 			(*start)(struct dst_node *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1441: FILE: include/linux/dst.h:394:
+	struct mutex		trans_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1452: FILE: include/linux/dst.h:405:
+^Istruct delayed_work ^Itrans_work;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1459: FILE: include/linux/dst.h:412:
+struct dst_secure
+{

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1471: FILE: include/linux/dst.h:424:
+	BUG_ON(atomic_read(&st->refcnt) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1529: FILE: include/linux/dst.h:482:
+int dst_data_send_header(struct socket *sock,
+		void *data, unsigned int size, int more);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1543: FILE: include/linux/dst.h:496:
+struct dst_export_priv
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1564: FILE: include/linux/dst.h:517:
+static inline void dst_bio_to_cmd(struct bio *bio, struct dst_cmd *cmd,
+		u32 command, u64 id)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1601: FILE: include/linux/dst.h:554:
+struct thread_pool
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1603: FILE: include/linux/dst.h:556:
+	struct mutex		thread_lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1612: FILE: include/linux/dst.h:565:
+int thread_pool_add_worker(struct thread_pool *p,
+		char *name,

WARNING:SPACING: Unnecessary space before function pointer name
#1614: FILE: include/linux/dst.h:567:
+		void *(* init)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1614: FILE: include/linux/dst.h:567:
+		void *(* init)(void *data),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#1615: FILE: include/linux/dst.h:568:
+		void (* cleanup)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1615: FILE: include/linux/dst.h:568:
+		void (* cleanup)(void *data),
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1620: FILE: include/linux/dst.h:573:
+struct thread_pool *thread_pool_create(int num, char *name,
+		void *(* init)(void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#1620: FILE: include/linux/dst.h:573:
+		void *(* init)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1620: FILE: include/linux/dst.h:573:
+		void *(* init)(void *data),
 		       ^

WARNING:SPACING: Unnecessary space before function pointer name
#1621: FILE: include/linux/dst.h:574:
+		void (* cleanup)(void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1621: FILE: include/linux/dst.h:574:
+		void (* cleanup)(void *data),
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1625: FILE: include/linux/dst.h:578:
+int thread_pool_schedule(struct thread_pool *p,
+		int (* setup)(void *stored_private, void *setup_data),

WARNING:SPACING: Unnecessary space before function pointer name
#1625: FILE: include/linux/dst.h:578:
+		int (* setup)(void *stored_private, void *setup_data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1625: FILE: include/linux/dst.h:578:
+		int (* setup)(void *stored_private, void *setup_data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#1626: FILE: include/linux/dst.h:579:
+		int (* action)(void *stored_private, void *setup_data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1626: FILE: include/linux/dst.h:579:
+		int (* action)(void *stored_private, void *setup_data),
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1629: FILE: include/linux/dst.h:582:
+int thread_pool_schedule_private(struct thread_pool *p,
+		int (* setup)(void *private, void *data),

WARNING:SPACING: Unnecessary space before function pointer name
#1629: FILE: include/linux/dst.h:582:
+		int (* setup)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1629: FILE: include/linux/dst.h:582:
+		int (* setup)(void *private, void *data),
 		     ^

WARNING:SPACING: Unnecessary space before function pointer name
#1630: FILE: include/linux/dst.h:583:
+		int (* action)(void *private, void *data),

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1630: FILE: include/linux/dst.h:583:
+		int (* action)(void *private, void *data),
 		     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 35 errors, 43 warnings, 39 checks, 1570 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
