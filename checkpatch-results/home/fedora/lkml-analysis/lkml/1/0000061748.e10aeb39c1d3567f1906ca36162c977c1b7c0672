CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#68: FILE: drivers/block/aoe/aoe.h:82:
+	DEVFL_BARFAIL = (1<<7), /* barrier failed */
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#143: FILE: drivers/block/aoe/aoeblk.c:174:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: drivers/block/aoe/aoeblk.c:212:
+	int fail;
+	spin_lock_irq(&d->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#214: FILE: drivers/block/aoe/aoeblk.c:254:
+		if (flush_failed(d, bio)) {
[...]
+		} else if (bio->bi_size == 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#361: FILE: drivers/block/aoe/aoecmd.c:273:
+	if (buf->bio)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: drivers/block/aoe/aoecmd.c:275:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#395: FILE: drivers/block/aoe/aoecmd.c:615:
+	printk(KERN_CRIT "e%ld.%ld: nbufs(%d) nout(%d)\n  bio(%p) sector(%16llx) flags(%8lx)",

CHECK:SPACING: No space is necessary after a cast
#396: FILE: drivers/block/aoe/aoecmd.c:616:
+	       (long) d->aoemajor, (long) d->aoeminor,

CHECK:SPACING: No space is necessary after a cast
#398: FILE: drivers/block/aoe/aoecmd.c:618:
+	       (void *) bio,

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/block/aoe/aoecmd.c:619:
+	       (unsigned long long) bio->bi_sector,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#448: FILE: drivers/block/aoe/aoecmd.c:905:
+		if (buf->flags & BUFFL_FAIL
+		&& (!buf->bio || buf->bio == d->barrier))

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/block/aoe/aoecmd.c:908:
+			complete((struct completion *) buf->bv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/block/aoe/aoecmd.c:912:
+			diskstats(d->gd,
+				buf->bio, jiffies - buf->stime, buf->sector);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#478: FILE: drivers/block/aoe/aoecmd.c:1145:
+		printk(KERN_CRIT "aoe: aoecmd_ata_flush\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_flush', this function's name, in a string
#478: FILE: drivers/block/aoe/aoecmd.c:1145:
+		printk(KERN_CRIT "aoe: aoecmd_ata_flush\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#481: FILE: drivers/block/aoe/aoecmd.c:1148:
+	if (buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/block/aoe/aoecmd.c:1149:
+		printk(KERN_INFO "aoe: buf allocation failure\n");

CHECK:SPACING: No space is necessary after a cast
#489: FILE: drivers/block/aoe/aoecmd.c:1156:
+	buf->bv = (struct bio_vec *) work;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#494: FILE: drivers/block/aoe/aoecmd.c:1161:
+		printk(KERN_INFO "aoe: device e%ld.%d is not up\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/block/aoe/aoecmd.c:1162:
+		printk(KERN_INFO "aoe: device e%ld.%d is not up\n",
+			d->aoemajor, d->aoeminor);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000061748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 13 checks, 436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000061748.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
