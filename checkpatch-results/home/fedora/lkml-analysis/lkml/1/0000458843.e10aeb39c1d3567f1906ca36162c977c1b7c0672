WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Implementation details can be found at http://jengelh.hopto.org/p/chaostables/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/netfilter/x_tables.h:295:
+extern struct xt_match *xt_request_find_match(int af, const char *name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: include/linux/netfilter/x_tables.h:296:
+extern struct xt_match *xt_request_find_match(int af, const char *name,
+						u8 revision);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: include/linux/netfilter/xt_CHAOS.h:1:
+#ifndef _LINUX_XT_CHAOS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: include/linux/netfilter/xt_portscan.h:1:
+#ifndef _LINUX_XT_PORTSCAN_H

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#107: FILE: net/netfilter/Kconfig:289:
+config NETFILTER_XT_TARGET_CHAOS
+	tristate '"CHAOS" target support'
+	depends on NETFILTER_XTABLES
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#111: FILE: net/netfilter/Kconfig:293:
+config NETFILTER_XT_TARGET_DELUDE
+	tristate '"DELUDE" target support'
+	depends on NETFILTER_XTABLES
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#122: FILE: net/netfilter/Kconfig:573:
+config NETFILTER_XT_MATCH_PORTSCAN
+	tristate '"portscan" match support'
+	depends on NETFILTER_XTABLES && NF_CONNTRACK
+

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: net/netfilter/x_tables.c:215:
+	if(IS_ERR(match) || match == NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!match"
#166: FILE: net/netfilter/x_tables.c:215:
+	if(IS_ERR(match) || match == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#180: FILE: net/netfilter/xt_CHAOS.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#181: FILE: net/netfilter/xt_CHAOS.c:2:
+/*
+	CHAOS target for netfilter

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#204: FILE: net/netfilter/xt_CHAOS.c:25:
+module_param(reject_percentage, uint, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#205: FILE: net/netfilter/xt_CHAOS.c:26:
+module_param(delude_percentage, uint, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: net/netfilter/xt_CHAOS.c:46:
+static void xt_chaos_total(const struct xt_chaos_info *info,
+    struct sk_buff **pskb, const struct net_device *in,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: net/netfilter/xt_CHAOS.c:46:
+    struct sk_buff **pskb, const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: net/netfilter/xt_CHAOS.c:47:
+    const struct net_device *out, unsigned int hooknum)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: net/netfilter/xt_CHAOS.c:55:
+^I                    offset, protoff, &hotdrop);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: net/netfilter/xt_CHAOS.c:56:
+	if(!ret || hotdrop || (unsigned int)net_random() > delude_percentage)

WARNING:RETURN_VOID: void function return statements are not generally useful
#241: FILE: net/netfilter/xt_CHAOS.c:62:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: net/netfilter/xt_CHAOS.c:65:
+static unsigned int xt_chaos_target(struct sk_buff **pskb,
+    const struct net_device *in, const struct net_device *out,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: net/netfilter/xt_CHAOS.c:65:
+    const struct net_device *in, const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: net/netfilter/xt_CHAOS.c:66:
+    unsigned int hooknum, const struct xt_target *target, const void *targinfo)$

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: net/netfilter/xt_CHAOS.c:77:
+	if((unsigned int)net_random() <= reject_percentage)

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: net/netfilter/xt_CHAOS.c:82:
+	if((*pskb)->nh.iph->protocol == IPPROTO_TCP &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: net/netfilter/xt_CHAOS.c:83:
+	if((*pskb)->nh.iph->protocol == IPPROTO_TCP &&
+	  info->variant != XTCHAOS_NORMAL && hooknum != NF_IP_LOCAL_OUT)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: net/netfilter/xt_CHAOS.c:90:
+static int xt_chaos_checkentry(const char *tablename, const void *entry,
+    const struct xt_target *target, void *targinfo, unsigned int hook_mask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: net/netfilter/xt_CHAOS.c:90:
+    const struct xt_target *target, void *targinfo, unsigned int hook_mask)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: net/netfilter/xt_CHAOS.c:93:
+	const struct xt_chaos_info *info = targinfo;
+	if(info->variant == XTCHAOS_DELUDE && !have_delude) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: net/netfilter/xt_CHAOS.c:93:
+	if(info->variant == XTCHAOS_DELUDE && !have_delude) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#273: FILE: net/netfilter/xt_CHAOS.c:94:
+		printk(KERN_WARNING PFX "Error: Cannot use --delude when "

WARNING:SPLIT_STRING: quoted string split across lines
#274: FILE: net/netfilter/xt_CHAOS.c:95:
+		printk(KERN_WARNING PFX "Error: Cannot use --delude when "
+		       "DELUDE module not available\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#277: FILE: net/netfilter/xt_CHAOS.c:98:
+	if(info->variant == XTCHAOS_TARPIT && !have_tarpit) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#278: FILE: net/netfilter/xt_CHAOS.c:99:
+		printk(KERN_WARNING PFX "Error: Cannot use --tarpit when "

WARNING:SPLIT_STRING: quoted string split across lines
#279: FILE: net/netfilter/xt_CHAOS.c:100:
+		printk(KERN_WARNING PFX "Error: Cannot use --tarpit when "
+		       "TARPIT module not available\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: net/netfilter/xt_CHAOS.c:113:
+^I              (1 << NF_IP_LOCAL_OUT),$

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: net/netfilter/xt_CHAOS.c:123:
+	if(xm_tcp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xm_tcp"
#302: FILE: net/netfilter/xt_CHAOS.c:123:
+	if(xm_tcp == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#303: FILE: net/netfilter/xt_CHAOS.c:124:
+		printk(KERN_WARNING PFX "Error: Could not find or load "

WARNING:SPLIT_STRING: quoted string split across lines
#304: FILE: net/netfilter/xt_CHAOS.c:125:
+		printk(KERN_WARNING PFX "Error: Could not find or load "
+		       "\"tcp\" match\n");

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: net/netfilter/xt_CHAOS.c:130:
+	if(xt_reject == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xt_reject"
#309: FILE: net/netfilter/xt_CHAOS.c:130:
+	if(xt_reject == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#310: FILE: net/netfilter/xt_CHAOS.c:131:
+		printk(KERN_WARNING PFX "Error: Could not find or load "

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: net/netfilter/xt_CHAOS.c:132:
+		printk(KERN_WARNING PFX "Error: Could not find or load "
+		       "\"REJECT\" target\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "xt_tarpit"
#316: FILE: net/netfilter/xt_CHAOS.c:137:
+	have_tarpit = xt_tarpit != NULL;

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: net/netfilter/xt_CHAOS.c:138:
+	if(!have_tarpit)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#318: FILE: net/netfilter/xt_CHAOS.c:139:
+		printk(KERN_WARNING PFX "Warning: Could not find or load "

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: net/netfilter/xt_CHAOS.c:140:
+		printk(KERN_WARNING PFX "Warning: Could not find or load "
+		       "\"TARPIT\" target\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "xt_delude"
#322: FILE: net/netfilter/xt_CHAOS.c:143:
+	have_delude = xt_delude != NULL;

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: net/netfilter/xt_CHAOS.c:144:
+	if(!have_delude)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#324: FILE: net/netfilter/xt_CHAOS.c:145:
+		printk(KERN_WARNING PFX "Warning: Could not find or load "

WARNING:SPLIT_STRING: quoted string split across lines
#325: FILE: net/netfilter/xt_CHAOS.c:146:
+		printk(KERN_WARNING PFX "Warning: Could not find or load "
+		       "\"DELUDE\" target\n");

ERROR:SPACING: space required before the open parenthesis '('
#327: FILE: net/netfilter/xt_CHAOS.c:148:
+	if((ret = xt_register_target(&xt_chaos_info)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#327: FILE: net/netfilter/xt_CHAOS.c:148:
+	if((ret = xt_register_target(&xt_chaos_info)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#328: FILE: net/netfilter/xt_CHAOS.c:149:
+		printk(KERN_WARNING PFX "xt_register_target returned "

WARNING:SPLIT_STRING: quoted string split across lines
#329: FILE: net/netfilter/xt_CHAOS.c:150:
+		printk(KERN_WARNING PFX "xt_register_target returned "
+		       "error %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: net/netfilter/xt_CHAOS.c:157:
+ ^Iif(have_delude)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: net/netfilter/xt_CHAOS.c:157:
+ ^Iif(have_delude)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: net/netfilter/xt_CHAOS.c:157:
+ ^Iif(have_delude)$

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: net/netfilter/xt_CHAOS.c:157:
+ 	if(have_delude)

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: net/netfilter/xt_CHAOS.c:158:
+ ^I^Imodule_put(xt_delude->me);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: net/netfilter/xt_CHAOS.c:158:
+ ^I^Imodule_put(xt_delude->me);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: net/netfilter/xt_CHAOS.c:158:
+ ^I^Imodule_put(xt_delude->me);$

ERROR:SPACING: space required before the open parenthesis '('
#338: FILE: net/netfilter/xt_CHAOS.c:159:
+	if(have_tarpit)

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: net/netfilter/xt_CHAOS.c:172:
+	if(have_delude)

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: net/netfilter/xt_CHAOS.c:174:
+	if(have_tarpit)

WARNING:RETURN_VOID: void function return statements are not generally useful
#356: FILE: net/netfilter/xt_CHAOS.c:177:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#369: FILE: net/netfilter/xt_DELUDE.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#370: FILE: net/netfilter/xt_DELUDE.c:2:
+/*
+	DELUDE target

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#407: FILE: net/netfilter/xt_DELUDE.c:39:
+	 * send a RST reply for bridged traffic. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: net/netfilter/xt_DELUDE.c:42:
+#ifdef CONFIG_BRIDGE_NETFILTER
+	    || (skb->nf_bridge && skb->nf_bridge->mask & BRNF_BRIDGED)

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#421: FILE: net/netfilter/xt_DELUDE.c:53:
+		/* non-local src, find valid iif to satisfy
 		                             ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#422: FILE: net/netfilter/xt_DELUDE.c:54:
+		 * rp-filter when calling ip_route_input. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: net/netfilter/xt_DELUDE.c:61:
+^I^I                   RT_TOS(iph->tos), rt->u.dst.dev) != 0) {$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#462: FILE: net/netfilter/xt_DELUDE.c:94:
+	u_int16_t tmp_port;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#463: FILE: net/netfilter/xt_DELUDE.c:95:
+	u_int32_t tmp_addr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!oth"
#472: FILE: net/netfilter/xt_DELUDE.c:104:
+	if (oth == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: net/netfilter/xt_DELUDE.c:105:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: net/netfilter/xt_DELUDE.c:105:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: net/netfilter/xt_DELUDE.c:105:
+ ^I^Ireturn;$

ERROR:SPACING: space required before the open parenthesis '('
#476: FILE: net/netfilter/xt_DELUDE.c:108:
+	if(!oth->syn || oth->ack || oth->fin || oth->rst)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#483: FILE: net/netfilter/xt_DELUDE.c:115:
+	if ((rt = route_reverse(oldskb, oth, hook)) == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#489: FILE: net/netfilter/xt_DELUDE.c:121:
+	/* We need a linear, writeable skb.  We also need to expand
+	   headroom in case hh_len of incoming interface < hh_len of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#490: FILE: net/netfilter/xt_DELUDE.c:122:
+	   outgoing interface */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#510: FILE: net/netfilter/xt_DELUDE.c:142:
+	tcph = (struct tcphdr *)((u_int32_t*)nskb->nh.iph + nskb->nh.iph->ihl);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#521: FILE: net/netfilter/xt_DELUDE.c:153:
+	tcph->doff = sizeof(struct tcphdr)/4;
 	                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#522: FILE: net/netfilter/xt_DELUDE.c:154:
+	skb_trim(nskb, nskb->nh.iph->ihl*4 + sizeof(struct tcphdr));
 	                                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#530: FILE: net/netfilter/xt_DELUDE.c:162:
+	tcph->syn = tcph->ack = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:RETURN_VOID: void function return statements are not generally useful
#567: FILE: net/netfilter/xt_DELUDE.c:199:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: net/netfilter/xt_DELUDE.c:202:
+static unsigned int xt_delude_target(struct sk_buff **pskb,
+    const struct net_device *in, const struct net_device *out,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: net/netfilter/xt_DELUDE.c:202:
+    const struct net_device *in, const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: net/netfilter/xt_DELUDE.c:203:
+    unsigned int hooknum, const struct xt_target *target, const void *targinfo$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: net/netfilter/xt_DELUDE.c:205:
+    ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: net/netfilter/xt_DELUDE.c:206:
+    void *userinfo$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: net/netfilter/xt_DELUDE.c:208:
+    )$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#579: FILE: net/netfilter/xt_DELUDE.c:211:
+	/* WARNING: This code causes reentry within iptables.
+	   This means that the iptables jump stack is now crap.  We

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#580: FILE: net/netfilter/xt_DELUDE.c:212:
+	   must return an absolute verdict. --RR */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: net/netfilter/xt_DELUDE.c:218:
+static int xt_delude_check(const char *tablename, const void *e_void,
+    const struct xt_target *target, void *targinfo,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: net/netfilter/xt_DELUDE.c:218:
+    const struct xt_target *target, void *targinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: net/netfilter/xt_DELUDE.c:220:
+    unsigned int targinfosize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: net/netfilter/xt_DELUDE.c:222:
+    unsigned int hook_mask)$

ERROR:SPACING: space required before the open parenthesis '('
#592: FILE: net/netfilter/xt_DELUDE.c:224:
+	if(hook_mask & ~((1 << NF_IP_LOCAL_IN) | (1 << NF_IP_FORWARD))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#593: FILE: net/netfilter/xt_DELUDE.c:225:
+		printk(KERN_WARNING PFX "DELUDE may not be used in chains "

WARNING:SPLIT_STRING: quoted string split across lines
#594: FILE: net/netfilter/xt_DELUDE.c:226:
+		printk(KERN_WARNING PFX "DELUDE may not be used in chains "
+		       "other than INPUT and FORWARD\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: net/netfilter/xt_DELUDE.c:238:
+^I              (1 << NF_IP_LOCAL_OUT),$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#633: FILE: net/netfilter/xt_portscan.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#634: FILE: net/netfilter/xt_portscan.c:2:
+/*
+	portscan match for netfilter

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#676: FILE: net/netfilter/xt_portscan.c:44:
+module_param(connmark_mask, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#677: FILE: net/netfilter/xt_portscan.c:45:
+module_param(packet_mask,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#678: FILE: net/netfilter/xt_portscan.c:46:
+module_param(mark_seen,     uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#679: FILE: net/netfilter/xt_portscan.c:47:
+module_param(mark_synrcv,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#680: FILE: net/netfilter/xt_portscan.c:48:
+module_param(mark_closed,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#681: FILE: net/netfilter/xt_portscan.c:49:
+module_param(mark_synscan,  uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#682: FILE: net/netfilter/xt_portscan.c:50:
+module_param(mark_estab1,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#683: FILE: net/netfilter/xt_portscan.c:51:
+module_param(mark_estab2,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#684: FILE: net/netfilter/xt_portscan.c:52:
+module_param(mark_cnscan,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#685: FILE: net/netfilter/xt_portscan.c:53:
+module_param(mark_grscan,   uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#686: FILE: net/netfilter/xt_portscan.c:54:
+module_param(mark_valid,    uint, S_IRUGO | S_IWUSR);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#741: FILE: net/netfilter/xt_portscan.c:109:
+	/*
+	 * "Connection refused" replies to our own probes must not be matched.

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: net/netfilter/xt_portscan.c:111:
+	if(tflg_rstack(th))

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#746: FILE: net/netfilter/xt_portscan.c:114:
+	if(tflg_rst(th) && printk_ratelimit()) {

ERROR:SPACING: space required before the open parenthesis '('
#746: FILE: net/netfilter/xt_portscan.c:114:
+	if(tflg_rst(th) && printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#747: FILE: net/netfilter/xt_portscan.c:115:
+		printk(KERN_WARNING PFX "Warning: Pure RST received\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#752: FILE: net/netfilter/xt_portscan.c:120:
+	/*
+	 * -p tcp ! --syn -m conntrack --ctstate INVALID: Looking for non-start

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#761: FILE: net/netfilter/xt_portscan.c:129:
+static inline int xt_portscan_full(int mark, enum ip_conntrack_info ctstate,
+    int loopback, const struct tcphdr *tcph, int payload_len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: net/netfilter/xt_portscan.c:129:
+    int loopback, const struct tcphdr *tcph, int payload_len)$

ERROR:SPACING: space required before the open parenthesis '('
#763: FILE: net/netfilter/xt_portscan.c:131:
+	if(mark == mark_estab2) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#765: FILE: net/netfilter/xt_portscan.c:133:
+		/*
+		 * -m connmark --mark $ESTAB2

ERROR:SPACING: space required before the open parenthesis '('
#767: FILE: net/netfilter/xt_portscan.c:135:
+		if(tflg_ack4(tcph) && payload_len == 0)

ERROR:SPACING: space required before the open parenthesis '('
#769: FILE: net/netfilter/xt_portscan.c:137:
+		else if(tflg_rst(tcph) || tflg_fin(tcph))

ERROR:SPACING: space required before the open parenthesis '('
#773: FILE: net/netfilter/xt_portscan.c:141:
+	} else if(mark == mark_estab1) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#775: FILE: net/netfilter/xt_portscan.c:143:
+		/*
+		 * -m connmark --mark $ESTAB1

ERROR:SPACING: space required before the open parenthesis '('
#777: FILE: net/netfilter/xt_portscan.c:145:
+		if(tflg_rst(tcph) || tflg_fin(tcph))

ERROR:SPACING: space required before the open parenthesis '('
#779: FILE: net/netfilter/xt_portscan.c:147:
+		else if(!loopback && tflg_ack4(tcph) && payload_len == 0)

ERROR:SPACING: space required before the open parenthesis '('
#783: FILE: net/netfilter/xt_portscan.c:151:
+	} else if(mark == mark_synrcv) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#785: FILE: net/netfilter/xt_portscan.c:153:
+		/*
+		 * -m connmark --mark $SYN

ERROR:SPACING: space required before the open parenthesis '('
#787: FILE: net/netfilter/xt_portscan.c:155:
+		if(loopback && tflg_synack(tcph))

ERROR:SPACING: space required before the open parenthesis '('
#789: FILE: net/netfilter/xt_portscan.c:157:
+		else if(loopback && tflg_rstack(tcph))

ERROR:SPACING: space required before the open parenthesis '('
#791: FILE: net/netfilter/xt_portscan.c:159:
+		else if(tflg_ack6(tcph))

ERROR:SPACING: space required before the open parenthesis '('
#795: FILE: net/netfilter/xt_portscan.c:163:
+	} else if(ctstate == IP_CT_NEW && tflg_syn(tcph)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#797: FILE: net/netfilter/xt_portscan.c:165:
+		/*
+		 * -p tcp --syn --ctstate NEW

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: net/netfilter/xt_portscan.c:173:
+static int xt_portscan_match(const struct sk_buff *skb,
+    const struct net_device *in, const struct net_device *out,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: net/netfilter/xt_portscan.c:173:
+    const struct net_device *in, const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: net/netfilter/xt_portscan.c:174:
+    const struct xt_match *match, const void *matchinfo, int offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: net/netfilter/xt_portscan.c:175:
+    unsigned int protoff, int *hotdrop)$

ERROR:SPACING: space required before the open parenthesis '('
#816: FILE: net/netfilter/xt_portscan.c:184:
+	if(tcph == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tcph"
#816: FILE: net/netfilter/xt_portscan.c:184:
+	if(tcph == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#820: FILE: net/netfilter/xt_portscan.c:188:
+	if((ctdata = ip_conntrack_get(skb, &ctstate)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#820: FILE: net/netfilter/xt_portscan.c:188:
+	if((ctdata = ip_conntrack_get(skb, &ctstate)) == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#821: FILE: net/netfilter/xt_portscan.c:189:
+		if(info->match_stealth)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#824: FILE: net/netfilter/xt_portscan.c:192:
+		/*
+		 * If @ctdata is NULL, we cannot match the other scan

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#831: FILE: net/netfilter/xt_portscan.c:199:
+	/*
+	 * If -m portscan was previously applied to this packet, the rules we

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#835: FILE: net/netfilter/xt_portscan.c:203:
+	if((ctdata->mark & connmark_mask) == mark_valid ||
+	  (skb->mark & packet_mask) != mark_seen)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#835: FILE: net/netfilter/xt_portscan.c:203:
+	if((ctdata->mark & connmark_mask) == mark_valid ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: net/netfilter/xt_portscan.c:204:
+	if((ctdata->mark & connmark_mask) == mark_valid ||
+	  (skb->mark & packet_mask) != mark_seen)

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: net/netfilter/xt_portscan.c:207:
+		unsigned int n;
+		n = xt_portscan_full(ctdata->mark & connmark_mask, ctstate,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: net/netfilter/xt_portscan.c:208:
+		n = xt_portscan_full(ctdata->mark & connmark_mask, ctstate,
+		    in == &loopback_dev, tcph,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#854: FILE: net/netfilter/xt_portscan.c:222:
+static int xt_portscan_checkentry(const char *tablename, const void *entry,
+    const struct xt_match *match, void *matchinfo,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: net/netfilter/xt_portscan.c:222:
+    const struct xt_match *match, void *matchinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: net/netfilter/xt_portscan.c:224:
+    unsigned int matchinfosize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: net/netfilter/xt_portscan.c:226:
+    unsigned int hook_mask)$

ERROR:SPACING: space required before the open parenthesis '('
#862: FILE: net/netfilter/xt_portscan.c:230:
+	if(matchinfosize != XT_ALIGN(sizeof(struct xt_portscan_info))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#863: FILE: net/netfilter/xt_portscan.c:231:
+		printk(KERN_WARNING PFX "matchinfosize %u != %Zu\n",

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#863: FILE: net/netfilter/xt_portscan.c:231:
+		printk(KERN_WARNING PFX "matchinfosize %u != %Zu\n",

ERROR:SPACING: space required before the open parenthesis '('
#869: FILE: net/netfilter/xt_portscan.c:237:
+	if((info->match_stealth & ~1) || (info->match_syn & ~1) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: net/netfilter/xt_portscan.c:238:
+	if((info->match_stealth & ~1) || (info->match_syn & ~1) ||
+	  (info->match_cn & ~1) || (info->match_gr & ~1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#871: FILE: net/netfilter/xt_portscan.c:239:
+		printk(KERN_WARNING PFX "Invalid flags\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#896: FILE: net/netfilter/xt_portscan.c:264:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458843.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 48 errors, 93 warnings, 27 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458843.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
