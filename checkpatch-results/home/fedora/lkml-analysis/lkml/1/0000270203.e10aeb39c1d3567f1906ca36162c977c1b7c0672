WARNING:TYPO_SPELLING: 'remvoe' may be misspelled - perhaps 'remove'?
#34: 
  o remvoe can_fork member from cgroup_subsys.
    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'contoroller' may be misspelled - perhaps 'controller'?
#37: 
  o add Documentation/contoroller/task.txt
                      ^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
it can prevent fork by network service daemon, but allow fork by interactive process.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# mount -t cgroup -o task none /dev/cgroup

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# mkdir /dev/cgroup/foo

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# cd /dev/cgroup/foo

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# ls 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# echo 100 > task.max_tasks

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# echo $$ > tasks

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# fork_bomb 1000 &  <- try create 1000 process

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# pgrep fork_bomb | wc -l

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#96: FILE: init/Kconfig:292:
+config CGROUP_TASK
+	bool "Simple number of task accounting cgroup subsystem"
+	depends on CGROUPS && EXPERIMENTAL
+	default n
+	help
+          Provides a simple number of task accounting cgroup subsystem for
+	  prevent fork bomb.
+
+	  Say N if unsure
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: kernel/cgroup_task.c:1:
+/* cgroup_task.c - #task control group

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#153: FILE: kernel/cgroup_task.c:28:
+	spinlock_t lock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_max_tasks > INT_MAX'
#178: FILE: kernel/cgroup_task.c:53:
+	if ((new_max_tasks > INT_MAX) ||
+	    (new_max_tasks < -1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: kernel/cgroup_task.c:106:
+static struct cgroup_subsys_state *task_cgroup_create(struct cgroup_subsys *ss,
+						   struct cgroup *cgrp)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*taskcg)...) over kzalloc(sizeof(struct task_cgroup)...)
#235: FILE: kernel/cgroup_task.c:110:
+	taskcg = kzalloc(sizeof(struct task_cgroup), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: kernel/cgroup_task.c:125:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: kernel/cgroup_task.c:155:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_tasks >= 0'
#302: FILE: kernel/cgroup_task.c:177:
+	if ((max_tasks >= 0) &&
+	    (taskcg->nr_tasks >= max_tasks))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'taskcg->nr_tasks >= max_tasks'
#302: FILE: kernel/cgroup_task.c:177:
+	if ((max_tasks >= 0) &&
+	    (taskcg->nr_tasks >= max_tasks))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#326: FILE: kernel/cgroup_task.c:201:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#385: FILE: include/linux/cgroup_task.h:1:
+/* cgroup_task.h - #task control group

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: include/linux/cgroup_task.h:31:
+
+

WARNING:TYPO_SPELLING: 'ristrict' may be misspelled - perhaps 'restrict'?
#433: FILE: Documentation/controllers/task.txt:11:
+ristrict number of tasks to 100.
 ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 10 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
