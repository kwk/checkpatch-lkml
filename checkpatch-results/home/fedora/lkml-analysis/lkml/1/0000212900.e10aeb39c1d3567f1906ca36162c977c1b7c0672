WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Subject: [PATCH] [LIO-Target/ConfigFS]: Added iSCSI Initiator Node ACL READ-ONLY Parameters

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nicholas A. Bellinger'
#62: 
Signed-off-by: Nicholas A. Bellinger

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#78: FILE: drivers/lio-core/iscsi_target_configfs.c:823:
+#define DEF_NACL_PARAM(name)						\
+static ssize_t lio_target_show_nacl_param_##name (			\
+	struct iscsi_node_acl_s *nacl,					\
+	char *page)							\
+{									\
+	iscsi_session_t *sess;						\
+	ssize_t rb;							\
+									\
+	spin_lock_bh(&nacl->nacl_sess_lock);				\
+	if (!(sess = nacl->nacl_sess)) {				\
+		rb = snprintf(page, PAGE_SIZE,				\
+			"No Active iSCSI Session\n");			\
+	} else {							\
+		rb = snprintf(page, PAGE_SIZE, "%u\n",			\
+			(u32)SESS_OPS(sess)->name);			\
+	}								\
+	spin_unlock_bh(&nacl->nacl_sess_lock);				\
+									\
+	return(rb);							\
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: drivers/lio-core/iscsi_target_configfs.c:824:
+static ssize_t lio_target_show_nacl_param_##name (			\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#87: FILE: drivers/lio-core/iscsi_target_configfs.c:832:
+	if (!(sess = nacl->nacl_sess)) {				\

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#100: FILE: drivers/lio-core/iscsi_target_configfs.c:845:
+#define NACL_PARAM_ATTR(_name)						\
+static struct iscsi_nacl_param_attribute iscsi_nacl_param_##_name =	\
+                __CONFIGFS_EATTR_RO(_name,				\
+		lio_target_show_nacl_param_##_name);			\
+

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/lio-core/iscsi_target_configfs.c:847:
+                __CONFIGFS_EATTR_RO(_name,^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/lio-core/iscsi_target_configfs.c:847:
+                __CONFIGFS_EATTR_RO(_name,^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <MaxConnections>
#105: FILE: drivers/lio-core/iscsi_target_configfs.c:850:
+DEF_NACL_PARAM(MaxConnections);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <InitialR2T>
#108: FILE: drivers/lio-core/iscsi_target_configfs.c:853:
+DEF_NACL_PARAM(InitialR2T);

CHECK:CAMELCASE: Avoid CamelCase: <ImmediateData>
#111: FILE: drivers/lio-core/iscsi_target_configfs.c:856:
+DEF_NACL_PARAM(ImmediateData);

CHECK:CAMELCASE: Avoid CamelCase: <MaxBurstLength>
#114: FILE: drivers/lio-core/iscsi_target_configfs.c:859:
+DEF_NACL_PARAM(MaxBurstLength);

CHECK:CAMELCASE: Avoid CamelCase: <FirstBurstLength>
#117: FILE: drivers/lio-core/iscsi_target_configfs.c:862:
+DEF_NACL_PARAM(FirstBurstLength);

CHECK:CAMELCASE: Avoid CamelCase: <DefaultTime2Wait>
#120: FILE: drivers/lio-core/iscsi_target_configfs.c:865:
+DEF_NACL_PARAM(DefaultTime2Wait);

CHECK:CAMELCASE: Avoid CamelCase: <DefaultTime2Retain>
#123: FILE: drivers/lio-core/iscsi_target_configfs.c:868:
+DEF_NACL_PARAM(DefaultTime2Retain);

CHECK:CAMELCASE: Avoid CamelCase: <MaxOutstandingR2T>
#126: FILE: drivers/lio-core/iscsi_target_configfs.c:871:
+DEF_NACL_PARAM(MaxOutstandingR2T);

CHECK:CAMELCASE: Avoid CamelCase: <DataPDUInOrder>
#129: FILE: drivers/lio-core/iscsi_target_configfs.c:874:
+DEF_NACL_PARAM(DataPDUInOrder);

CHECK:CAMELCASE: Avoid CamelCase: <DataSequenceInOrder>
#132: FILE: drivers/lio-core/iscsi_target_configfs.c:877:
+DEF_NACL_PARAM(DataSequenceInOrder);

CHECK:CAMELCASE: Avoid CamelCase: <ErrorRecoveryLevel>
#135: FILE: drivers/lio-core/iscsi_target_configfs.c:880:
+DEF_NACL_PARAM(ErrorRecoveryLevel);

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_MaxConnections>
#141: FILE: drivers/lio-core/iscsi_target_configfs.c:886:
+	&iscsi_nacl_param_MaxConnections.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_InitialR2T>
#142: FILE: drivers/lio-core/iscsi_target_configfs.c:887:
+	&iscsi_nacl_param_InitialR2T.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_ImmediateData>
#143: FILE: drivers/lio-core/iscsi_target_configfs.c:888:
+	&iscsi_nacl_param_ImmediateData.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_MaxBurstLength>
#144: FILE: drivers/lio-core/iscsi_target_configfs.c:889:
+	&iscsi_nacl_param_MaxBurstLength.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_FirstBurstLength>
#145: FILE: drivers/lio-core/iscsi_target_configfs.c:890:
+	&iscsi_nacl_param_FirstBurstLength.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_DefaultTime2Wait>
#146: FILE: drivers/lio-core/iscsi_target_configfs.c:891:
+	&iscsi_nacl_param_DefaultTime2Wait.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_DefaultTime2Retain>
#147: FILE: drivers/lio-core/iscsi_target_configfs.c:892:
+	&iscsi_nacl_param_DefaultTime2Retain.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_MaxOutstandingR2T>
#148: FILE: drivers/lio-core/iscsi_target_configfs.c:893:
+	&iscsi_nacl_param_MaxOutstandingR2T.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_DataPDUInOrder>
#149: FILE: drivers/lio-core/iscsi_target_configfs.c:894:
+	&iscsi_nacl_param_DataPDUInOrder.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_DataSequenceInOrder>
#150: FILE: drivers/lio-core/iscsi_target_configfs.c:895:
+	&iscsi_nacl_param_DataSequenceInOrder.attr,

CHECK:CAMELCASE: Avoid CamelCase: <iscsi_nacl_param_ErrorRecoveryLevel>
#151: FILE: drivers/lio-core/iscsi_target_configfs.c:896:
+	&iscsi_nacl_param_ErrorRecoveryLevel.attr,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#176: FILE: drivers/lio-core/iscsi_target_configfs.c:1486:
+	if (!(nacl_cg->default_groups = kzalloc(sizeof(struct config_group) * 3,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*nacl_cg->default_groups)...) over kzalloc(sizeof(struct config_group)...)
#176: FILE: drivers/lio-core/iscsi_target_configfs.c:1486:
+	if (!(nacl_cg->default_groups = kzalloc(sizeof(struct config_group) * 3,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/lio-core/iscsi_target_configfs.c:1487:
+	if (!(nacl_cg->default_groups = kzalloc(sizeof(struct config_group) * 3,
 			GFP_KERNEL)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 4 warnings, 25 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
