WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Setup the activate GRU message queue that is used for partition activation and

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#140: FILE: drivers/misc/sgi-xp/xpc_uv.c:69:
+	if (page == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#147: FILE: drivers/misc/sgi-xp/xpc_uv.c:76:
+		dev_err(xpc_part, "gru_create_message_queue() returned "
+			"error=%d\n", ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#190: FILE: drivers/misc/sgi-xp/xpc_uv.c:119:
+			xp_ret = xpSuccess;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: drivers/misc/sgi-xp/xpc_uv.c:125:
+			dev_dbg(xpc_chan, "gru_send_message_gpa() returned "
+				"error=MQE_QUEUE_FULL\n");

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: drivers/misc/sgi-xp/xpc_uv.c:131:
+			dev_dbg(xpc_chan, "gru_send_message_gpa() returned "
+				"error=MQE_CONGESTION\n");

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: drivers/misc/sgi-xp/xpc_uv.c:137:
+			dev_err(xpc_chan, "gru_send_message_gpa() returned "
+				"error=%d\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <xpGruSendMqError>
#209: FILE: drivers/misc/sgi-xp/xpc_uv.c:138:
+			xp_ret = xpGruSendMqError;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: drivers/misc/sgi-xp/xpc_uv.c:163:
+		BUG_ON(xpc_activate_IRQ_rcvd < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <xpReactivating>
#244: FILE: drivers/misc/sgi-xp/xpc_uv.c:173:
+				XPC_DEACTIVATE_PARTITION(part, xpReactivating);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: drivers/misc/sgi-xp/xpc_uv.c:185:
+			BUG();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#265: FILE: drivers/misc/sgi-xp/xpc_uv.c:194:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#279: FILE: drivers/misc/sgi-xp/xpc_uv.c:208:
+	while ((msg_hdr = gru_get_next_message(xpc_activate_mq_uv)) != NULL) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xpc_handle_activate_IRQ_uv', this function's name, in a string
#282: FILE: drivers/misc/sgi-xp/xpc_uv.c:211:
+			dev_err(xpc_part, "xpc_handle_activate_IRQ_uv() invalid"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: drivers/misc/sgi-xp/xpc_uv.c:212:
+			dev_err(xpc_part, "xpc_handle_activate_IRQ_uv() invalid"
+				"partid=0x%x passed in message\n", partid);

WARNING:MISSING_SPACE: break quoted strings at a space character
#283: FILE: drivers/misc/sgi-xp/xpc_uv.c:212:
+			dev_err(xpc_part, "xpc_handle_activate_IRQ_uv() invalid"
+				"partid=0x%x passed in message\n", partid);

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: drivers/misc/sgi-xp/xpc_uv.c:374:
+			dev_err(xpc_part, "received unknown activate_mq msg "
+				"type=%d from partition=%d\n", msg_hdr->type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/misc/sgi-xp/xpc_uv.c:434:
+xpc_send_activate_IRQ_ch_uv(struct xpc_channel *ch, unsigned long *irq_flags,
+			 void *msg, size_t msg_size, int msg_type)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_flags"
#513: FILE: drivers/misc/sgi-xp/xpc_uv.c:441:
+		if (irq_flags != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_flags"
#518: FILE: drivers/misc/sgi-xp/xpc_uv.c:446:
+		if (irq_flags != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpUnsupported>
#554: FILE: drivers/misc/sgi-xp/xpc_uv.c:477:
+	return xpUnsupported;

CHECK:CAMELCASE: Avoid CamelCase: <xpNoHeartbeat>
#632: FILE: drivers/misc/sgi-xp/xpc_uv.c:553:
+	enum xp_retval ret = xpNoHeartbeat;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#636: FILE: drivers/misc/sgi-xp/xpc_uv.c:557:
+	    part_uv->remote_act_state != XPC_P_AS_DEACTIVATING) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#639: FILE: drivers/misc/sgi-xp/xpc_uv.c:560:
+		    (part_uv->flags & XPC_P_HEARTBEAT_OFFLINE_UV)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: drivers/misc/sgi-xp/xpc_uv.c:588:
+		xpc_send_activate_IRQ_part_uv(part, &msg, sizeof(msg),
+					   XPC_ACTIVATE_MQ_MSG_ACTIVATE_REQ_UV);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#699: FILE: drivers/misc/sgi-xp/xpc_uv.c:612:
+	    part->sn.uv.remote_act_state != XPC_P_AS_INACTIVE) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: drivers/misc/sgi-xp/xpc_uv.c:615:
+		xpc_send_activate_IRQ_part_uv(part, &msg, sizeof(msg),
+					 XPC_ACTIVATE_MQ_MSG_DEACTIVATE_REQ_UV);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#747: FILE: drivers/misc/sgi-xp/xpc_uv.c:653:
+	while (part->sn.uv.remote_act_state != XPC_P_AS_ACTIVATING) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#749: FILE: drivers/misc/sgi-xp/xpc_uv.c:655:
+		dev_dbg(xpc_part, "waiting to make first contact with "
+			"partition %d\n", XPC_PARTID(part));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_activate_mq_uv"
#954: FILE: drivers/misc/sgi-xp/xpc_uv.c:857:
+	if (xpc_activate_mq_uv == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1189: FILE: drivers/misc/sgi-xp/xpc.h:714:
+extern void *xpc_kzalloc_cacheline_aligned(size_t, gfp_t, void **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1189: FILE: drivers/misc/sgi-xp/xpc.h:714:
+extern void *xpc_kzalloc_cacheline_aligned(size_t, gfp_t, void **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#1189: FILE: drivers/misc/sgi-xp/xpc.h:714:
+extern void *xpc_kzalloc_cacheline_aligned(size_t, gfp_t, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#1189: FILE: drivers/misc/sgi-xp/xpc.h:714:
+extern void *xpc_kzalloc_cacheline_aligned(size_t, gfp_t, void **);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1194: FILE: drivers/misc/sgi-xp/xpc.h:719:
+extern int (*xpc_setup_partitions_sn) (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#1199: FILE: drivers/misc/sgi-xp/xpc.h:723:
+extern int (*xpc_setup_rsvd_page_sn) (struct xpc_rsvd_page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_rsvd_page *' should also have an identifier name
#1199: FILE: drivers/misc/sgi-xp/xpc.h:723:
+extern int (*xpc_setup_rsvd_page_sn) (struct xpc_rsvd_page *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1209: FILE: drivers/misc/sgi-xp/xpc.h:732:
+extern enum xp_retval (*xpc_setup_msg_structures) (struct xpc_channel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#1209: FILE: drivers/misc/sgi-xp/xpc.h:732:
+extern enum xp_retval (*xpc_setup_msg_structures) (struct xpc_channel *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1210: FILE: drivers/misc/sgi-xp/xpc.h:733:
+extern void (*xpc_teardown_msg_structures) (struct xpc_channel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#1210: FILE: drivers/misc/sgi-xp/xpc.h:733:
+extern void (*xpc_teardown_msg_structures) (struct xpc_channel *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1221: FILE: drivers/misc/sgi-xp/xpc.h:744:
+extern void (*xpc_process_activate_IRQ_rcvd) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1222: FILE: drivers/misc/sgi-xp/xpc.h:745:
+extern enum xp_retval (*xpc_setup_ch_structures_sn) (struct xpc_partition *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_partition *' should also have an identifier name
#1222: FILE: drivers/misc/sgi-xp/xpc.h:745:
+extern enum xp_retval (*xpc_setup_ch_structures_sn) (struct xpc_partition *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1223: FILE: drivers/misc/sgi-xp/xpc.h:746:
+extern void (*xpc_teardown_ch_structures_sn) (struct xpc_partition *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_partition *' should also have an identifier name
#1223: FILE: drivers/misc/sgi-xp/xpc.h:746:
+extern void (*xpc_teardown_ch_structures_sn) (struct xpc_partition *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1231: FILE: drivers/misc/sgi-xp/xpc.h:762:
+extern void (*xpc_save_remote_msgqueue_pa) (struct xpc_channel *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#1231: FILE: drivers/misc/sgi-xp/xpc.h:762:
+extern void (*xpc_save_remote_msgqueue_pa) (struct xpc_channel *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1231: FILE: drivers/misc/sgi-xp/xpc.h:762:
+extern void (*xpc_save_remote_msgqueue_pa) (struct xpc_channel *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1242: FILE: drivers/misc/sgi-xp/xpc.h:774:
+extern int xpc_init_uv(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1251: FILE: drivers/misc/sgi-xp/xpc.h:784:
+extern int xpc_setup_rsvd_page(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1252: FILE: drivers/misc/sgi-xp/xpc.h:785:
+extern void xpc_teardown_rsvd_page(void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1276: FILE: drivers/misc/sgi-xp/xpc_main.c:173:
+int (*xpc_setup_partitions_sn) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1281: FILE: drivers/misc/sgi-xp/xpc_main.c:177:
+int (*xpc_setup_rsvd_page_sn) (struct xpc_rsvd_page *rp);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1291: FILE: drivers/misc/sgi-xp/xpc_main.c:188:
+enum xp_retval (*xpc_setup_msg_structures) (struct xpc_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1292: FILE: drivers/misc/sgi-xp/xpc_main.c:189:
+void (*xpc_teardown_msg_structures) (struct xpc_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1303: FILE: drivers/misc/sgi-xp/xpc_main.c:201:
+void (*xpc_process_activate_IRQ_rcvd) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1304: FILE: drivers/misc/sgi-xp/xpc_main.c:202:
+enum xp_retval (*xpc_setup_ch_structures_sn) (struct xpc_partition *part);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1305: FILE: drivers/misc/sgi-xp/xpc_main.c:203:
+void (*xpc_teardown_ch_structures_sn) (struct xpc_partition *part);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1313: FILE: drivers/misc/sgi-xp/xpc_main.c:220:
+void (*xpc_save_remote_msgqueue_pa) (struct xpc_channel *ch,

WARNING:SPLIT_STRING: quoted string split across lines
#1371: FILE: drivers/misc/sgi-xp/xpc_main.c:353:
+			dev_dbg(xpc_part, "processing activate IRQs "
+				"received\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1380: FILE: drivers/misc/sgi-xp/xpc_main.c:359:
+					       (time_is_before_eq_jiffies(

WARNING:TYPO_SPELLING: 'cachline' may be misspelled - perhaps 'cacheline'?
#1395: FILE: drivers/misc/sgi-xp/xpc_main.c:442:
+	/* see if kzalloc will give us cachline aligned memory by default */
 	                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1397: FILE: drivers/misc/sgi-xp/xpc_main.c:444:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1407: FILE: drivers/misc/sgi-xp/xpc_main.c:454:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "part->channels"
#1429: FILE: drivers/misc/sgi-xp/xpc_main.c:476:
+	DBUG_ON(part->channels != NULL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*part->channels)...) over kzalloc(sizeof(struct xpc_channel)...)
#1430: FILE: drivers/misc/sgi-xp/xpc_main.c:477:
+	part->channels = kzalloc(sizeof(struct xpc_channel) * XPC_MAX_NCHANNELS,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!part->channels"
#1432: FILE: drivers/misc/sgi-xp/xpc_main.c:479:
+	if (part->channels == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1433: FILE: drivers/misc/sgi-xp/xpc_main.c:480:
+	if (part->channels == NULL) {
+		dev_err(xpc_chan, "can't get memory for channels\n");

CHECK:CAMELCASE: Avoid CamelCase: <xpNoMemory>
#1434: FILE: drivers/misc/sgi-xp/xpc_main.c:481:
+		return xpNoMemory;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->remote_openclose_args_base'
#1442: FILE: drivers/misc/sgi-xp/xpc_main.c:489:
+					  GFP_KERNEL, &part->
+					  remote_openclose_args_base);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!part->remote_openclose_args"
#1443: FILE: drivers/misc/sgi-xp/xpc_main.c:490:
+	if (part->remote_openclose_args == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*xpc_partitions)...) over kzalloc(sizeof(struct xpc_partition)...)
#1568: FILE: drivers/misc/sgi-xp/xpc_main.c:959:
+	xpc_partitions = kzalloc(sizeof(struct xpc_partition) *

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1568: FILE: drivers/misc/sgi-xp/xpc_main.c:959:
+	xpc_partitions = kzalloc(sizeof(struct xpc_partition) *
+				 xp_max_npartitions, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_partitions"
#1570: FILE: drivers/misc/sgi-xp/xpc_main.c:961:
+	if (xpc_partitions == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1571: FILE: drivers/misc/sgi-xp/xpc_main.c:962:
+	if (xpc_partitions == NULL) {
+		dev_err(xpc_part, "can't get memory for partition structure\n");

CHECK:CAMELCASE: Avoid CamelCase: <n_IRQs_expected>
#2008: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1111:
+	int n_IRQs_expected;

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs_base>
#2085: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1147:
+					  &part_sn2->local_GPs_base);

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs_base>
#2098: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1156:
+					  &part_sn2->remote_GPs_base);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part_sn2->local_openclose_args_base'
#2119: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1171:
+					  GFP_KERNEL, &part_sn2->
+					  local_openclose_args_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!part_sn2->local_openclose_args"
#2120: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1172:
+	if (part_sn2->local_openclose_args == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs>
#2189: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1209:
+		ch_sn2->local_GP = &part_sn2->local_GPs[ch_number];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch_sn2->local_msgqueue"
#2368: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1538:
+		if (ch_sn2->local_msgqueue == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch_sn2->notify_queue"
#2377: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1543:
+		if (ch_sn2->notify_queue == NULL) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch_sn2->remote_msgqueue_base'
#2401: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1584:
+		    xpc_kzalloc_cacheline_aligned(nbytes, GFP_KERNEL, &ch_sn2->
+						  remote_msgqueue_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch_sn2->remote_msgqueue"
#2402: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1585:
+		if (ch_sn2->remote_msgqueue == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpUnknownReason>
#2643: FILE: drivers/misc/sgi-xp/xp.h:213:
+	xpUnknownReason		/* 60: unknown reason - must be last in enum */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257903.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 46 warnings, 41 checks, 2532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000257903.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
