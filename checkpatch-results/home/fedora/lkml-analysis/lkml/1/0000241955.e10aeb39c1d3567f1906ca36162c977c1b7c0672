WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
  Well, noone else voiced great enthusiasm about typesafe callbacks.  I esp.

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#34: 
  Well, noone else voiced great enthusiasm about typesafe callbacks.  I esp.
        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/include/linux/kernel.h	Mon Aug 11 17:54:26 2008 +1000

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desttype' - possible side-effects?
#51: FILE: include/linux/kernel.h:490:
+#define __typesafe_cb(desttype, fn, ok1, ok2) \
+	cast_if_type(cast_if_type((fn), ok1, desttype), ok2, desttype)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rettype' - possible side-effects?
#67: FILE: include/linux/kernel.h:506:
+#define typesafe_cb(rettype, fn, arg)					\
+	__typesafe_cb(rettype (*)(void *), (fn),			\
+		      rettype (*)(const typeof(arg)),			\
+		      rettype (*)(typeof(arg)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: include/linux/kernel.h:507:
+	__typesafe_cb(rettype (*)(void *), (fn),			\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: include/linux/kernel.h:508:
+		      rettype (*)(const typeof(arg)),			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: include/linux/kernel.h:509:
+		      rettype (*)(typeof(arg)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rettype' - possible side-effects?
#81: FILE: include/linux/kernel.h:520:
+#define typesafe_cb_preargs(rettype, fn, arg, ...)			\
+	__typesafe_cb(rettype (*)(__VA_ARGS__, void *), (fn),		\
+		      rettype (*)(__VA_ARGS__, const typeof(arg)),	\
+		      rettype (*)(__VA_ARGS__, typeof(arg)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: include/linux/kernel.h:521:
+	__typesafe_cb(rettype (*)(__VA_ARGS__, void *), (fn),		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#83: FILE: include/linux/kernel.h:522:
+		      rettype (*)(__VA_ARGS__, const typeof(arg)),	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: include/linux/kernel.h:523:
+		      rettype (*)(__VA_ARGS__, typeof(arg)))

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#108: FILE: include/linux/kthread.h:19:
+ * standalone thread for which noone will call kthread_stop(), or
                                ^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#115: FILE: include/linux/kthread.h:26:
+#define kthread_create(threadfn, data, namefmt...)			\
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/linux/kthread.h:27:
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/linux/kthread.h:27:
+	__kthread_create(typesafe_cb(int,(threadfn),(data)), (data), namefmt)
 	                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#143: FILE: include/linux/stop_machine.h:28:
+#define stop_machine(fn, data, cpus)					\
+	stop_machine_notype(typesafe_cb(int, (fn), (data)), (data), (cpus))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: include/linux/timer.h:35:
+		      void (*)(const typeof((data)+0UL)),	\
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: include/linux/timer.h:36:
+		      void (*)(typeof((data)+0UL)))
 		                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_data' - possible side-effects?
#188: FILE: include/linux/timer.h:38:
+#define TIMER_INITIALIZER(_function, _expires, _data) {			\
+		.entry = { .prev = TIMER_ENTRY_STATIC },		\
+		.function = typesafe_timerfn((_function), (_data)),	\
+		.expires = (_expires),					\
+		.data = (unsigned long)(_data),				\
+		.base = &boot_tvec_bases,				\
 	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#204: FILE: include/linux/timer.h:64:
+#define setup_timer(timer, function, data)				\
+	__setup_timer((timer), typesafe_timerfn((function), (data)),	\
+		      (unsigned long)(data))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 9 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
