CHECK:SPACING: No space is necessary after a cast
#102: FILE: fs/ext3/namei.c:292:
+	struct ext3_dir_entry_2 *de = (struct ext3_dir_entry_2 *) bh->b_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#109: FILE: fs/ext3/namei.c:298:
+	while (de && (char *) de < base + size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de"
#147: FILE: fs/ext3/namei.c:679:
+		if (de == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#172: FILE: fs/ext3/namei.c:1016:
+				     + ((char *) de - bh->b_data);

CHECK:SPACING: No space is necessary after a cast
#222: FILE: fs/ext3/namei.c:1203:
+	de = (struct ext3_dir_entry_2 *) data1;

CHECK:SPACING: No space is necessary after a cast
#223: FILE: fs/ext3/namei.c:1204:
+	de2 = (struct ext3_dir_entry_2 *) data1 +

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de"
#227: FILE: fs/ext3/namei.c:1208:
+		if (de == NULL) {

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#245: FILE: fs/ext3/namei.c:1440:
+		if (de2 == NULL || (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) de2 >= top) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#245: FILE: fs/ext3/namei.c:1440:
+		if (de2 == NULL || (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) de2 >= top) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#245: FILE: fs/ext3/namei.c:1440:
+		if (de2 == NULL || (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) de2 >= top) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de2"
#245: FILE: fs/ext3/namei.c:1440:
+		if (de2 == NULL || (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) (char *) de2 >= top) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de1"
#289: FILE: fs/ext3/namei.c:1896:
+	if (de1 == NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 10 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264981.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
