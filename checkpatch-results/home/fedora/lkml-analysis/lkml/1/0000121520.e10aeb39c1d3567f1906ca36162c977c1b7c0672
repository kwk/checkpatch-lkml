ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#63: FILE: fs/cifs/dir.c:656:
struct dentry *direntry,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#83: FILE: fs/cifs/dir.c:672:
+		     (nd->flags & LOOKUP_OPEN) && !pTcon->broken_posix_open &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <newInode>
#85: FILE: fs/cifs/dir.c:674:
+			rc = cifs_posix_open(full_path, &newInode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: fs/cifs/dir.c:675:
+			rc = cifs_posix_open(full_path, &newInode,
 					parent_dir_inode->i_sb,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc == 0'
#112: FILE: fs/cifs/dir.c:686:
+			if ((rc == 0) || (rc == -ENOENT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121520.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 0 warnings, 4 checks, 56 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121520.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
