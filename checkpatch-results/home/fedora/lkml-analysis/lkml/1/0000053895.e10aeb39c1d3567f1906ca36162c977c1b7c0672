WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: fs/notify/fanotify/fanotify_user.c:32:
+	BUG_ON(!mutex_is_locked(&group->notification_mutex));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#91: FILE: fs/notify/fanotify/fanotify_user.c:39:
+	if (FAN_EVENT_METADATA_LEN > count)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: fs/notify/fanotify/fanotify_user.c:43:
+	 * same event we peeked above */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: fs/notify/fanotify/fanotify_user.c:76:
+	 * are NULL;  That's fine, just don't call dentry open */

CHECK:BRACES: braces {} should be used on all arms of this statement
#129: FILE: fs/notify/fanotify/fanotify_user.c:77:
+	if (dentry && mnt) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#137: FILE: fs/notify/fanotify/fanotify_user.c:85:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#171: FILE: fs/notify/fanotify/fanotify_user.c:119:
+
+}

CHECK:SPACING: No space is necessary after a cast
#277: FILE: fs/notify/fanotify/fanotify_user.c:230:
+	p = (void __user *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#285: FILE: fs/notify/fanotify/fanotify_user.c:238:
+		ret = put_user(send_len, (int __user *) p);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#325: FILE: include/linux/fanotify.h:65:
+} __attribute__ ((packed));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'meta' - possible side-effects?
#330: FILE: include/linux/fanotify.h:70:
+#define FAN_EVENT_NEXT(meta, len) ((len) -= (meta)->event_len, \
+				   (struct fanotify_event_metadata*)(((char *)(meta)) + \
+				   (meta)->event_len))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: include/linux/fanotify.h:71:
+				   (struct fanotify_event_metadata*)(((char *)(meta)) + \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'meta' - possible side-effects?
#334: FILE: include/linux/fanotify.h:74:
+#define FAN_EVENT_OK(meta, len)	((long)(len) >= (long)FAN_EVENT_METADATA_LEN && \
+				(long)(meta)->event_len >= (long)FAN_EVENT_METADATA_LEN && \
+				(long)(meta)->event_len <= (long)(len))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#334: FILE: include/linux/fanotify.h:74:
+#define FAN_EVENT_OK(meta, len)	((long)(len) >= (long)FAN_EVENT_METADATA_LEN && \
+				(long)(meta)->event_len >= (long)FAN_EVENT_METADATA_LEN && \
+				(long)(meta)->event_len <= (long)(len))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000053895.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 8 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000053895.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
