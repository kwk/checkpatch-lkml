WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#36: 
Signed-of-by: Gui Jianfeng <guijianfeng@cn.fujitsu.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: block/blk-core.c:1540:
+^I^I^Icgroup_io_throttle(bio,^Ibio->bi_bdev, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: block/blk-io-throttle.c:171:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: block/blk-io-throttle.c:175:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#148: FILE: block/blk-io-throttle.c:208:
+	if (is_bio_group(old_group) && is_bio_group(new_group)) {
+		goto out;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#153: FILE: block/blk-io-throttle.c:213:
+	/* if moving from an associated one to an unassociated one,
+	   just moving it to root

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#156: FILE: block/blk-io-throttle.c:216:
+		BUG_ON(is_moving_forbidden(&init_iothrottle));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: block/blk-io-throttle.c:224:
+		BUG_ON(!is_moving_forbidden(new_group));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#172: FILE: block/blk-io-throttle.c:232:
+		BUG_ON(!is_moving_forbidden(new_group));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#181: FILE: block/blk-io-throttle.c:241:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: block/blk-io-throttle.c:248:
+static int iothrottle_notifier_call(struct notifier_block *this, unsigned long event,
+			       void *ptr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: block/blk-io-throttle.c:253:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: block/blk-io-throttle.c:266:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cgrp->parent'
#219: FILE: block/blk-io-throttle.c:338:
+	if (unlikely((cgrp->parent) == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cgrp->parent'
#240: FILE: block/blk-io-throttle.c:364:
+	if (unlikely((cgrp->parent) == NULL))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#279: FILE: block/blk-io-throttle.c:690:
+		if (is_bio_group(iot)) {
+			return 0;
+		}

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#288: FILE: block/blk-io-throttle.c:699:
+			tasks = (struct task_struct **)kmalloc(count * sizeof(*tasks),

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#288: FILE: block/blk-io-throttle.c:699:
+			tasks = (struct task_struct **)kmalloc(count * sizeof(*tasks),
+							       GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: block/blk-io-throttle.c:737:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: block/blk-io-throttle.c:738:
+^I^I   Go through the bio_group_list, if don't exist, put it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#327: FILE: block/blk-io-throttle.c:738:
+		/* 
+		   Go through the bio_group_list, if don't exist, put it 

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: block/blk-io-throttle.c:751:
+ ^I^Icount = cgroup_task_count(bio_cgroup);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: block/blk-io-throttle.c:751:
+ ^I^Icount = cgroup_task_count(bio_cgroup);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: block/blk-io-throttle.c:751:
+ ^I^Icount = cgroup_task_count(bio_cgroup);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#341: FILE: block/blk-io-throttle.c:752:
+		if (count) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: block/blk-io-throttle.c:753:
+^I^I^Itasks = (struct task_struct **)kmalloc(count * sizeof(*tasks), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#342: FILE: block/blk-io-throttle.c:753:
+			tasks = (struct task_struct **)kmalloc(count * sizeof(*tasks), 

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#342: FILE: block/blk-io-throttle.c:753:
+			tasks = (struct task_struct **)kmalloc(count * sizeof(*tasks), 
+							       GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: block/blk-io-throttle.c:756:
+^I^I^I^Iread_unlock(&tasklist_lock);^I$

CHECK:BRACES: Unbalanced braces around else statement
#348: FILE: block/blk-io-throttle.c:759:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: block/blk-io-throttle.c:771:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: block/blk-io-throttle.c:778:
+^I^I$

WARNING:INDENTED_LABEL: labels should not be indented
#369: FILE: block/blk-io-throttle.c:780:
+	no_tasks:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: block/blk-io-throttle.c:831:
+static int iothrottle_can_attach(struct cgroup_subsys *ss,
+			     struct cgroup *cont, struct task_struct *tsk)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: block/blk-io-throttle.c:852:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: block/blk-io-throttle.c:987:
+cgroup_io_throttle(struct bio *bio, struct block_device *bdev,
 		ssize_t bytes, int can_sleep)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: block/blk-io-throttle.c:1017:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: include/linux/biotrack.h:29:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/biotrack.h:36:
+extern struct cgroup *bio_id_to_cgroup(int id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: include/linux/blk-io-throttle.h:20:
+cgroup_io_throttle(struct bio *bio, struct block_device *bdev,
 		ssize_t bytes, int can_sleep);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: include/linux/blk-io-throttle.h:63:
+cgroup_io_throttle(struct bio *bio, struct block_device *bdev,
 		ssize_t bytes, int can_sleep)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201796.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 15 warnings, 14 checks, 464 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201796.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
