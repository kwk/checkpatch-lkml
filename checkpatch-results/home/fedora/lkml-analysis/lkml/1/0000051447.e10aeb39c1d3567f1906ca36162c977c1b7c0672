CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: kernel/sysctl_binary.c:85:
+static ssize_t binary_sysctl(const int *name, int nlen,
+	void __user *oldval, size_t __user *oldlenp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: kernel/sysctl_binary.c:108:
+static ssize_t binary_sysctl(const int *ctl_name, int nlen,
+	void __user *oldval, size_t __user *oldlenp,

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#153: FILE: kernel/sysctl_binary.c:111:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nlen == 2'
#177: FILE: kernel/sysctl_binary.c:122:
+	if ((nlen == 2) && (name[0] == CTL_KERN) && (name[1] == KERN_VERSION))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'name[0] == CTL_KERN'
#177: FILE: kernel/sysctl_binary.c:122:
+	if ((nlen == 2) && (name[0] == CTL_KERN) && (name[1] == KERN_VERSION))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'name[1] == KERN_VERSION'
#177: FILE: kernel/sysctl_binary.c:122:
+	if ((nlen == 2) && (name[0] == CTL_KERN) && (name[1] == KERN_VERSION))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: kernel/sysctl_binary.c:138:
+int do_sysctl(int __user *args_name, int nlen,
+	void __user *oldval, size_t __user *oldlenp,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: kernel/sysctl_binary.c:162:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000051447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 7 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000051447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
