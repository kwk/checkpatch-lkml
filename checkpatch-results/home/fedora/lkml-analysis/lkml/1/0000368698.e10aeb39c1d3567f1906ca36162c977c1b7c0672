WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: drivers/ata/Kconfig:185:
+config SATA_FSL
+	tristate "Freescale 3.0Gbps SATA support"
+	depends on PPC_MPC837x
+	help
+	  This option enables support for Freescale 3.0Gbps SATA controller.
+	  It can be found on MPC837x and MPC8315.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/ata/pata_bf54x.c:1096:
+static int bfin_std_softreset(struct ata_link *link, unsigned int *classes,
 		unsigned long deadline)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/ata/pata_bf54x.c:1127:
+	classes[0] = ata_dev_try_classify(&ap->link.device[0],
+				devmask & (1 << 0), &err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/ata/pata_bf54x.c:1130:
+		classes[1] = ata_dev_try_classify(&ap->link.device[1],
+					devmask & (1 << 1), &err);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#187: FILE: drivers/ata/pata_bf54x.c:1213:
+	ATAPI_SET_INT_STATUS(base, ATAPI_GET_INT_STATUS(base)|ATAPI_DEV_INT
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#277: FILE: drivers/ata/pata_bf54x.c:1591:
+	switch(bfin_atapi_mode[0]) {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#307: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#312: FILE: drivers/ata/sata_fsl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#313: FILE: drivers/ata/sata_fsl.c:2:
+ * drivers/ata/sata_fsl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#336: FILE: drivers/ata/sata_fsl.c:25:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#356: FILE: drivers/ata/sata_fsl.c:45:
+	 * chained indirect PRDEs upto a max count of 63.
 	                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'contigiously' may be misspelled - perhaps 'contiguously'?
#357: FILE: drivers/ata/sata_fsl.c:46:
+	 * We are allocating an array of 63 PRDEs contigiously, but PRDE#15 will
 	                                          ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#359: FILE: drivers/ata/sata_fsl.c:48:
+	 * (contigious) PRDE. Though chained indirect PRDE arrays are
 	    ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#397: FILE: drivers/ata/sata_fsl.c:86:
+/*
+* Host Controller command register set - per port

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: drivers/ata/sata_fsl.c:270:
+					void __iomem * hcr_base)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#627: FILE: drivers/ata/sata_fsl.c:316:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#630: FILE: drivers/ata/sata_fsl.c:319:
+				     u32 * ttl, dma_addr_t cmd_desc_paddr)

WARNING:TYPO_SPELLING: 'contigiously' may be misspelled - perhaps 'contiguously'?
#637: FILE: drivers/ata/sata_fsl.c:326:
+	 * NOTE : direct & indirect prdt's are contigiously allocated
 	                                       ^^^^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#643: FILE: drivers/ata/sata_fsl.c:332:
+	unsigned indirect_ext_segment_sz = 0;

CHECK:SPACING: No space is necessary after a cast
#718: FILE: drivers/ata/sata_fsl.c:407:
+	ata_tf_to_fis(&qc->tf, 0, 1, (u8 *) & cd->cfis);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#718: FILE: drivers/ata/sata_fsl.c:407:
+	ata_tf_to_fis(&qc->tf, 0, 1, (u8 *) & cd->cfis);
 	                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: drivers/ata/sata_fsl.c:465:
+static int sata_fsl_scr_write(struct ata_port *ap, unsigned int sc_reg_in,
+			       u32 val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/ata/sata_fsl.c:495:
+static int sata_fsl_scr_read(struct ata_port *ap, unsigned int sc_reg_in,
+			u32 *val)

WARNING:TYPO_SPELLING: 'discovey' may be misspelled - perhaps 'discovery'?
#968: FILE: drivers/ata/sata_fsl.c:657:
+	 * discovey will be part of sata_fsl_softreset() callback.
 	   ^^^^^^^^

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#988: FILE: drivers/ata/sata_fsl.c:677:
+	dev_printk(KERN_WARNING, dev, "scr_control, speed limited to %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: drivers/ata/sata_fsl.c:678:
+	dev_printk(KERN_WARNING, dev, "scr_control, speed limited to %x\n",
+			temp);

CHECK:CAMELCASE: Avoid CamelCase: <Serror>
#1051: FILE: drivers/ata/sata_fsl.c:740:
+	u32 Serror;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#1077: FILE: drivers/ata/sata_fsl.c:766:
+		 * Try to offline controller atleast twice
 		                             ^^^^^^^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#1091: FILE: drivers/ata/sata_fsl.c:780:
+	 * PHY reset should remain asserted for atleast 1ms
 	                                        ^^^^^^^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1093: FILE: drivers/ata/sata_fsl.c:782:
+	msleep(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/ata/sata_fsl.c:826:
+	temp = ata_wait_register(hcr_base + HSTATUS, 0xFF, 0x10,
+			500, jiffies_to_msecs(deadline - start_jiffies));

CHECK:SPACING: No space is necessary after a cast
#1162: FILE: drivers/ata/sata_fsl.c:851:
+	cfis = (u8 *) & pp->cmdentry->cfis;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1162: FILE: drivers/ata/sata_fsl.c:851:
+	cfis = (u8 *) & pp->cmdentry->cfis;
 	              ^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1202: FILE: drivers/ata/sata_fsl.c:891:
+	msleep(1);

WARNING:TYPO_SPELLING: 'receving' may be misspelled - perhaps 'receiving'?
#1205: FILE: drivers/ata/sata_fsl.c:894:
+	 * SATA device enters reset state after receving a Control register
 	                                        ^^^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#1288: FILE: drivers/ata/sata_fsl.c:977:
+      check_device_signature:

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#1323: FILE: drivers/ata/sata_fsl.c:1012:
+	DPRINTK("SATA FSL : in xx_hardreset, retval = 0x%d\n", retval);

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1330: FILE: drivers/ata/sata_fsl.c:1019:
+{
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1343: FILE: drivers/ata/sata_fsl.c:1032:
+	if (qc->err_mask) {
+		/* make DMA engine forget about the failed command */
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1346: FILE: drivers/ata/sata_fsl.c:1035:
+
+	}

CHECK:CAMELCASE: Avoid CamelCase: <SError>
#1359: FILE: drivers/ata/sata_fsl.c:1048:
+	u32 hstatus, dereg, cereg = 0, SError = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1427: FILE: drivers/ata/sata_fsl.c:1116:
+	if (qc) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1430: FILE: drivers/ata/sata_fsl.c:1119:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1467: FILE: drivers/ata/sata_fsl.c:1156:
+
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1527: FILE: drivers/ata/sata_fsl.c:1216:
+	unsigned handled = 0;

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1547: FILE: drivers/ata/sata_fsl.c:1236:
+		dev_printk(KERN_WARNING, host->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1669: FILE: drivers/ata/sata_fsl.c:1358:
+static int sata_fsl_probe(struct of_device *ofdev,
+			const struct of_device_id *match)

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1683: FILE: drivers/ata/sata_fsl.c:1372:
+	dev_printk(KERN_INFO, &ofdev->dev,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*r)...) over kmalloc(sizeof(struct resource)...)
#1686: FILE: drivers/ata/sata_fsl.c:1375:
+	r = kmalloc(sizeof(struct resource), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*host_priv)...) over kzalloc(sizeof(struct sata_fsl_host_priv)...)
#1699: FILE: drivers/ata/sata_fsl.c:1388:
+	host_priv = kzalloc(sizeof(struct sata_fsl_host_priv), GFP_KERNEL);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1709: FILE: drivers/ata/sata_fsl.c:1398:
+		dev_printk(KERN_ERR, &ofdev->dev, "invalid irq from platform\n");

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1744: FILE: drivers/ata/sata_fsl.c:1433:
+	if (host_priv)
+		kfree(host_priv);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1765: FILE: drivers/ata/sata_fsl.c:1454:
+static struct of_device_id fsl_sata_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,mpc8315-sata" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#1767: FILE: drivers/ata/sata_fsl.c:1456:
+		.compatible = "fsl,mpc8315-sata",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368698.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 28 warnings, 21 checks, 1696 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368698.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
