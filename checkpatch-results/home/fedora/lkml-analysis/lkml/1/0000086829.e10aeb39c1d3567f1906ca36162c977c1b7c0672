WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
This patch adds exhaustive support for handling SPEC_I_PT=1 processing of fabric dependent

WARNING:TYPO_SPELLING: 'successfuly' may be misspelled - perhaps 'successfully'?
#57: 
after all calling __core_scsi3_add_registration() for a successfuly SPEC_I_PT=1 operation, or during
                                                        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'releated' may be misspelled - perhaps 'related'?
#65: 
in core_scsi3_emulate_pr_out() releated to non 24-byte PROUT Parameter list lengths that is
                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'explictly' may be misspelled - perhaps 'explicitly'?
#66: 
explictly mentioned in spc4r17.
^^^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#166: FILE: drivers/target/target_core_pr.c:481:
+static t10_pr_registration_t *__core_scsi3_alloc_registration(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#200: FILE: drivers/target/target_core_pr.c:513:
+static void __core_scsi3_add_registration(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#232: FILE: drivers/target/target_core_pr.c:557:
+static int core_scsi3_alloc_registration(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/target/target_core_pr.c:569:
+	pr_reg = __core_scsi3_alloc_registration(dev, nacl, deve,
+			sa_res_key, all_tg_pt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/target/target_core_pr.c:574:
+	__core_scsi3_add_registration(dev, nacl, pr_reg,
+			register_type, register_move);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/target/target_core_pr.c:576:
+}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#260: FILE: drivers/target/target_core_pr.c:754:
+static int core_scsi3_decode_spec_i_port(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tidh_new)...) over kzalloc(sizeof(struct pr_transport_id_holder)...)
#290: FILE: drivers/target/target_core_pr.c:784:
+	tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: drivers/target/target_core_pr.c:785:
+                                GFP_KERNEL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/target/target_core_pr.c:785:
+	tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),
+                                GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/target/target_core_pr.c:785:
+                                GFP_KERNEL);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#293: FILE: drivers/target/target_core_pr.c:787:
+		printk(KERN_ERR "Unable to allocate tidh_new\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/target/target_core_pr.c:795:
+                                se_sess->se_node_acl, local_se_deve,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/target/target_core_pr.c:795:
+	local_pr_reg = __core_scsi3_alloc_registration(SE_DEV(cmd),
+                                se_sess->se_node_acl, local_se_deve,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/target/target_core_pr.c:795:
+                                se_sess->se_node_acl, local_se_deve,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/target/target_core_pr.c:796:
+                                sa_res_key, all_tg_pt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/target/target_core_pr.c:796:
+                                sa_res_key, all_tg_pt);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#326: FILE: drivers/target/target_core_pr.c:820:
+		printk(KERN_ERR "SPC-3 PR: Illegal tpdl: %u + 28 byte header"

WARNING:SPLIT_STRING: quoted string split across lines
#327: FILE: drivers/target/target_core_pr.c:821:
+		printk(KERN_ERR "SPC-3 PR: Illegal tpdl: %u + 28 byte header"
+			" does not equal CDB data_length: %u\n", tpdl,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tpg_parse_pr_out_transport_id"
#335: FILE: drivers/target/target_core_pr.c:829:
+	if (TPG_TFO(tpg)->tpg_parse_pr_out_transport_id == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#336: FILE: drivers/target/target_core_pr.c:830:
+		printk(KERN_ERR "SPC-3 SPEC_I_PT: Fabric does not"

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: drivers/target/target_core_pr.c:831:
+		printk(KERN_ERR "SPC-3 SPEC_I_PT: Fabric does not"
+			" containing a valid tpg_parse_pr_out_transport_id"

WARNING:SPLIT_STRING: quoted string split across lines
#338: FILE: drivers/target/target_core_pr.c:832:
+			" containing a valid tpg_parse_pr_out_transport_id"
+			" function pointer\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#349: FILE: drivers/target/target_core_pr.c:843:
+		i_str = TPG_TFO(tpg)->tpg_parse_pr_out_transport_id(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: drivers/target/target_core_pr.c:847:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: drivers/target/target_core_pr.c:848:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Unable to locate"
+				" i_str from Transport ID\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#358: FILE: drivers/target/target_core_pr.c:852:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: drivers/target/target_core_pr.c:853:
+		printk("SPC-3 PR SPEC_I_PT: Got %s data_length: %u tpdl: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#360: FILE: drivers/target/target_core_pr.c:854:
+		printk("SPC-3 PR SPEC_I_PT: Got %s data_length: %u tpdl: %u"
+			" tid_len: %d for %s + %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#365: FILE: drivers/target/target_core_pr.c:859:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Illegal tid_len: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#366: FILE: drivers/target/target_core_pr.c:860:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Illegal tid_len: %u"
+				" for Transport ID: %s\n", tid_len, ptr);

WARNING:TYPO_SPELLING: 'desination' may be misspelled - perhaps 'destination'?
#371: FILE: drivers/target/target_core_pr.c:865:
+		 * Locate the desination initiator ACL to be registered.		
 		              ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/target/target_core_pr.c:865:
+^I^I * Locate the desination initiator ACL to be registered.^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: drivers/target/target_core_pr.c:869:
+			printk(KERN_ERR "Unable to locate %s dest_node_acl"

WARNING:SPLIT_STRING: quoted string split across lines
#376: FILE: drivers/target/target_core_pr.c:870:
+			printk(KERN_ERR "Unable to locate %s dest_node_acl"
+				" for TransportID: %s %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#378: FILE: drivers/target/target_core_pr.c:872:
+				i_str, (iport_ptr != NULL) ? iport_ptr : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: drivers/target/target_core_pr.c:878:
+		ret = configfs_depend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#386: FILE: drivers/target/target_core_pr.c:880:
+			printk(KERN_ERR "configfs_depend_item() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#387: FILE: drivers/target/target_core_pr.c:881:
+			printk(KERN_ERR "configfs_depend_item() failed for"
+				" dest_node_acl->acl_group\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#397: FILE: drivers/target/target_core_pr.c:891:
+		if (iport_ptr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dest_node_acl->nacl_sess"
#399: FILE: drivers/target/target_core_pr.c:893:
+			if (dest_node_acl->nacl_sess == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#400: FILE: drivers/target/target_core_pr.c:894:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: iport_ptr: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#401: FILE: drivers/target/target_core_pr.c:895:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: iport_ptr: %s"
+					" presented in Transport ID, but no "

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: drivers/target/target_core_pr.c:896:
+					" presented in Transport ID, but no "
+					" active nexus exists for %s Fabric"

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: drivers/target/target_core_pr.c:897:
+					" active nexus exists for %s Fabric"
+					" Node: %s\n", iport_ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/target/target_core_pr.c:903:
+				configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+					&dest_node_acl->acl_group.cg_item);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#414: FILE: drivers/target/target_core_pr.c:908:
+			TPG_TFO(tpg)->sess_get_initiator_wwn(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/target/target_core_pr.c:910:
+^I^I^I^I^I&dest_iport[0], 64);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/target/target_core_pr.c:912:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#420: FILE: drivers/target/target_core_pr.c:914:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: dest_iport:"

WARNING:SPLIT_STRING: quoted string split across lines
#421: FILE: drivers/target/target_core_pr.c:915:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: dest_iport:"
+					" %s and iport_ptr: %s do not match!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/target/target_core_pr.c:919:
+				configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+					&dest_node_acl->acl_group.cg_item);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/target/target_core_pr.c:922:
+^I^I^I^Igoto out;^I$

WARNING:TYPO_SPELLING: 'desintation' may be misspelled - perhaps 'destination'?
#432: FILE: drivers/target/target_core_pr.c:926:
+		 * Locate the desintation se_dev_entry_t pointer for the matching
 		              ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/target/target_core_pr.c:934:
+		dest_se_deve = core_get_se_deve_from_rtpi(dest_node_acl,
+					port->sep_rtpi);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/target/target_core_pr.c:936:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#442: FILE: drivers/target/target_core_pr.c:936:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"
+				" from local RTPI: %hu\n",
+				TPG_TFO(tpg)->get_fabric_name(),
+				port->sep_rtpi);

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: drivers/target/target_core_pr.c:937:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"
+				" from local RTPI: %hu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/target/target_core_pr.c:942:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/target/target_core_pr.c:943:
+^I^I^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#453: FILE: drivers/target/target_core_pr.c:947:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#454: FILE: drivers/target/target_core_pr.c:948:
+		printk(KERN_INFO "SPC-3 PR SPEC_I_PT: Located %s Node: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#455: FILE: drivers/target/target_core_pr.c:949:
+		printk(KERN_INFO "SPC-3 PR SPEC_I_PT: Located %s Node: %s"
+			" dest_se_deve mapped_lun: %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/target/target_core_pr.c:959:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/target/target_core_pr.c:961:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tidh_new)...) over kzalloc(sizeof(struct pr_transport_id_holder)...)
#477: FILE: drivers/target/target_core_pr.c:971:
+		tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/target/target_core_pr.c:972:
+		tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: drivers/target/target_core_pr.c:974:
+			printk(KERN_ERR "Unable to allocate tidh_new\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/target/target_core_pr.c:999:
+		dest_pr_reg = __core_scsi3_alloc_registration(SE_DEV(cmd),
+				dest_node_acl, dest_se_deve,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/target/target_core_pr.c:1001:
+^I^Iif (!(dest_pr_reg)) { $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/target/target_core_pr.c:1003:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/target/target_core_pr.c:1005:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#522: FILE: drivers/target/target_core_pr.c:1016:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/target/target_core_pr.c:1040:
+		__core_scsi3_add_registration(SE_DEV(cmd), dest_node_acl,
+					dest_pr_reg, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#548: FILE: drivers/target/target_core_pr.c:1042:
+		printk(KERN_INFO "SPC-3 PR [%s] SPEC_I_PT: Successfully"

WARNING:SPLIT_STRING: quoted string split across lines
#549: FILE: drivers/target/target_core_pr.c:1043:
+		printk(KERN_INFO "SPC-3 PR [%s] SPEC_I_PT: Successfully"
+			" registered Transport ID for Node: %s Mapped LUN:"

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: drivers/target/target_core_pr.c:1044:
+			" registered Transport ID for Node: %s Mapped LUN:"
+			" %u\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/target/target_core_pr.c:1052:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: drivers/target/target_core_pr.c:1054:
+^I^I^I&dest_node_acl->acl_group.cg_item);^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/target/target_core_pr.c:1054:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_node_acl->acl_group.cg_item);		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: drivers/target/target_core_pr.c:1068:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/target/target_core_pr.c:1072:
+^I^Ikmem_cache_free(t10_pr_reg_cache, dest_pr_reg);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/target/target_core_pr.c:1073:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/target/target_core_pr.c:1078:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/target/target_core_pr.c:1080:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_node_acl->acl_group.cg_item);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: drivers/target/target_core_pr.c:1082:
+^Ireturn ret;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: drivers/target/target_core_pr.c:1154:
+			ret = core_scsi3_decode_spec_i_port(cmd, se_tpg,
+						sa_res_key, all_tg_pt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#625: FILE: drivers/target/target_core_pr.c:2256:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: drivers/target/target_core_pr.c:2257:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"
+			" initiator_str from Transport ID\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data_length != 24'
#645: FILE: drivers/target/target_core_pr.c:2587:
+	if (!(spec_i_pt) && ((cdb[1] & 0x1f) != PRO_REGISTER_AND_MOVE) &&
+	    (cmd->data_length != 24)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'Recieved' may be misspelled - perhaps 'Received'?
#647: FILE: drivers/target/target_core_pr.c:2589:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"
 		                             ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#647: FILE: drivers/target/target_core_pr.c:2589:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"

WARNING:SPLIT_STRING: quoted string split across lines
#648: FILE: drivers/target/target_core_pr.c:2590:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"
+			" list length: %u\n", cmd->data_length);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#674: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#674: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#674: FILE: include/target/target_core_fabric_ops.h:12:
+	char *(*tpg_parse_pr_out_transport_id)(const char *, u32 *, char **);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 50 warnings, 35 checks, 534 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
