CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: arch/s390/include/asm/idals.h:49:
+	return ((__pa(vaddr) & (IDA_BLOCK_SIZE-1)) + length +
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#68: FILE: arch/s390/include/asm/idals.h:50:
+		(IDA_BLOCK_SIZE-1)) >> IDA_SIZE_LOG;
 		               ^

WARNING:SPLIT_STRING: quoted string split across lines
#102: FILE: drivers/s390/block/dasd_3990_erp.c:1579:
+			      "32 bit sense, action 1B is not defined"
+			      " in transport mode - just retry");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: drivers/s390/block/dasd_3990_erp.c:1734:
+			      "32 bit sense, action 1B, update,"
+			      " in transport mode - just retry");

CHECK:SPACING: No space is necessary after a cast
#212: FILE: drivers/s390/block/dasd_3990_erp.c:2280:
+	erp = dasd_alloc_erp_request((char *) &cqr->magic,

CHECK:SPACING: No space is necessary after a cast
#233: FILE: drivers/s390/block/dasd_3990_erp.c:2303:
+		tsb = (struct tsb *) &tcw[1];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sense1[27] == sense2[27]'
#297: FILE: drivers/s390/block/dasd_3990_erp.c:2405:
+	if (!(sense1 && sense2 &&
+	      (memcmp(sense1, sense2, 3) == 0) &&
+	      (sense1[27] == sense2[27]) &&
+	      (sense1[25] == sense2[25]))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sense1[25] == sense2[25]'
#297: FILE: drivers/s390/block/dasd_3990_erp.c:2405:
+	if (!(sense1 && sense2 &&
+	      (memcmp(sense1, sense2, 3) == 0) &&
+	      (sense1[27] == sense2[27]) &&
+	      (sense1[25] == sense2[25]))) {

WARNING:SPACING: space prohibited before semicolon
#392: FILE: drivers/s390/block/dasd_alias.c:656:
+	ccw->flags = 0 ;

CHECK:SPACING: No space is necessary after a cast
#394: FILE: drivers/s390/block/dasd_alias.c:658:
+	ccw->cda = (__u32)(addr_t) cqr->data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/s390/block/dasd_alias.c:868:
+		DBF_DEV_EVENT(DBF_NOTICE, device, "%s %x",
+			    "eckd handle summary unit check: reason", reason);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/s390/block/dasd_alias.c:871:
+		DBF_DEV_EVENT(DBF_WARNING, device, "%s",
+			    "eckd handle summary unit check:"

WARNING:SPLIT_STRING: quoted string split across lines
#417: FILE: drivers/s390/block/dasd_alias.c:872:
+			    "eckd handle summary unit check:"
+			    " no reason code available");

CHECK:SPACING: No space is necessary after a cast
#443: FILE: drivers/s390/block/dasd.c:862:
+					 (long) cqr, cqr->lpm);

CHECK:SPACING: No space is necessary after a cast
#446: FILE: drivers/s390/block/dasd.c:865:
+				      (long) cqr, cqr->lpm, 0);

WARNING:TYPO_SPELLING: 'segement' may be misspelled - perhaps 'segment'?
#513: FILE: drivers/s390/block/dasd.c:2004:
+	/* with page sized segments we can translate each segement into
 	                                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'allways' may be misspelled - perhaps 'always'?
#527: FILE: drivers/s390/block/dasd.c:2448:
+ *   data in different places. The sense data itself is allways
                                                         ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irb->scsw.tm.fcxs == 0x01'
#536: FILE: drivers/s390/block/dasd.c:2457:
+	if (scsw_is_tm(&irb->scsw) && (irb->scsw.tm.fcxs == 0x01)) {

CHECK:SPACING: No space is necessary after a cast
#634: FILE: drivers/s390/block/dasd_eckd.c:318:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: drivers/s390/block/dasd_eckd.c:409:
+		DBF_DEV_EVENT(DBF_ERR, device,
+			    "fill LRE unknown opcode 0x%x", cmd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#726: FILE: drivers/s390/block/dasd_eckd.c:410:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: drivers/s390/block/dasd_eckd.c:448:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: drivers/s390/block/dasd_eckd.c:511:
+		DBF_DEV_EVENT(DBF_ERR, basedev,
+			    "PFX LRE unknown opcode 0x%x", cmd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#830: FILE: drivers/s390/block/dasd_eckd.c:512:
+		BUG();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irb->ecw[7] == 0x0D'
#959: FILE: drivers/s390/block/dasd_eckd.c:1680:
+	if ((scsw_dstat(&irb->scsw) & DEV_STAT_UNIT_CHECK) &&
 	    (irb->ecw[7] == 0x0D)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: drivers/s390/block/dasd_eckd.c:1720:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1002: FILE: drivers/s390/block/dasd_eckd.c:1721:
+static struct dasd_ccw_req *dasd_eckd_build_cp_cmd_single(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1053: FILE: drivers/s390/block/dasd_eckd.c:1907:
+static struct dasd_ccw_req *dasd_eckd_build_cp_cmd_track(

CHECK:SPACING: No space is necessary after a cast
#1085: FILE: drivers/s390/block/dasd_eckd.c:1939:
+	private = (struct dasd_eckd_private *) basedev->private;

CHECK:SPACING: No space is necessary after a cast
#1142: FILE: drivers/s390/block/dasd_eckd.c:1996:
+	idaws = (unsigned long *) (cqr->data + sizeof(struct PFX_eckd_data));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1191: FILE: drivers/s390/block/dasd_eckd.c:2045:
+			if (!(__pa(idaw_dst + idaw_len) & (IDA_BLOCK_SIZE-1)))
 			                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1246: FILE: drivers/s390/block/dasd_eckd.c:2100:
+
+

CHECK:SPACING: No space is necessary after a cast
#1248: FILE: drivers/s390/block/dasd_eckd.c:2102:
+	basepriv = (struct dasd_eckd_private *) basedev->private;

CHECK:SPACING: No space is necessary after a cast
#1249: FILE: drivers/s390/block/dasd_eckd.c:2103:
+	startpriv = (struct dasd_eckd_private *) startdev->private;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1292: FILE: drivers/s390/block/dasd_eckd.c:2146:
+		BUG();

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1309: FILE: drivers/s390/block/dasd_eckd.c:2163:
+	    dedata->attributes.operation == DASD_SEQ_ACCESS) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: drivers/s390/block/dasd_eckd.c:2203:
+	dcw = itcw_add_dcw(itcw, pfx_cmd, 0,
+		     &pfxdata, sizeof(pfxdata), total_data_size);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1354: FILE: drivers/s390/block/dasd_eckd.c:2208:
+static struct dasd_ccw_req *dasd_eckd_build_cp_tpm_track(

CHECK:SPACING: No space is necessary after a cast
#1382: FILE: drivers/s390/block/dasd_eckd.c:2236:
+	private = (struct dasd_eckd_private *) basedev->private;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1383: FILE: drivers/s390/block/dasd_eckd.c:2237:
+	if (rq_data_dir(req) == READ) {
[...]
+	} else if (rq_data_dir(req) == WRITE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1389: FILE: drivers/s390/block/dasd_eckd.c:2243:
+	} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1413: FILE: drivers/s390/block/dasd_eckd.c:2267:
+	cqr->expires = 100*HZ;
 	                  ^

CHECK:SPACING: No space is necessary after a cast
#1489: FILE: drivers/s390/block/dasd_eckd.c:2343:
+	private = (struct dasd_eckd_private *) basedev->private;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1495: FILE: drivers/s390/block/dasd_eckd.c:2349:
+	first_rec = first_trk = req->sector >> block->s2b_shift;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1497: FILE: drivers/s390/block/dasd_eckd.c:2351:
+	last_rec = last_trk =

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1500: FILE: drivers/s390/block/dasd_eckd.c:2354:
+	cdlspecial = (private->uses_cdl && first_rec < 2*blk_per_trk);
 	                                                ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1515: FILE: drivers/s390/block/dasd_eckd.c:2369:
+		/* do nothing, just fall through to the cmd mode single case */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1518: FILE: drivers/s390/block/dasd_eckd.c:2372:
+		cqr = dasd_eckd_build_cp_tpm_track(startdev, block, req,
+						    first_rec, last_rec,

CHECK:SPACING: No space is necessary after a cast
#1606: FILE: drivers/s390/block/dasd_eckd.c:2572:
+	ccw->cda = (__u32)(addr_t) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#1630: FILE: drivers/s390/block/dasd_eckd.c:2615:
+	ccw->cda = (__u32)(addr_t) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#1654: FILE: drivers/s390/block/dasd_eckd.c:2657:
+	ccw->cda = (__u32)(addr_t) cqr->data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1664: FILE: drivers/s390/block/dasd_eckd.c:2966:
+static void dasd_eckd_dump_sense_ccw(struct dasd_device *device,
 				 struct dasd_ccw_req *req, struct irb *irb)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1680: FILE: drivers/s390/block/dasd_eckd.c:3060:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1685: FILE: drivers/s390/block/dasd_eckd.c:3065:
+static void dasd_eckd_dump_sense_tcw(struct dasd_device *device,
+				 struct dasd_ccw_req *req, struct irb *irb)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1693: FILE: drivers/s390/block/dasd_eckd.c:3073:
+
+

CHECK:SPACING: No space is necessary after a cast
#1694: FILE: drivers/s390/block/dasd_eckd.c:3074:
+	page = (char *) get_zeroed_page(GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#1695: FILE: drivers/s390/block/dasd_eckd.c:3075:
+	if (page == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#1706: FILE: drivers/s390/block/dasd_eckd.c:3086:
+		       " in req: %p CS: 0x%02X DS: 0x%02X "
+		       "fcxs: 0x%02X schxs: 0x%02X\n", req,

CHECK:SPACING: No space is necessary after a cast
#1712: FILE: drivers/s390/block/dasd_eckd.c:3092:
+		       (void *) (addr_t) irb->scsw.tm.tcw);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1717: FILE: drivers/s390/block/dasd_eckd.c:3097:
+		tsb = tcw_get_tsb(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irb->scsw.tm.fcxs == 0x01'
#1720: FILE: drivers/s390/block/dasd_eckd.c:3100:
+	if (tsb && (irb->scsw.tm.fcxs == 0x01)) {

WARNING:TYPO_SPELLING: 'supportet' may be misspelled - perhaps 'supporter'?
#1768: FILE: drivers/s390/block/dasd_eckd.c:3148:
+				      " tsb->tsa.intrg.: not supportet yet \n");
 				                             ^^^^^^^^^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1768: FILE: drivers/s390/block/dasd_eckd.c:3148:
+				      " tsb->tsa.intrg.: not supportet yet \n");

WARNING:SPLIT_STRING: quoted string split across lines
#1789: FILE: drivers/s390/block/dasd_eckd.c:3169:
+					" 24 Byte: %x MSG %x, "
+					"%s MSGb to SYSOP\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1796: FILE: drivers/s390/block/dasd_eckd.c:3176:
+					" 32 Byte: Format: %x "
+					"Exception class %x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1807: FILE: drivers/s390/block/dasd_eckd.c:3187:
+	printk("%s", page);

CHECK:SPACING: No space is necessary after a cast
#1808: FILE: drivers/s390/block/dasd_eckd.c:3188:
+	free_page((unsigned long) page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1820: FILE: drivers/s390/block/dasd_eckd.c:3200:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1859: FILE: drivers/s390/block/dasd_eckd.h:156:
+	} __attribute__ ((packed)) operation;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1868: FILE: drivers/s390/block/dasd_eckd.h:165:
+	} __attribute__ ((packed)) auxiliary;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1879: FILE: drivers/s390/block/dasd_eckd.h:176:
+} __attribute__ ((packed));

CHECK:SPACING: No space is necessary after a cast
#1955: FILE: drivers/s390/block/dasd_eer.c:479:
+	ccw->cda = (__u32)(addr_t) cqr->data;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irb *' should also have an identifier name
#1977: FILE: drivers/s390/block/dasd_int.h:582:
+char *dasd_get_sense(struct irb *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162533.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 52 checks, 1837 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162533.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
