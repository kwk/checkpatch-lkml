WARNING:TYPO_SPELLING: 'aggresive' may be misspelled - perhaps 'aggressive'?
#32: 
Not so aggresive as previous version.
       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'enconding' may be misspelled - perhaps 'encoding'?
#43: 
But it's not just pointer. (we use special 1bit enconding for anon.)
                                                ^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Although there is historical consensus that page->mapping points to its inode's

WARNING:TYPO_SPELLING: 'functon' may be misspelled - perhaps 'function'?
#46: 
address space, I think adding some neat helper functon is not bad.
                                               ^^^^^^^

WARNING:TYPO_SPELLING: 'containes' may be misspelled - perhaps 'contains'?
#48: 
This patch adds page-cache.h which containes page<->address_space<->inode
                                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Followings' may be misspelled - perhaps 'Following'?
#59: 
Followings are moved 
^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: include/linux/page-cache.h:1:
+#ifndef _LINUX_PAGE_CACHE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/page-cache.h:76:
+        else if (unlikely((unsigned long)mapping & PAGE_MAPPING_ANON))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/page-cache.h:76:
+        else if (unlikely((unsigned long)mapping & PAGE_MAPPING_ANON))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/linux/page-cache.h:78:
+        return mapping;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/page-cache.h:78:
+        return mapping;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#166: FILE: include/linux/page-cache.h:80:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping_cache"
#170: FILE: include/linux/page-cache.h:84:
+	return (page_mapping_cache(page) != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#179: FILE: include/linux/page-cache.h:93:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: include/linux/page-cache.h:111:
+	struct address_space *check = page_mapping_cache(page);
+	return (check == mapping);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/linux/page-cache.h:115:
+extern int remove_mapping(struct address_space *mapping, struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: include/linux/fs.h:521:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: include/linux/fs.h:524:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 6 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379301.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
