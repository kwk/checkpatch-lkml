WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
I'm using "%x:%x:%x:%x:%x:%x:%x:%x" to make the output as short as possible.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: fs/tomoyo_network.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#58: FILE: fs/tomoyo_network.c:2:
+ * fs/tomoyo_network.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: fs/tomoyo_network.c:41:
+	int len2;
+	if (ccs_can_save_audit_log(is_granted) < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: fs/tomoyo_network.c:73:
+	u8 i = block_size;
+	if (!addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: fs/tomoyo_network.c:127:
+	bool found = false;
+	if (!ccs_is_correct_path(group_name, 0, 0, 0, __func__) ||

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#192: FILE: fs/tomoyo_network.c:136:
+	saved_min_address
+		= save_ipv6_address((struct in6_addr *) min_address);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: No space is necessary after a cast
#192: FILE: fs/tomoyo_network.c:136:
+		= save_ipv6_address((struct in6_addr *) min_address);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#194: FILE: fs/tomoyo_network.c:138:
+	saved_max_address
+		= save_ipv6_address((struct in6_addr *) max_address);

CHECK:SPACING: No space is necessary after a cast
#194: FILE: fs/tomoyo_network.c:138:
+		= save_ipv6_address((struct in6_addr *) max_address);

CHECK:SPACING: No space is necessary after a cast
#211: FILE: fs/tomoyo_network.c:155:
+				if (member->min.ipv4 != *(u32 *) min_address ||

CHECK:SPACING: No space is necessary after a cast
#212: FILE: fs/tomoyo_network.c:156:
+				    member->max.ipv4 != *(u32 *) max_address)

CHECK:SPACING: No space is necessary after a cast
#243: FILE: fs/tomoyo_network.c:187:
+		new_member->min.ipv4 = *(u32 *) min_address;

CHECK:SPACING: No space is necessary after a cast
#244: FILE: fs/tomoyo_network.c:188:
+		new_member->max.ipv4 = *(u32 *) max_address;

WARNING:LINE_SPACING: Missing a blank line after declarations
#269: FILE: fs/tomoyo_network.c:213:
+	char *cp = strchr(data, ' ');
+	if (!cp)

WARNING:SPLIT_STRING: quoted string split across lines
#273: FILE: fs/tomoyo_network.c:217:
+	count = sscanf(cp, "%hx:%hx:%hx:%hx:%hx:%hx:%hx:%hx"
+		       "-%hx:%hx:%hx:%hx:%hx:%hx:%hx:%hx",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: fs/tomoyo_network.c:228:
+		u8 i;
+		for (i = 0; i < 8; i++) {

CHECK:SPACING: No space is necessary after a cast
#299: FILE: fs/tomoyo_network.c:243:
+		u32 ip = ((((u8) min_address[0]) << 24)

CHECK:SPACING: No space is necessary after a cast
#300: FILE: fs/tomoyo_network.c:244:
+			  + (((u8) min_address[1]) << 16)

CHECK:SPACING: No space is necessary after a cast
#301: FILE: fs/tomoyo_network.c:245:
+			  + (((u8) min_address[2]) << 8)

CHECK:SPACING: No space is necessary after a cast
#302: FILE: fs/tomoyo_network.c:246:
+			  + (u8) min_address[3]);

CHECK:SPACING: No space is necessary after a cast
#303: FILE: fs/tomoyo_network.c:247:
+		*(u32 *) min_address = ip;

CHECK:SPACING: No space is necessary after a cast
#305: FILE: fs/tomoyo_network.c:249:
+			ip = ((((u8) max_address[0]) << 24)

CHECK:SPACING: No space is necessary after a cast
#306: FILE: fs/tomoyo_network.c:250:
+			      + (((u8) max_address[1]) << 16)

CHECK:SPACING: No space is necessary after a cast
#307: FILE: fs/tomoyo_network.c:251:
+			      + (((u8) max_address[2]) << 8)

CHECK:SPACING: No space is necessary after a cast
#308: FILE: fs/tomoyo_network.c:252:
+			      + (u8) max_address[3]);

CHECK:SPACING: No space is necessary after a cast
#309: FILE: fs/tomoyo_network.c:253:
+		*(u32 *) max_address = ip;

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: fs/tomoyo_network.c:275:
+	struct address_group_entry *group;
+	for (i = 0; i <= 1; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: fs/tomoyo_network.c:282:
+			const u16 dummy[2] = { 0, 0 };
+			update_address_group_entry(group_name, false,

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#348: FILE: fs/tomoyo_network.c:292:
+ * address_matches_to_group - Check whether the given address matches members of the given address group.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#361: FILE: fs/tomoyo_network.c:305:
+	const u32 ip = ntohl(*address);
+	list1_for_each_entry(member, &group->address_group_member_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: fs/tomoyo_network.c:333:
+	struct list1_head *mpos;
+	list1_for_each_cookie(gpos, head->read_var1, &address_group_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: fs/tomoyo_network.c:335:
+		struct address_group_entry *group;
+		group = list1_entry(gpos, struct address_group_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: fs/tomoyo_network.c:340:
+			struct address_group_member *member;
+			member = list1_entry(mpos, struct address_group_member,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#402: FILE: fs/tomoyo_network.c:346:
+				const struct in6_addr *min_address
+					= member->min.ipv6;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#404: FILE: fs/tomoyo_network.c:348:
+				const struct in6_addr *max_address
+					= member->max.ipv6;

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: fs/tomoyo_network.c:361:
+				const u32 max_address = member->max.ipv4;
+				memset(buf, 0, sizeof(buf));

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: fs/tomoyo_network.c:366:
+					const int len = strlen(buf);
+					snprintf(buf + len,

WARNING:LINE_SPACING: Missing a blank line after declarations
#465: FILE: fs/tomoyo_network.c:409:
+	const char *keyword = "unknown";
+	switch (operation) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: fs/tomoyo_network.c:470:
+	const struct in6_addr *saved_max_address = NULL;
+	if (!domain)

CHECK:SPACING: No space is necessary after a cast
#530: FILE: fs/tomoyo_network.c:474:
+	saved_min_address = save_ipv6_address((struct in6_addr *) min_address);

CHECK:SPACING: No space is necessary after a cast
#531: FILE: fs/tomoyo_network.c:475:
+	saved_max_address = save_ipv6_address((struct in6_addr *) max_address);

WARNING:LINE_SPACING: Missing a blank line after declarations
#637: FILE: fs/tomoyo_network.c:581:
+	char buf[64];
+	if (!mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#641: FILE: fs/tomoyo_network.c:585:
+		struct ip_network_acl_record *acl;
+		if (ccs_acl_type2(ptr) != TYPE_IP_NETWORK_ACL)

CHECK:SPACING: No space is necessary after a cast
#668: FILE: fs/tomoyo_network.c:612:
+			       (const struct in6_addr *) address);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#675: FILE: fs/tomoyo_network.c:619:
+		printk(KERN_WARNING "TOMOYO-%s: %s to %s %u denied for %s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#680: FILE: fs/tomoyo_network.c:624:
+		return ccs_check_supervisor("%s\n" KEYWORD_ALLOW_NETWORK "%s "
+					    "%s %u\n", domain->domainname->name,

WARNING:LINE_SPACING: Missing a blank line after declarations
#715: FILE: fs/tomoyo_network.c:659:
+	char *cp2;
+	if (!cp1)

WARNING:SPLIT_STRING: quoted string split across lines
#763: FILE: fs/tomoyo_network.c:707:
+	count = sscanf(cp2, "%hx:%hx:%hx:%hx:%hx:%hx:%hx:%hx"
+		       "-%hx:%hx:%hx:%hx:%hx:%hx:%hx:%hx",

WARNING:LINE_SPACING: Missing a blank line after declarations
#774: FILE: fs/tomoyo_network.c:718:
+		u8 i;
+		for (i = 0; i < 8; i++) {

CHECK:SPACING: No space is necessary after a cast
#789: FILE: fs/tomoyo_network.c:733:
+		u32 ip = htonl((((u8) min_address[0]) << 24)

CHECK:SPACING: No space is necessary after a cast
#790: FILE: fs/tomoyo_network.c:734:
+			       + (((u8) min_address[1]) << 16)

CHECK:SPACING: No space is necessary after a cast
#791: FILE: fs/tomoyo_network.c:735:
+			       + (((u8) min_address[2]) << 8)

CHECK:SPACING: No space is necessary after a cast
#792: FILE: fs/tomoyo_network.c:736:
+			       + (u8) min_address[3]);

CHECK:SPACING: No space is necessary after a cast
#793: FILE: fs/tomoyo_network.c:737:
+		*(u32 *) min_address = ip;

CHECK:SPACING: No space is necessary after a cast
#795: FILE: fs/tomoyo_network.c:739:
+			ip = htonl((((u8) max_address[0]) << 24)

CHECK:SPACING: No space is necessary after a cast
#796: FILE: fs/tomoyo_network.c:740:
+				   + (((u8) max_address[1]) << 16)

CHECK:SPACING: No space is necessary after a cast
#797: FILE: fs/tomoyo_network.c:741:
+				   + (((u8) max_address[2]) << 8)

CHECK:SPACING: No space is necessary after a cast
#798: FILE: fs/tomoyo_network.c:742:
+				   + (u8) max_address[3]);

CHECK:SPACING: No space is necessary after a cast
#799: FILE: fs/tomoyo_network.c:743:
+		*(u32 *) max_address = ip;

CHECK:SPACING: No space is necessary after a cast
#821: FILE: fs/tomoyo_network.c:765:
+				    (u32 *) min_address, (u32 *) max_address,

CHECK:SPACING: No space is necessary after a cast
#839: FILE: fs/tomoyo_network.c:783:
+				   (const u32 *) address, ntohs(port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#856: FILE: fs/tomoyo_network.c:800:
+	u8 operation;
+	switch (sock_type) {

CHECK:SPACING: No space is necessary after a cast
#866: FILE: fs/tomoyo_network.c:810:
+	return check_network_entry(is_ipv6, operation, (const u32 *) address,

WARNING:LINE_SPACING: Missing a blank line after declarations
#884: FILE: fs/tomoyo_network.c:828:
+	u8 operation;
+	switch (sock_type) {

CHECK:SPACING: No space is necessary after a cast
#894: FILE: fs/tomoyo_network.c:838:
+	return check_network_entry(is_ipv6, operation, (const u32 *) address,

WARNING:LINE_SPACING: Missing a blank line after declarations
#911: FILE: fs/tomoyo_network.c:855:
+	int retval;
+	current->tomoyo_flags |= CCS_DONT_SLEEP_ON_ENFORCE_ERROR;

CHECK:SPACING: No space is necessary after a cast
#913: FILE: fs/tomoyo_network.c:857:
+				     (const u32 *) address, ntohs(port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#932: FILE: fs/tomoyo_network.c:876:
+	u8 operation;
+	if (sock_type == SOCK_DGRAM)

CHECK:SPACING: No space is necessary after a cast
#936: FILE: fs/tomoyo_network.c:880:
+	return check_network_entry(is_ipv6, operation, (const u32 *) address,

WARNING:LINE_SPACING: Missing a blank line after declarations
#954: FILE: fs/tomoyo_network.c:898:
+	int retval;
+	const u8 operation

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#955: FILE: fs/tomoyo_network.c:899:
+	const u8 operation
+		= (sock_type == SOCK_DGRAM) ?

CHECK:SPACING: No space is necessary after a cast
#958: FILE: fs/tomoyo_network.c:902:
+	retval = check_network_entry(is_ipv6, operation, (const u32 *) address,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 32 warnings, 41 checks, 906 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299130.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
