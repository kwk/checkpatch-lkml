WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1878: FILE: drivers/usb/host/xhci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1896: FILE: drivers/usb/host/xhci.c:19:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1897: FILE: drivers/usb/host/xhci.c:20:
+ * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1911: FILE: drivers/usb/host/xhci.c:34:
+module_param(link_quirk, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: drivers/usb/host/xhci.c:52:
+static int handshake(struct xhci_hcd *xhci, void __iomem *ptr,
+		      u32 mask, u32 done, int usec)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2011: FILE: drivers/usb/host/xhci.c:134:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2012: FILE: drivers/usb/host/xhci.c:135:
+#if 0

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*xhci->msix_entries)...) over kmalloc(sizeof(struct msix_entry)...)
#2021: FILE: drivers/usb/host/xhci.c:144:
+	xhci->msix_entries = kmalloc(sizeof(struct msix_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2023: FILE: drivers/usb/host/xhci.c:146:
+	if (!xhci->msix_entries) {
+		xhci_err(xhci, "Failed to allocate MSI-X entries\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2039: FILE: drivers/usb/host/xhci.c:162:
+	ret = request_irq(xhci->msix_entries[0].vector, &xhci_irq, 0,
+			"xHCI", xhci_to_hcd(xhci));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2060: FILE: drivers/usb/host/xhci.c:183:
+	struct pci_dev *pdev = to_pci_dev(xhci_to_hcd(xhci)->self.controller);
+	if (!xhci->msix_entries)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_init', this function's name, in a string
#2083: FILE: drivers/usb/host/xhci.c:206:
+	xhci_dbg(xhci, "xhci_init\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_init', this function's name, in a string
#2092: FILE: drivers/usb/host/xhci.c:215:
+	xhci_dbg(xhci, "Finished xhci_init\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2128: FILE: drivers/usb/host/xhci.c:251:
+		xhci_dbg(xhci, "xHCI dying, ignoring interrupt. "
+				"Shouldn't IRQs be disabled?\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2171: FILE: drivers/usb/host/xhci.c:294:
+	xhci_dbg(xhci, "@%llx %08x %08x %08x %08x\n",
+			(unsigned long long)xhci_trb_virt_to_dma(xhci->event_ring->deq_seg, trb),

CHECK:SPACING: No space is necessary after a cast
#2174: FILE: drivers/usb/host/xhci.c:297:
+			(unsigned int) trb->link.intr_target,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#2175: FILE: drivers/usb/host/xhci.c:298:
+			(unsigned int) trb->link.control);

CHECK:SPACING: No space is necessary after a cast
#2198: FILE: drivers/usb/host/xhci.c:321:
+	struct xhci_hcd *xhci = (struct xhci_hcd *) arg;

CHECK:SPACING: No space is necessary after a cast
#2222: FILE: drivers/usb/host/xhci.c:345:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#2222: FILE: drivers/usb/host/xhci.c:345:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#2222: FILE: drivers/usb/host/xhci.c:345:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2232: FILE: drivers/usb/host/xhci.c:355:
+			struct xhci_ring *ring = xhci->devs[i]->eps[j].ring;
+			if (!ring)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_run', this function's name, in a string
#2273: FILE: drivers/usb/host/xhci.c:396:
+	xhci_dbg(xhci, "xhci_run\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2274: FILE: drivers/usb/host/xhci.c:397:
+#if 0	/* FIXME: MSI not setup yet */

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2280: FILE: drivers/usb/host/xhci.c:403:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: No space is necessary after a cast
#2284: FILE: drivers/usb/host/xhci.c:407:
+	xhci->event_ring_timer.data = (unsigned long) xhci;

CHECK:SPACING: No space is necessary after a cast
#2305: FILE: drivers/usb/host/xhci.c:428:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#2305: FILE: drivers/usb/host/xhci.c:428:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#2305: FILE: drivers/usb/host/xhci.c:428:
+	xhci_dbg(xhci, "ERST deq = 64'h%0lx\n", (long unsigned int) temp_64);

CHECK:SPACING: No space is necessary after a cast
#2310: FILE: drivers/usb/host/xhci.c:433:
+	temp |= (u32) 160;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2318: FILE: drivers/usb/host/xhci.c:441:
+	xhci_dbg(xhci, "// Enable interrupts, cmd = 0x%x.\n",
+			temp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2323: FILE: drivers/usb/host/xhci.c:446:
+	xhci_dbg(xhci, "// Enabling event ring interrupter %p by writing 0x%x to irq_pending\n",
+			xhci->ir_set, (unsigned int) ER_IRQ_ENABLE(temp));

CHECK:SPACING: No space is necessary after a cast
#2323: FILE: drivers/usb/host/xhci.c:446:
+			xhci->ir_set, (unsigned int) ER_IRQ_ENABLE(temp));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2325: FILE: drivers/usb/host/xhci.c:448:
+	xhci_writel(xhci, ER_IRQ_ENABLE(temp),
+			&xhci->ir_set->irq_pending);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2334: FILE: drivers/usb/host/xhci.c:457:
+	xhci_dbg(xhci, "// Turn on HC, cmd = 0x%x.\n",
+			temp);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_run', this function's name, in a string
#2342: FILE: drivers/usb/host/xhci.c:465:
+	xhci_dbg(xhci, "Finished xhci_run\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2365: FILE: drivers/usb/host/xhci.c:488:
+#if 0	/* No MSI yet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2379: FILE: drivers/usb/host/xhci.c:502:
+	xhci_writel(xhci, ER_IRQ_DISABLE(temp),
+			&xhci->ir_set->irq_pending);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_stop', this function's name, in a string
#2384: FILE: drivers/usb/host/xhci.c:507:
+	xhci_dbg(xhci, "xhci_stop completed - status = %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2385: FILE: drivers/usb/host/xhci.c:508:
+	xhci_dbg(xhci, "xhci_stop completed - status = %x\n",
+		    xhci_readl(xhci, &xhci->op_regs->status));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2403: FILE: drivers/usb/host/xhci.c:526:
+#if 0

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xhci_shutdown', this function's name, in a string
#2407: FILE: drivers/usb/host/xhci.c:530:
+	xhci_dbg(xhci, "xhci_shutdown completed - status = %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2408: FILE: drivers/usb/host/xhci.c:531:
+	xhci_dbg(xhci, "xhci_shutdown completed - status = %x\n",
+		    xhci_readl(xhci, &xhci->op_regs->status));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2426: FILE: drivers/usb/host/xhci.c:549:
+	unsigned int index;
+	if (usb_endpoint_xfer_control(desc))

CHECK:SPACING: No space is necessary after a cast
#2427: FILE: drivers/usb/host/xhci.c:550:
+		index = (unsigned int) (usb_endpoint_num(desc)*2);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2427: FILE: drivers/usb/host/xhci.c:550:
+		index = (unsigned int) (usb_endpoint_num(desc)*2);
 		                                              ^

CHECK:SPACING: No space is necessary after a cast
#2429: FILE: drivers/usb/host/xhci.c:552:
+		index = (unsigned int) (usb_endpoint_num(desc)*2) +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2429: FILE: drivers/usb/host/xhci.c:552:
+		index = (unsigned int) (usb_endpoint_num(desc)*2) +
 		                                              ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2466: FILE: drivers/usb/host/xhci.c:589:
+int xhci_check_args(struct usb_hcd *hcd, struct usb_device *udev,
+		struct usb_host_endpoint *ep, int check_ep, const char *func) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2467: FILE: drivers/usb/host/xhci.c:590:
+int xhci_check_args(struct usb_hcd *hcd, struct usb_device *udev,
+		struct usb_host_endpoint *ep, int check_ep, const char *func) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2469: FILE: drivers/usb/host/xhci.c:592:
+		printk(KERN_DEBUG "xHCI %s called with invalid args\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2470: FILE: drivers/usb/host/xhci.c:593:
+		printk(KERN_DEBUG "xHCI %s called with invalid args\n",
+				func);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2474: FILE: drivers/usb/host/xhci.c:597:
+		printk(KERN_DEBUG "xHCI %s called for root hub\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2475: FILE: drivers/usb/host/xhci.c:598:
+		printk(KERN_DEBUG "xHCI %s called for root hub\n",
+				func);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2479: FILE: drivers/usb/host/xhci.c:602:
+		printk(KERN_DEBUG "xHCI %s called with unaddressed device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2480: FILE: drivers/usb/host/xhci.c:603:
+		printk(KERN_DEBUG "xHCI %s called with unaddressed device\n",
+				func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2487: FILE: drivers/usb/host/xhci.c:610:
+static int xhci_configure_endpoint(struct xhci_hcd *xhci,
+		struct usb_device *udev, struct xhci_command *command,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2497: FILE: drivers/usb/host/xhci.c:620:
+static int xhci_check_maxpacket(struct xhci_hcd *xhci, unsigned int slot_id,
+		unsigned int ep_index, struct urb *urb)

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#2510: FILE: drivers/usb/host/xhci.c:633:
+	max_packet_size = urb->dev->ep0.desc.wMaxPacketSize;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2514: FILE: drivers/usb/host/xhci.c:637:
+		xhci_dbg(xhci, "Max packet size in usb_device = %d\n",
+				max_packet_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2516: FILE: drivers/usb/host/xhci.c:639:
+		xhci_dbg(xhci, "Max packet size in xHCI HW = %d\n",
+				hw_max_packet_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2521: FILE: drivers/usb/host/xhci.c:644:
+		xhci_endpoint_copy(xhci, xhci->devs[slot_id]->in_ctx,
+				xhci->devs[slot_id]->out_ctx, ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2541: FILE: drivers/usb/host/xhci.c:664:
+		ret = xhci_configure_endpoint(xhci, urb->dev, NULL,
+				true, false);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2562: FILE: drivers/usb/host/xhci.c:685:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2587: FILE: drivers/usb/host/xhci.c:710:
+			ret = xhci_check_maxpacket(xhci, slot_id,
+					ep_index, urb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2599: FILE: drivers/usb/host/xhci.c:722:
+		ret = xhci_queue_ctrl_tx(xhci, GFP_ATOMIC, urb,
+				slot_id, ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2606: FILE: drivers/usb/host/xhci.c:729:
+		ret = xhci_queue_bulk_tx(xhci, GFP_ATOMIC, urb,
+				slot_id, ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2613: FILE: drivers/usb/host/xhci.c:736:
+		ret = xhci_queue_intr_tx(xhci, GFP_ATOMIC, urb,
+				slot_id, ep_index);

WARNING:SPLIT_STRING: quoted string split across lines
#2622: FILE: drivers/usb/host/xhci.c:745:
+	xhci_dbg(xhci, "Ep 0x%x: URB %p submitted for "
+			"non-responsive xHCI host.\n",

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#2623: FILE: drivers/usb/host/xhci.c:746:
+			urb->ep->desc.bEndpointAddress, urb);

CHECK:SPACING: No space is necessary after a cast
#2679: FILE: drivers/usb/host/xhci.c:802:
+		td = (struct xhci_td *) urb->hcpriv;

WARNING:SPLIT_STRING: quoted string split across lines
#2689: FILE: drivers/usb/host/xhci.c:812:
+		xhci_dbg(xhci, "Ep 0x%x: URB %p to be canceled on "
+				"non-responsive xHCI host.\n",

CHECK:SPACING: No space is necessary after a cast
#2707: FILE: drivers/usb/host/xhci.c:830:
+	td = (struct xhci_td *) urb->hcpriv;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2741: FILE: drivers/usb/host/xhci.c:864:
+int xhci_drop_endpoint(struct usb_hcd *hcd, struct usb_device *udev,
+		struct usb_host_endpoint *ep)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2763: FILE: drivers/usb/host/xhci.c:886:
+		xhci_dbg(xhci, "xHCI %s - can't drop slot or ep 0 %#x\n",
+				__func__, drop_flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2769: FILE: drivers/usb/host/xhci.c:892:
+		xhci_warn(xhci, "xHCI %s called with unaddressed device\n",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2782: FILE: drivers/usb/host/xhci.c:905:
+	if ((ep_ctx->ep_info & EP_STATE_MASK) == EP_STATE_DISABLED ||
+			ctrl_ctx->drop_flags & xhci_get_endpoint_flag(&ep->desc)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2784: FILE: drivers/usb/host/xhci.c:907:
+		xhci_warn(xhci, "xHCI %s called with disabled ep %p\n",
+				__func__, ep);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2806: FILE: drivers/usb/host/xhci.c:929:
+	xhci_dbg(xhci, "drop ep 0x%x, slot id %d, new drop flags = %#x, new add flags = %#x, new slot info = %#x\n",
+			(unsigned int) ep->desc.bEndpointAddress,

CHECK:SPACING: No space is necessary after a cast
#2806: FILE: drivers/usb/host/xhci.c:929:
+			(unsigned int) ep->desc.bEndpointAddress,

CHECK:SPACING: No space is necessary after a cast
#2808: FILE: drivers/usb/host/xhci.c:931:
+			(unsigned int) new_drop_flags,

CHECK:SPACING: No space is necessary after a cast
#2809: FILE: drivers/usb/host/xhci.c:932:
+			(unsigned int) new_add_flags,

CHECK:SPACING: No space is necessary after a cast
#2810: FILE: drivers/usb/host/xhci.c:933:
+			(unsigned int) new_slot_info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2828: FILE: drivers/usb/host/xhci.c:951:
+int xhci_add_endpoint(struct usb_hcd *hcd, struct usb_device *udev,
+		struct usb_host_endpoint *ep)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2857: FILE: drivers/usb/host/xhci.c:980:
+		xhci_dbg(xhci, "xHCI %s - can't add slot or ep 0 %#x\n",
+				__func__, added_ctxs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2863: FILE: drivers/usb/host/xhci.c:986:
+		xhci_warn(xhci, "xHCI %s called with unaddressed device\n",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2877: FILE: drivers/usb/host/xhci.c:1000:
+		xhci_warn(xhci, "xHCI %s called with enabled ep %p\n",
+				__func__, ep);

WARNING:TYPO_SPELLING: 'documenation' may be misspelled - perhaps 'documentation'?
#2883: FILE: drivers/usb/host/xhci.c:1006:
+	 * process context, not interrupt context (or so documenation
 	                                                 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2887: FILE: drivers/usb/host/xhci.c:1010:
+	if (xhci_endpoint_init(xhci, xhci->devs[udev->slot_id],
+				udev, ep, GFP_KERNEL) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2889: FILE: drivers/usb/host/xhci.c:1012:
+		dev_dbg(&udev->dev, "%s - could not initialize ep %#x\n",
+				__func__, ep->desc.bEndpointAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2916: FILE: drivers/usb/host/xhci.c:1039:
+	xhci_dbg(xhci, "add ep 0x%x, slot id %d, new drop flags = %#x, new add flags = %#x, new slot info = %#x\n",
+			(unsigned int) ep->desc.bEndpointAddress,

CHECK:SPACING: No space is necessary after a cast
#2916: FILE: drivers/usb/host/xhci.c:1039:
+			(unsigned int) ep->desc.bEndpointAddress,

CHECK:SPACING: No space is necessary after a cast
#2918: FILE: drivers/usb/host/xhci.c:1041:
+			(unsigned int) new_drop_flags,

CHECK:SPACING: No space is necessary after a cast
#2919: FILE: drivers/usb/host/xhci.c:1042:
+			(unsigned int) new_add_flags,

CHECK:SPACING: No space is necessary after a cast
#2920: FILE: drivers/usb/host/xhci.c:1043:
+			(unsigned int) new_slot_info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2953: FILE: drivers/usb/host/xhci.c:1076:
+static int xhci_configure_endpoint_result(struct xhci_hcd *xhci,
+		struct usb_device *udev, int *cmd_status)

WARNING:SPLIT_STRING: quoted string split across lines
#2960: FILE: drivers/usb/host/xhci.c:1083:
+		dev_warn(&udev->dev, "Not enough host controller resources "
+				"for new device state.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2966: FILE: drivers/usb/host/xhci.c:1089:
+		dev_warn(&udev->dev, "Not enough bandwidth "
+				"for new device state.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2973: FILE: drivers/usb/host/xhci.c:1096:
+		dev_warn(&udev->dev, "ERROR: Endpoint drop flag = 0, "
+				"add flag = 1, "

WARNING:SPLIT_STRING: quoted string split across lines
#2974: FILE: drivers/usb/host/xhci.c:1097:
+				"add flag = 1, "
+				"and endpoint is not disabled.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2983: FILE: drivers/usb/host/xhci.c:1106:
+		xhci_err(xhci, "ERROR: unexpected command completion "
+				"code 0x%x.\n", *cmd_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2991: FILE: drivers/usb/host/xhci.c:1114:
+static int xhci_evaluate_context_result(struct xhci_hcd *xhci,
+		struct usb_device *udev, int *cmd_status)

WARNING:SPLIT_STRING: quoted string split across lines
#2999: FILE: drivers/usb/host/xhci.c:1122:
+		dev_warn(&udev->dev, "WARN: xHCI driver setup invalid evaluate "
+				"context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3004: FILE: drivers/usb/host/xhci.c:1127:
+		dev_warn(&udev->dev, "WARN: slot not enabled for"
+				"evaluate context command.\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#3004: FILE: drivers/usb/host/xhci.c:1127:
+		dev_warn(&udev->dev, "WARN: slot not enabled for"
+				"evaluate context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3007: FILE: drivers/usb/host/xhci.c:1130:
+		dev_warn(&udev->dev, "WARN: invalid context state for "
+				"evaluate context command.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#3017: FILE: drivers/usb/host/xhci.c:1140:
+		xhci_err(xhci, "ERROR: unexpected command completion "
+				"code 0x%x.\n", *cmd_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3028: FILE: drivers/usb/host/xhci.c:1151:
+static int xhci_configure_endpoint(struct xhci_hcd *xhci,
+		struct usb_device *udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3056: FILE: drivers/usb/host/xhci.c:1179:
+		ret = xhci_queue_configure_endpoint(xhci, in_ctx->dma,
+				udev->slot_id, must_succeed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3059: FILE: drivers/usb/host/xhci.c:1182:
+		ret = xhci_queue_evaluate_context(xhci, in_ctx->dma,
+				udev->slot_id);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3069: FILE: drivers/usb/host/xhci.c:1192:
+	timeleft = wait_for_completion_interruptible_timeout(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3074: FILE: drivers/usb/host/xhci.c:1197:
+		xhci_warn(xhci, "%s while waiting for %s command\n",
+				timeleft == 0 ? "Timeout" : "Signal",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3113: FILE: drivers/usb/host/xhci.c:1236:
+		xhci_warn(xhci, "xHCI %s called with unaddressed device\n",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3128: FILE: drivers/usb/host/xhci.c:1251:
+	xhci_dbg_ctx(xhci, virt_dev->in_ctx,
+			LAST_CTX_TO_EP_NUM(slot_ctx->dev_info));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3131: FILE: drivers/usb/host/xhci.c:1254:
+	ret = xhci_configure_endpoint(xhci, udev, NULL,
+			false, false);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3139: FILE: drivers/usb/host/xhci.c:1262:
+	xhci_dbg_ctx(xhci, virt_dev->out_ctx,
+			LAST_CTX_TO_EP_NUM(slot_ctx->dev_info));

WARNING:SPLIT_STRING: quoted string split across lines
#3159: FILE: drivers/usb/host/xhci.c:1282:
+				xhci_dbg(xhci, "Cached old ring, "
+						"%d ring%s cached\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3165: FILE: drivers/usb/host/xhci.c:1288:
+				xhci_dbg(xhci, "Ring cache full (%d rings), "
+						"freeing ring\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3189: FILE: drivers/usb/host/xhci.c:1312:
+		xhci_warn(xhci, "xHCI %s called with unaddressed device\n",
+				__func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3205: FILE: drivers/usb/host/xhci.c:1328:
+static void xhci_setup_input_ctx_for_config_ep(struct xhci_hcd *xhci,
+		struct xhci_container_ctx *in_ctx,

WARNING:LINE_SPACING: Missing a blank line after declarations
#3210: FILE: drivers/usb/host/xhci.c:1333:
+	struct xhci_input_control_ctx *ctrl_ctx;
+	ctrl_ctx = xhci_get_input_control_ctx(xhci, in_ctx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3221: FILE: drivers/usb/host/xhci.c:1344:
+void xhci_setup_input_ctx_for_quirk(struct xhci_hcd *xhci,
+		unsigned int slot_id, unsigned int ep_index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3230: FILE: drivers/usb/host/xhci.c:1353:
+	xhci_endpoint_copy(xhci, xhci->devs[slot_id]->in_ctx,
+			xhci->devs[slot_id]->out_ctx, ep_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3234: FILE: drivers/usb/host/xhci.c:1357:
+	addr = xhci_trb_virt_to_dma(deq_state->new_deq_seg,
+			deq_state->new_deq_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#3237: FILE: drivers/usb/host/xhci.c:1360:
+		xhci_warn(xhci, "WARN Cannot submit config ep after "
+				"reset ep command\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3239: FILE: drivers/usb/host/xhci.c:1362:
+		xhci_warn(xhci, "WARN deq seg = %p, deq ptr = %p\n",
+				deq_state->new_deq_seg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3247: FILE: drivers/usb/host/xhci.c:1370:
+	xhci_setup_input_ctx_for_config_ep(xhci, xhci->devs[slot_id]->in_ctx,
+			xhci->devs[slot_id]->out_ctx, added_ctxs, added_ctxs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3251: FILE: drivers/usb/host/xhci.c:1374:
+void xhci_cleanup_stalled_ring(struct xhci_hcd *xhci,
+		struct usb_device *udev, unsigned int ep_index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3262: FILE: drivers/usb/host/xhci.c:1385:
+	xhci_find_new_dequeue_state(xhci, udev->slot_id,
+			ep_index, ep->stopped_td,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3271: FILE: drivers/usb/host/xhci.c:1394:
+		xhci_queue_new_dequeue_state(xhci, udev->slot_id,
+				ep_index, &deq_state);

WARNING:SPLIT_STRING: quoted string split across lines
#3277: FILE: drivers/usb/host/xhci.c:1400:
+		xhci_dbg(xhci, "Setting up input context for "
+				"configure endpoint command\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3279: FILE: drivers/usb/host/xhci.c:1402:
+		xhci_setup_input_ctx_for_quirk(xhci, udev->slot_id,
+				ep_index, &deq_state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3290: FILE: drivers/usb/host/xhci.c:1413:
+void xhci_endpoint_reset(struct usb_hcd *hcd,
+		struct usb_host_endpoint *ep)

CHECK:SPACING: No space is necessary after a cast
#3300: FILE: drivers/usb/host/xhci.c:1423:
+	udev = (struct usb_device *) ep->hcpriv;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3310: FILE: drivers/usb/host/xhci.c:1433:
+		xhci_dbg(xhci, "Endpoint 0x%x not halted, refusing to reset.\n",
+				ep->desc.bEndpointAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3407: FILE: drivers/usb/host/xhci.c:1530:
+	timeleft = wait_for_completion_interruptible_timeout(&xhci->addr_dev,
+			USB_CTRL_SET_TIMEOUT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3410: FILE: drivers/usb/host/xhci.c:1533:
+		xhci_warn(xhci, "%s while waiting for a slot\n",
+				timeleft == 0 ? "Timeout" : "Signal");

WARNING:TYPO_SPELLING: 'peripherial' may be misspelled - perhaps 'peripheral'?
#3431: FILE: drivers/usb/host/xhci.c:1554:
+	/* Hub or peripherial? */
 	          ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3482: FILE: drivers/usb/host/xhci.c:1605:
+	timeleft = wait_for_completion_interruptible_timeout(&xhci->addr_dev,
+			USB_CTRL_SET_TIMEOUT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3489: FILE: drivers/usb/host/xhci.c:1612:
+		xhci_warn(xhci, "%s while waiting for a slot\n",
+				timeleft == 0 ? "Timeout" : "Signal");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3498: FILE: drivers/usb/host/xhci.c:1621:
+		xhci_err(xhci, "Setup ERROR: address device command for slot %d.\n",
+				udev->slot_id);

WARNING:SPLIT_STRING: quoted string split across lines
#3510: FILE: drivers/usb/host/xhci.c:1633:
+		xhci_err(xhci, "ERROR: unexpected command completion "
+				"code 0x%x.\n", virt_dev->cmd_status);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3516: FILE: drivers/usb/host/xhci.c:1639:
+	if (ret) {
+		return ret;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3522: FILE: drivers/usb/host/xhci.c:1645:
+	xhci_dbg(xhci, "Slot ID %d dcbaa entry @%p = %#016llx\n",
+			udev->slot_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3527: FILE: drivers/usb/host/xhci.c:1650:
+	xhci_dbg(xhci, "Output Context DMA address = %#08llx\n",
+			(unsigned long long)virt_dev->out_ctx->dma);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3554: FILE: drivers/usb/host/xhci.c:1677:
+int xhci_update_hub_device(struct usb_hcd *hcd, struct usb_device *hdev,
+			struct usb_tt *tt, gfp_t mem_flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3562: FILE: drivers/usb/host/xhci.c:1685:
+	unsigned think_time;

WARNING:SPLIT_STRING: quoted string split across lines
#3590: FILE: drivers/usb/host/xhci.c:1713:
+		xhci_dbg(xhci, "xHCI version %x needs hub "
+				"TT think time and number of ports\n",

CHECK:SPACING: No space is necessary after a cast
#3591: FILE: drivers/usb/host/xhci.c:1714:
+				(unsigned int) xhci->hci_version);

WARNING:SPLIT_STRING: quoted string split across lines
#3603: FILE: drivers/usb/host/xhci.c:1726:
+		xhci_dbg(xhci, "xHCI version %x doesn't need hub "
+				"TT think time or number of ports\n",

CHECK:SPACING: No space is necessary after a cast
#3604: FILE: drivers/usb/host/xhci.c:1727:
+				(unsigned int) xhci->hci_version);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3610: FILE: drivers/usb/host/xhci.c:1733:
+	xhci_dbg(xhci, "Set up %s for hub device.\n",
+			(xhci->hci_version > 0x95) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3620: FILE: drivers/usb/host/xhci.c:1743:
+		ret = xhci_configure_endpoint(xhci, hdev, config_cmd,
+				false, false);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3623: FILE: drivers/usb/host/xhci.c:1746:
+		ret = xhci_configure_endpoint(xhci, hdev, config_cmd,
+				true, false);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3651: FILE: drivers/usb/host/xhci.c:1774:
+		printk(KERN_DEBUG "Problem registering PCI driver.");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3659: FILE: drivers/usb/host/xhci.c:1782:
+	BUILD_BUG_ON(sizeof(struct xhci_doorbell_array) != 256*32/8);
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3659: FILE: drivers/usb/host/xhci.c:1782:
+	BUILD_BUG_ON(sizeof(struct xhci_doorbell_array) != 256*32/8);
 	                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3660: FILE: drivers/usb/host/xhci.c:1783:
+	BUILD_BUG_ON(sizeof(struct xhci_slot_ctx) != 8*32/8);
 	                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3660: FILE: drivers/usb/host/xhci.c:1783:
+	BUILD_BUG_ON(sizeof(struct xhci_slot_ctx) != 8*32/8);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3661: FILE: drivers/usb/host/xhci.c:1784:
+	BUILD_BUG_ON(sizeof(struct xhci_ep_ctx) != 8*32/8);
 	                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3661: FILE: drivers/usb/host/xhci.c:1784:
+	BUILD_BUG_ON(sizeof(struct xhci_ep_ctx) != 8*32/8);
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3665: FILE: drivers/usb/host/xhci.c:1788:
+	BUILD_BUG_ON(sizeof(struct xhci_stream_ctx) != 4*32/8);
 	                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3665: FILE: drivers/usb/host/xhci.c:1788:
+	BUILD_BUG_ON(sizeof(struct xhci_stream_ctx) != 4*32/8);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3666: FILE: drivers/usb/host/xhci.c:1789:
+	BUILD_BUG_ON(sizeof(union xhci_trb) != 4*32/8);
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3666: FILE: drivers/usb/host/xhci.c:1789:
+	BUILD_BUG_ON(sizeof(union xhci_trb) != 4*32/8);
 	                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3667: FILE: drivers/usb/host/xhci.c:1790:
+	BUILD_BUG_ON(sizeof(struct xhci_erst_entry) != 4*32/8);
 	                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3667: FILE: drivers/usb/host/xhci.c:1790:
+	BUILD_BUG_ON(sizeof(struct xhci_erst_entry) != 4*32/8);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3668: FILE: drivers/usb/host/xhci.c:1791:
+	BUILD_BUG_ON(sizeof(struct xhci_cap_regs) != 7*32/8);
 	                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3668: FILE: drivers/usb/host/xhci.c:1791:
+	BUILD_BUG_ON(sizeof(struct xhci_cap_regs) != 7*32/8);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3669: FILE: drivers/usb/host/xhci.c:1792:
+	BUILD_BUG_ON(sizeof(struct xhci_intr_reg) != 8*32/8);
 	                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3669: FILE: drivers/usb/host/xhci.c:1792:
+	BUILD_BUG_ON(sizeof(struct xhci_intr_reg) != 8*32/8);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3671: FILE: drivers/usb/host/xhci.c:1794:
+	BUILD_BUG_ON(sizeof(struct xhci_run_regs) != (8+8*128)*32/8);
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3671: FILE: drivers/usb/host/xhci.c:1794:
+	BUILD_BUG_ON(sizeof(struct xhci_run_regs) != (8+8*128)*32/8);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3671: FILE: drivers/usb/host/xhci.c:1794:
+	BUILD_BUG_ON(sizeof(struct xhci_run_regs) != (8+8*128)*32/8);
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3671: FILE: drivers/usb/host/xhci.c:1794:
+	BUILD_BUG_ON(sizeof(struct xhci_run_regs) != (8+8*128)*32/8);
 	                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3672: FILE: drivers/usb/host/xhci.c:1795:
+	BUILD_BUG_ON(sizeof(struct xhci_doorbell_array) != 256*32/8);
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3672: FILE: drivers/usb/host/xhci.c:1795:
+	BUILD_BUG_ON(sizeof(struct xhci_doorbell_array) != 256*32/8);
 	                                                         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002422.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 51 warnings, 124 checks, 1822 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002422.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
