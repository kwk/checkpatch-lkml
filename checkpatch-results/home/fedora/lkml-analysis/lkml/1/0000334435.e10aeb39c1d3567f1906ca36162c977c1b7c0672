WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: drivers/watchdog/geodewdt.c:1:
+/* Watchdog timer for the Geode GX/LX with the CS5535/CS5536 companion chip

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: drivers/watchdog/geodewdt.c:11:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#179: FILE: drivers/watchdog/geodewdt.c:21:
+#include <asm/uaccess.h>

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#195: FILE: drivers/watchdog/geodewdt.c:37:
+MODULE_PARM_DESC(timeout, "Watchdog timeout in seconds. 1<= timeout <=131, default=" __MODULE_STRING(WATCHDOG_TIMEOUT) ".");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#199: FILE: drivers/watchdog/geodewdt.c:41:
+MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started (default=" __MODULE_STRING(WATCHDOG_NOWAYOUT) ")");

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/watchdog/geodewdt.c:83:
+        if (test_and_set_bit(WDT_FLAGS_OPEN, &wdt_flags))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/watchdog/geodewdt.c:83:
+        if (test_and_set_bit(WDT_FLAGS_OPEN, &wdt_flags))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/watchdog/geodewdt.c:84:
+                return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/watchdog/geodewdt.c:84:
+                return -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/watchdog/geodewdt.c:86:
+        if (!test_and_clear_bit(WDT_FLAGS_ORPHAN, &wdt_flags))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/watchdog/geodewdt.c:86:
+        if (!test_and_clear_bit(WDT_FLAGS_ORPHAN, &wdt_flags))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/watchdog/geodewdt.c:87:
+                __module_get(THIS_MODULE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/watchdog/geodewdt.c:87:
+                __module_get(THIS_MODULE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/watchdog/geodewdt.c:90:
+        return nonseekable_open(inode, file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/watchdog/geodewdt.c:90:
+        return nonseekable_open(inode, file);$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#258: FILE: drivers/watchdog/geodewdt.c:100:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#258: FILE: drivers/watchdog/geodewdt.c:100:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#259: FILE: drivers/watchdog/geodewdt.c:101:
+		printk(KERN_CRIT "Unexpected close - watchdog is not stopping.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/watchdog/geodewdt.c:116:
+        if(len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/watchdog/geodewdt.c:116:
+        if(len) {$

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: drivers/watchdog/geodewdt.c:116:
+        if(len) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: drivers/watchdog/geodewdt.c:119:
+			size_t i;
+			safe_close = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/watchdog/geodewdt.c:150:
+        };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/watchdog/geodewdt.c:150:
+        };$

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: drivers/watchdog/geodewdt.c:152:
+	switch(cmd) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#331: FILE: drivers/watchdog/geodewdt.c:173:
+/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/watchdog/geodewdt.c:205:
+        .owner          = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/watchdog/geodewdt.c:205:
+        .owner          = THIS_MODULE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/watchdog/geodewdt.c:206:
+        .llseek         = no_llseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/watchdog/geodewdt.c:206:
+        .llseek         = no_llseek,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: drivers/watchdog/geodewdt.c:207:
+        .write          = geodewdt_write,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/watchdog/geodewdt.c:207:
+        .write          = geodewdt_write,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/watchdog/geodewdt.c:208:
+        .ioctl          = geodewdt_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/watchdog/geodewdt.c:208:
+        .ioctl          = geodewdt_ioctl,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/watchdog/geodewdt.c:209:
+        .open           = geodewdt_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/watchdog/geodewdt.c:209:
+        .open           = geodewdt_open,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/watchdog/geodewdt.c:210:
+        .release        = geodewdt_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/watchdog/geodewdt.c:210:
+        .release        = geodewdt_release,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#377: FILE: drivers/watchdog/geodewdt.c:219:
+static int __devinit

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#386: FILE: drivers/watchdog/geodewdt.c:228:
+		printk(KERN_ERR "geodewdt:  No timers were available\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/watchdog/geodewdt.c:245:
+	geode_mfgpt_write(wdt_timer, MFGPT_REG_CMP2,
+		timeout * GEODEWDT_HZ);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#410: FILE: drivers/watchdog/geodewdt.c:252:
+static int __devexit

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#475: FILE: arch/x86/kernel/mfgpt_32.c:145:
+EXPORT_SYMBOL_GPL(geode_mfgpt_toggle_event);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#484: FILE: arch/x86/kernel/mfgpt_32.c:209:
+EXPORT_SYMBOL_GPL(geode_mfgpt_alloc_timer);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 25 warnings, 3 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334435.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
