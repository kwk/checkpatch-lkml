CHECK:BRACES: Unbalanced braces around else statement
#121: FILE: arch/x86/kernel/efi.c:419:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#122: FILE: arch/x86/kernel/efi.c:420:
+			md->virt_addr = (unsigned long)__efi_ioremap(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/x86/kernel/efi_64.c:113:
+void __iomem __init *__efi_ioremap(unsigned long phys_addr,
+				    unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/asm-x86/efi.h:92:
+extern void __iomem *__efi_ioremap(unsigned long phys_addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/asm-x86/io_32.h:117:
+extern int ioremap_change_attr(unsigned long paddr, unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/asm-x86/io_64.h:170:
+extern int ioremap_change_attr(unsigned long paddr, unsigned long size,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328949.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 6 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328949.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
