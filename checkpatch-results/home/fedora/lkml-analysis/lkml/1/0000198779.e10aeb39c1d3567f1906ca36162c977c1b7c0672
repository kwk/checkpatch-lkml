WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
provides a "full-screen" terminal alternative to 3215/3270 terminal sessions.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/char/hvc_iucv.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#81: FILE: drivers/char/hvc_iucv.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#85: FILE: drivers/char/hvc_iucv.c:26:
+#define MEMPOOL_MIN_NR		(PAGE_SIZE / sizeof(struct iucv_tty_buffer)/4)
                       		                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#102: FILE: drivers/char/hvc_iucv.c:43:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/char/hvc_iucv.c:80:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: drivers/char/hvc_iucv.c:99:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num < HVC_IUCV_MAGIC'
#168: FILE: drivers/char/hvc_iucv.c:109:
+	if ((num < HVC_IUCV_MAGIC) || (num - HVC_IUCV_MAGIC > hvc_iucv_devices))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#203: FILE: drivers/char/hvc_iucv.c:144:
+		bufp->mbuf->datalen = (u16) size;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: drivers/char/hvc_iucv.c:212:
+	 * hvc console layer to hang up the tty device. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#285: FILE: drivers/char/hvc_iucv.c:226:
+		 * then leave the buffer on the list and re-try later */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#301: FILE: drivers/char/hvc_iucv.c:242:
+		/* remove buffer if an error has occured or received data
 		                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: drivers/char/hvc_iucv.c:243:
+		 * is not correct */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rb->mbuf->version != MSG_VERSION'
#303: FILE: drivers/char/hvc_iucv.c:244:
+		if (rc || (rb->mbuf->version != MSG_VERSION) ||
+			  (rb->msg.length    != MSG_SIZE(rb->mbuf->datalen)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rb->msg.length    != MSG_SIZE(rb->mbuf->datalen)'
#303: FILE: drivers/char/hvc_iucv.c:244:
+		if (rc || (rb->mbuf->version != MSG_VERSION) ||
+			  (rb->msg.length    != MSG_SIZE(rb->mbuf->datalen)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/char/hvc_iucv.c:245:
+		if (rc || (rb->mbuf->version != MSG_VERSION) ||
+			  (rb->msg.length    != MSG_SIZE(rb->mbuf->datalen)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#355: FILE: drivers/char/hvc_iucv.c:296:
+static int hvc_iucv_get_chars(uint32_t vtermno, char *buf, int count)

WARNING:TYPO_SPELLING: 'communicaton' may be misspelled - perhaps 'communication'?
#390: FILE: drivers/char/hvc_iucv.c:331:
+ * If an existing IUCV communicaton path has been severed, the function returns
                        ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: drivers/char/hvc_iucv.c:350:
+	 * message length */

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/char/hvc_iucv.c:361:
+				 (void *) sb->mbuf, sb->msg.length);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#444: FILE: drivers/char/hvc_iucv.c:385:
+static int hvc_iucv_put_chars(uint32_t vtermno, const char *buf, int count)

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#512: FILE: drivers/char/hvc_iucv.c:453:
+ * virtual or otherwise) has occured.
                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: drivers/char/hvc_iucv.c:483:
+	 *	 client if we disconnect on hang up) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#579: FILE: drivers/char/hvc_iucv.c:520:
+	 * priv->lock <--> iucv_table_lock */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#617: FILE: drivers/char/hvc_iucv.c:558:
+		    (0 == memcmp(hvc_iucv_table[i]->srv_name, ipuser, 8))) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#629: FILE: drivers/char/hvc_iucv.c:570:
+	 * path per terminal. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#682: FILE: drivers/char/hvc_iucv.c:623:
+	 *	 -EPIPE to signal the hvc console layer to hang up the tty. */

WARNING:TYPO_SPELLING: 'wakup' may be misspelled - perhaps 'wakeup'?
#728: FILE: drivers/char/hvc_iucv.c:669:
+	hvc_kick();	/* wakup hvc console thread */
 	           	   ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: drivers/char/hvc_iucv.c:704:
+
+

WARNING:CONST_STRUCT: struct hv_ops should normally be const
#765: FILE: drivers/char/hvc_iucv.c:706:
+static struct hv_ops hvc_iucv_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct hvc_iucv_private)...)
#787: FILE: drivers/char/hvc_iucv.c:728:
+	priv = kzalloc(sizeof(struct hvc_iucv_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#822: FILE: drivers/char/hvc_iucv.c:763:
+		pr_warning("The z/VM IUCV Hypervisor console cannot be "
+			   "used without z/VM.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/char/hvc_iucv.c:774:
+	hvc_iucv_buffer_cache = kmem_cache_create(KMSG_COMPONENT,
+					   sizeof(struct iucv_tty_buffer),

WARNING:SPLIT_STRING: quoted string split across lines
#837: FILE: drivers/char/hvc_iucv.c:778:
+		pr_err("Not enough memory for driver initialization "
+			"(rs=%d).\n", 1);

WARNING:SPLIT_STRING: quoted string split across lines
#845: FILE: drivers/char/hvc_iucv.c:786:
+		pr_err("Not enough memory for driver initialization "
+			"(rs=%d).\n", 2);

WARNING:SPLIT_STRING: quoted string split across lines
#855: FILE: drivers/char/hvc_iucv.c:796:
+			pr_err("Could not create new z/VM IUCV HVC backend "
+				"rc=%d.\n", rc);

WARNING:TABSTOP: Statements should start on a tabstop
#899: FILE: drivers/char/hvc_iucv.c:840:
+	 return strict_strtoul(val, 10, &hvc_iucv_devices);

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#899: FILE: drivers/char/hvc_iucv.c:840:
+	 return strict_strtoul(val, 10, &hvc_iucv_devices);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: drivers/char/hvc_iucv.c:843:
+
+

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#905: FILE: drivers/char/hvc_iucv.c:846:
+__setup("hvc_iucv=", hvc_iucv_config);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198779.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 17 checks, 873 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198779.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
