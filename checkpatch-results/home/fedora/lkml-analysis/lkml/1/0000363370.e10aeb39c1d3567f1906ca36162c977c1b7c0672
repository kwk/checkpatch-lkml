CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#97: FILE: drivers/spi/spi_bfin5xx.c:141:
+#define DEFINE_SPI_REG(reg, off) \
+static inline u16 read_##reg(struct driver_data *drv_data) \
+	{ return bfin_read16(drv_data->regs_base + off); } \
+static inline void write_##reg(struct driver_data *drv_data, u16 v) \
+	{ bfin_write16(drv_data->regs_base + off, v); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'off' may be better as '(off)' to avoid precedence issues
#97: FILE: drivers/spi/spi_bfin5xx.c:141:
+#define DEFINE_SPI_REG(reg, off) \
+static inline u16 read_##reg(struct driver_data *drv_data) \
+	{ return bfin_read16(drv_data->regs_base + off); } \
+static inline void write_##reg(struct driver_data *drv_data, u16 v) \
+	{ bfin_write16(drv_data->regs_base + off, v); }

CHECK:SPACING: No space is necessary after a cast
#249: FILE: drivers/spi/spi_bfin5xx.c:289:
+		write_TDBR(drv_data, (*(u8 *) (drv_data->tx)));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/spi/spi_bfin5xx.c:307:
+		write_TDBR(drv_data, (*(u8 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#300: FILE: drivers/spi/spi_bfin5xx.c:335:
+		*(u8 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#308: FILE: drivers/spi/spi_bfin5xx.c:341:
+	*(u8 *) (drv_data->rx) = read_SHAW(drv_data);

CHECK:SPACING: No space is necessary after a cast
#342: FILE: drivers/spi/spi_bfin5xx.c:368:
+		*(u8 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#352: FILE: drivers/spi/spi_bfin5xx.c:375:
+	*(u8 *) (drv_data->rx) = read_SHAW(drv_data);

CHECK:SPACING: No space is necessary after a cast
#367: FILE: drivers/spi/spi_bfin5xx.c:387:
+		write_TDBR(drv_data, (*(u8 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#374: FILE: drivers/spi/spi_bfin5xx.c:392:
+		*(u8 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#392: FILE: drivers/spi/spi_bfin5xx.c:409:
+		write_TDBR(drv_data, (*(u8 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#400: FILE: drivers/spi/spi_bfin5xx.c:414:
+		*(u8 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/spi/spi_bfin5xx.c:434:
+		write_TDBR(drv_data, (*(u16 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#439: FILE: drivers/spi/spi_bfin5xx.c:452:
+		write_TDBR(drv_data, (*(u16 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#471: FILE: drivers/spi/spi_bfin5xx.c:480:
+		*(u16 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#479: FILE: drivers/spi/spi_bfin5xx.c:486:
+	*(u16 *) (drv_data->rx) = read_SHAW(drv_data);

CHECK:SPACING: No space is necessary after a cast
#513: FILE: drivers/spi/spi_bfin5xx.c:513:
+		*(u16 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#523: FILE: drivers/spi/spi_bfin5xx.c:520:
+	*(u16 *) (drv_data->rx) = read_SHAW(drv_data);

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/spi/spi_bfin5xx.c:532:
+		write_TDBR(drv_data, (*(u16 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#545: FILE: drivers/spi/spi_bfin5xx.c:537:
+		*(u16 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:SPACING: No space is necessary after a cast
#563: FILE: drivers/spi/spi_bfin5xx.c:554:
+		write_TDBR(drv_data, (*(u16 *) (drv_data->tx)));

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/spi/spi_bfin5xx.c:559:
+		*(u16 *) (drv_data->rx) = read_RDBR(drv_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/spi/spi_bfin5xx.c:806:
+			set_dma_start_addr(drv_data->dma_channel,
 					(unsigned long)drv_data->tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/spi/spi_bfin5xx.c:833:
+			set_dma_start_addr(drv_data->dma_channel,
 					(unsigned long)drv_data->rx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: drivers/spi/spi_bfin5xx.c:847:
+			set_dma_start_addr(drv_data->dma_channel,
 					(unsigned long)drv_data->tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: drivers/spi/spi_bfin5xx.c:1087:
+		if (set_dma_callback(drv_data->dma_channel,
+			(void *)dma_irq_handler, drv_data) < 0) {

CHECK:SPACING: No space is necessary after a cast
#814: FILE: drivers/spi/spi_bfin5xx.c:1307:
+	drv_data->regs_base = (u32) ioremap(res->start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/spi/spi_bfin5xx.c:1349:
+	dev_info(dev, "%s, Version %s, regs_base@0x%08x, dma channel@%d\n",
+		DRV_DESC, DRV_VERSION, drv_data->regs_base,

CHECK:SPACING: No space is necessary after a cast
#844: FILE: drivers/spi/spi_bfin5xx.c:1356:
+	iounmap((void *) drv_data->regs_base);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 29 checks, 787 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
