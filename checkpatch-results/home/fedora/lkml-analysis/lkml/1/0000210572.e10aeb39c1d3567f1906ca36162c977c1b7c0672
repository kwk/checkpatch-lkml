CHECK:CAMELCASE: Avoid CamelCase: <Size>
#52: FILE: drivers/staging/sxg/sxg.c:83:
+static int sxg_allocate_buffer_memory(struct adapter_t *adapter, u32 Size,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <BufferType>
#53: FILE: drivers/staging/sxg/sxg.c:84:
+				      enum SXG_BUFFER_TYPE BufferType);

CHECK:CAMELCASE: Avoid CamelCase: <RcvBlock>
#54: FILE: drivers/staging/sxg/sxg.c:85:
+static void sxg_allocate_rcvblock_complete(struct adapter_t *adapter, void *RcvBlock,

CHECK:CAMELCASE: Avoid CamelCase: <SxgSgl>
#60: FILE: drivers/staging/sxg/sxg.c:89:
+					     struct SXG_SCATTER_GATHER *SxgSgl,

CHECK:CAMELCASE: Avoid CamelCase: <pSgl>
#80: FILE: drivers/staging/sxg/sxg.c:100:
+static void sxg_dumb_sgl(struct SCATTER_GATHER_LIST *pSgl, struct SXG_SCATTER_GATHER *SxgSgl);

CHECK:CAMELCASE: Avoid CamelCase: <MessageId>
#83: FILE: drivers/staging/sxg/sxg.c:103:
+static int sxg_process_isr(struct adapter_t *adapter, u32 MessageId);

CHECK:CAMELCASE: Avoid CamelCase: <RssId>
#84: FILE: drivers/staging/sxg/sxg.c:104:
+static u32 sxg_process_event_queue(struct adapter_t *adapter, u32 RssId);

CHECK:CAMELCASE: Avoid CamelCase: <Event>
#86: FILE: drivers/staging/sxg/sxg.c:106:
+static struct sk_buff *sxg_slow_receive(struct adapter_t *adapter, struct SXG_EVENT *Event);

CHECK:CAMELCASE: Avoid CamelCase: <ErrorStatus>
#87: FILE: drivers/staging/sxg/sxg.c:107:
+static void sxg_process_rcv_error(struct adapter_t *adapter, u32 ErrorStatus);

CHECK:CAMELCASE: Avoid CamelCase: <EtherHdr>
#89: FILE: drivers/staging/sxg/sxg.c:109:
+			   struct ether_header *EtherHdr, ushort length);

CHECK:CAMELCASE: Avoid CamelCase: <LinkState>
#120: FILE: drivers/staging/sxg/sxg.c:134:
+static void sxg_link_state(struct adapter_t *adapter, enum SXG_LINK_STATE LinkState);

CHECK:CAMELCASE: Avoid CamelCase: <SxgDriver>
#160: FILE: drivers/staging/sxg/sxg.c:228:
+static struct SXG_DRIVER SxgDriver;

CHECK:CAMELCASE: Avoid CamelCase: <LSxgTraceBuffer>
#164: FILE: drivers/staging/sxg/sxg.c:231:
+static struct sxg_trace_buffer_t LSxgTraceBuffer;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#167: FILE: drivers/staging/sxg/sxg.c:233:
+static struct sxg_trace_buffer_t *SxgTraceBuffer = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <SxgTraceBuffer>
#167: FILE: drivers/staging/sxg/sxg.c:233:
+static struct sxg_trace_buffer_t *SxgTraceBuffer = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <UcodeSel>
#176: FILE: drivers/staging/sxg/sxg.c:247:
+static bool sxg_download_microcode(struct adapter_t *adapter, enum SXG_UCODE_SEL UcodeSel)

CHECK:CAMELCASE: Avoid CamelCase: <HwRegs>
#179: FILE: drivers/staging/sxg/sxg.c:249:
+	struct SXG_HW_REGS *HwRegs = adapter->HwRegs;

CHECK:CAMELCASE: Avoid CamelCase: <XmtRings>
#221: FILE: drivers/staging/sxg/sxg.c:478:
+		memset(adapter->XmtRings, 0, sizeof(struct SXG_XMT_RING) * 1);

CHECK:CAMELCASE: Avoid CamelCase: <RcvRings>
#236: FILE: drivers/staging/sxg/sxg.c:490:
+		memset(adapter->RcvRings, 0, sizeof(struct SXG_RCV_RING) * 1);

CHECK:CAMELCASE: Avoid CamelCase: <RssIds>
#270: FILE: drivers/staging/sxg/sxg.c:542:
+		  (unsigned int)(sizeof(struct SXG_EVENT_RING) * RssIds));

CHECK:CAMELCASE: Avoid CamelCase: <EventRings>
#284: FILE: drivers/staging/sxg/sxg.c:557:
+	memset(adapter->EventRings, 0, sizeof(struct SXG_EVENT_RING) * RssIds);

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/staging/sxg/sxg.c:938:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <EventRing>
#339: FILE: drivers/staging/sxg/sxg.c:966:
+			struct XG_EVENT_RING *EventRing = &adapter->EventRings[i];

CHECK:CAMELCASE: Avoid CamelCase: <Ring>
#372: FILE: drivers/staging/sxg/sxg.c:1159:
+	struct SXG_EVENT *Event = &EventRing->Ring[adapter->NextEvent[RssId]];

CHECK:CAMELCASE: Avoid CamelCase: <NextEvent>
#372: FILE: drivers/staging/sxg/sxg.c:1159:
+	struct SXG_EVENT *Event = &EventRing->Ring[adapter->NextEvent[RssId]];

CHECK:CAMELCASE: Avoid CamelCase: <RcvDataBufferHdr>
#381: FILE: drivers/staging/sxg/sxg.c:1167:
+	struct SXG_RCV_DATA_BUFFER_HDR *RcvDataBufferHdr;

CHECK:CAMELCASE: Avoid CamelCase: <XmtRing>
#394: FILE: drivers/staging/sxg/sxg.c:1298:
+	struct SXG_XMT_RING *XmtRing = &adapter->XmtRings[0];

CHECK:CAMELCASE: Avoid CamelCase: <XmtRingInfo>
#395: FILE: drivers/staging/sxg/sxg.c:1299:
+	struct SXG_RING_INFO *XmtRingInfo = &adapter->XmtRingZeroInfo;

CHECK:CAMELCASE: Avoid CamelCase: <XmtRingZeroInfo>
#395: FILE: drivers/staging/sxg/sxg.c:1299:
+	struct SXG_RING_INFO *XmtRingInfo = &adapter->XmtRingZeroInfo;

CHECK:CAMELCASE: Avoid CamelCase: <XmtCmd>
#398: FILE: drivers/staging/sxg/sxg.c:1301:
+	struct SXG_CMD *XmtCmd;

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/staging/sxg/sxg.c:1367:
+	RcvDataBufferHdr = (struct SXG_RCV_DATA_BUFFER_HDR*) Event->HostHandle;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#414: FILE: drivers/staging/sxg/sxg.c:1367:
+	RcvDataBufferHdr = (struct SXG_RCV_DATA_BUFFER_HDR*) Event->HostHandle;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <HostHandle>
#414: FILE: drivers/staging/sxg/sxg.c:1367:
+	RcvDataBufferHdr = (struct SXG_RCV_DATA_BUFFER_HDR*) Event->HostHandle;

CHECK:SPACING: No space is necessary after a cast
#423: FILE: drivers/staging/sxg/sxg.c:1403:
+	if (((struct ether_header*) (SXG_RECEIVE_DATA_LOCATION(RcvDataBufferHdr)))->

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#423: FILE: drivers/staging/sxg/sxg.c:1403:
+	if (((struct ether_header*) (SXG_RECEIVE_DATA_LOCATION(RcvDataBufferHdr)))->

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#432: FILE: drivers/staging/sxg/sxg.c:1418:
+	if (!sxg_mac_filter(adapter, (struct ether_header*)

CHECK:CAMELCASE: Avoid CamelCase: <MulticastAddrs>
#459: FILE: drivers/staging/sxg/sxg.c:1563:
+				struct SXG_MULTICAST_ADDRESS *MulticastAddrs =

CHECK:SPACING: No space is necessary after a cast
#495: FILE: drivers/staging/sxg/sxg.c:1724:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:SPACING: No space is necessary after a cast
#504: FILE: drivers/staging/sxg/sxg.c:1780:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:SPACING: No space is necessary after a cast
#513: FILE: drivers/staging/sxg/sxg.c:1808:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:SPACING: No space is necessary after a cast
#531: FILE: drivers/staging/sxg/sxg.c:1871:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:CAMELCASE: Avoid CamelCase: <UcodeRegs>
#671: FILE: drivers/staging/sxg/sxg.c:2740:
+	struct SXG_UCODE_REGS *sxg_regs = adapter->UcodeRegs;

CHECK:SPACING: No space is necessary after a cast
#698: FILE: drivers/staging/sxg/sxg.c:2824:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:CAMELCASE: Avoid CamelCase: <SxgFreeResources>
#716: FILE: drivers/staging/sxg/sxg.c:2899:
+void SxgFreeResources(struct adapter_t *adapter)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#734: FILE: drivers/staging/sxg/sxg.c:2994:
+ *^Istruct adapter_t *   ^I- Our adapter structure$

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#747: FILE: drivers/staging/sxg/sxg.c:3006:
+				  u32 Length, enum SXG_BUFFER_TYPE Context)

CHECK:CAMELCASE: Avoid CamelCase: <Context>
#747: FILE: drivers/staging/sxg/sxg.c:3006:
+				  u32 Length, enum SXG_BUFFER_TYPE Context)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#756: FILE: drivers/staging/sxg/sxg.c:3021:
+		sxg_allocate_sgl_buffer_complete(adapter, (struct SXG_SCATTER_GATHER*)

CHECK:CAMELCASE: Avoid CamelCase: <RcvBlockHdr>
#785: FILE: drivers/staging/sxg/sxg.c:3102:
+	struct SXG_RCV_BLOCK_HDR *RcvBlockHdr;

CHECK:CAMELCASE: Avoid CamelCase: <RcvDescriptorBlock>
#791: FILE: drivers/staging/sxg/sxg.c:3105:
+	struct SXG_RCV_DESCRIPTOR_BLOCK *RcvDescriptorBlock;

CHECK:CAMELCASE: Avoid CamelCase: <RcvDescriptorBlockHdr>
#792: FILE: drivers/staging/sxg/sxg.c:3106:
+	struct SXG_RCV_DESCRIPTOR_BLOCK_HDR *RcvDescriptorBlockHdr;

CHECK:SPACING: No space is necessary after a cast
#801: FILE: drivers/staging/sxg/sxg.c:3132:
+			    (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#801: FILE: drivers/staging/sxg/sxg.c:3132:
+			    (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

CHECK:CAMELCASE: Avoid CamelCase: <RcvDataBuffer>
#801: FILE: drivers/staging/sxg/sxg.c:3132:
+			    (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

CHECK:SPACING: No space is necessary after a cast
#810: FILE: drivers/staging/sxg/sxg.c:3150:
+	    (struct SXG_RCV_BLOCK_HDR*) ((unsigned char *)RcvBlock +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#810: FILE: drivers/staging/sxg/sxg.c:3150:
+	    (struct SXG_RCV_BLOCK_HDR*) ((unsigned char *)RcvBlock +

CHECK:SPACING: No space is necessary after a cast
#819: FILE: drivers/staging/sxg/sxg.c:3164:
+		RcvDataBufferHdr = (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#819: FILE: drivers/staging/sxg/sxg.c:3164:
+		RcvDataBufferHdr = (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

CHECK:SPACING: No space is necessary after a cast
#828: FILE: drivers/staging/sxg/sxg.c:3174:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK*) ((unsigned char *)RcvBlock +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#828: FILE: drivers/staging/sxg/sxg.c:3174:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK*) ((unsigned char *)RcvBlock +

CHECK:SPACING: No space is necessary after a cast
#833: FILE: drivers/staging/sxg/sxg.c:3178:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK_HDR*) ((unsigned char *)RcvBlock +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#833: FILE: drivers/staging/sxg/sxg.c:3178:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK_HDR*) ((unsigned char *)RcvBlock +

CHECK:SPACING: No space is necessary after a cast
#842: FILE: drivers/staging/sxg/sxg.c:3196:
+			    (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#842: FILE: drivers/staging/sxg/sxg.c:3196:
+			    (struct SXG_RCV_DATA_BUFFER_HDR*) (RcvDataBuffer +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#862: FILE: drivers/staging/sxg/sxg.c:3232:
+	memset(SxgSgl, 0, sizeof(struct SXG_SCATTER_GATHER*));

CHECK:SPACING: No space is necessary after a cast
#888: FILE: drivers/staging/sxg/sxg.c:3274:
+	struct adapter_t *adapter = (struct adapter_t *) netdev_priv(dev);

CHECK:CAMELCASE: Avoid CamelCase: <RcvRingInfo>
#927: FILE: drivers/staging/sxg/sxg.c:3420:
+	struct SXG_RING_INFO *RcvRingInfo = &adapter->RcvRingZeroInfo;

CHECK:CAMELCASE: Avoid CamelCase: <RcvRingZeroInfo>
#927: FILE: drivers/staging/sxg/sxg.c:3420:
+	struct SXG_RING_INFO *RcvRingInfo = &adapter->RcvRingZeroInfo;

CHECK:CAMELCASE: Avoid CamelCase: <RingDescriptorCmd>
#930: FILE: drivers/staging/sxg/sxg.c:3423:
+	struct SXG_CMD *RingDescriptorCmd;

CHECK:CAMELCASE: Avoid CamelCase: <RingZero>
#931: FILE: drivers/staging/sxg/sxg.c:3424:
+	struct SXG_RCV_RING *RingZero = &adapter->RcvRings[0];

CHECK:SPACING: No space is necessary after a cast
#940: FILE: drivers/staging/sxg/sxg.c:3445:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK*) RcvDescriptorBlockHdr->VirtualAddress;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#940: FILE: drivers/staging/sxg/sxg.c:3445:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK*) RcvDescriptorBlockHdr->VirtualAddress;

CHECK:CAMELCASE: Avoid CamelCase: <VirtualAddress>
#940: FILE: drivers/staging/sxg/sxg.c:3445:
+	    (struct SXG_RCV_DESCRIPTOR_BLOCK*) RcvDescriptorBlockHdr->VirtualAddress;

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#1019: FILE: drivers/staging/sxg/sxg.h:218:
+	struct LIST_ENTRY     				*_ple;										\

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1019: FILE: drivers/staging/sxg/sxg.h:218:
+^Istruct LIST_ENTRY     ^I^I^I^I*_ple;^I^I^I^I^I^I^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <_Hdr>
#1025: FILE: drivers/staging/sxg/sxg.h:223:
+		(_Hdr) = container_of(_ple, struct SXG_RCV_DATA_BUFFER_HDR, FreeList);	        \

CHECK:CAMELCASE: Avoid CamelCase: <FreeList>
#1025: FILE: drivers/staging/sxg/sxg.h:223:
+		(_Hdr) = container_of(_ple, struct SXG_RCV_DATA_BUFFER_HDR, FreeList);	        \

CHECK:CAMELCASE: Avoid CamelCase: <_Sgl>
#1049: FILE: drivers/staging/sxg/sxg.h:279:
+		(_Sgl) = container_of(_ple, struct SXG_SCATTER_GATHER, FreeList); \

CHECK:CAMELCASE: Avoid CamelCase: <Next>
#1062: FILE: drivers/staging/sxg/sxg.h:294:
+	struct SXG_MULTICAST_ADDRESS	*Next;

CHECK:CAMELCASE: Avoid CamelCase: <Adapters>
#1130: FILE: drivers/staging/sxg/sxg.h:388:
+	struct adapter_t	*Adapters;		// Linked list of adapters

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: drivers/staging/sxg/sxg.h:421:
+    struct mcast_address_t   *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: drivers/staging/sxg/sxg.h:485:
+    struct adapter_t  *adapter[SLIC_MAX_PORTS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: drivers/staging/sxg/sxg.h:486:
+    struct physcard_t *next;$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1220: FILE: drivers/staging/sxg/sxg.h:578:
+	enum SXG_STATE					State;				// Adapter state

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <State>
#1220: FILE: drivers/staging/sxg/sxg.h:578:
+	enum SXG_STATE					State;				// Adapter state

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1221: FILE: drivers/staging/sxg/sxg.h:579:
+	enum SXG_LINK_STATE				LinkState;			// Link state

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1225: FILE: drivers/staging/sxg/sxg.h:582:
+^Istruct adapter_t   ^I^I*Next;^I^I^I^I// Linked list$

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#1244: FILE: drivers/staging/sxg/sxg.h:597:
+	struct SXG_HW_REGS			*HwRegs;				// Sahara HW Register Memory (BAR0/1)

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1245: FILE: drivers/staging/sxg/sxg.h:598:
+	struct SXG_UCODE_REGS			*UcodeRegs;			// Microcode Register Memory (BAR2/3)

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#1246: FILE: drivers/staging/sxg/sxg.h:599:
+	struct SXG_TCB_REGS			*TcbRegs;			// Same as Ucode regs - See sxghw.h

CHECK:CAMELCASE: Avoid CamelCase: <TcbRegs>
#1246: FILE: drivers/staging/sxg/sxg.h:599:
+	struct SXG_TCB_REGS			*TcbRegs;			// Same as Ucode regs - See sxghw.h

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1255: FILE: drivers/staging/sxg/sxg.h:611:
+	struct SXG_EVENT_RING			*EventRings;			// Host event rings.  1/CPU to 16 max

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1261: FILE: drivers/staging/sxg/sxg.h:616:
+	struct SXG_XMT_RING				*XmtRings;			// Transmit rings

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1264: FILE: drivers/staging/sxg/sxg.h:618:
+	struct SXG_RING_INFO				XmtRingZeroInfo;	// Transmit ring 0 info

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1269: FILE: drivers/staging/sxg/sxg.h:622:
+	struct LIST_ENTRY					FreeProtocolHeaders;// Free protocol headers

CHECK:CAMELCASE: Avoid CamelCase: <FreeProtocolHeaders>
#1269: FILE: drivers/staging/sxg/sxg.h:622:
+	struct LIST_ENTRY					FreeProtocolHeaders;// Free protocol headers

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1278: FILE: drivers/staging/sxg/sxg.h:629:
+	struct SXG_RING_INFO				RcvRingZeroInfo;	// Receive ring 0 info

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1289: FILE: drivers/staging/sxg/sxg.h:643:
+	struct LIST_ENTRY					FreeRcvBuffers;		// Free SXG_DATA_BUFFER queue

CHECK:CAMELCASE: Avoid CamelCase: <FreeRcvBuffers>
#1289: FILE: drivers/staging/sxg/sxg.h:643:
+	struct LIST_ENTRY					FreeRcvBuffers;		// Free SXG_DATA_BUFFER queue

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#1290: FILE: drivers/staging/sxg/sxg.h:644:
+	struct LIST_ENTRY					FreeRcvBlocks;		// Free SXG_RCV_DESCRIPTOR_BLOCK Q

CHECK:CAMELCASE: Avoid CamelCase: <FreeRcvBlocks>
#1290: FILE: drivers/staging/sxg/sxg.h:644:
+	struct LIST_ENTRY					FreeRcvBlocks;		// Free SXG_RCV_DESCRIPTOR_BLOCK Q

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1291: FILE: drivers/staging/sxg/sxg.h:645:
+	struct LIST_ENTRY					AllRcvBlocks;		// All SXG_RCV_BLOCKs

CHECK:CAMELCASE: Avoid CamelCase: <AllRcvBlocks>
#1291: FILE: drivers/staging/sxg/sxg.h:645:
+	struct LIST_ENTRY					AllRcvBlocks;		// All SXG_RCV_BLOCKs

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1301: FILE: drivers/staging/sxg/sxg.h:654:
+	struct LIST_ENTRY					FreeSglBuffers;		// Free SXG_SCATTER_GATHER

CHECK:CAMELCASE: Avoid CamelCase: <FreeSglBuffers>
#1301: FILE: drivers/staging/sxg/sxg.h:654:
+	struct LIST_ENTRY					FreeSglBuffers;		// Free SXG_SCATTER_GATHER

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#1302: FILE: drivers/staging/sxg/sxg.h:655:
+	struct LIST_ENTRY					AllSglBuffers;		// All SXG_SCATTER_GATHER

CHECK:CAMELCASE: Avoid CamelCase: <AllSglBuffers>
#1302: FILE: drivers/staging/sxg/sxg.h:655:
+	struct LIST_ENTRY					AllSglBuffers;		// All SXG_SCATTER_GATHER

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1311: FILE: drivers/staging/sxg/sxg.h:677:
+	struct SXG_STATS				Stats;				// Statistics

CHECK:CAMELCASE: Avoid CamelCase: <Stats>
#1311: FILE: drivers/staging/sxg/sxg.h:677:
+	struct SXG_STATS				Stats;				// Statistics

CHECK:CAMELCASE: Avoid CamelCase: <RemoveHeadList>
#1361: FILE: drivers/staging/sxg/sxg_os.h:71:
+static __inline struct LIST_ENTRY *RemoveHeadList(struct LIST_ENTRY *l)

WARNING:INLINE: plain inline is preferred over __inline
#1361: FILE: drivers/staging/sxg/sxg_os.h:71:
+static __inline struct LIST_ENTRY *RemoveHeadList(struct LIST_ENTRY *l)

CHECK:CAMELCASE: Avoid CamelCase: <RemoveTailList>
#1375: FILE: drivers/staging/sxg/sxg_os.h:84:
+static __inline struct LIST_ENTRY *RemoveTailList(struct LIST_ENTRY *l)

WARNING:INLINE: plain inline is preferred over __inline
#1375: FILE: drivers/staging/sxg/sxg_os.h:84:
+static __inline struct LIST_ENTRY *RemoveTailList(struct LIST_ENTRY *l)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: drivers/staging/sxg/sxg_os.h:99:
+                struct LIST_ENTRY       *b;     \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: drivers/staging/sxg/sxg_os.h:99:
+                struct LIST_ENTRY       *b;     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1398: FILE: drivers/staging/sxg/sxg_os.h:110:
+                struct LIST_ENTRY       *f;     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: drivers/staging/sxg/sxg_os.h:110:
+                struct LIST_ENTRY       *f;     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: drivers/staging/sxg/sxgdbg.h:116:
+        struct trace_entry_t           entries[TRACE_ENTRIES];/* The circular buffer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: drivers/staging/sxg/sxgdbg.h:116:
+        struct trace_entry_t           entries[TRACE_ENTRIES];/* The circular buffer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: drivers/staging/sxg/sxgdbg.h:156:
+                struct trace_entry_t^I*trace_entry;^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: drivers/staging/sxg/sxgdbg.h:156:
+                struct trace_entry_t^I*trace_entry;^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <Descriptors>
#1581: FILE: drivers/staging/sxg/sxghif.h:568:
+	struct SXG_CMD Descriptors[SXG_XMT_RING_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <AllList>
#1671: FILE: drivers/staging/sxg/sxghif.h:724:
+	struct LIST_ENTRY AllList;	// Queue of all SXG_RCV_BLOCKS

CHECK:CAMELCASE: Avoid CamelCase: <Elements>
#1753: FILE: drivers/staging/sxg/sxghif.h:819:
+	struct SCATTER_GATHER_ELEMENT Elements[];

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#1772: FILE: drivers/staging/sxg/sxghif.h:833:
+	enum SXG_SGL_TYPE Type;	// FIRST! Dumb-nic or offload

CHECK:CAMELCASE: Avoid CamelCase: <VlanTag>
#1789: FILE: drivers/staging/sxg/sxghif.h:844:
+	struct VLAN_HDR VlanTag;	// VLAN tag to be inserted into SGL

CHECK:CAMELCASE: Avoid CamelCase: <Sgl>
#1791: FILE: drivers/staging/sxg/sxghif.h:846:
+	struct SXG_X64_SGL Sgl;	// SGL handed to card

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1888: FILE: drivers/staging/sxg/sxghw.h:677:
+#define	NUM_HW_CFG_ENTRIES	((128/sizeof(struct HW_CFG_DATA)) - 4)
        	                  	     ^

CHECK:CAMELCASE: Avoid CamelCase: <HwCfg>
#1920: FILE: drivers/staging/sxg/sxghw.h:707:
+	struct HW_CFG_DATA		HwCfg[NUM_HW_CFG_ENTRIES];

CHECK:CAMELCASE: Avoid CamelCase: <MacAddr>
#1927: FILE: drivers/staging/sxg/sxghw.h:712:
+	struct SXG_CONFIG_MAC	MacAddr[4];			/* space for 4 MAC addresses */

CHECK:CAMELCASE: Avoid CamelCase: <AtkFru>
#1928: FILE: drivers/staging/sxg/sxghw.h:713:
+	struct ATK_FRU			AtkFru;				/* FRU information */

CHECK:CAMELCASE: Avoid CamelCase: <PhyUcode>
#1947: FILE: drivers/staging/sxg/sxgphycode.h:21:
+static struct PHY_UCODE PhyUcode[] = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210572.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 29 warnings, 86 checks, 1746 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210572.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
