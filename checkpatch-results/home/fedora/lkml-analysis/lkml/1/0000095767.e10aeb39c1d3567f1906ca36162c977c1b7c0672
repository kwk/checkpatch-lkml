WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/gpu/vga/vgaarb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#144: FILE: drivers/gpu/vga/vgaarb.c:64:
+	list_for_each_entry(vgadev, &vga_list, list)
+	    if (pdev == vgadev->pdev)

WARNING:TABSTOP: Statements should start on a tabstop
#145: FILE: drivers/gpu/vga/vgaarb.c:65:
+	    if (pdev == vgadev->pdev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#163: FILE: drivers/gpu/vga/vgaarb.c:83:
+}
+/* Architecture can override enabling/disabling of a given

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#179: FILE: drivers/gpu/vga/vgaarb.c:99:
+	pr_devel("%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#217: FILE: drivers/gpu/vga/vgaarb.c:137:
+	pr_devel("%s\n", __func__);

WARNING:REPEATED_WORD: Possible repeated word: 'bye'
#269: FILE: drivers/gpu/vga/vgaarb.c:189:
+	/* We already own everything, just mark locked & bye bye */

WARNING:REPEATED_WORD: Possible repeated word: 'own'
#314: FILE: drivers/gpu/vga/vgaarb.c:234:
+		 * to check "decodes" since it should be impossible to own
+		 * own legacy resources you don't decode unless I have a bug

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#363: FILE: drivers/gpu/vga/vgaarb.c:283:
+	pr_devel("%s\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#406: FILE: drivers/gpu/vga/vgaarb.c:326:
+	if (pdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#408: FILE: drivers/gpu/vga/vgaarb.c:328:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#414: FILE: drivers/gpu/vga/vgaarb.c:334:
+		if (vgadev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conflict"
#421: FILE: drivers/gpu/vga/vgaarb.c:341:
+		if (conflict == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: drivers/gpu/vga/vgaarb.c:344:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#454: FILE: drivers/gpu/vga/vgaarb.c:374:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#456: FILE: drivers/gpu/vga/vgaarb.c:376:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#460: FILE: drivers/gpu/vga/vgaarb.c:380:
+	if (vgadev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#477: FILE: drivers/gpu/vga/vgaarb.c:397:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#479: FILE: drivers/gpu/vga/vgaarb.c:399:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#483: FILE: drivers/gpu/vga/vgaarb.c:403:
+	if (vgadev == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vgadev)...) over kmalloc(sizeof(struct vga_device)...)
#509: FILE: drivers/gpu/vga/vgaarb.c:429:
+	vgadev = kmalloc(sizeof(struct vga_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#510: FILE: drivers/gpu/vga/vgaarb.c:430:
+	if (vgadev == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#511: FILE: drivers/gpu/vga/vgaarb.c:431:
+	if (vgadev == NULL) {
+		pr_err("vgaarb: failed to allocate pci device\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vgadev_find"
#523: FILE: drivers/gpu/vga/vgaarb.c:443:
+	if (vgadev_find(pdev) != NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: drivers/gpu/vga/vgaarb.c:444:
+		BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#548: FILE: drivers/gpu/vga/vgaarb.c:468:
+			u16 l;
+			pci_read_config_word(bridge, PCI_BRIDGE_CONTROL,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vga_default"
#562: FILE: drivers/gpu/vga/vgaarb.c:482:
+	if (vga_default == NULL && (vgadev->owns & VGA_RSRC_LEGACY_MEM) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#586: FILE: drivers/gpu/vga/vgaarb.c:506:
+	if (vgadev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#616: FILE: drivers/gpu/vga/vgaarb.c:536:
+	if (vgadev == NULL)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#631: FILE: drivers/gpu/vga/vgaarb.c:551:
+void vga_set_irq_callback(struct pci_dev *pdev, void *cookie, void (*irq_func)(void *cookie, bool enable))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#646: FILE: drivers/gpu/vga/vgaarb.c:566:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'arbitrer' may be misspelled - perhaps 'arbiter'?
#654: FILE: drivers/gpu/vga/vgaarb.c:574:
+ *  open       : open user instance of the arbitrer. by default, it's
                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#718: FILE: drivers/gpu/vga/vgaarb.c:638:
+	spinlock_t lock;

WARNING:TYPO_SPELLING: 'chekcing' may be misspelled - perhaps 'checking'?
#741: FILE: drivers/gpu/vga/vgaarb.c:661:
+	/* XXX We're not chekcing the str_size! */
 	                 ^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#775: FILE: drivers/gpu/vga/vgaarb.c:695:
+static ssize_t vga_arb_read(struct file *file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lbuf"
#787: FILE: drivers/gpu/vga/vgaarb.c:707:
+	if (lbuf == NULL)

WARNING:TYPO_SPELLING: 'targetting' may be misspelled - perhaps 'targeting'?
#795: FILE: drivers/gpu/vga/vgaarb.c:715:
+	/* If we are targetting the default, use it */
 	             ^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#797: FILE: drivers/gpu/vga/vgaarb.c:717:
+	if (pdev == NULL || pdev == PCI_INVALID_CARD) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#805: FILE: drivers/gpu/vga/vgaarb.c:725:
+	if (vgadev == NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#842: FILE: drivers/gpu/vga/vgaarb.c:762:
+static ssize_t vga_arb_write(struct file *file, const char __user * buf,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#856: FILE: drivers/gpu/vga/vgaarb.c:776:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#884: FILE: drivers/gpu/vga/vgaarb.c:804:
+		if (priv->target == NULL) {
+				ret_val = -ENODEV;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->target"
#884: FILE: drivers/gpu/vga/vgaarb.c:804:
+		if (priv->target == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#910: FILE: drivers/gpu/vga/vgaarb.c:830:
+		if (strncmp(curr_pos, "all", 3) == 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#912: FILE: drivers/gpu/vga/vgaarb.c:832:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#919: FILE: drivers/gpu/vga/vgaarb.c:839:
+			/* TODO: Add this?
+			   if (io_state == VGA_RSRC_NONE) {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#927: FILE: drivers/gpu/vga/vgaarb.c:847:
+		if (priv->target == NULL) {
+				ret_val = -ENODEV;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->target"
#927: FILE: drivers/gpu/vga/vgaarb.c:847:
+		if (priv->target == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#956: FILE: drivers/gpu/vga/vgaarb.c:876:
+		/* TODO: Add this?
+		   if (io_state == VGA_RSRC_NONE) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->target"
#963: FILE: drivers/gpu/vga/vgaarb.c:883:
+		if (priv->target == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vgadev"
#1007: FILE: drivers/gpu/vga/vgaarb.c:927:
+		if (vgadev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->cards[i].pdev"
#1017: FILE: drivers/gpu/vga/vgaarb.c:937:
+			if (priv->cards[i].pdev == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1034: FILE: drivers/gpu/vga/vgaarb.c:954:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1045: FILE: drivers/gpu/vga/vgaarb.c:965:
+		if (priv->target == NULL) {
+				ret_val = -ENODEV;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->target"
#1045: FILE: drivers/gpu/vga/vgaarb.c:965:
+		if (priv->target == NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1063: FILE: drivers/gpu/vga/vgaarb.c:983:
+static unsigned int vga_arb_fpoll(struct file *file, poll_table * wait)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1067: FILE: drivers/gpu/vga/vgaarb.c:987:
+	pr_devel("%s\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv"
#1069: FILE: drivers/gpu/vga/vgaarb.c:989:
+	if (priv == NULL)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1080: FILE: drivers/gpu/vga/vgaarb.c:1000:
+	pr_devel("%s\n", __func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*priv)...) over kmalloc(sizeof(struct vga_arb_private)...)
#1082: FILE: drivers/gpu/vga/vgaarb.c:1002:
+	priv = kmalloc(sizeof(struct vga_arb_private), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv"
#1083: FILE: drivers/gpu/vga/vgaarb.c:1003:
+	if (priv == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1099: FILE: drivers/gpu/vga/vgaarb.c:1019:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1110: FILE: drivers/gpu/vga/vgaarb.c:1030:
+	pr_devel("%s\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv"
#1112: FILE: drivers/gpu/vga/vgaarb.c:1032:
+	if (priv == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uc->pdev"
#1119: FILE: drivers/gpu/vga/vgaarb.c:1039:
+		if (uc->pdev == NULL)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1145: FILE: drivers/gpu/vga/vgaarb.c:1065:
+	pr_devel("%s\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1149: FILE: drivers/gpu/vga/vgaarb.c:1069:
+	 * cases of hotplugable vga cards. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1186: FILE: drivers/gpu/vga/vgaarb.c:1106:
+	 * default */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1216: FILE: include/linux/vgaarb.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1258: FILE: include/linux/vgaarb.h:43:
+extern void vga_set_legacy_decoding(struct pci_dev *pdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1259: FILE: include/linux/vgaarb.h:44:
+extern void vga_set_legacy_decoding(struct pci_dev *pdev,
+									unsigned int decodes);

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#1271: FILE: include/linux/vgaarb.h:56:
+ *     wether the card is doing legacy decoding for that type of resource. If
        ^^^^^^

WARNING:TYPO_SPELLING: 'inlcuding' may be misspelled - perhaps 'including'?
#1274: FILE: include/linux/vgaarb.h:59:
+ *     and disable their IOs and/or Memory access, inlcuding VGA forwarding
                                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'differenciate' may be misspelled - perhaps 'differentiate'?
#1281: FILE: include/linux/vgaarb.h:66:
+ *     segment, since P2P bridges don't differenciate VGA memory and IO
                                         ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#1282: FILE: include/linux/vgaarb.h:67:
+ *     afaik). You can indicate wether this blocking should be interruptible
                                 ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1289: FILE: include/linux/vgaarb.h:74:
+extern int vga_get(struct pci_dev *pdev, unsigned int rsrc,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1290: FILE: include/linux/vgaarb.h:75:
+											int interruptible);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: include/linux/vgaarb.h:75:
+extern int vga_get(struct pci_dev *pdev, unsigned int rsrc,
+											int interruptible);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1299: FILE: include/linux/vgaarb.h:84:
+static inline int vga_get_interruptible(struct pci_dev *pdev,
+										unsigned int rsrc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: include/linux/vgaarb.h:86:
+       return vga_get(pdev, rsrc, 1);$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1311: FILE: include/linux/vgaarb.h:96:
+											unsigned int rsrc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: include/linux/vgaarb.h:96:
+static inline int vga_get_uninterruptible(struct pci_dev *pdev,
+											unsigned int rsrc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: include/linux/vgaarb.h:98:
+       return vga_get(pdev, rsrc, 0);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1327: FILE: include/linux/vgaarb.h:112:
+extern int vga_tryget(struct pci_dev *pdev, unsigned int rsrc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1342: FILE: include/linux/vgaarb.h:127:
+extern void vga_put(struct pci_dev *pdev, unsigned int rsrc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: include/linux/vgaarb.h:129:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1365: FILE: include/linux/vgaarb.h:150:
+extern struct pci_dev *vga_default_device(void);

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#1372: FILE: include/linux/vgaarb.h:157:
+ *     independant PCI domains that can afford concurrent VGA
        ^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: include/linux/vgaarb.h:164:
+       return 1;$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1383: FILE: include/linux/vgaarb.h:168:
+void vga_set_irq_callback(struct pci_dev *pdev, void *cookie, void (*irq_func)(void *cookie, bool enable));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000095767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 40 warnings, 49 checks, 1307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000095767.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
