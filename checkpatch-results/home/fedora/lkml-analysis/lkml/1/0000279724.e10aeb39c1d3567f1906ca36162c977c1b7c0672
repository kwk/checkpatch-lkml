WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#51: FILE: drivers/spi/Kconfig:123:
+config SPI_MPC52xx
+	tristate "Freescale MPC52xx SPI (non-PSC) controller support"
+	depends on PPC_MPC52xx && SPI
+	select SPI_MASTER_OF
+	help
+	  This drivers supports the MPC52xx SPI controller in master SPI
+	  mode.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/spi/mpc52xx_spi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: drivers/spi/mpc52xx_spi.c:28:
+#define SPI_CTRL1_SPIE		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: drivers/spi/mpc52xx_spi.c:29:
+#define SPI_CTRL1_SPE		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: drivers/spi/mpc52xx_spi.c:30:
+#define SPI_CTRL1_MSTR		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: drivers/spi/mpc52xx_spi.c:31:
+#define SPI_CTRL1_CPOL		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: drivers/spi/mpc52xx_spi.c:32:
+#define SPI_CTRL1_CPHA		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: drivers/spi/mpc52xx_spi.c:33:
+#define SPI_CTRL1_SSOE		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#113: FILE: drivers/spi/mpc52xx_spi.c:34:
+#define SPI_CTRL1_LSBFE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#119: FILE: drivers/spi/mpc52xx_spi.c:40:
+#define SPI_STATUS_SPIF		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: drivers/spi/mpc52xx_spi.c:41:
+#define SPI_STATUS_WCOL		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#121: FILE: drivers/spi/mpc52xx_spi.c:42:
+#define SPI_STATUS_MODF		(1 << 4)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: drivers/spi/mpc52xx_spi.c:77:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: drivers/spi/mpc52xx_spi.c:150:
+	 * changing the chip select value to the head of the queue */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: drivers/spi/mpc52xx_spi.c:156:
+	 * something before it.) and drop the spinlock */

WARNING:TYPO_SPELLING: 'receving' may be misspelled - perhaps 'receiving'?
#307: FILE: drivers/spi/mpc52xx_spi.c:228:
+		 * receving the interrupt and sending the next byte, but
 		   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#309: FILE: drivers/spi/mpc52xx_spi.c:230:
+		 * transfer which is what we do here. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#316: FILE: drivers/spi/mpc52xx_spi.c:237:
+			data = *(ms->tx_buf-1);
 			                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/spi/mpc52xx_spi.c:292:
+	 * to start the next message. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/spi/mpc52xx_spi.c:338:
+	struct mpc52xx_spi *ms = container_of(work, struct mpc52xx_spi, work);
+	mpc52xx_spi_irq(ms->irq, ms);

WARNING:LINE_SPACING: Missing a blank line after declarations
#454: FILE: drivers/spi/mpc52xx_spi.c:375:
+	struct mpc52xx_spi *ms = spi_master_get_devdata(master);
+	ms->premessage = hook;

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#499: FILE: drivers/spi/mpc52xx_spi.c:420:
+	int value = strict_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mpc52xx_spi_show_count' to 'msg_count_show' 'mpc52xx_spi_set_count' to 'msg_count_store'
#505: FILE: drivers/spi/mpc52xx_spi.c:426:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mpc52xx_spi_show_count' to 'byte_count_show' 'mpc52xx_spi_set_count' to 'byte_count_store'
#508: FILE: drivers/spi/mpc52xx_spi.c:429:
+DEVICE_ATTR(byte_count, 0644, mpc52xx_spi_show_count, mpc52xx_spi_set_count);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mpc52xx_spi_show_count' to 'wcol_count_show' 'mpc52xx_spi_set_count' to 'wcol_count_store'
#509: FILE: drivers/spi/mpc52xx_spi.c:430:
+DEVICE_ATTR(wcol_count, 0644, mpc52xx_spi_show_count, mpc52xx_spi_set_count);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mpc52xx_spi_show_count' to 'wcol_ticks_show' 'mpc52xx_spi_set_count' to 'wcol_ticks_store'
#510: FILE: drivers/spi/mpc52xx_spi.c:431:
+DEVICE_ATTR(wcol_ticks, 0644, mpc52xx_spi_show_count, mpc52xx_spi_set_count);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mpc52xx_spi_show_count' to 'modf_count_show' 'mpc52xx_spi_set_count' to 'modf_count_store'
#511: FILE: drivers/spi/mpc52xx_spi.c:432:
+DEVICE_ATTR(modf_count, 0644, mpc52xx_spi_show_count, mpc52xx_spi_set_count);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#516: FILE: drivers/spi/mpc52xx_spi.c:437:
+static int __devinit mpc52xx_spi_of_probe(struct of_device *op,

WARNING:SIZEOF_PARENTHESIS: sizeof *ms should be sizeof(*ms)
#536: FILE: drivers/spi/mpc52xx_spi.c:457:
+	master = spi_alloc_master(&op->dev, sizeof *ms);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: drivers/spi/mpc52xx_spi.c:492:
+	rc = request_irq(irq0, mpc52xx_spi_irq, IRQF_SAMPLE_RANDOM,
+			  "mpc5200 SPI MODF", ms);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#599: FILE: drivers/spi/mpc52xx_spi.c:520:
+static void __devexit mpc52xx_spi_of_remove(struct of_device *op)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#615: FILE: drivers/spi/mpc52xx_spi.c:536:
+static struct of_device_id mpc52xx_spi_of_match[] __devinitdata = {

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#615: FILE: drivers/spi/mpc52xx_spi.c:536:
+static struct of_device_id mpc52xx_spi_of_match[] __devinitdata = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#647: FILE: include/linux/spi/mpc52xx_spi.h:1:
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: include/linux/spi/mpc52xx_spi.h:5:
+extern void mpc52xx_spi_set_premessage_hook(struct spi_master *master,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279724.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 14 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279724.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
