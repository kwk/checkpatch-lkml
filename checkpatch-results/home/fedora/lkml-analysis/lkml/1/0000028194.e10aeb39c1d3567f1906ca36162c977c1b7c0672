WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:POINTER_LOCATION: "foo __initdata		bar" should be "foo __initdata bar"
#79: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:54:
+static struct range __initdata		range[RANGE_NUM];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after range[RANGE_NUM]
#79: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:54:
+static struct range __initdata		range[RANGE_NUM];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#250: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:86:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:87:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",
 				 range[i].start, range[i].end + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:113:
+		subtract_range(range, RANGE_NUM, extra_remove_base,
 				 extra_remove_base + extra_remove_size  - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#272: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:120:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:121:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",
 				 range[i].start, range[i].end + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#281: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:130:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/x86/kernel/cpu/mtrr/cleanup.c:131:
+			printk(KERN_DEBUG "MTRR MAP PFN: %016llx - %016llx\n",
 				 range[i].start, range[i].end + 1);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: arch/x86/pci/amd_bus.c:304:
+		subtract_range(range, RANGE_NUM, 1ULL<<32, end - 1);
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#499: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: include/linux/range.h:1:
+#ifndef _LINUX_RANGE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: include/linux/range.h:10:
+int add_range(struct range *range, int az, int nr_range,
+		u64 start, u64 end);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#515: FILE: include/linux/range.h:12:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: include/linux/range.h:14:
+int add_range_with_merge(struct range *range, int az, int nr_range,
+				u64 start, u64 end);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#545: FILE: kernel/range.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: kernel/range.c:29:
+int add_range_with_merge(struct range *range, int az, int nr_range,
+		     u64 start, u64 end)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#622: FILE: kernel/range.c:78:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#639: FILE: kernel/range.c:95:
+				printk(KERN_ERR "run of slot in ranges\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 10 checks, 602 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028194.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
