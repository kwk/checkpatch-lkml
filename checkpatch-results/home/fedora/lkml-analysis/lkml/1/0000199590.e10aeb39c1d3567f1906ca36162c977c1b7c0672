WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: perfmon/perfmon_pmu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#66: FILE: perfmon/perfmon_pmu.c:22:
+ * ^Ihttp://perfmon2.sf.net$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: perfmon/perfmon_pmu.c:34:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: perfmon/perfmon_pmu.c:35:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#96: FILE: perfmon/perfmon_pmu.c:52:
+ * perfmon core must acces PMU information ONLY through pfm_pmu_conf
                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#121: FILE: perfmon/perfmon_pmu.c:77:
+	max1 = max2 = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#142: FILE: perfmon/perfmon_pmu.c:98:
+	n = n_counters = n2 = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#143: FILE: perfmon/perfmon_pmu.c:99:
+	max1 = max2 = max3 = -1;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#200: FILE: perfmon/perfmon_pmu.c:156:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#247: FILE: perfmon/perfmon_pmu.c:203:
+	if (pfm_pmu_acquired == 1) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: perfmon/perfmon_pmu.c:214:
+^I^I^I^I  ^I     unavail_pmcs,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: perfmon/perfmon_pmu.c:214:
+^I^I^I^I  ^I     unavail_pmcs,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: perfmon/perfmon_pmu.c:214:
+			pfm_pmu_regdesc_init(&pfm_pmu_conf->regs_all, 0,
+				  	     unavail_pmcs,

WARNING:TYPO_SPELLING: 'ressources' may be misspelled - perhaps 'resources'?
#264: FILE: perfmon/perfmon_pmu.c:220:
+			/* available PMU ressources */
 			                 ^^^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#289: FILE: perfmon/perfmon_pmu.c:245:
+	BUG_ON(irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 5 checks, 274 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000199590.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
