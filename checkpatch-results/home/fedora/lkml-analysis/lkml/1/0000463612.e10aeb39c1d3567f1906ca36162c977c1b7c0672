WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
2. Coding style changes, call the API and then check return value (for kmalloc).

WARNING:TYPO_SPELLING: 'mechansim' may be misspelled - perhaps 'mechanism'?
#39: 
1. Implement error handling mechansim for handling container_add_file()
                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: include/linux/memcontrol.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: include/linux/memcontrol.h:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: include/linux/memcontrol.h:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#106: FILE: init/Kconfig:309:
+config CONTAINER_MEMCONTROL
+	bool "A simple RSS based memory controller"
+	select CONTAINERS
+	help
+	  Provides a simple Resource Controller for monitoring and
+	  controlling the total Resident Set Size of the tasks in a container
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: mm/memcontrol.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: mm/memcontrol.c:13:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: mm/memcontrol.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#155: FILE: mm/memcontrol.c:28:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: mm/memcontrol.c:35:
+^I^I^I^I/* counted ^I^I^I^I   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: mm/memcontrol.c:45:
+^Istruct res_counter ^I^Icounter;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: mm/memcontrol.c:62:
+static int memcontrol_create(struct container_subsys *ss,
+				struct container *cont)

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: mm/memcontrol.c:65:
+	struct memcontrol *mem = kzalloc(sizeof(*mem), GFP_KERNEL);
+	if (!mem)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: mm/memcontrol.c:75:
+static void memcontrol_destroy(struct container_subsys *ss,
+				struct container *cont)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: mm/memcontrol.c:81:
+static ssize_t memcontrol_limit_write(struct container *cont,
+					struct cftype *cft, struct file *file,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: mm/memcontrol.c:90:
+	BUG_ON(!mem);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#219: FILE: mm/memcontrol.c:92:
+	if (buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#234: FILE: mm/memcontrol.c:107:
+	limit = simple_strtoul(buffer, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: mm/memcontrol.c:124:
+static ssize_t memcontrol_limit_read(struct container *cont, struct cftype *cft,
+					struct file *file, char __user *userbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: mm/memcontrol.c:140:
+static ssize_t memcontrol_usage_read(struct container *cont, struct cftype *cft,
+					struct file *file, char __user *userbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: mm/memcontrol.c:167:
+static int memcontrol_populate(struct container_subsys *ss,
+				struct container *cont)

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: mm/memcontrol.c:170:
+	int rc;
+	if ((rc = container_add_file(cont, &memcontrol_usage)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#297: FILE: mm/memcontrol.c:170:
+	if ((rc = container_add_file(cont, &memcontrol_usage)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#299: FILE: mm/memcontrol.c:172:
+	if ((rc = container_add_file(cont, &memcontrol_limit)) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: mm/memcontrol.c:189:
+	printk("Initializing memcontrol version %s, id %d\n", version, id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 13 warnings, 7 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463612.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
