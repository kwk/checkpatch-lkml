ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#91: FILE: drivers/mfd/ab3100-core.c

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#91: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/mfd/ab3100-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPLIT_STRING: quoted string split across lines
#197: FILE: drivers/mfd/ab3100-core.c:102:
+			"write error (write register) "
+			"%d bytes transferred (expected 2)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: drivers/mfd/ab3100-core.c:139:
+			"write error (write test register) "
+			"%d bytes transferred (expected 2)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: drivers/mfd/ab3100-core.c:174:
+			"write error (send register address) "
+			"%d bytes transferred (expected 1)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: drivers/mfd/ab3100-core.c:192:
+			"write error (read register) "
+			"%d bytes transferred (expected 1)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: drivers/mfd/ab3100-core.c:233:
+			"write error (send first register address) "
+			"%d bytes transferred (expected 1)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: drivers/mfd/ab3100-core.c:248:
+			"write error (read register page) "
+			"%d bytes transferred (expected %d)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#378: FILE: drivers/mfd/ab3100-core.c:283:
+			"write error (maskset send address) "
+			"%d bytes transferred (expected 1)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#393: FILE: drivers/mfd/ab3100-core.c:298:
+			"write error (maskset read register) "
+			"%d bytes transferred (expected 1)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/mfd/ab3100-core.c:318:
+			"write error (write register) "
+			"%d bytes transferred (expected 2)\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/mfd/ab3100-core.c:350:
+  return blocking_notifier_chain_unregister(&ab3100->event_subscribers,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#450: FILE: drivers/mfd/ab3100-core.c:355:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#504: FILE: drivers/mfd/ab3100-core.c:409:
+	return;
+}

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#530: FILE: drivers/mfd/ab3100-core.c:435:
+	seq_printf(s, "AB3100 registers:\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#577: FILE: drivers/mfd/ab3100-core.c:482:
+	buf_size = min(count, (sizeof(buf)-1));
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#601: FILE: drivers/mfd/ab3100-core.c:506:
+	err = strict_strtoul(&buf[regp], 16, &user_reg);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#610: FILE: drivers/mfd/ab3100-core.c:515:
+		u8 reg = (u8) user_reg;

CHECK:SPACING: No space is necessary after a cast
#621: FILE: drivers/mfd/ab3100-core.c:526:
+		u8 reg = (u8) user_reg;

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#638: FILE: drivers/mfd/ab3100-core.c:543:
+		err = strict_strtoul(&buf[valp], 16, &user_value);

CHECK:SPACING: No space is necessary after a cast
#644: FILE: drivers/mfd/ab3100-core.c:549:
+		value = (u8) user_value;

WARNING:SPLIT_STRING: quoted string split across lines
#650: FILE: drivers/mfd/ab3100-core.c:555:
+			 "debug write reg[0x%02x] with 0x%02x, "
+			 "after readback: 0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: drivers/mfd/ab3100-core.c:582:
+	ab3100_reg_file = debugfs_create_file("registers",
+				S_IRUGO, ab3100_dir, ab3100,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#677: FILE: drivers/mfd/ab3100-core.c:582:
+				S_IRUGO, ab3100_dir, ab3100,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/mfd/ab3100-core.c:592:
+	ab3100_get_reg_file = debugfs_create_file("get_reg",
+				S_IWUGO, ab3100_dir, &ab3100_get_priv,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#687: FILE: drivers/mfd/ab3100-core.c:592:
+				S_IWUGO, ab3100_dir, &ab3100_get_priv,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: drivers/mfd/ab3100-core.c:602:
+	ab3100_set_reg_file = debugfs_create_file("set_reg",
+				S_IWUGO, ab3100_dir, &ab3100_set_priv,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#697: FILE: drivers/mfd/ab3100-core.c:602:
+				S_IWUGO, ab3100_dir, &ab3100_set_priv,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#714: FILE: drivers/mfd/ab3100-core.c:619:
+}
+static inline void ab3100_remove_debugfs(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#725: FILE: drivers/mfd/ab3100-core.c:630:
+}
+static inline void ab3100_remove_debugfs(void)

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#741: FILE: drivers/mfd/ab3100-core.c:646:
+static const struct ab3100_init_setting __initdata

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:TYPO_SPELLING: 'registe' may be misspelled - perhaps 'register'?
#803: FILE: drivers/mfd/ab3100-core.c:708:
+	 * bit 3 in test registe 0x02 is a special, undocumented test
 	                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#809: FILE: drivers/mfd/ab3100-core.c:714:
+			 "AB3100 P1E variant detected, "
+			 "forcing chip to 32KHz\n");

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#873: FILE: drivers/mfd/ab3100-core.c:778:
+static const struct ab_family_id ids[] __initdata = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: drivers/mfd/ab3100-core.c:833:
+static int __init ab3100_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ab3100)...) over kzalloc(sizeof(struct ab3100)...)
#934: FILE: drivers/mfd/ab3100-core.c:839:
+	ab3100 = kzalloc(sizeof(struct ab3100), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#936: FILE: drivers/mfd/ab3100-core.c:841:
+	if (!ab3100) {
+		dev_err(&client->dev, "could not allocate AB3100 device\n");

WARNING:SPLIT_STRING: quoted string split across lines
#955: FILE: drivers/mfd/ab3100-core.c:860:
+			"could not communicate with the AB3100 analog "
+			"baseband chip\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ids[i].name"
#961: FILE: drivers/mfd/ab3100-core.c:866:
+			if (ids[i].name != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#967: FILE: drivers/mfd/ab3100-core.c:872:
+				break;
+			} else {

WARNING:SPLIT_STRING: quoted string split across lines
#979: FILE: drivers/mfd/ab3100-core.c:884:
+		dev_err(&client->dev, "accepting it anyway. Please update "
+			"the driver.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: drivers/mfd/ab3100-core.c:893:
+	ab3100->testreg_client = i2c_new_dummy(client->adapter,
+						     client->addr + 1);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#994: FILE: drivers/mfd/ab3100-core.c:899:
+	strlcpy(ab3100->testreg_client->name, id->name,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1093: FILE: include/linux/mfd/ab3100.h:1:
+/*

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1114: FILE: include/linux/mfd/ab3100.h:22:
+#define AB3100_EVENTA1_ONSWA				(0x01<<16)
                             				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1115: FILE: include/linux/mfd/ab3100.h:23:
+#define AB3100_EVENTA1_ONSWB				(0x02<<16)
                             				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1116: FILE: include/linux/mfd/ab3100.h:24:
+#define AB3100_EVENTA1_ONSWC				(0x04<<16)
                             				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1117: FILE: include/linux/mfd/ab3100.h:25:
+#define AB3100_EVENTA1_DCIO				(0x08<<16)
                            				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1118: FILE: include/linux/mfd/ab3100.h:26:
+#define AB3100_EVENTA1_OVER_TEMP			(0x10<<16)
                                 			     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1119: FILE: include/linux/mfd/ab3100.h:27:
+#define AB3100_EVENTA1_SIM_OFF				(0x20<<16)
                               				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1120: FILE: include/linux/mfd/ab3100.h:28:
+#define AB3100_EVENTA1_VBUS				(0x40<<16)
                            				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1121: FILE: include/linux/mfd/ab3100.h:29:
+#define AB3100_EVENTA1_VSET_USB				(0x80<<16)
                                				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1123: FILE: include/linux/mfd/ab3100.h:31:
+#define AB3100_EVENTA2_READY_TX				(0x01<<8)
                                				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1124: FILE: include/linux/mfd/ab3100.h:32:
+#define AB3100_EVENTA2_READY_RX				(0x02<<8)
                                				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1125: FILE: include/linux/mfd/ab3100.h:33:
+#define AB3100_EVENTA2_OVERRUN_ERROR			(0x04<<8)
                                     			     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1126: FILE: include/linux/mfd/ab3100.h:34:
+#define AB3100_EVENTA2_FRAMING_ERROR			(0x08<<8)
                                     			     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1127: FILE: include/linux/mfd/ab3100.h:35:
+#define AB3100_EVENTA2_CHARG_OVERCURRENT		(0x10<<8)
                                         		     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1128: FILE: include/linux/mfd/ab3100.h:36:
+#define AB3100_EVENTA2_MIDR				(0x20<<8)
                            				     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1129: FILE: include/linux/mfd/ab3100.h:37:
+#define AB3100_EVENTA2_BATTERY_REM			(0x40<<8)
                                   			     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1130: FILE: include/linux/mfd/ab3100.h:38:
+#define AB3100_EVENTA2_ALARM				(0x80<<8)
                             				     ^

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1169: FILE: include/linux/mfd/ab3100.h:77:
+	struct mutex access_mutex;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122111.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 28 warnings, 31 checks, 1121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122111.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
