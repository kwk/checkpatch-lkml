WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/arm/plat-omap/include/plat/display.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#89: FILE: arch/arm/plat-omap/include/plat/display.h:26:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:BIT_MACRO: Prefer using the BIT macro
#91: FILE: arch/arm/plat-omap/include/plat/display.h:28:
+#define DISPC_IRQ_FRAMEDONE		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#92: FILE: arch/arm/plat-omap/include/plat/display.h:29:
+#define DISPC_IRQ_VSYNC			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#93: FILE: arch/arm/plat-omap/include/plat/display.h:30:
+#define DISPC_IRQ_EVSYNC_EVEN		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#94: FILE: arch/arm/plat-omap/include/plat/display.h:31:
+#define DISPC_IRQ_EVSYNC_ODD		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: arch/arm/plat-omap/include/plat/display.h:32:
+#define DISPC_IRQ_ACBIAS_COUNT_STAT	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#96: FILE: arch/arm/plat-omap/include/plat/display.h:33:
+#define DISPC_IRQ_PROG_LINE_NUM		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#97: FILE: arch/arm/plat-omap/include/plat/display.h:34:
+#define DISPC_IRQ_GFX_FIFO_UNDERFLOW	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#98: FILE: arch/arm/plat-omap/include/plat/display.h:35:
+#define DISPC_IRQ_GFX_END_WIN		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#99: FILE: arch/arm/plat-omap/include/plat/display.h:36:
+#define DISPC_IRQ_PAL_GAMMA_MASK	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#100: FILE: arch/arm/plat-omap/include/plat/display.h:37:
+#define DISPC_IRQ_OCP_ERR		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#101: FILE: arch/arm/plat-omap/include/plat/display.h:38:
+#define DISPC_IRQ_VID1_FIFO_UNDERFLOW	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#102: FILE: arch/arm/plat-omap/include/plat/display.h:39:
+#define DISPC_IRQ_VID1_END_WIN		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#103: FILE: arch/arm/plat-omap/include/plat/display.h:40:
+#define DISPC_IRQ_VID2_FIFO_UNDERFLOW	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: arch/arm/plat-omap/include/plat/display.h:41:
+#define DISPC_IRQ_VID2_END_WIN		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#105: FILE: arch/arm/plat-omap/include/plat/display.h:42:
+#define DISPC_IRQ_SYNC_LOST		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: arch/arm/plat-omap/include/plat/display.h:43:
+#define DISPC_IRQ_SYNC_LOST_DIGIT	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: arch/arm/plat-omap/include/plat/display.h:44:
+#define DISPC_IRQ_WAKEUP		(1 << 16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: arch/arm/plat-omap/include/plat/display.h:140:
+	OMAP_DSS_LCD_IVS		= 1<<0,
 	                		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#204: FILE: arch/arm/plat-omap/include/plat/display.h:141:
+	OMAP_DSS_LCD_IHS		= 1<<1,
 	                		   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#205: FILE: arch/arm/plat-omap/include/plat/display.h:142:
+	OMAP_DSS_LCD_IPC		= 1<<2,
 	                		   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#206: FILE: arch/arm/plat-omap/include/plat/display.h:143:
+	OMAP_DSS_LCD_IEO		= 1<<3,
 	                		   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#207: FILE: arch/arm/plat-omap/include/plat/display.h:144:
+	OMAP_DSS_LCD_RF			= 1<<4,
 	               			   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#208: FILE: arch/arm/plat-omap/include/plat/display.h:145:
+	OMAP_DSS_LCD_ONOFF		= 1<<5,
 	                  		   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#210: FILE: arch/arm/plat-omap/include/plat/display.h:147:
+	OMAP_DSS_LCD_TFT		= 1<<20,
 	                		   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: arch/arm/plat-omap/include/plat/display.h:225:
+void omap_rfbi_write_pixels(const void __iomem *buf, int scr_width,
+		u16 x, u16 y,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#290: FILE: arch/arm/plat-omap/include/plat/display.h:227:
+int omap_rfbi_enable_te(bool enable, unsigned line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: arch/arm/plat-omap/include/plat/display.h:229:
+int omap_rfbi_setup_te(enum omap_rfbi_te_mode mode,
+			     unsigned hs_pulse_time, unsigned vs_pulse_time,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#292: FILE: arch/arm/plat-omap/include/plat/display.h:229:
+			     unsigned hs_pulse_time, unsigned vs_pulse_time,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#292: FILE: arch/arm/plat-omap/include/plat/display.h:229:
+			     unsigned hs_pulse_time, unsigned vs_pulse_time,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#338: FILE: arch/arm/plat-omap/include/plat/display.h:275:
+ * a normal monitor can also show */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: arch/arm/plat-omap/include/plat/display.h:318:
+	int (*set_manager)(struct omap_overlay *ovl,
+		struct omap_overlay_manager *mgr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: arch/arm/plat-omap/include/plat/display.h:322:
+	int (*set_overlay_info)(struct omap_overlay *ovl,
+			struct omap_overlay_info *info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: arch/arm/plat-omap/include/plat/display.h:324:
+	void (*get_overlay_info)(struct omap_overlay *ovl,
+			struct omap_overlay_info *info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/arm/plat-omap/include/plat/display.h:360:
+	int (*set_device)(struct omap_overlay_manager *mgr,
+		struct omap_dss_device *dssdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: arch/arm/plat-omap/include/plat/display.h:364:
+	int (*set_manager_info)(struct omap_overlay_manager *mgr,
+			struct omap_overlay_manager_info *info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: arch/arm/plat-omap/include/plat/display.h:366:
+	void (*get_manager_info)(struct omap_overlay_manager *mgr,
+			struct omap_overlay_manager_info *info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: arch/arm/plat-omap/include/plat/display.h:470:
+	void (*get_resolution)(struct omap_dss_device *dssdev,
+			u16 *xres, u16 *yres);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: arch/arm/plat-omap/include/plat/display.h:474:
+	int (*check_timings)(struct omap_dss_device *dssdev,
+			struct omap_video_timings *timings);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: arch/arm/plat-omap/include/plat/display.h:476:
+	void (*set_timings)(struct omap_dss_device *dssdev,
+			struct omap_video_timings *timings);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: arch/arm/plat-omap/include/plat/display.h:478:
+	void (*get_timings)(struct omap_dss_device *dssdev,
+			struct omap_video_timings *timings);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: arch/arm/plat-omap/include/plat/display.h:480:
+	int (*update)(struct omap_dss_device *dssdev,
+			       u16 x, u16 y, u16 w, u16 h);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: arch/arm/plat-omap/include/plat/display.h:485:
+	int (*set_update_mode)(struct omap_dss_device *dssdev,
+			enum omap_dss_update_mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: arch/arm/plat-omap/include/plat/display.h:500:
+	int (*memory_read)(struct omap_dss_device *dssdev,
+			void *buf, size_t size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_device *' should also have an identifier name
#579: FILE: arch/arm/plat-omap/include/plat/display.h:516:
+	int (*probe)(struct omap_dss_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_device *' should also have an identifier name
#580: FILE: arch/arm/plat-omap/include/plat/display.h:517:
+	void (*remove)(struct omap_dss_device *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: arch/arm/plat-omap/include/plat/display.h:526:
+	void (*setup_update)(struct omap_dss_device *dssdev,
+			u16 x, u16 y, u16 w, u16 h);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: arch/arm/plat-omap/include/plat/display.h:538:
+	int (*memory_read)(struct omap_dss_device *dssdev,
+			void *buf, size_t size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_driver *' should also have an identifier name
#605: FILE: arch/arm/plat-omap/include/plat/display.h:542:
+int omap_dss_register_driver(struct omap_dss_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_driver *' should also have an identifier name
#606: FILE: arch/arm/plat-omap/include/plat/display.h:543:
+void omap_dss_unregister_driver(struct omap_dss_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_device *' should also have an identifier name
#608: FILE: arch/arm/plat-omap/include/plat/display.h:545:
+int omap_dss_register_device(struct omap_dss_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct omap_dss_device *' should also have an identifier name
#609: FILE: arch/arm/plat-omap/include/plat/display.h:546:
+void omap_dss_unregister_device(struct omap_dss_device *);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#613: FILE: arch/arm/plat-omap/include/plat/display.h:550:
+#define for_each_dss_dev(d) while ((d = omap_dss_get_next_device(d)) != NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#613: FILE: arch/arm/plat-omap/include/plat/display.h:550:
+#define for_each_dss_dev(d) while ((d = omap_dss_get_next_device(d)) != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: arch/arm/plat-omap/include/plat/display.h:553:
+struct omap_dss_device *omap_dss_find_device(void *data,
+		int (*match)(struct omap_dss_device *dssdev, void *data));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: arch/arm/plat-omap/include/plat/display.h:570:
+int omap_dispc_wait_for_irq_interruptible_timeout(u32 irqmask,
+		unsigned long timeout);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#664: FILE: drivers/video/omap2/dss/Kconfig:1:
+menuconfig OMAP2_DSS
+        tristate "OMAP2/3 Display Subsystem support (EXPERIMENTAL)"
+        depends on ARCH_OMAP2 || ARCH_OMAP3
+        help
+          OMAP2/3 Display Subsystem support.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#684: FILE: drivers/video/omap2/dss/Kconfig:21:
+config OMAP2_DSS_DEBUG_SUPPORT
+        bool "Debug support"
+	default y
+	help
+	  This enables debug messages. You need to enable printing
+	  with 'debug' module parameter.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#691: FILE: drivers/video/omap2/dss/Kconfig:28:
+config OMAP2_DSS_RFBI
+	bool "RFBI support"
+        default n
+	help
+	  MIPI DBI, or RFBI (Remote Framebuffer Interface), support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#697: FILE: drivers/video/omap2/dss/Kconfig:34:
+config OMAP2_DSS_VENC
+	bool "VENC support"
+        default y
+	help
+	  OMAP Video Encoder support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#703: FILE: drivers/video/omap2/dss/Kconfig:40:
+config OMAP2_DSS_SDI
+	bool "SDI support"
+	depends on ARCH_OMAP3
+        default n
+	help
+	  SDI (Serial Display Interface) support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#710: FILE: drivers/video/omap2/dss/Kconfig:47:
+config OMAP2_DSS_DSI
+	bool "DSI support"
+	depends on ARCH_OMAP3
+        default n
+	help
+	  MIPI DSI support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#717: FILE: drivers/video/omap2/dss/Kconfig:54:
+config OMAP2_DSS_USE_DSI_PLL
+	bool "Use DSI PLL for PCLK (EXPERIMENTAL)"
+	default n
+	depends on OMAP2_DSS_DSI
+	help
+	  Use DSI PLL to generate pixel clock.  Currently only for DPI output.
+	  DSI PLL can be used to generate higher and more precise pixel clocks.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#771: FILE: drivers/video/omap2/dss/core.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#772: FILE: drivers/video/omap2/dss/core.c:2:
+ * linux/drivers/video/omap2/dss/core.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#819: FILE: drivers/video/omap2/dss/core.c:49:
+	unsigned	num_clks_enabled;

WARNING:SPLIT_STRING: quoted string split across lines
#847: FILE: drivers/video/omap2/dss/core.c:77:
+		dev_err(&core.pdev->dev, "getting transaction ID failed, "
+				"will force context restore\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/video/omap2/dss/core.c:89:
+		DSSDBG("ctx id %d -> id %d\n",
+				core.ctx_id, id);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#909: FILE: drivers/video/omap2/dss/core.c:139:
+	seq_printf(s, "- CORE -\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/video/omap2/dss/core.c:147:
+		seq_printf(s, "%-15s\t%lu\t%d\n",
+				clocks[i]->name,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1013: FILE: drivers/video/omap2/dss/core.c:243:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1017: FILE: drivers/video/omap2/dss/core.c:247:
+static unsigned count_clk_bits(enum dss_clock clks)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1019: FILE: drivers/video/omap2/dss/core.c:249:
+	unsigned num_clks = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1037: FILE: drivers/video/omap2/dss/core.c:267:
+	unsigned num_clks = count_clk_bits(clks);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1063: FILE: drivers/video/omap2/dss/core.c:293:
+	unsigned num_clks = count_clk_bits(clks);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1082: FILE: drivers/video/omap2/dss/core.c:312:
+		unsigned num_clks = count_clk_bits(clks);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1084: FILE: drivers/video/omap2/dss/core.c:314:
+		BUG_ON(core.num_clks_enabled < num_clks);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1138: FILE: drivers/video/omap2/dss/core.c:368:
+	void (*func)(struct seq_file *) = s->private;
+	func(s);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1161: FILE: drivers/video/omap2/dss/core.c:391:
+		int err = PTR_ERR(dss_debugfs_dir);
+		dss_debugfs_dir = NULL;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1165: FILE: drivers/video/omap2/dss/core.c:395:
+	debugfs_create_file("clk", S_IRUGO, dss_debugfs_dir,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: drivers/video/omap2/dss/core.c:396:
+	debugfs_create_file("clk", S_IRUGO, dss_debugfs_dir,
+			&dss_debug_dump_clocks, &dss_debug_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1168: FILE: drivers/video/omap2/dss/core.c:398:
+	debugfs_create_file("dss", S_IRUGO, dss_debugfs_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: drivers/video/omap2/dss/core.c:399:
+	debugfs_create_file("dss", S_IRUGO, dss_debugfs_dir,
+			&dss_dump_regs, &dss_debug_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1170: FILE: drivers/video/omap2/dss/core.c:400:
+	debugfs_create_file("dispc", S_IRUGO, dss_debugfs_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1171: FILE: drivers/video/omap2/dss/core.c:401:
+	debugfs_create_file("dispc", S_IRUGO, dss_debugfs_dir,
+			&dispc_dump_regs, &dss_debug_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1173: FILE: drivers/video/omap2/dss/core.c:403:
+	debugfs_create_file("rfbi", S_IRUGO, dss_debugfs_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: drivers/video/omap2/dss/core.c:404:
+	debugfs_create_file("rfbi", S_IRUGO, dss_debugfs_dir,
+			&rfbi_dump_regs, &dss_debug_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1177: FILE: drivers/video/omap2/dss/core.c:407:
+	debugfs_create_file("dsi", S_IRUGO, dss_debugfs_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/video/omap2/dss/core.c:408:
+	debugfs_create_file("dsi", S_IRUGO, dss_debugfs_dir,
+			&dsi_dump_regs, &dss_debug_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1181: FILE: drivers/video/omap2/dss/core.c:411:
+	debugfs_create_file("venc", S_IRUGO, dss_debugfs_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1182: FILE: drivers/video/omap2/dss/core.c:412:
+	debugfs_create_file("venc", S_IRUGO, dss_debugfs_dir,
+			&venc_dump_regs, &dss_debug_fops);

WARNING:NEEDLESS_IF: debugfs_remove_recursive(NULL) is safe and this check is probably not required
#1190: FILE: drivers/video/omap2/dss/core.c:420:
+	if (dss_debugfs_dir)
+		debugfs_remove_recursive(dss_debugfs_dir);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1359: FILE: drivers/video/omap2/dss/core.c:589:
+			DSSERR("warning: dss_96m_fck usecount %d, disabling\n",
+					c);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: drivers/video/omap2/dss/core.c:644:
+	DSSDBG("bus_match. dev %s/%s, drv %s\n",
+			dev_name(dev), dssdev->driver_name, driver->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: drivers/video/omap2/dss/core.c:650:
+static ssize_t device_name_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1423: FILE: drivers/video/omap2/dss/core.c:653:
+	struct omap_dss_device *dssdev = to_dss_device(dev);
+	return snprintf(buf, PAGE_SIZE, "%s\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1429: FILE: drivers/video/omap2/dss/core.c:659:
+	__ATTR(name, S_IRUGO, device_name_show, NULL),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1436: FILE: drivers/video/omap2/dss/core.c:666:
+	struct omap_dss_driver *dssdrv = to_dss_driver(drv);
+	return snprintf(buf, PAGE_SIZE, "%s\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1440: FILE: drivers/video/omap2/dss/core.c:670:
+}
+static struct driver_attribute default_drv_attrs[] = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1441: FILE: drivers/video/omap2/dss/core.c:671:
+	__ATTR(name, S_IRUGO, driver_name_show, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1476: FILE: drivers/video/omap2/dss/core.c:706:
+	DSSDBG("driver_probe: dev %s/%s, drv %s\n",
+				dev_name(dev), dssdev->driver_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1507: FILE: drivers/video/omap2/dss/core.c:737:
+	DSSDBG("driver_remove: dev %s/%s\n", dev_name(dev),
+			dssdev->driver_name);

WARNING:SPLIT_STRING: quoted string split across lines
#1551: FILE: drivers/video/omap2/dss/core.c:781:
+				WARN("%s: struct device fields will be "
+						"discarded\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1562: FILE: drivers/video/omap2/dss/core.c:792:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1609: FILE: drivers/video/omap2/dss/core.c:839:
+		struct omap_dss_device *panel = dssdev->ctrl.panel;
+		device_unregister(&panel->dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1696: FILE: drivers/video/omap2/dss/dss.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1697: FILE: drivers/video/omap2/dss/dss.c:2:
+ * linux/drivers/video/omap2/dss/dss.c

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#1753: FILE: drivers/video/omap2/dss/dss.c:58:
+#define REG_FLD_MOD(idx, val, start, end) \
+	dss_write_reg(idx, FLD_MOD(dss_read_reg(idx), val, start, end))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1821: FILE: drivers/video/omap2/dss/dss.c:126:
+	BUG_ON(datapairs > 3 || datapairs < 1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1825: FILE: drivers/video/omap2/dss/dss.c:130:
+	l = FLD_MOD(l, datapairs-1, 3, 2);	/* SDI_PRSEL */
 	                        ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1914: FILE: drivers/video/omap2/dss/dss.c:219:
+	seq_printf(s, "- DSS -\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1919: FILE: drivers/video/omap2/dss/dss.c:224:
+	seq_printf(s, "dss1_alwon_fclk = %lu / %lu * 2 = %lu\n",
+			dpll4_ck_rate,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1948: FILE: drivers/video/omap2/dss/dss.c:253:
+	u32 r;
+	r = dss_read_reg(DSS_CONTROL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2004: FILE: drivers/video/omap2/dss/dss.c:309:
+		unsigned long prate;
+		prate = clk_get_rate(clk_get_parent(dss.dpll4_m4_ck));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2022: FILE: drivers/video/omap2/dss/dss.c:327:
+int dss_calc_clock_div(bool is_tft, unsigned long req_pck,
+		struct dss_clock_info *dss_cinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2040: FILE: drivers/video/omap2/dss/dss.c:345:
+	if (req_pck == dss.cache_req_pck &&
+			((cpu_is_omap34xx() && prate == dss.cache_prate) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2051: FILE: drivers/video/omap2/dss/dss.c:356:
+	if (min_fck_per_pck &&
+		req_pck * min_fck_per_pck > DISPC_MAX_FCK) {

WARNING:SPLIT_STRING: quoted string split across lines
#2053: FILE: drivers/video/omap2/dss/dss.c:358:
+		DSSERR("Requested pixel clock not possible with the current "
+				"OMAP2_DSS_MIN_FCK_PER_PCK setting. Turning "

WARNING:SPLIT_STRING: quoted string split across lines
#2054: FILE: drivers/video/omap2/dss/dss.c:359:
+				"OMAP2_DSS_MIN_FCK_PER_PCK setting. Turning "
+				"the constraint off.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2087: FILE: drivers/video/omap2/dss/dss.c:392:
+			if (min_fck_per_pck &&
+					fck < req_pck * min_fck_per_pck)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2096: FILE: drivers/video/omap2/dss/dss.c:401:
+					abs(best_dispc.pck - req_pck)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2107: FILE: drivers/video/omap2/dss/dss.c:412:
+		BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#2115: FILE: drivers/video/omap2/dss/dss.c:420:
+					"Turning FCK/PCK constraint off and"
+					"trying again.\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#2115: FILE: drivers/video/omap2/dss/dss.c:420:
+					"Turning FCK/PCK constraint off and"
+					"trying again.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2138: FILE: drivers/video/omap2/dss/dss.c:443:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2153: FILE: drivers/video/omap2/dss/dss.c:458:
+	if (irqstatus & (1<<0))	/* DISPC_IRQ */
 	                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2156: FILE: drivers/video/omap2/dss/dss.c:461:
+	if (irqstatus & (1<<1))	/* DSI_IRQ */
 	                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2165: FILE: drivers/video/omap2/dss/dss.c:470:
+	unsigned timeout = 1000;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2194: FILE: drivers/video/omap2/dss/dss.c:499:
+		BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2220: FILE: drivers/video/omap2/dss/dss.c:525:
+		 * the kernel resets it */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2269: FILE: drivers/video/omap2/dss/dss.c:574:
+	printk(KERN_INFO "OMAP DSS rev %d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2270: FILE: drivers/video/omap2/dss/dss.c:575:
+	printk(KERN_INFO "OMAP DSS rev %d.%d\n",
+			FLD_GET(rev, 7, 4), FLD_GET(rev, 3, 0));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2298: FILE: drivers/video/omap2/dss/dss.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2299: FILE: drivers/video/omap2/dss/dss.h:2:
+ * linux/drivers/video/omap2/dss/dss.h

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2330: FILE: drivers/video/omap2/dss/dss.h:33:
+#define DSSDBG(format, ...) \
+	if (dss_debug) \
+		printk(KERN_DEBUG "omapdss " DSS_SUBSYS_NAME ": " format, \
+		## __VA_ARGS__)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2332: FILE: drivers/video/omap2/dss/dss.h:35:
+		printk(KERN_DEBUG "omapdss " DSS_SUBSYS_NAME ": " format, \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2335: FILE: drivers/video/omap2/dss/dss.h:38:
+#define DSSDBG(format, ...) \
+	if (dss_debug) \
+		printk(KERN_DEBUG "omapdss: " format, ## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2337: FILE: drivers/video/omap2/dss/dss.h:40:
+		printk(KERN_DEBUG "omapdss: " format, ## __VA_ARGS__)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2341: FILE: drivers/video/omap2/dss/dss.h:44:
+#define DSSDBGF(format, ...) \
+	if (dss_debug) \
+		printk(KERN_DEBUG "omapdss " DSS_SUBSYS_NAME \
+				": %s(" format ")\n", \
+				__func__, \
+				## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2343: FILE: drivers/video/omap2/dss/dss.h:46:
+		printk(KERN_DEBUG "omapdss " DSS_SUBSYS_NAME \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2348: FILE: drivers/video/omap2/dss/dss.h:51:
+#define DSSDBGF(format, ...) \
+	if (dss_debug) \
+		printk(KERN_DEBUG "omapdss: " \
+				": %s(" format ")\n", \
+				__func__, \
+				## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2350: FILE: drivers/video/omap2/dss/dss.h:53:
+		printk(KERN_DEBUG "omapdss: " \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2361: FILE: drivers/video/omap2/dss/dss.h:64:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2364: FILE: drivers/video/omap2/dss/dss.h:67:
+	printk(KERN_ERR "omapdss " DSS_SUBSYS_NAME " error: " format, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2368: FILE: drivers/video/omap2/dss/dss.h:71:
+	printk(KERN_ERR "omapdss error: " format, ## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2373: FILE: drivers/video/omap2/dss/dss.h:76:
+	printk(KERN_INFO "omapdss " DSS_SUBSYS_NAME ": " format, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2377: FILE: drivers/video/omap2/dss/dss.h:80:
+	printk(KERN_INFO "omapdss: " format, ## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2382: FILE: drivers/video/omap2/dss/dss.h:85:
+	printk(KERN_WARNING "omapdss " DSS_SUBSYS_NAME ": " format, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2386: FILE: drivers/video/omap2/dss/dss.h:89:
+	printk(KERN_WARNING "omapdss: " format, ## __VA_ARGS__)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2390: FILE: drivers/video/omap2/dss/dss.h:93:
+/* OMAP TRM gives bitfields as start:end, where start is the higher bit
+   number. For example 7:0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2390: FILE: drivers/video/omap2/dss/dss.h:93:
+   number. For example 7:0 */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'end' - possible side-effects?
#2391: FILE: drivers/video/omap2/dss/dss.h:94:
+#define FLD_MASK(start, end)	(((1 << ((start) - (end) + 1)) - 1) << (end))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'end' - possible side-effects?
#2392: FILE: drivers/video/omap2/dss/dss.h:95:
+#define FLD_VAL(val, start, end) (((val) << (end)) & FLD_MASK(start, end))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'end' - possible side-effects?
#2393: FILE: drivers/video/omap2/dss/dss.h:96:
+#define FLD_GET(val, start, end) (((val) & FLD_MASK(start, end)) >> (end))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'start' - possible side-effects?
#2394: FILE: drivers/video/omap2/dss/dss.h:97:
+#define FLD_MOD(orig, val, start, end) \
+	(((orig) & ~FLD_MASK(start, end)) | FLD_VAL(val, start, end))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'end' - possible side-effects?
#2394: FILE: drivers/video/omap2/dss/dss.h:97:
+#define FLD_MOD(orig, val, start, end) \
+	(((orig) & ~FLD_MASK(start, end)) | FLD_VAL(val, start, end))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2476: FILE: drivers/video/omap2/dss/dss.h:179:
+void dss_init_device(struct platform_device *pdev,
+		struct omap_dss_device *dssdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2478: FILE: drivers/video/omap2/dss/dss.h:181:
+void dss_uninit_device(struct platform_device *pdev,
+		struct omap_dss_device *dssdev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2480: FILE: drivers/video/omap2/dss/dss.h:183:
+bool dss_use_replication(struct omap_dss_device *dssdev,
+		enum omap_color_mode mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2482: FILE: drivers/video/omap2/dss/dss.h:185:
+void default_get_overlay_fifo_thresholds(enum omap_plane plane,
+		u32 fifo_size, enum omap_burst_size *burst_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2490: FILE: drivers/video/omap2/dss/dss.h:193:
+void dss_setup_partial_planes(struct omap_dss_device *dssdev,
+				u16 *x, u16 *y, u16 *w, u16 *h);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2527: FILE: drivers/video/omap2/dss/dss.h:230:
+int dss_calc_clock_div(bool is_tft, unsigned long req_pck,
+		struct dss_clock_info *dss_cinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2550: FILE: drivers/video/omap2/dss/dss.h:253:
+int dsi_pll_calc_clock_div_pck(bool is_tft, unsigned long req_pck,
+		struct dsi_clock_info *cinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2553: FILE: drivers/video/omap2/dss/dss.h:256:
+int dsi_pll_init(struct omap_dss_device *dssdev, bool enable_hsclk,
+		bool enable_hsdiv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2556: FILE: drivers/video/omap2/dss/dss.h:259:
+void dsi_get_overlay_fifo_thresholds(enum omap_plane plane,
+		u32 fifo_size, enum omap_burst_size *burst_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2589: FILE: drivers/video/omap2/dss/dss.h:292:
+void dispc_set_burst_size(enum omap_plane plane,
+		enum omap_burst_size burst_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2596: FILE: drivers/video/omap2/dss/dss.h:299:
+void dispc_set_channel_out(enum omap_plane plane,
+		enum omap_channel channel_out);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2624: FILE: drivers/video/omap2/dss/dss.h:327:
+void dispc_set_trans_key(enum omap_channel ch,
+		enum omap_dss_trans_key_type type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2627: FILE: drivers/video/omap2/dss/dss.h:330:
+void dispc_get_trans_key(enum omap_channel ch,
+		enum omap_dss_trans_key_type *type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2641: FILE: drivers/video/omap2/dss/dss.h:344:
+void dispc_find_clk_divs(bool is_tft, unsigned long req_pck, unsigned long fck,
+		struct dispc_clock_info *cinfo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2643: FILE: drivers/video/omap2/dss/dss.h:346:
+int dispc_calc_clock_rates(unsigned long dispc_fclk_rate,
+		struct dispc_clock_info *cinfo);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2647: FILE: drivers/video/omap2/dss/dss.h:350:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#2661: FILE: drivers/video/omap2/dss/dss.h:364:
+void rfbi_transfer_area(u16 width, u16 height,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2662: FILE: drivers/video/omap2/dss/dss.h:365:
+void rfbi_transfer_area(u16 width, u16 height,
+			     void (callback)(void *data), void *data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050322.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 76 warnings, 95 checks, 2564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050322.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
