WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: drivers/watchdog/watchdog.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/watchdog/watchdog.c:31:
+static long watchdog_ioctl(struct file *file, unsigned int cmd,
+							unsigned long arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/watchdog/watchdog.c:50:
+^I^I^Ival = w->ops->status(w);^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!w->ops->set_timeout"
#101: FILE: drivers/watchdog/watchdog.c:58:
+		if (w->ops->set_timeout == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!w->ops->stop"
#119: FILE: drivers/watchdog/watchdog.c:76:
+			if (w->ops->stop == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/watchdog/watchdog.c:105:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: drivers/watchdog/watchdog.c:114:
+		/* We leaked a reference to lock the module in on close
+		   now we can reclaim it as we re-opened before triggering */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: drivers/watchdog/watchdog.c:114:
+		   now we can reclaim it as we re-opened before triggering */

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: drivers/watchdog/watchdog.c:131:
+	struct watchdog *w = file->private_data;
+	if (test_bit(WDOG_EXPECT_RELEASE, &w->status) &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "w->ops->stop"
#176: FILE: drivers/watchdog/watchdog.c:133:
+						w->ops->stop != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#182: FILE: drivers/watchdog/watchdog.c:139:
+	printk(KERN_CRIT "%s: not stopping watchdog.\n", w->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/watchdog/watchdog.c:146:
+static ssize_t watchdog_write(struct file *file, const char __user *data,
+						size_t len, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: drivers/watchdog/watchdog.c:150:
+	size_t i;
+	if (len == 0)	/* Can we see this even ? */

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/watchdog/watchdog.c:157:
+		char c;
+		if (get_user(c, data+i))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#200: FILE: drivers/watchdog/watchdog.c:157:
+		if (get_user(c, data+i))
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/watchdog/watchdog.c:168:
+static ssize_t watchdog_temp_read(struct file *file, char __user *buf,
+						size_t count, loff_t *ptr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/watchdog/watchdog.c:172:
+	u8 temperature = w->ops->temperature(w);
+	if (copy_to_user(buf, &temperature, 1))

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: drivers/watchdog/watchdog.c:180:
+	int r;
+	file->private_data = watchdog;

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: drivers/watchdog/watchdog.c:192:
+	struct watchdog *w = file->private_data;
+	module_put(w->owner);

WARNING:TYPO_SPELLING: 'nwo' may be misspelled - perhaps 'now'?
#268: FILE: drivers/watchdog/watchdog.c:225:
+int watchdog_register(struct watchdog *w, int nwo)
                                               ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: drivers/watchdog/watchdog.c:230:
+		printk(KERN_ERR "watchdog: only one watchdog at a time currently supported.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/watchdog/watchdog.c:233:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/watchdog/watchdog.c:235:
+^I$

WARNING:TYPO_SPELLING: 'nwo' may be misspelled - perhaps 'now'?
#280: FILE: drivers/watchdog/watchdog.c:237:
+	if (nwo)
 	    ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: drivers/watchdog/watchdog.c:243:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#295: FILE: drivers/watchdog/watchdog.c:252:
+	printk(KERN_ERR	"%s: cannot register miscdev on minor=%d (err=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/watchdog/watchdog.c:253:
+	printk(KERN_ERR	"%s: cannot register miscdev on minor=%d (err=%d)\n",
+						w->name, WATCHDOG_MINOR, r);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#317: FILE: drivers/watchdog/watchdog.c:274:
+/* The notifier will need to change for multiple dogs, but at that point
+   hopefully we have a class and class based power methods anyway */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#317: FILE: drivers/watchdog/watchdog.c:274:
+   hopefully we have a class and class based power methods anyway */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/watchdog/watchdog.c:277:
+static int watchdog_notify(struct notifier_block *this, unsigned long code,
+	void *dog)

WARNING:LINE_SPACING: Missing a blank line after declarations
#336: FILE: drivers/watchdog/watchdog.c:293:
+	int r = register_reboot_notifier(&watchdog_notifier);
+	if (r < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/watchdog/watchdog.c:294:
+		printk(KERN_ERR "watchdog: unable to register notifier.\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#341: FILE: drivers/watchdog/watchdog.c:298:
+static void __devexit watchdog_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: drivers/watchdog/watchdog.h:1:
+struct watchdog;

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#356: FILE: drivers/watchdog/watchdog.h:3:
+struct watchdog_ops

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#357: FILE: drivers/watchdog/watchdog.h:4:
+struct watchdog_ops
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#369: FILE: drivers/watchdog/watchdog.h:16:
+struct watchdog
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: drivers/watchdog/watchdog.h:30:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: drivers/watchdog/watchdog.h:31:
+extern void watchdog_unregister(struct watchdog *w);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'nwo' may be misspelled - perhaps 'now'?
#385: FILE: drivers/watchdog/watchdog.h:32:
+extern int watchdog_register(struct watchdog *w, int nwo);
                                                      ^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: drivers/watchdog/watchdog.h:32:
+extern int watchdog_register(struct watchdog *w, int nwo);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/watchdog/watchdog.h:34:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 24 warnings, 13 checks, 339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196093.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
