WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: fs/fs-writeback.c:55:
+#define WS_USED (1 << WS_USED_B)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: fs/fs-writeback.c:56:
+#define WS_ONSTACK (1 << WS_ONSTACK_B)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#321: FILE: fs/fs-writeback.c:146:
+		BUG_ON(!work->seen);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#323: FILE: fs/fs-writeback.c:148:
+		BUG_ON(!bdi->wb_cnt);

WARNING:MEMORY_BARRIER: memory barrier without comment
#333: FILE: fs/fs-writeback.c:153:
+		smp_mb();

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: fs/fs-writeback.c:164:
+	if (unlikely(list_empty_careful(&bdi->wb_list)))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: fs/fs-writeback.c:166:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#371: FILE: fs/fs-writeback.c:174:
+		if (!wb_has_dirty_io(wb)) {
[...]
+		} else if (wb->task)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: fs/fs-writeback.c:491:
+static int pin_sb_for_writeback(struct writeback_control *wbc,
+				   struct inode *inode)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#569: FILE: fs/fs-writeback.c:511:
+		 * umounted, drop rwsem again and fall through to failure

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#888: FILE: fs/fs-writeback.c:789:
+			work->sync_mode = sync_mode = WB_SYNC_ALL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#930: FILE: fs/fs-writeback.c:831:
+		if (pages_written)
[...]
+		else if (wait_jiffies != -1UL) {
[...]

CHECK:SPACING: No space is necessary after a cast
#1060: FILE: fs/fs-writeback.c:947:
+			name = (const char *) dentry->d_name.name;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1062: FILE: fs/fs-writeback.c:949:
+		printk(KERN_DEBUG

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1078: FILE: fs/fs-writeback.c:965:
+ *  ^Imark_inode_dirty_sync.$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1185: FILE: fs/fs-writeback.c:1035:
+		if (inode->i_state & (I_FREEING|I_CLEAR))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1249: FILE: fs/fs-writeback.c:1096:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1249: FILE: fs/fs-writeback.c:1096:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1249: FILE: fs/fs-writeback.c:1096:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 		                                                   ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1259: FILE: fs/fs-writeback.c:1106:
+		 * inode_lock.  We cannot iput the inode now as we can
 		                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1260: FILE: fs/fs-writeback.c:1107:
+		 * be holding the last reference and we cannot iput it
 		                                               ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1261: FILE: fs/fs-writeback.c:1108:
+		 * under inode_lock. So we keep the reference and iput
 		                                                  ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1264: FILE: fs/fs-writeback.c:1111:
+		iput(old_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1274: FILE: fs/fs-writeback.c:1121:
+	iput(old_inode);
 	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1480: FILE: include/linux/writeback.h:44:
+	struct super_block *sb;		/* if !NULL, only write inodes from
+					   this super_block */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1480: FILE: include/linux/writeback.h:44:
+					   this super_block */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1548: FILE: mm/backing-dev.c:204:
+	BUG_ON(IS_ERR(sync_supers_tsk));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1745: FILE: mm/backing-dev.c:402:
+		wb->task = kthread_run(bdi_start_fn, wb, "flush-%s",
+					dev_name(bdi->dev));

WARNING:STORAGE_CLASS: storage class 'static' should be located before type 'void'
#1775: FILE: mm/backing-dev.c:432:
+void static bdi_add_default_flusher_task(struct backing_dev_info *bdi)

WARNING:TYPO_SPELLING: 'simultanous' may be misspelled - perhaps 'simultaneous'?
#1782: FILE: mm/backing-dev.c:439:
+	 * abort if we two or more simultanous calls to
 	                           ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1783: FILE: mm/backing-dev.c:440:
+	 * bdi_add_default_flusher_task() occured, further additions will block
 	                                  ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1822: FILE: mm/backing-dev.c:487:
+		wb->task = kthread_run(bdi_forker_task, wb, "bdi-%s",
+						dev_name(dev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1858: FILE: mm/backing-dev.c:525:
+	wait_on_bit(&bdi->state, BDI_pending, bdi_sched_wait,
+			TASK_UNINTERRUPTIBLE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2035: FILE: mm/page-writeback.c:592:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 17 checks, 2047 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
