WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#63: FILE: drivers/char/esp.c:130:
+#define DBG_CNT(s) printk(KERN_DEBUG "(%s): [%x] refc=%d, serc=%d, ttyc=%d -> %s\n", \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/char/esp.c:366:
+	program_isa_dma(dma, DMA_MODE_READ, isa_virt_to_bus(dma_buffer),
+								dma_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/char/esp.c:409:
+			tty_insert_flip_char(tty, dma_buffer[num_bytes - 1],
+								statflag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/char/esp.c:527:
+	program_isa_dma(dma, DMA_MODE_WRITE, isa_virt_to_bus(dma_buffer),
+								dma_bytes);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#369: FILE: drivers/char/esp.c:796:
+	printk(KERN_DEBUG "starting up ttys%d (irq %d)...",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/char/esp.c:797:
+	printk(KERN_DEBUG "starting up ttys%d (irq %d)...",
+						info->line, info->irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#469: FILE: drivers/char/esp.c:1000:
+	unsigned cflag, cval;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#486: FILE: drivers/char/esp.c:1012:
+	case CS5: cval = 0x00; bits = 7; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#487: FILE: drivers/char/esp.c:1013:
+	case CS6: cval = 0x01; bits = 8; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#488: FILE: drivers/char/esp.c:1014:
+	case CS7: cval = 0x02; bits = 9; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#489: FILE: drivers/char/esp.c:1015:
+	case CS8: cval = 0x03; bits = 10; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#490: FILE: drivers/char/esp.c:1016:
+	default:  cval = 0x00; bits = 7; break;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#519: FILE: drivers/char/esp.c:1048:
+		baud = BASE_BAUD/quot;
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#724: FILE: drivers/char/esp.c:1327:
+	printk(KERN_DEBUG "unthrottle %s: %d....\n", tty_name(tty, buf),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.close_delay != info->close_delay'
#792: FILE: drivers/char/esp.c:1425:
+		if (change_irq ||
 		    (new_serial.close_delay != info->close_delay) ||
 		    ((new_serial.flags & ~ASYNC_USR_MASK) !=
 		     (info->flags & ~ASYNC_USR_MASK)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#849: FILE: drivers/char/esp.c:1651:
+ * ^I    allows an RS485 driver to be written in user space.$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.rng != cprev.rng'
#1007: FILE: drivers/char/esp.c:1814:
+			if (((arg & TIOCM_RNG) &&
+			     (cnow.rng != cprev.rng)) ||
+			     ((arg & TIOCM_DSR) &&
+			      (cnow.dsr != cprev.dsr)) ||
+			     ((arg & TIOCM_CD) &&
+			      (cnow.dcd != cprev.dcd)) ||
+			     ((arg & TIOCM_CTS) &&
+			      (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dsr != cprev.dsr'
#1007: FILE: drivers/char/esp.c:1814:
+			if (((arg & TIOCM_RNG) &&
+			     (cnow.rng != cprev.rng)) ||
+			     ((arg & TIOCM_DSR) &&
+			      (cnow.dsr != cprev.dsr)) ||
+			     ((arg & TIOCM_CD) &&
+			      (cnow.dcd != cprev.dcd)) ||
+			     ((arg & TIOCM_CTS) &&
+			      (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dcd != cprev.dcd'
#1007: FILE: drivers/char/esp.c:1814:
+			if (((arg & TIOCM_RNG) &&
+			     (cnow.rng != cprev.rng)) ||
+			     ((arg & TIOCM_DSR) &&
+			      (cnow.dsr != cprev.dsr)) ||
+			     ((arg & TIOCM_CD) &&
+			      (cnow.dcd != cprev.dcd)) ||
+			     ((arg & TIOCM_CTS) &&
+			      (cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.cts != cprev.cts'
#1007: FILE: drivers/char/esp.c:1814:
+			if (((arg & TIOCM_RNG) &&
+			     (cnow.rng != cprev.rng)) ||
+			     ((arg & TIOCM_DSR) &&
+			      (cnow.dsr != cprev.dsr)) ||
+			     ((arg & TIOCM_CD) &&
+			      (cnow.dcd != cprev.dcd)) ||
+			     ((arg & TIOCM_CTS) &&
+			      (cnow.cts != cprev.cts))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1099: FILE: drivers/char/esp.c:1903:
+static void rs_close(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1120: FILE: drivers/char/esp.c:1919:
+	printk(KERN_DEBUG "rs_close ttys%d, count = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs_close', this function's name, in a string
#1120: FILE: drivers/char/esp.c:1919:
+	printk(KERN_DEBUG "rs_close ttys%d, count = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1121: FILE: drivers/char/esp.c:1920:
+	printk(KERN_DEBUG "rs_close ttys%d, count = %d\n",
+						info->line, info->count);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1134: FILE: drivers/char/esp.c:1930:
+		printk(KERN_DEBUG "rs_close: bad serial port count; tty->count is 1, info->count is %d\n", info->count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1134: FILE: drivers/char/esp.c:1930:
+		printk(KERN_DEBUG "rs_close: bad serial port count; tty->count is 1, info->count is %d\n", info->count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1139: FILE: drivers/char/esp.c:1934:
+		printk(KERN_ERR "rs_close: bad serial port count for ttys%d: %d\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1192: FILE: drivers/char/esp.c:2061:
+static int block_til_ready(struct tty_struct *tty, struct file *filp,
                                                                 ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1201: FILE: drivers/char/esp.c:2110:
+	printk(KERN_DEBUG "block_til_ready before block: ttys%d, count = %d\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1206: FILE: drivers/char/esp.c:2114:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1224: FILE: drivers/char/esp.c:2155:
+		printk(KERN_DEBUG "block_til_ready blocking: ttys%d, count = %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1233: FILE: drivers/char/esp.c:2169:
+	printk(KERN_DEBUG "block_til_ready after blocking: ttys%d, count = %d\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1250: FILE: drivers/char/esp.c:2184:
+static int esp_open(struct tty_struct *tty, struct file *filp)
                                                          ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1259: FILE: drivers/char/esp.c:2207:
+	printk(KERN_DEBUG "esp_open %s, count = %d\n", tty->name, info->count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1277: FILE: drivers/char/esp.c:2226:
+		printk(KERN_DEBUG "esp_open returning after block_til_ready with %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1285: FILE: drivers/char/esp.c:2232:
+	printk(KERN_DEBUG "esp_open %s successful...", tty->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1299: FILE: drivers/char/esp.c:2253:
+	printk(KERN_INFO "%s version %s (DMA %u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1300: FILE: drivers/char/esp.c:2254:
+	printk(KERN_INFO "%s version %s (DMA %u)\n",
 		serial_name, serial_version, dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1387: FILE: drivers/char/esp.c:2465:
+			printk(KERN_ERR "Couldn't allocate memory for esp serial device information\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1408: FILE: drivers/char/esp.c:2497:
+		printk(KERN_ERR "esp: failed to unregister driver (%d)\n", e1);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288512.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 24 warnings, 12 checks, 1299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288512.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
