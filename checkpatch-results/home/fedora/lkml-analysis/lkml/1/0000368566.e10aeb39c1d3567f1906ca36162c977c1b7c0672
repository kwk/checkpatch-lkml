WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > That's the bug. If sg_next() looked at the actual *current* sg entry, we 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: arch/x86/kernel/pci-gart_64.c:305:
+^I^Iunsigned long addr = page_to_phys(sg_page(s)) + s->offset; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: arch/x86/kernel/pci-nommu_64.c:65:
+		BUG_ON(!sg_page(s));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#119: FILE: arch/x86/kernel/pci-nommu_64.c:66:
+		s->dma_address = virt_to_bus(page_address(sg_page(s)) +s->offset);
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#176: FILE: crypto/scatterwalk.h:25:
+	return (++sg)->length ? sg : (void *) sg_page(sg);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#451: FILE: drivers/usb/core/message.c:446:
+				page_address(sg_page(&sg[i])) + sg [i].offset;

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#477: FILE: include/asm-x86/dma-mapping_32.h:48:
+		BUG_ON(!sg_page(sg));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: include/asm-x86/scatterlist_32.h:8:
+    unsigned long^Isg_magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: include/asm-x86/scatterlist_32.h:10:
+    unsigned long^Ipage_link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: include/asm-x86/scatterlist_64.h:8:
+    unsigned long^Isg_magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: include/asm-x86/scatterlist_64.h:10:
+    unsigned long^Ipage_link;$

CHECK:SPACING: No space is necessary after a cast
#530: FILE: include/linux/scatterlist.h:14:
+	sg->page_link = page_link | (unsigned long) page;

CHECK:SPACING: No space is necessary after a cast
#533: FILE: include/linux/scatterlist.h:17:
+#define sg_page(sg)	((struct page *) ((sg)->page_link & ~0x3))

CHECK:SPACING: No space is necessary after a cast
#555: FILE: include/linux/scatterlist.h:44:
+#define sg_chain_ptr(sg)	((struct scatterlist *) ((sg)->page_link & ~0x01))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#567: FILE: include/linux/scatterlist.h:61:
+	BUG_ON(sg->sg_magic != SG_MAGIC);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#583: FILE: include/linux/scatterlist.h:106:
+	BUG_ON(sgl[0].sg_magic != SG_MAGIC);

CHECK:SPACING: No space is necessary after a cast
#593: FILE: include/linux/scatterlist.h:126:
+	prv[prv_nents - 1].page_link = (unsigned long) sgl | 0x01;

WARNING:LINE_SPACING: Missing a blank line after declarations
#624: FILE: include/linux/scatterlist.h:157:
+		int i;
+		for (i = 0; i < nents; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sg' - possible side-effects?
#662: FILE: lib/swiotlb.c:38:
+#define SG_ENT_VIRT_ADDRESS(sg)	(page_address(sg_page((sg)) + (sg)->offset))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368566.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 7 checks, 568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368566.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
