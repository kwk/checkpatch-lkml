WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#36: 
	Signed-off-by: Erik Bosman <ejbosman@cs.vu.nl>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#66: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - uint64_t rdtsc() should probably be uint64_t rdtsc(void)
#78: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:30:
+uint64_t rdtsc() {

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#78: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:30:
+uint64_t rdtsc() {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#79: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:31:
+uint32_t lo, hi;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#92: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:44:
+	if (prctl(PR_SET_TSC, PR_TSC_SIGSEGV) < 0)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:56:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#113: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:65:
+	if (prctl(PR_SET_TSC, PR_TSC_ENABLE) < 0)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#120: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:72:
+	for(;;) rdtsc();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#120: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:72:
+	for(;;) rdtsc();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#123: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:75:
+
+

WARNING:TYPO_SPELLING: 'allright' may be misspelled - perhaps 'all right'?
#128: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:80:
+	fprintf(stderr, "[No further output means we're allright]\n");
 	                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#130: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:82:
+	for (i=0; i<n_tasks; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#130: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:82:
+	for (i=0; i<n_tasks; i++)
 	           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#131: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:83:
+		if (fork() == 0)
+		{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#139: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:91:
+	for (i=0; i<n_tasks; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#139: FILE: Documentation/prctl/disable-tsc-ctxt-sw-stress-test.c:91:
+	for (i=0; i<n_tasks; i++)
 	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:18:
+
+

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - uint64_t rdtsc() should probably be uint64_t rdtsc(void)
#182: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:32:
+uint64_t rdtsc() {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#182: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:32:
+uint64_t rdtsc() {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#183: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:33:
+uint32_t lo, hi;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#189: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:39:
+int should_segv = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#193: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:43:
+	if (!should_segv)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#198: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:48:
+	if (prctl(PR_SET_TSC, PR_TSC_ENABLE) < 0)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#212: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:62:
+	for(;;)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:62:
+	for(;;)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#215: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:65:
+		if (should_segv)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#220: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:70:
+		if (prctl(PR_SET_TSC, PR_TSC_SIGSEGV) < 0)
+		{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:79:
+
+

WARNING:TYPO_SPELLING: 'allright' may be misspelled - perhaps 'all right'?
#234: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:84:
+	fprintf(stderr, "[No further output means we're allright]\n");
 	                                                ^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#236: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:86:
+	for (i=0; i<n_tasks; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#236: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:86:
+	for (i=0; i<n_tasks; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#240: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:90:
+	for (i=0; i<n_tasks; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#240: FILE: Documentation/prctl/disable-tsc-on-off-stress-test.c:90:
+	for (i=0; i<n_tasks; i++)
 	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#252: FILE: Documentation/prctl/disable-tsc-test.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: Documentation/prctl/disable-tsc-test.c:13:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#277: FILE: Documentation/prctl/disable-tsc-test.c:26:
+const char *tsc_names[] =
+{

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - uint64_t rdtsc() should probably be uint64_t rdtsc(void)
#283: FILE: Documentation/prctl/disable-tsc-test.c:32:
+uint64_t rdtsc() {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#283: FILE: Documentation/prctl/disable-tsc-test.c:32:
+uint64_t rdtsc() {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#284: FILE: Documentation/prctl/disable-tsc-test.c:33:
+uint32_t lo, hi;

ERROR:SPACING: space prohibited after that open parenthesis '('
#298: FILE: Documentation/prctl/disable-tsc-test.c:47:
+	if ( prctl(PR_GET_TSC, &tsc_val) == -1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#304: FILE: Documentation/prctl/disable-tsc-test.c:53:
+	if ( prctl(PR_SET_TSC, PR_TSC_ENABLE) == -1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#320: FILE: Documentation/prctl/disable-tsc-test.c:69:
+	if ( prctl(PR_GET_TSC, &tsc_val) == -1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#328: FILE: Documentation/prctl/disable-tsc-test.c:77:
+	if ( prctl(PR_SET_TSC, PR_TSC_ENABLE) == -1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: Documentation/prctl/disable-tsc-test.c:84:
+	if ( prctl(PR_SET_TSC, PR_TSC_SIGSEGV) == -1)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296913.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 7 warnings, 9 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000296913.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
