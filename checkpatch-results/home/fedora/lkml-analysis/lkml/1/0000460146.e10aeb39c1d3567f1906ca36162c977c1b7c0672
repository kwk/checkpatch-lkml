WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
and hence pagecache controller patches are dependent on RSS memory controller

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#74: FILE: mm/memcontrol.c:168:
+			nr_reclaimed += shrink_container_memory(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: mm/pagecache_acct.c:342:
+extern unsigned long shrink_container_memory(unsigned int memory_type,
+				unsigned long nr_pages, void *container);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#104: FILE: mm/pagecache_acct.c:351:
+		ret += shrink_container_memory(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: mm/vmscan.c:75:
+	int reclaim_pagecache_only;     /* Set when called from
+					   pagecache controller */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: mm/vmscan.c:75:
+					   pagecache controller */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#192: FILE: mm/vmscan.c:1424:
+#if defined(CONFIG_PM) || defined(CONFIG_CONTAINER_MEMCONTROL) \
+	|| defined(CONFIG_CONTAINER_PAGECACHE_ACCT)

CHECK:CAMELCASE: Avoid CamelCase: <GFdefined>
#202: FILE: mm/vmscan.c:1497:
+		.gfp_mask = GFdefined(CONFIG_CONTAINER_PAGECACHE_ACCT)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: mm/vmscan.c:1589:
+unsigned long shrink_container_memory(unsigned int memory_type,
+			unsigned long nr_pages, struct container *container)

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: mm/vmscan.c:1602:
+ ^Iswitch (memory_type) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: mm/vmscan.c:1602:
+ ^Iswitch (memory_type) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: mm/vmscan.c:1602:
+ ^Iswitch (memory_type) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#245: FILE: mm/vmscan.c:1602:
+ 	switch (memory_type) {
+ 		case RECLAIM_PAGECACHE_MEMORY:
[...]
+ 		case RECLAIM_MAPPED_MEMORY:
[...]
+ 		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: mm/vmscan.c:1603:
+ ^I^Icase RECLAIM_PAGECACHE_MEMORY:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: mm/vmscan.c:1603:
+ ^I^Icase RECLAIM_PAGECACHE_MEMORY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: mm/vmscan.c:1603:
+ ^I^Icase RECLAIM_PAGECACHE_MEMORY:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: mm/vmscan.c:1604:
+ ^I^I^Isc.may_swap = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: mm/vmscan.c:1604:
+ ^I^I^Isc.may_swap = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: mm/vmscan.c:1604:
+ ^I^I^Isc.may_swap = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: mm/vmscan.c:1605:
+ ^I^I^Isc.swappiness = 0; /* Do not swap, only pagecache reclaim */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: mm/vmscan.c:1605:
+ ^I^I^Isc.swappiness = 0; /* Do not swap, only pagecache reclaim */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: mm/vmscan.c:1605:
+ ^I^I^Isc.swappiness = 0; /* Do not swap, only pagecache reclaim */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: mm/vmscan.c:1606:
+ ^I^I^Isc.reclaim_pagecache_only = 1; /* Flag it */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: mm/vmscan.c:1606:
+ ^I^I^Isc.reclaim_pagecache_only = 1; /* Flag it */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: mm/vmscan.c:1606:
+ ^I^I^Isc.reclaim_pagecache_only = 1; /* Flag it */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: mm/vmscan.c:1607:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: mm/vmscan.c:1607:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: mm/vmscan.c:1607:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: mm/vmscan.c:1609:
+ ^I^Icase RECLAIM_MAPPED_MEMORY:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: mm/vmscan.c:1609:
+ ^I^Icase RECLAIM_MAPPED_MEMORY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: mm/vmscan.c:1609:
+ ^I^Icase RECLAIM_MAPPED_MEMORY:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: mm/vmscan.c:1610:
+ ^I^I^Isc.container = container;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: mm/vmscan.c:1610:
+ ^I^I^Isc.container = container;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: mm/vmscan.c:1610:
+ ^I^I^Isc.container = container;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: mm/vmscan.c:1611:
+ ^I^I^Isc.may_swap = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: mm/vmscan.c:1611:
+ ^I^I^Isc.may_swap = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: mm/vmscan.c:1611:
+ ^I^I^Isc.may_swap = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: mm/vmscan.c:1612:
+ ^I^I^Isc.swappiness = 100; /* Do swap and free memory */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: mm/vmscan.c:1612:
+ ^I^I^Isc.swappiness = 100; /* Do swap and free memory */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: mm/vmscan.c:1612:
+ ^I^I^Isc.swappiness = 100; /* Do swap and free memory */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: mm/vmscan.c:1613:
+ ^I^I^Isc.reclaim_pagecache_only = 0; /* Flag it */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: mm/vmscan.c:1613:
+ ^I^I^Isc.reclaim_pagecache_only = 0; /* Flag it */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: mm/vmscan.c:1613:
+ ^I^I^Isc.reclaim_pagecache_only = 0; /* Flag it */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: mm/vmscan.c:1614:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: mm/vmscan.c:1614:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: mm/vmscan.c:1614:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: mm/vmscan.c:1616:
+ ^I^Idefault:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: mm/vmscan.c:1616:
+ ^I^Idefault:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: mm/vmscan.c:1616:
+ ^I^Idefault:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: mm/vmscan.c:1617:
+ ^I^I^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: mm/vmscan.c:1617:
+ ^I^I^IBUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: mm/vmscan.c:1617:
+ ^I^I^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: mm/vmscan.c:1617:
+ 			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: mm/vmscan.c:1618:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: mm/vmscan.c:1618:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: mm/vmscan.c:1618:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: mm/vmscan.c:1619:
+ ^Icurrent->reclaim_state = &reclaim_state;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: mm/vmscan.c:1619:
+ ^Icurrent->reclaim_state = &reclaim_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: mm/vmscan.c:1619:
+ ^Icurrent->reclaim_state = &reclaim_state;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: mm/vmscan.c:1621:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: mm/vmscan.c:1625:
+ ^I * 1 = Reclaim from active list$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: mm/vmscan.c:1625:
+ ^I * 1 = Reclaim from active list$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: mm/vmscan.c:1626:
+ ^I * ^I(Mapped or pagecache pages depending on memory type)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: mm/vmscan.c:1626:
+ ^I * ^I(Mapped or pagecache pages depending on memory type)$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 38 warnings, 7 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
