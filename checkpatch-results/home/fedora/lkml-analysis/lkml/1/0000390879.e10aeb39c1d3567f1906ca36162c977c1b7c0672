CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#88: FILE: arch/um/kernel/trap.c:10:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address >= start_vm'
#192: FILE: arch/um/kernel/trap.c:157:
+	if (!is_user && (address >= start_vm) && (address < end_vm)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address < end_vm'
#192: FILE: arch/um/kernel/trap.c:157:
+	if (!is_user && (address >= start_vm) && (address < end_vm)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#197: FILE: arch/um/kernel/trap.c:161:
 	}
+	else if (current->mm == NULL) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->mm"
#197: FILE: arch/um/kernel/trap.c:161:
+	else if (current->mm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "catcher"
#224: FILE: arch/um/kernel/trap.c:182:
+	else if (catcher != NULL) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#229: FILE: arch/um/kernel/trap.c:186:
 	}
+	else if (current->thread.fault_addr != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->thread.fault_addr"
#229: FILE: arch/um/kernel/trap.c:186:
+	else if (current->thread.fault_addr != NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: arch/um/kernel/trap.c:205:
+		printk(KERN_INFO "VM: killing process %s\n", current->comm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#263: FILE: arch/um/kernel/trap.c:224:
+			printk(KERN_ERR "Bus error - the host /dev/shm or /tmp "

WARNING:SPLIT_STRING: quoted string split across lines
#264: FILE: arch/um/kernel/trap.c:225:
+			printk(KERN_ERR "Bus error - the host /dev/shm or /tmp "
+			       "mount likely just ran out of space\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->thread.fault_catcher"
#273: FILE: arch/um/kernel/trap.c:235:
+	if (current->thread.fault_catcher != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: arch/um/os-Linux/time.c:35:
+		printk(UM_KERN_ERR "disable_timer - setitimer failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#329: FILE: arch/um/os-Linux/time.c:36:
+		printk(UM_KERN_ERR "disable_timer - setitimer failed, "
+		       "errno = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#353: FILE: arch/um/os-Linux/time.c:61:
+		printk(UM_KERN_ERR "switch_timers - setitimer failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'switch_timers', this function's name, in a string
#353: FILE: arch/um/os-Linux/time.c:61:
+		printk(UM_KERN_ERR "switch_timers - setitimer failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: arch/um/os-Linux/time.c:62:
+		printk(UM_KERN_ERR "switch_timers - setitimer failed, "
+		       "errno = %d\n", errno);

CHECK:SPACING: No space is necessary after a cast
#363: FILE: arch/um/os-Linux/time.c:70:
+	return (unsigned long long) tv.tv_sec * BILLION + tv.tv_usec * 1000;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1051: FILE: arch/um/kernel/smp.c:64:
+	printk(KERN_INFO "done\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1069: FILE: arch/um/kernel/smp.c:83:
+		printk(KERN_ERR "huh, CPU#%d already present??\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1096: FILE: arch/um/kernel/smp.c:136:
+		printk(KERN_INFO "Booting processor %d...\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1106: FILE: arch/um/kernel/smp.c:147:
+			printk(KERN_INFO "done\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1107: FILE: arch/um/kernel/smp.c:148:
+		else printk(KERN_INFO "failed\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1107: FILE: arch/um/kernel/smp.c:148:
+		else printk(KERN_INFO "failed\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1117: FILE: arch/um/kernel/smp.c:190:
+			printk(KERN_INFO "CPU#%d stopping\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1124: FILE: arch/um/kernel/smp.c:196:
+			printk(KERN_ERR "CPU#%d received unknown IPI [%c]!\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390879.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 8 checks, 1015 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390879.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
