ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#47: FILE: arch/x86/ia32/ia32_signal.c:42:
*frame, char *where);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: arch/x86/ia32/ia32_signal.c:46:
+       if (!access_ok(VERIFY_WRITE, to, sizeof(compat_siginfo_t)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#52: FILE: arch/x86/ia32/ia32_signal.c:46:
+       if (!access_ok(VERIFY_WRITE, to, sizeof(compat_siginfo_t)))
                return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/x86/ia32/ia32_signal.c:56:
+       err |= __put_user((short)from->si_code, &to->si_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: arch/x86/ia32/ia32_signal.c:60:
+               err |= __put_user(from->si_uid, &to->si_uid);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/x86/ia32/ia32_signal.c:60:
+               err |= __put_user(from->si_uid, &to->si_uid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: arch/x86/ia32/ia32_signal.c:61:
+               err |= __put_user(ptr_to_compat(from->si_ptr), &to->si_ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: arch/x86/ia32/ia32_signal.c:61:
+               err |= __put_user(ptr_to_compat(from->si_ptr), &to->si_ptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: arch/x86/ia32/ia32_signal.c:63:
+               /* First 32bits of unions are always present:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/x86/ia32/ia32_signal.c:64:
+               * si_pid === si_band === si_tid === si_addr(LS half) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#74: FILE: arch/x86/ia32/ia32_signal.c:64:
+               * si_pid === si_band === si_tid === si_addr(LS half) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#74: FILE: arch/x86/ia32/ia32_signal.c:64:
+               /* First 32bits of unions are always present:
+               * si_pid === si_band === si_tid === si_addr(LS half) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: arch/x86/ia32/ia32_signal.c:79:
+                       err |= __put_user(from->si_fd, &to->si_fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/x86/ia32/ia32_signal.c:79:
+                       err |= __put_user(from->si_fd, &to->si_fd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: arch/x86/ia32/ia32_signal.c:82:
+                       err |= __put_user(from->si_overrun, &to->si_overrun);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/x86/ia32/ia32_signal.c:82:
+                       err |= __put_user(from->si_overrun, &to->si_overrun);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/x86/ia32/ia32_signal.c:100:
+       if (!access_ok(VERIFY_READ, from, sizeof(compat_siginfo_t)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#99: FILE: arch/x86/ia32/ia32_signal.c:100:
+       if (!access_ok(VERIFY_READ, from, sizeof(compat_siginfo_t)))
                return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/x86/ia32/ia32_signal.c:133:
+                 stack_ia32_t __user *uoss_ptr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/x86/ia32/ia32_signal.c:133:
+                 stack_ia32_t __user *uoss_ptr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/x86/ia32/ia32_signal.c:136:
+       stack_t uss, uoss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/x86/ia32/ia32_signal.c:138:
+       mm_segment_t seg;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: arch/x86/ia32/ia32_signal.c:139:
+       mm_segment_t seg;
+       if (uss_ptr) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/x86/ia32/ia32_signal.c:139:
+       if (uss_ptr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#118: FILE: arch/x86/ia32/ia32_signal.c:139:
+       if (uss_ptr) {
                u32 ptr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/x86/ia32/ia32_signal.c:141:
+               memset(&uss, 0, sizeof(stack_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/x86/ia32/ia32_signal.c:141:
+               memset(&uss, 0, sizeof(stack_t));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/x86/ia32/ia32_signal.c:142:
+               if (!access_ok(VERIFY_READ, uss_ptr, sizeof(stack_ia32_t)) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/x86/ia32/ia32_signal.c:142:
+               if (!access_ok(VERIFY_READ, uss_ptr, sizeof(stack_ia32_t)) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#123: FILE: arch/x86/ia32/ia32_signal.c:142:
+               if (!access_ok(VERIFY_READ, uss_ptr, sizeof(stack_ia32_t)) ||
[...]
                        return -EFAULT;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: arch/x86/ia32/ia32_signal.c:143:
+               if (!access_ok(VERIFY_READ, uss_ptr, sizeof(stack_ia32_t)) ||
                            __get_user(ptr, &uss_ptr->ss_sp) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/x86/ia32/ia32_signal.c:149:
+       seg = get_fs();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/x86/ia32/ia32_signal.c:150:
+       set_fs(KERNEL_DS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/x86/ia32/ia32_signal.c:152:
+       set_fs(seg);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#137: FILE: arch/x86/ia32/ia32_signal.c:153:
        if (ret >= 0 && uoss_ptr)  {
+               if (!access_ok(VERIFY_WRITE, uoss_ptr, sizeof(stack_ia32_t)) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/x86/ia32/ia32_signal.c:154:
+               if (!access_ok(VERIFY_WRITE, uoss_ptr, sizeof(stack_ia32_t)) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/x86/ia32/ia32_signal.c:154:
+               if (!access_ok(VERIFY_WRITE, uoss_ptr, sizeof(stack_ia32_t)) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#139: FILE: arch/x86/ia32/ia32_signal.c:154:
+               if (!access_ok(VERIFY_WRITE, uoss_ptr, sizeof(stack_ia32_t)) ||
[...]
                        ret = -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/x86/ia32/ia32_signal.c:159:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/x86/ia32/ia32_signal.c:160:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/x86/ia32/ia32_signal.c:209:
+       unsigned short pre;                                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/x86/ia32/ia32_signal.c:210:
+       err |= __get_user(pre, &sc->seg);                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/x86/ia32/ia32_signal.c:211:
+       asm volatile("movl %%" #seg ",%0" : "=r" (cur));                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/x86/ia32/ia32_signal.c:212:
+         pre |= mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/x86/ia32/ia32_signal.c:212:
+         pre |= mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/x86/ia32/ia32_signal.c:213:
+         if (pre != cur) loadsegment(seg, pre); }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/x86/ia32/ia32_signal.c:213:
+         if (pre != cur) loadsegment(seg, pre); }$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: arch/x86/ia32/ia32_signal.c:213:
+         if (pre != cur) loadsegment(seg, pre); }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/x86/ia32/ia32_signal.c:216:
+          This does not handle long fs/gs base changes in the handler, but$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/x86/ia32/ia32_signal.c:217:
+          does not clobber them at least in the normal case. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#182: FILE: arch/x86/ia32/ia32_signal.c:217:
+          does not clobber them at least in the normal case. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/x86/ia32/ia32_signal.c:220:
+               unsigned gs, oldgs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/x86/ia32/ia32_signal.c:220:
+               unsigned gs, oldgs;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#186: FILE: arch/x86/ia32/ia32_signal.c:220:
+               unsigned gs, oldgs;

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: arch/x86/ia32/ia32_signal.c:222:
+               gs |= 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/x86/ia32/ia32_signal.c:222:
+               gs |= 3;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 15)
#191: FILE: arch/x86/ia32/ia32_signal.c:224:
                if (gs != oldgs)
+               load_gs_index(gs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/x86/ia32/ia32_signal.c:225:
+               load_gs_index(gs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/x86/ia32/ia32_signal.c:225:
+               load_gs_index(gs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/x86/ia32/ia32_signal.c:226:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/x86/ia32/ia32_signal.c:227:
+       RELOAD_SEG(fs, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/x86/ia32/ia32_signal.c:228:
+       RELOAD_SEG(ds, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/x86/ia32/ia32_signal.c:229:
+       RELOAD_SEG(es, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/x86/ia32/ia32_signal.c:235:
+       err |= __get_user(regs->cs, &sc->cs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/x86/ia32/ia32_signal.c:236:
+       regs->cs |= 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/x86/ia32/ia32_signal.c:237:
+       err |= __get_user(regs->ss, &sc->ss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/x86/ia32/ia32_signal.c:238:
+       regs->ss |= 3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/x86/ia32/ia32_signal.c:249:
+               struct _fpstate_ia32 __user *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/x86/ia32/ia32_signal.c:249:
+               struct _fpstate_ia32 __user *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/x86/ia32/ia32_signal.c:265:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/x86/ia32/ia32_signal.c:335:
+       signal_fault(regs, frame, "32bit rt sigreturn");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: arch/x86/ia32/ia32_signal.c:378:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#285: FILE: arch/x86/ia32/ia32_signal.c:378:
+       else {
                clear_used_math();

CHECK:BRACES: Unbalanced braces around else statement
#285: FILE: arch/x86/ia32/ia32_signal.c:378:
+       else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/x86/ia32/ia32_signal.c:424:
+                    compat_sigset_t *set, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/x86/ia32/ia32_signal.c:424:
+                    compat_sigset_t *set, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/x86/ia32/ia32_signal.c:451:
+       {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#320: FILE: arch/x86/ia32/ia32_signal.c:457:
                if (ka->sa.sa_flags & SA_RESTORER)
+                       restorer = ka->sa.sa_restorer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/x86/ia32/ia32_signal.c:458:
+                       restorer = ka->sa.sa_restorer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/x86/ia32/ia32_signal.c:458:
+                       restorer = ka->sa.sa_restorer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/x86/ia32/ia32_signal.c:463:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/x86/ia32/ia32_signal.c:465:
+               static const struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/x86/ia32/ia32_signal.c:465:
+               static const struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: arch/x86/ia32/ia32_signal.c:468:
+                       u16 int80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/x86/ia32/ia32_signal.c:468:
+                       u16 int80;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: arch/x86/ia32/ia32_signal.c:469:
+                       u16 pad;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/x86/ia32/ia32_signal.c:469:
+                       u16 pad;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/x86/ia32/ia32_signal.c:470:
+               } __attribute__((packed)) code = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/x86/ia32/ia32_signal.c:470:
+               } __attribute__((packed)) code = {$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#340: FILE: arch/x86/ia32/ia32_signal.c:470:
+               } __attribute__((packed)) code = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/x86/ia32/ia32_signal.c:472:
+                       __NR_ia32_sigreturn,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/x86/ia32/ia32_signal.c:472:
+                       __NR_ia32_sigreturn,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/x86/ia32/ia32_signal.c:475:
+               };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/x86/ia32/ia32_signal.c:475:
+               };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/x86/ia32/ia32_signal.c:476:
+               err |= __copy_to_user(frame->retcode, &code, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/x86/ia32/ia32_signal.c:476:
+               err |= __copy_to_user(frame->retcode, &code, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/x86/ia32/ia32_signal.c:490:
+       asm volatile("movl %0,%%ds" :: "r" (__USER32_DS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/x86/ia32/ia32_signal.c:491:
+       asm volatile("movl %0,%%es" :: "r" (__USER32_DS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/x86/ia32/ia32_signal.c:493:
+       regs->cs = __USER32_CS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/x86/ia32/ia32_signal.c:494:
+       regs->ss = __USER32_DS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: arch/x86/ia32/ia32_signal.c:514:
+                       compat_sigset_t *set, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/x86/ia32/ia32_signal.c:514:
+                       compat_sigset_t *set, struct pt_regs *regs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: arch/x86/ia32/ia32_signal.c:527:
+                       && ed->signal_invmap$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#390: FILE: arch/x86/ia32/ia32_signal.c:527:
                err |= __put_user((ed
+                       && ed->signal_invmap

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/x86/ia32/ia32_signal.c:527:
+                       && ed->signal_invmap$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: arch/x86/ia32/ia32_signal.c:528:
+                       && sig < 32$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#391: FILE: arch/x86/ia32/ia32_signal.c:528:
+                       && ed->signal_invmap
+                       && sig < 32

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/x86/ia32/ia32_signal.c:528:
+                       && sig < 32$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/x86/ia32/ia32_signal.c:529:
+                       ? ed->signal_invmap[sig]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/x86/ia32/ia32_signal.c:529:
+                       ? ed->signal_invmap[sig]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/x86/ia32/ia32_signal.c:530:
+                       : sig),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/x86/ia32/ia32_signal.c:530:
+                       : sig),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/x86/ia32/ia32_signal.c:531:
+                       &frame->sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/x86/ia32/ia32_signal.c:531:
+                       &frame->sig);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: arch/x86/ia32/ia32_signal.c:547:
+                       regs, set->sig[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: arch/x86/ia32/ia32_signal.c:547:
+                       regs, set->sig[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/x86/ia32/ia32_signal.c:553:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: arch/x86/ia32/ia32_signal.c:554:
+               void __user *restorer = VSYSCALL32_RTSIGRETURN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/x86/ia32/ia32_signal.c:554:
+               void __user *restorer = VSYSCALL32_RTSIGRETURN;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#415: FILE: arch/x86/ia32/ia32_signal.c:555:
                if (ka->sa.sa_flags & SA_RESTORER)
+                       restorer = ka->sa.sa_restorer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/x86/ia32/ia32_signal.c:556:
+                       restorer = ka->sa.sa_restorer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/x86/ia32/ia32_signal.c:556:
+                       restorer = ka->sa.sa_restorer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: arch/x86/ia32/ia32_signal.c:562:
+          need it. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: arch/x86/ia32/ia32_signal.c:562:
+          need it. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/x86/ia32/ia32_signal.c:563:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: arch/x86/ia32/ia32_signal.c:565:
+               static const struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: arch/x86/ia32/ia32_signal.c:565:
+               static const struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: arch/x86/ia32/ia32_signal.c:566:
+                       u8 movl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: arch/x86/ia32/ia32_signal.c:566:
+                       u8 movl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/x86/ia32/ia32_signal.c:567:
+                       u32 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/x86/ia32/ia32_signal.c:567:
+                       u32 val;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: arch/x86/ia32/ia32_signal.c:568:
+                       u16 int80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/x86/ia32/ia32_signal.c:568:
+                       u16 int80;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: arch/x86/ia32/ia32_signal.c:570:
+                       u8  pad2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/x86/ia32/ia32_signal.c:570:
+                       u8  pad2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/x86/ia32/ia32_signal.c:571:
+               } __attribute__((packed)) code = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/x86/ia32/ia32_signal.c:571:
+               } __attribute__((packed)) code = {$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#440: FILE: arch/x86/ia32/ia32_signal.c:571:
+               } __attribute__((packed)) code = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: arch/x86/ia32/ia32_signal.c:576:
+               };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: arch/x86/ia32/ia32_signal.c:576:
+               };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/x86/ia32/ia32_signal.c:577:
+               err |= __copy_to_user(frame->retcode, &code, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/x86/ia32/ia32_signal.c:577:
+               err |= __copy_to_user(frame->retcode, &code, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/x86/ia32/ia32_signal.c:578:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/x86/ia32/ia32_signal.c:596:
+       asm volatile("movl %0,%%ds" :: "r" (__USER32_DS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/x86/ia32/ia32_signal.c:597:
+       asm volatile("movl %0,%%es" :: "r" (__USER32_DS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/x86/ia32/ia32_signal.c:599:
+       regs->cs = __USER32_CS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/x86/ia32/ia32_signal.c:600:
+       regs->ss = __USER32_DS;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 47 errors, 96 warnings, 4 checks, 404 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000339967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
