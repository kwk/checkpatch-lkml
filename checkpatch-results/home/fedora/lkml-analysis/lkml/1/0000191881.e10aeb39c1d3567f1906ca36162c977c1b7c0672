ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: lib/swiotlb.c:268:
+^I                           get_order(io_tlb_nslabs * sizeof(struct swiotlb_phys_addr)));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: lib/swiotlb.c:325:
+	struct swiotlb_phys_addr buffer = io_tlb_orig_addr[index];
+	buffer.offset += (long)dma_addr & ((1 << IO_TLB_SHIFT) - 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: lib/swiotlb.c:472:
+		io_tlb_orig_addr[index+i] = slot_buf;
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir == DMA_FROM_DEVICE'
#211: FILE: lib/swiotlb.c:495:
+	if ((dir == DMA_FROM_DEVICE) || (dir == DMA_BIDIRECTIONAL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir == DMA_BIDIRECTIONAL'
#211: FILE: lib/swiotlb.c:495:
+	if ((dir == DMA_FROM_DEVICE) || (dir == DMA_BIDIRECTIONAL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: lib/swiotlb.c:577:
+		struct swiotlb_phys_addr buffer;
+		buffer.page = virt_to_page(NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: lib/swiotlb.c:820:
+			void *map;
+			buffer.page   = sg_page(sg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 3 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
