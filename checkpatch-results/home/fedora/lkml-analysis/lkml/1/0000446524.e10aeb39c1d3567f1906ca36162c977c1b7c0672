WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
> > > > Most GFX drivers don't call standard PCI DMA APIs to allocate DMA buffer,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct agp_bridge_data *' should also have an identifier name
#86: FILE: drivers/char/agp/agp.h:118:
+	int (*agp_map_dma_pages)(struct agp_bridge_data *, struct agp_memory*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct agp_memory*' should also have an identifier name
#86: FILE: drivers/char/agp/agp.h:118:
+	int (*agp_map_dma_pages)(struct agp_bridge_data *, struct agp_memory*);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/char/agp/agp.h:119:
+^Ivoid (*agp_unmap_dma_pages)(struct agp_bridge_data *, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct agp_bridge_data *' should also have an identifier name
#87: FILE: drivers/char/agp/agp.h:119:
+	void (*agp_unmap_dma_pages)(struct agp_bridge_data *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct agp_memory *' should also have an identifier name
#87: FILE: drivers/char/agp/agp.h:119:
+	void (*agp_unmap_dma_pages)(struct agp_bridge_data *, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/char/agp/agp.h:120:
+	void (*agp_unmap_dma_pages)(struct agp_bridge_data *, 
+			struct agp_memory *);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#101: FILE: drivers/char/agp/generic.c:115:
+	if (size <= 2*PAGE_SIZE) {
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem->dma_memory"
#110: FILE: drivers/char/agp/generic.c:123:
+	if (mem->dma_memory == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#121: FILE: drivers/char/agp/generic.c:133:
+	if (mem->vmalloc_flag & AGP_MEMORY_VMALLOC) {
[...]
 	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#126: FILE: drivers/char/agp/generic.c:138:
+	if (mem->vmalloc_flag & AGP_DMA_MEMORY_VMALLOC) {
[...]
+	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new->dma_memory"
#138: FILE: drivers/char/agp/generic.c:170:
+	if (new->dma_memory == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new->dma_memory"
#154: FILE: drivers/char/agp/generic.c:205:
+	if (new->dma_memory == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/char/agp/generic.c:1139:
+^I^I^Iwritel(bridge->driver->mask_memory(bridge, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/char/agp/generic.c:1140:
+			writel(bridge->driver->mask_memory(bridge, 
+						mem->dma_memory[i], mask_type),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#200: FILE: drivers/char/agp/generic.c:1141:
+					bridge->gatt_table+j);
 					                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/char/agp/generic.c:1144:
+			writel(bridge->driver->mask_memory(bridge, mem->memory[i], mask_type),
+					bridge->gatt_table+j);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: drivers/char/agp/generic.c:1144:
+					bridge->gatt_table+j);
 					                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#219: FILE: drivers/char/agp/generic.c:1417:
+	for (i = 0; i < mem->page_count; i++ ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/char/agp/generic.c:1418:
+^I^Imem->dma_memory[i] = pci_map_single(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/char/agp/generic.c:1419:
+^I^I^I^Igart_to_virt(mem->memory[i]), PAGE_SIZE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/char/agp/generic.c:1419:
+		mem->dma_memory[i] = pci_map_single(dev, 
+				gart_to_virt(mem->memory[i]), PAGE_SIZE, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: drivers/char/agp/generic.c:1423:
+			int j;
+			for (j = 0; j < i; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/char/agp/generic.c:1425:
+^I^I^I^I^I^IPAGE_SIZE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/char/agp/generic.c:1425:
+				pci_unmap_single(dev, mem->dma_memory[j],
+						PAGE_SIZE, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: drivers/char/agp/generic.c:1438:
+	int i;
+	if (!bridge || !mem)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: drivers/char/agp/generic.c:1441:
+	for (i = 0; i < mem->page_count; i++ )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/char/agp/generic.c:1443:
+		pci_unmap_single(dev, mem->dma_memory[i], PAGE_SIZE,
+				PCI_DMA_BIDIRECTIONAL);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#248: FILE: drivers/char/agp/generic.c:1446:
+EXPORT_SYMBOL(agp_generic_unmap_dma_pages);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 10 warnings, 12 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
