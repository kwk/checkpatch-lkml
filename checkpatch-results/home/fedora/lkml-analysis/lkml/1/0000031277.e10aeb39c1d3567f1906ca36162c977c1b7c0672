WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Make subsys[] able to be dynamically populated to support modular subsystems

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#68: FILE: include/linux/cgroup.h:53:
+ * track of all of them. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#69: FILE: include/linux/cgroup.h:54:
+#define CGROUP_SUBSYS_COUNT (BITS_PER_BYTE*sizeof(unsigned long))
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#85: FILE: kernel/cgroup.c:62:
+ * cgroup_mutex. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: kernel/cgroup.c:440:
+	 * won't change, so no need for locking. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: kernel/cgroup.c:885:
+	BUG_ON(!mutex_is_locked(&cgroup_mutex));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: kernel/cgroup.c:897:
+		 * ensure that subsystems won't disappear once selected. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#132: FILE: kernel/cgroup.c:898:
+		BUG_ON(ss == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#132: FILE: kernel/cgroup.c:898:
+		BUG_ON(ss == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: kernel/cgroup.c:918:
+			BUG_ON(ss == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#140: FILE: kernel/cgroup.c:918:
+			BUG_ON(ss == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: kernel/cgroup.c:932:
+			BUG_ON(ss == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#148: FILE: kernel/cgroup.c:932:
+			BUG_ON(ss == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#156: FILE: kernel/cgroup.c:945:
+			BUG_ON(ss == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#156: FILE: kernel/cgroup.c:945:
+			BUG_ON(ss == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#176: FILE: kernel/cgroup.c:998:
+	BUG_ON(!mutex_is_locked(&cgroup_mutex));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#185: FILE: kernel/cgroup.c:1015:
+				if (ss == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#194: FILE: kernel/cgroup.c:1061:
+				if (ss == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: kernel/cgroup.c:3305:
+	 * locking order, since both parties are under cgroup_mutex. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#217: FILE: kernel/cgroup.c:3308:
+		if (ss == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#226: FILE: kernel/cgroup.c:3321:
+		if (ss == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#237: FILE: kernel/cgroup.c:3445:
+	 * has a reference on them. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#244: FILE: kernel/cgroup.c:3450:
+		if (ss == NULL || ss->root != cgrp->root)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: kernel/cgroup.c:3819:
+	 * subsys/hierarchy state. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss"
#278: FILE: kernel/cgroup.c:3823:
+		if (ss == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: kernel/cgroup.c:3886:
+		 * so we don't need to lock the subsys array here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#301: FILE: kernel/cgroup.c:3959:
+		 * the subsys array */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#312: FILE: kernel/cgroup.c:4270:
+		 * subsystems, so we don't worry about them. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031277.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 11 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031277.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
