WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch introduces two new files named hw_breakpoint.[ch] inside x86 specific

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: arch/x86/kernel/hw_breakpoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: arch/x86/kernel/hw_breakpoint.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: arch/x86/kernel/hw_breakpoint.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#92: FILE: arch/x86/kernel/hw_breakpoint.c:39:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: arch/x86/kernel/hw_breakpoint.c:56:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#114: FILE: arch/x86/kernel/hw_breakpoint.c:61:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#114: FILE: arch/x86/kernel/hw_breakpoint.c:61:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pos >= 0'
#142: FILE: arch/x86/kernel/hw_breakpoint.c:89:
+		if ((pos >= 0) && (i != pos))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i != pos'
#142: FILE: arch/x86/kernel/hw_breakpoint.c:89:
+		if ((pos >= 0) && (i != pos))

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void arch_load_debug_registers() should probably be void arch_load_debug_registers(void)
#154: FILE: arch/x86/kernel/hw_breakpoint.c:101:
+void arch_load_debug_registers()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#170: FILE: arch/x86/kernel/hw_breakpoint.c:117:
+	struct thread_struct *thread = &(tsk->thread);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void arch_install_none() should probably be void arch_install_none(void)
#184: FILE: arch/x86/kernel/hw_breakpoint.c:131:
+void arch_install_none()

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: arch/x86/kernel/hw_breakpoint.c:205:
+int arch_validate_hwbkpt_settings(struct hw_breakpoint *bp,
+				unsigned int *align, struct task_struct *tsk)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#263: FILE: arch/x86/kernel/hw_breakpoint.c:210:
+	switch (bp->info.type) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: arch/x86/kernel/hw_breakpoint.c:218:
+		if ((!arch_check_va_in_userspace(bp->info.address,
+							bp->info.len)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: arch/x86/kernel/hw_breakpoint.c:260:
+void arch_register_user_hw_breakpoint(int pos, struct hw_breakpoint *bp,
+		struct task_struct *tsk)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#315: FILE: arch/x86/kernel/hw_breakpoint.c:262:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: arch/x86/kernel/hw_breakpoint.c:272:
+int arch_modify_user_hw_breakpoint(int pos, struct hw_breakpoint *bp,
+		struct task_struct *tsk)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#327: FILE: arch/x86/kernel/hw_breakpoint.c:274:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#345: FILE: arch/x86/kernel/hw_breakpoint.c:292:
+	struct thread_struct *thread = &(tsk->thread);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void arch_unregister_kernel_hw_breakpoint() should probably be void arch_unregister_kernel_hw_breakpoint(void)
#373: FILE: arch/x86/kernel/hw_breakpoint.c:320:
+void arch_unregister_kernel_hw_breakpoint()

WARNING:LINE_SPACING: Missing a blank line after declarations
#386: FILE: arch/x86/kernel/hw_breakpoint.c:333:
+			struct hw_breakpoint *bp = hbp_kernel[i];
+			kdr7 |= encode_dr7(i, bp->info.len, bp->info.type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#392: FILE: arch/x86/kernel/hw_breakpoint.c:339:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#400: FILE: arch/x86/kernel/hw_breakpoint.c:347:
+	struct thread_struct *thread = &(tsk->thread);

WARNING:SIZEOF_PARENTHESIS: sizeof u_debugreg should be sizeof(u_debugreg)
#403: FILE: arch/x86/kernel/hw_breakpoint.c:350:
+	memset(u_debugreg, 0, sizeof u_debugreg);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#433: FILE: arch/x86/kernel/hw_breakpoint.c:380:
+	current->thread.dr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#433: FILE: arch/x86/kernel/hw_breakpoint.c:380:
+	current->thread.dr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#433: FILE: arch/x86/kernel/hw_breakpoint.c:380:
+	current->thread.dr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->triggered)
#461: FILE: arch/x86/kernel/hw_breakpoint.c:408:
+				(bp->triggered)(bp, args->regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: arch/x86/kernel/hw_breakpoint.c:411:
+			if (arch_check_va_in_userspace(bp->info.address,
+							bp->info.len))

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#467: FILE: arch/x86/kernel/hw_breakpoint.c:414:
+				rc = NOTIFY_STOP;;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: arch/x86/kernel/hw_breakpoint.c:422:
+			if (arch_check_va_in_userspace(bp->info.address,
+							bp->info.len)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->triggered)
#476: FILE: arch/x86/kernel/hw_breakpoint.c:423:
+				(bp->triggered)(bp, args->regs);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/hw_breakpoint.c:436:
+	if (!(dr6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/hw_breakpoint.c:436:
+	if (!(dr6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/hw_breakpoint.c:436:
+	if (!(dr6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#500: FILE: arch/x86/include/asm/hw_breakpoint.h:1:
+#ifndef	_I386_HW_BREAKPOINT_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: arch/x86/include/asm/hw_breakpoint.h:46:
+int __register_user_hw_breakpoint(int pos, struct task_struct *tsk,
+			struct hw_breakpoint *bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: arch/x86/include/asm/hw_breakpoint.h:48:
+int __modify_user_hw_breakpoint(int pos, struct task_struct *tsk,
+			struct hw_breakpoint *bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: arch/x86/include/asm/hw_breakpoint.h:50:
+void __unregister_user_hw_breakpoint(int pos, struct task_struct *tsk,
+			struct hw_breakpoint *bp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#553: FILE: arch/x86/include/asm/hw_breakpoint.h:54:
+void arch_install_kernel_hw_breakpoint(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: arch/x86/include/asm/hw_breakpoint.h:59:
+int arch_validate_hwbkpt_settings(struct hw_breakpoint *bp,
+				unsigned int *align, struct task_struct *tsk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: arch/x86/include/asm/hw_breakpoint.h:61:
+void arch_register_user_hw_breakpoint(int pos, struct hw_breakpoint *bp,
+				struct task_struct *tsk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: arch/x86/include/asm/hw_breakpoint.h:63:
+int arch_modify_user_hw_breakpoint(int pos, struct hw_breakpoint *bp,
+				struct task_struct *tsk);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 9 warnings, 31 checks, 529 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
