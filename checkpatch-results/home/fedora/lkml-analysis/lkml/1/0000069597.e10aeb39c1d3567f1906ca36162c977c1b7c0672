WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > If all inodes are under writeback (e.g. in case when there's only one inode

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#107: FILE: fs/fs-writeback.c:73:
+	printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#109: FILE: fs/fs-writeback.c:75:
+			"global dirty=%lu writeback=%lu nfs=%lu "
+			"flags=%c%c towrite=%ld skipped=%ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#113: FILE: fs/fs-writeback.c:79:
+			wbc->encountered_congestion ? 'C':'_',
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#114: FILE: fs/fs-writeback.c:80:
+			wbc->more_io ? 'M':'_',
 			                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/fs-writeback.c:86:
+void __writeback_debug_report(long n, struct writeback_control *wbc,
+		const char *file, int line, const char *func)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#122: FILE: fs/fs-writeback.c:88:
+	printk(KERN_DEBUG "%s +%d %s(): comm=%s pid=%d n=%ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: fs/fs-writeback.c:89:
+	printk(KERN_DEBUG "%s +%d %s(): comm=%s pid=%d n=%ld\n",
+			file, line, func,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: fs/fs-writeback.c:110:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#146: FILE: fs/fs-writeback.c:290:
+#define redirty_tail(inode)						\
+	do {								\
+		__redirty_tail(inode, __LINE__);			\
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#151: FILE: fs/fs-writeback.c:295:
+#define requeue_io(inode)						\
+	do {								\
+		__requeue_io(inode, __LINE__);				\
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#156: FILE: fs/fs-writeback.c:300:
+#define requeue_partial_io(wbc, inode)					\
+	do {								\
+		__requeue_partial_io(wbc, inode, __LINE__);		\
+	} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#179: FILE: fs/fs-writeback.c:328:
+		printk(KERN_DEBUG "redirty_tail() +%d: inode=%lu\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'redirty_tail', this function's name, in a string
#179: FILE: fs/fs-writeback.c:328:
+		printk(KERN_DEBUG "redirty_tail() +%d: inode=%lu\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/fs-writeback.c:329:
+		printk(KERN_DEBUG "redirty_tail() +%d: inode=%lu\n",
+				line, inode->i_ino);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#195: FILE: fs/fs-writeback.c:343:
+		printk(KERN_DEBUG "requeue_io() +%d: inode=%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: fs/fs-writeback.c:344:
+		printk(KERN_DEBUG "requeue_io() +%d: inode=%lu\n",
+				line, inode->i_ino);

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: include/linux/writeback.h:162:
+	if(sysctl_dirty_debug)						\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: include/linux/writeback.h:164:
+				__FILE__, __LINE__, __FUNCTION__);	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: include/linux/writeback.h:167:
+void __writeback_debug_report(long n, struct writeback_control *wbc,
+		const char *file, int line, const char *func);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: mm/page-writeback.c:565:
+		schedule_timeout(HZ/10);
 		                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069597.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 9 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000069597.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
