WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
ratios that are valid for the processor model and bus frequency. It is called

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: DocBook/cf750gx.tmpl:47:
+    License along with this program; if not, write to the Free$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: DocBook/cf750gx.tmpl:48:
+    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#219: FILE: DocBook/cf750gx.tmpl:168:
+     frequencies, though these can be overriden at start up via module
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#344: FILE: DocBook/cf750gx.tmpl:293:
+     This interface provides a sysfs attribute that can be written to to

WARNING:TYPO_SPELLING: 'Earch' may be misspelled - perhaps 'Search'?
#490: FILE: DocBook/cf750gx.tmpl:439:
+!Earch/powerpc/kernel/cpu/pll_if.c
  ^^^^^

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#555: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#573: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#574: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#589: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:35:
+#include <asm/processor.h>

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxmChangingPll>
#594: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:40:
+#define cf750gxmChangingPll		(0x80000000)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxmChangingPllBit>
#595: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:41:
+#define cf750gxmChangingPllBit		(31)

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxmTurningIdlePllOff>
#596: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:42:
+#define cf750gxmTurningIdlePllOff	(0x40000000)

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxmTurningIdlePllOffBit>
#597: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:43:
+#define cf750gxmTurningIdlePllOffBit	(30)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#598: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:44:
+#if 0

WARNING:MISPLACED_INIT: __initdata should be placed after pll_750fx
#620: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:66:
+static const struct pll_750fgx __initdata pll_750fx = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#620: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:66:
+static const struct pll_750fgx __initdata pll_750fx = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:MISPLACED_INIT: __initdata should be placed after pll_750gx
#627: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:73:
+static const struct pll_750fgx __initdata pll_750gx = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#627: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:73:
+static const struct pll_750fgx __initdata pll_750gx = {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#640: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:86:
+static unsigned int mincore = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#641: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:87:
+static unsigned int maxcore = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:92:
+MODULE_PARM_DESC(maxcore,
+	"clock frequency in KHz.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:96:
+MODULE_PARM_DESC(mincore,
+	"clock frequency in KHz.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:100:
+MODULE_PARM_DESC(minmax,
+	"Use only the minimum and maximum frequencies.");

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:131:
+	dprintk("%s():  cd->idle_pll_off is %d, new PLL is 0x%x"
+		", Switched to  %d KHz\n", __func__, cd->idle_pll_off,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#695: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:141:
+		idle_pll = get_next_PLL(cd->current_pll)^0x1;
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#706: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:152:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG)<<24);
 			                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#706: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:152:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG)<<24);
 			                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#711: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:157:
+			pll_off_cmd = pll_off_cmd<<(PLL0_CFG_SHIFT-
 			                         ^

CHECK:SPACING: space preferred before that '-' (ctx:VxE)
#711: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:157:
+			pll_off_cmd = pll_off_cmd<<(PLL0_CFG_SHIFT-
 			                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:160:
+			new_pll = (PLL0_DO_CFG|PLL0_DO_RNG)<<24;
 			                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#714: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:160:
+			new_pll = (PLL0_DO_CFG|PLL0_DO_RNG)<<24;
 			                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#717: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:163:
+		new_pll = new_pll|pll_off_cmd;
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#721: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:167:
+		(void) pllif_modify_PLL(new_pll, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:178:
+static int cf750gx_pll_lock_cb(struct notifier_block *nb, unsigned long action,
+	void *data)

WARNING:SPLIT_STRING: quoted string split across lines
#739: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:185:
+	dprintk("%s():  cd->idle_pll_off is %d, new PLL is 0x%x"
+		", Switched to  %d KHz\n", __func__, cd->idle_pll_off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:196:
+		if (test_bit(cf750gxmTurningIdlePllOffBit,
+			&cf750gx_state_bits)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:198:
+			clear_bit(cf750gxmTurningIdlePllOffBit,
+				&cf750gx_state_bits);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:200:
+			clear_bit(cf750gxmChangingPllBit,
+				&cf750gx_state_bits);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:218:
+static int cf750gx_target(struct cpufreq_policy *policy,
+			       unsigned int target_freq, unsigned int relation)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#784: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:230:
+	dprintk(__FILE__">%s(, %u KHz, relation %u)-%d:  on cpu %d\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxTargetUnlock>
#805: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:251:
+		goto cf750gxTargetUnlock;

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#810: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:256:
+	dprintk(__FILE__">%s()-%d:  %d KHz (state=%x) selected from table "

WARNING:SPLIT_STRING: quoted string split across lines
#811: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:257:
+	dprintk(__FILE__">%s()-%d:  %d KHz (state=%x) selected from table "
+		"(%s)\n", __func__, __LINE__, next_freq, next_perf_state,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#817: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:263:
+#if 0

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#827: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:273:
+	if (pllif_pack_state(get_PLL_ratio(active_pll, pll), get_PLL_range(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#836: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:282:
+	dprintk(__FILE__">%s()-%d:  Current PLL:  0x%x\n", __func__, __LINE__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:293:
+		current_state = pllif_pack_state(get_PLL_ratio(0, pll),
+			get_PLL_range(0, pll));

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#849: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:295:
+		dprintk(__FILE__">%s()-%d:  pll 0 current state:  0x%x\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#853: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:299:
+			new_pll = PLL_DO_SEL<<24;
 			                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#856: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:302:
+			next_perf_state = next_perf_state<<(PLL0_CFG_SHIFT-
 			                                 ^

CHECK:SPACING: space preferred before that '-' (ctx:VxE)
#856: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:302:
+			next_perf_state = next_perf_state<<(PLL0_CFG_SHIFT-
 			                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#859: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:305:
+			new_pll = (PLL0_DO_CFG|PLL0_DO_RNG|PLL_DO_SEL)<<24;
 			                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#859: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:305:
+			new_pll = (PLL0_DO_CFG|PLL0_DO_RNG|PLL_DO_SEL)<<24;
 			                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#859: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:305:
+			new_pll = (PLL0_DO_CFG|PLL0_DO_RNG|PLL_DO_SEL)<<24;
 			                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:315:
+		current_state = pllif_pack_state(get_PLL_ratio(1, pll),
+			get_PLL_range(1, pll));

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#871: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:317:
+		dprintk(__FILE__">%s()-%d:  pll 1 current state:  0x%x\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#875: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:321:
+			new_pll = (PLL_DO_SEL<<24)|PLL_SEL_MASK;
 			                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#875: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:321:
+			new_pll = (PLL_DO_SEL<<24)|PLL_SEL_MASK;
 			                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#878: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:324:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG|PLL_DO_SEL)<<24)|
 			                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#878: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:324:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG|PLL_DO_SEL)<<24)|
 			                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#878: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:324:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG|PLL_DO_SEL)<<24)|
 			                                               ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#878: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:324:
+			new_pll = ((PLL1_DO_CFG|PLL1_DO_RNG|PLL_DO_SEL)<<24)|
 			                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#883: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:329:
+	new_pll = new_pll|next_perf_state;
 	                 ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#885: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:331:
+	dprintk(__FILE__">%s()-%d:  Modifying PLL:  0x%x\n", __func__, __LINE__,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#888: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:334:
+	freqs.old = pllif_cfg_to_freq(get_PLL_ratio(active_pll, pll))/1000;
 	                                                             ^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'cf750gx_switch_call_data.idle_pll_off'
#899: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:345:
+	cf750gx_lock_call_data.idle_pll_off = cf750gx_switch_call_data.
+		idle_pll_off;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#901: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:347:
+	dprintk(__FILE__">%s()-%d:  freqs.old=%d, freqs.new=%d\n", __func__,

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#922: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:368:
+	dprintk("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#932: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:378:
+	dprintk("%s()\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:387:
+	policy->cur = pllif_cfg_to_freq(get_PLL_ratio(get_active_PLL(pll),
+		pll))/1000;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#941: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:387:
+		pll))/1000;
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:400:
+	result = pllif_register_pll_switch_cb(&cf750gx_pll_switch_nb,
+		&cf750gx_switch_call_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:405:
+	result = pllif_register_pll_lock_cb(&cf750gx_pll_lock_nb,
+		&cf750gx_lock_call_data);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#967: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:413:
+	dprintk("%s()\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:421:
+	if (test_bit(cf750gxmChangingPllBit,
+		&cf750gx_state_bits))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#976: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:422:
+		wait_for_completion(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:449:
+static ssize_t cf750gx_i_show_idle_pll_off(struct cpufreq_policy *policy,
+	char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1009: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:455:
+static ssize_t cf750gx_i_store_pll_off(struct cpufreq_policy *policy,
+	const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1031: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:477:
+static ssize_t cf750gx_i_show_minmax(struct cpufreq_policy *policy,
+	char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:483:
+static ssize_t cf750gx_i_store_minmax(struct cpufreq_policy *policy,
+	const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:495:
+		cpufreq_frequency_table_get_attr(cf750gx_freq_table,
+			policy->cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:498:
+		result = cpufreq_frequency_table_cpuinfo(policy,
+			cf750gx_freq_table);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:507:
+		cpufreq_frequency_table_get_attr(cf750gx_min_max_freq_table,
+			policy->cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:510:
+		result = cpufreq_frequency_table_cpuinfo(policy,
+			cf750gx_min_max_freq_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1078: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:524:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cf750gxvAttr>
#1079: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:525:
+static struct freq_attr *cf750gxvAttr[] = {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1107: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:553:
+	dprintk("%s()\n", __func__);

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#1114: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:560:
+	 * overriden, then get them from version defaults.
 	   ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1116: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:562:
+	if ((cur_cpu_spec->pvr_value>>16) == 0x7000)
 	                            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1121: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:567:
+	cf750gx_min_core = mincore?mincore:pll_defaults->
 	                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1121: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:567:
+	cf750gx_min_core = mincore?mincore:pll_defaults->
 	                                  ^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pll_defaults->min_core'
#1122: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:568:
+	cf750gx_min_core = mincore?mincore:pll_defaults->
+			min_core;

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1123: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:569:
+	cf750gx_max_core = maxcore?maxcore:pll_defaults->
 	                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1123: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:569:
+	cf750gx_max_core = maxcore?maxcore:pll_defaults->
 	                                  ^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'pll_defaults->max_core'
#1124: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:570:
+	cf750gx_max_core = maxcore?maxcore:pll_defaults->
+			max_core;

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1126: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:572:
+	dprintk(__FILE__">%s()-%d:  cf750gx_min_core is %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#1127: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:573:
+	dprintk(__FILE__">%s()-%d:  cf750gx_min_core is %u, "
+		"cf750gx_max_core is %u\n", __func__, __LINE__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1129: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:575:
+	dprintk(__FILE__">%s()-%d:  pll_defaults:  min_ratio %d, max_ratio "

WARNING:SPLIT_STRING: quoted string split across lines
#1130: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:576:
+	dprintk(__FILE__">%s()-%d:  pll_defaults:  min_ratio %d, max_ratio "
+		"%d\n", __func__, __LINE__, pll_defaults->min_ratio,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1144: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:590:
+	bus_clock = pllif_get_bus_clock()/1000;
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1151: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:597:
+	freq = min_ratio*bus_clock;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1158: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:604:
+		min_ratio = cf750gx_min_core/bus_clock;
 		                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1159: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:605:
+		j = cf750gx_min_core%bus_clock;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1171: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:617:
+	freq = max_ratio*bus_clock;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1178: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:624:
+		max_ratio = cf750gx_max_core/bus_clock;
 		                            ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1187: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:633:
+	dprintk(__FILE__">%s()-%d:  min_ratio is %d, max_ratio is %d\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1195: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:641:
+	j = max_ratio-min_ratio+1;
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1195: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:641:
+	j = max_ratio-min_ratio+1;
 	                       ^

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#1196: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:642:
+	cf750gx_freq_table = kmalloc(sizeof(struct cpufreq_frequency_table)*
 	                                                                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cf750gx_freq_table)...) over kmalloc(sizeof(struct cpufreq_frequency_table)...)
#1196: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:642:
+	cf750gx_freq_table = kmalloc(sizeof(struct cpufreq_frequency_table)*

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1197: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:643:
+		(j+5), GFP_KERNEL);
 		  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cf750gx_freq_table"
#1200: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:646:
+	if (cf750gx_freq_table == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1203: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:649:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1214: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:660:
+	for (tbp = cf750gx_freq_table+1, i = min_ratio; i <= max_ratio;
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1216: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:662:
+		tbp->frequency = i*bus_clock;
 		                  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1235: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:681:
+		tbp->index = pllif_pack_state(i > 10?i+10:(i<<1), rng);
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1235: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:681:
+		tbp->index = pllif_pack_state(i > 10?i+10:(i<<1), rng);
 		                                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1235: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:681:
+		tbp->index = pllif_pack_state(i > 10?i+10:(i<<1), rng);
 		                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1235: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:681:
+		tbp->index = pllif_pack_state(i > 10?i+10:(i<<1), rng);
 		                                            ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1237: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:683:
+		dprintk(__FILE__">%s()-%d:  p->index=%x, ratio=%u, rng=%u\n",

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#1249: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:695:
+	cf750gx_min_max_freq_table = cf750gx_freq_table+
 	                                               ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#1253: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:699:
+	cf750gx_min_max_freq_table[1] = cf750gx_freq_table[

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1257: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:703:
+	cf750gx_f_table = minmax?cf750gx_min_max_freq_table:
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1257: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:703:
+	cf750gx_f_table = minmax?cf750gx_min_max_freq_table:
 	                                                   ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1275: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:721:
+	dprintk("%s()\n", __func__);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1280: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:726:
+	if (cf750gx_freq_table)
+		kfree(cf750gx_freq_table);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1282: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:728:
+	cf750gx_freq_table = cf750gx_min_max_freq_table =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:RETURN_VOID: void function return statements are not generally useful
#1286: FILE: powerpc/kernel/cpu/cpufreq/cf750gx.c:732:
+	return;
+}

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233538.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 32 warnings, 94 checks, 1230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000233538.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
