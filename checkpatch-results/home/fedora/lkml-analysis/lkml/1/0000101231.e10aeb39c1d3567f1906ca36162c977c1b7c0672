WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: drivers/iio/trigger/Kconfig:14:
+config IIO_GPIO_TRIGGER
+	tristate "GPIO trigger"
+	depends on IIO && IIO_TRIGGER && GENERIC_GPIO
+	help
+	    Provides support for using GPIO pins as IIO triggers.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/iio/trigger/iio-trig-gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#117: FILE: drivers/iio/trigger/iio-trig-gpio.c:30:
+DEFINE_MUTEX(iio_gpio_trigger_list_lock);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#120: FILE: drivers/iio/trigger/iio-trig-gpio.c:33:
+	struct mutex in_use;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#123: FILE: drivers/iio/trigger/iio-trig-gpio.c:36:
+};
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'iio_trigger_read_name' to 'name_show'
#135: FILE: drivers/iio/trigger/iio-trig-gpio.c:48:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#137: FILE: drivers/iio/trigger/iio-trig-gpio.c:50:
+DEVICE_ATTR(name, S_IRUGO, iio_trigger_read_name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: drivers/iio/trigger/iio-trig-gpio.c:67:
+	int i, irq, ret = 0;
+	if (!pdata) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#155: FILE: drivers/iio/trigger/iio-trig-gpio.c:68:
+		printk(KERN_ERR "No IIO gpio trigger platform data found\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#159: FILE: drivers/iio/trigger/iio-trig-gpio.c:72:
+	for (i = 0; i < pdata->num_gpios; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#211: FILE: drivers/iio/trigger/iio-trig-gpio.c:124:
+
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: include/linux/iio/gpio_trigger.h:1:
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#298: FILE: include/linux/iio/gpio_trigger.h:2:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 6 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101231.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
