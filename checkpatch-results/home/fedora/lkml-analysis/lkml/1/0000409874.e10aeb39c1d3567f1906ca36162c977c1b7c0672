WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
 - confirm page_count(page)== 0 && PageReserved(page) page is safe to be freed..

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: mm/Kconfig:129:
+config MEMORY_HOTREMOVE
+	bool "Allow for memory hot remove"
+	depends on MEMORY_HOTPLUG
+	depends on MIGRATION
+
 # Heavily threaded applications may benefit from splitting the mm-wide
 # page_table_lock, so that faults on different parts of the user address
 # space can be handled with less contention: split it at this NR_CPUS.

Kconfig symbols should have a help text which fully describes
it.

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: mm/memory_hotplug.c:318:
+	int i;
+	for (pfn = start_pfn;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: mm/memory_hotplug.c:343:
+	struct page *page;
+	for (pfn = start; pfn < end; pfn++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: mm/memory_hotplug.c:362:
+
+

WARNING:TYPO_SPELLING: 'Becasue' may be misspelled - perhaps 'Because'?
#176: FILE: mm/memory_hotplug.c:388:
+			/* Becasue we don't have big zone->lock. we should
 			   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: mm/memory_hotplug.c:389:
+			/* Becasue we don't have big zone->lock. we should
+			   check this again here. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#177: FILE: mm/memory_hotplug.c:389:
+			   check this again here. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: mm/memory_hotplug.c:393:
+			printk(KERN_INFO "removing from LRU failed"

WARNING:SPLIT_STRING: quoted string split across lines
#182: FILE: mm/memory_hotplug.c:394:
+			printk(KERN_INFO "removing from LRU failed"
+					 " %lx/%d/%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: mm/memory_hotplug.c:420:
+offline_isolated_pages_cb(unsigned long start, unsigned long nr_pages,
+			void *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: mm/memory_hotplug.c:430:
+	walk_memory_resource(start_pfn, end_pfn - start_pfn, NULL,
+				offline_isolated_pages_cb);

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: mm/memory_hotplug.c:442:
+	long offlined = *(long *)data;
+	ret = test_pages_isolated(start_pfn, start_pfn + nr_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: mm/memory_hotplug.c:456:
+	ret = walk_memory_resource(start_pfn, end_pfn - start_pfn, &offlined,
+			check_pages_isolated_cb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: mm/memory_hotplug.c:472:
+	BUG_ON(start_pfn >= end_pfn);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: mm/memory_hotplug.c:479:
+	/* This makes hotplug much easier...and readable.
+	   we assume this for now. .*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: mm/memory_hotplug.c:479:
+	   we assume this for now. .*/

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#305: FILE: mm/memory_hotplug.c:517:
+			yield();

WARNING:TYPO_SPELLING: 'asyncronous' may be misspelled - perhaps 'asynchronous'?
#310: FILE: mm/memory_hotplug.c:522:
+	/* drain all zone's lru pagevec, this is asyncronous... */
 	                                         ^^^^^^^^^^^

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#313: FILE: mm/memory_hotplug.c:525:
+	yield();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: mm/memory_hotplug.c:534:
+	printk(KERN_INFO "Offlined Pages %ld\n", offlined_pages);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#324: FILE: mm/memory_hotplug.c:536:
+	/* Ok, all of our target is islaoted.
+	   We cannot do rollback at this point. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#324: FILE: mm/memory_hotplug.c:536:
+	   We cannot do rollback at this point. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#339: FILE: mm/memory_hotplug.c:551:
+	printk(KERN_INFO "memory offlining %lx to %lx failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: mm/memory_hotplug.c:552:
+	printk(KERN_INFO "memory offlining %lx to %lx failed\n",
+		start_pfn, end_pfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: include/linux/memory_hotplug.h:63:
+extern int offline_pages(unsigned long, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: include/linux/memory_hotplug.h:64:
+extern void __offline_isolated_pages(unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#357: FILE: include/linux/memory_hotplug.h:64:
+extern void __offline_isolated_pages(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#357: FILE: include/linux/memory_hotplug.h:64:
+extern void __offline_isolated_pages(unsigned long, unsigned long);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#398: FILE: mm/page_alloc.c:4487:
+		BUG_ON(page_count(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#399: FILE: mm/page_alloc.c:4488:
+		BUG_ON(!PageBuddy(page));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#402: FILE: mm/page_alloc.c:4491:
+		printk(KERN_INFO "remove from free list %lx %d %lx\n",

ERROR:SPACING: space prohibited after that '-' (ctx:ExW)
#409: FILE: mm/page_alloc.c:4498:
+				      - (1UL << order));
 				      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#411: FILE: mm/page_alloc.c:4500:
+			SetPageReserved((page+i));
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: include/linux/kernel.h:37:
+#define IS_ALIGNED(x,a)		(((x) % ((typeof(x))(a))) == 0)
                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409874.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 25 warnings, 8 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409874.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
