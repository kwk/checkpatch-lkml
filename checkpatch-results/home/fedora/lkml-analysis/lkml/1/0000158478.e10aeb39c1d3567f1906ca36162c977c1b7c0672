WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#62: 
the number fo scanning under softlimit is limited by balance_pgdat()
           ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: mm/memcontrol.c:1619:
+};
+struct softlimit_control softlimit_ctrl[MAX_NUMNODES][MAX_NR_ZONES];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#128: FILE: mm/memcontrol.c:1632:
+}
+/*

WARNING:TYPO_SPELLING: 'Seatch' may be misspelled - perhaps 'Search'?
#129: FILE: mm/memcontrol.c:1633:
+ * Seatch victim in specified priority level. If not found, retruns NULL.
    ^^^^^^

WARNING:TYPO_SPELLING: 'retruns' may be misspelled - perhaps 'returns'?
#129: FILE: mm/memcontrol.c:1633:
+ * Seatch victim in specified priority level. If not found, retruns NULL.
                                                             ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: mm/memcontrol.c:1637:
+struct mem_cgroup *__mem_cgroup_get_vicitm_prio(int nid, int zid,
+				struct mem_cgroup *start, int prio)

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: mm/memcontrol.c:1678:
+	int prio;
+	ret = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: mm/memcontrol.c:1709:
+		if (ret->softlimit_list.next != &softlimit_head.list[prio]) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#210: FILE: mm/memcontrol.c:1714:
+		} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/linux/memcontrol.h:120:
+extern void mem_cgroup_start_softlimit_reclaim(int nid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: include/linux/memcontrol.h:121:
+extern struct mem_cgroup *mem_cgroup_get_victim(int nid, int zid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: include/linux/memcontrol.h:122:
+extern void mem_cgroup_put_vicitm(struct mem_cgroup *mem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#247: FILE: include/linux/memcontrol.h:271:
 
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#303: FILE: mm/vmscan.c:1767:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: mm/vmscan.c:1896:
+			shrink_zone_softlimit(&sc, zone, order, priority,
+				      8 * zone->pages_high, end_zone);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158478.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 10 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158478.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
