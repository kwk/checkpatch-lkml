WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#314: FILE: drivers/input/mouse/elantech.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0x10'
#358: FILE: drivers/input/mouse/elantech.c:45:
+	if ((reg < 0x10) || (reg > 0x26))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 0x26'
#358: FILE: drivers/input/mouse/elantech.c:45:
+	if ((reg < 0x10) || (reg > 0x26))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 0x11'
#360: FILE: drivers/input/mouse/elantech.c:47:
+	if ((reg > 0x11) && (reg < 0x20))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg < 0x20'
#360: FILE: drivers/input/mouse/elantech.c:47:
+	if ((reg > 0x11) && (reg < 0x20))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#380: FILE: drivers/input/mouse/elantech.c:67:
+	printk(KERN_DEBUG "elantech.c: PS/2 packet [");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: drivers/input/mouse/elantech.c:69:
+		printk("%s0x%02x ", (i) ? ", " : " ", packet[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#383: FILE: drivers/input/mouse/elantech.c:70:
+	printk("]\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#391: FILE: drivers/input/mouse/elantech.c:78:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: drivers/input/mouse/elantech.c:79:
+^Istruct input_dev ^I*dev = psmouse->dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: drivers/input/mouse/elantech.c:80:
+^Iunsigned char ^I^I*packet = psmouse->packet;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#398: FILE: drivers/input/mouse/elantech.c:85:
+		 * byte 1:  0   0   0   0  x9  x8  y9  y8 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: drivers/input/mouse/elantech.c:89:
+		 * byte 1:  f   0  th  tw  x9  x8  y9  y8 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#407: FILE: drivers/input/mouse/elantech.c:94:
+	 * byte 3: y7  y6  y5  y4  y3  y2  y1  y0 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/input/mouse/elantech.c:97:
+		input_report_abs(dev, ABS_X,
+			((packet[1] & 0x0c) << 6) | packet[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/input/mouse/elantech.c:108:
+	if (!(etd->capabilities & ETP_CAP_ALTERNATE_TAP_BITS) &&
+	     (etd->capabilities & ETP_CAP_HAS_ROCKER)) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#432: FILE: drivers/input/mouse/elantech.c:119:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#433: FILE: drivers/input/mouse/elantech.c:120:
+^Istruct input_dev ^I*dev = psmouse->dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: drivers/input/mouse/elantech.c:121:
+^Iunsigned char ^I^I*packet = psmouse->packet;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: drivers/input/mouse/elantech.c:122:
+^Iint ^I^I^Ifingers, cornertap;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: drivers/input/mouse/elantech.c:127:
+	 * byte 3:  w   h  n1  n0  ds3 ds2 ds1 ds0 */

CHECK:SPACING: No space is necessary after a cast
#458: FILE: drivers/input/mouse/elantech.c:145:
+		input_report_rel(dev, REL_X, (int) (packet[1] & 0x7f) -

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#459: FILE: drivers/input/mouse/elantech.c:146:
+					     (int) (packet[1] & 0x80));

CHECK:SPACING: No space is necessary after a cast
#460: FILE: drivers/input/mouse/elantech.c:147:
+		input_report_rel(dev, REL_Y, (int) (packet[2] & 0x80) -

CHECK:SPACING: No space is necessary after a cast
#461: FILE: drivers/input/mouse/elantech.c:148:
+					     (int) (packet[2] & 0x7f));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/input/mouse/elantech.c:167:
+				input_report_rel(dev, REL_HWHEEL,
+					(int) (packet[3] & 0x08) -

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/input/mouse/elantech.c:167:
+					(int) (packet[3] & 0x08) -

CHECK:SPACING: No space is necessary after a cast
#481: FILE: drivers/input/mouse/elantech.c:168:
+					(int) (packet[3] & 0x07));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/input/mouse/elantech.c:171:
+				input_report_rel(dev, REL_WHEEL,
+					(int) (packet[3] & 0x08) -

CHECK:SPACING: No space is necessary after a cast
#484: FILE: drivers/input/mouse/elantech.c:171:
+					(int) (packet[3] & 0x08) -

CHECK:SPACING: No space is necessary after a cast
#485: FILE: drivers/input/mouse/elantech.c:172:
+					(int) (packet[3] & 0x07));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/input/mouse/elantech.c:178:
+			input_report_rel(dev, REL_WHEEL,
+				(int) (packet[3] & 0x80) -

CHECK:SPACING: No space is necessary after a cast
#491: FILE: drivers/input/mouse/elantech.c:178:
+				(int) (packet[3] & 0x80) -

CHECK:SPACING: No space is necessary after a cast
#492: FILE: drivers/input/mouse/elantech.c:179:
+				(int) (packet[3] & 0x7f));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#501: FILE: drivers/input/mouse/elantech.c:188:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#502: FILE: drivers/input/mouse/elantech.c:189:
+^Istruct input_dev ^I*dev = psmouse->dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#503: FILE: drivers/input/mouse/elantech.c:190:
+^Iunsigned char ^I^I*packet = psmouse->packet;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#540: FILE: drivers/input/mouse/elantech.c:227:
+	if (etd->reg_10 & ETP_R10_ABSOLUTE_MODE) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: drivers/input/mouse/elantech.c:245:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: drivers/input/mouse/elantech.c:276:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: drivers/input/mouse/elantech.c:299:
+^Istruct elantech_data ^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: drivers/input/mouse/elantech.c:300:
+^Istruct input_dev ^I*dev = psmouse->dev;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: drivers/input/mouse/elantech.c:358:
+static ssize_t elantech_set_int_attr(struct psmouse *psmouse, void *data,
+						const char *buf, size_t count)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/input/mouse/elantech.c:360:
+^Istruct elantech_data ^I^I*etd = psmouse->private;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: drivers/input/mouse/elantech.c:361:
+^Istruct elantech_attr_data ^I*attr = data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: drivers/input/mouse/elantech.c:362:
+^Iunsigned char ^I^I^I*reg = (unsigned char *)$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#680: FILE: drivers/input/mouse/elantech.c:367:
+	value = simple_strtoul(buf, &rest, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/input/mouse/elantech.c:374:
+		if ((value & ETP_R10_ABSOLUTE_MODE) &&
+		   !(etd->reg_11 & ETP_R11_4_BYTE_MODE)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#693: FILE: drivers/input/mouse/elantech.c:380:
+		if (value & ETP_R11_4_BYTE_MODE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: drivers/input/mouse/elantech.c:382:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#697: FILE: drivers/input/mouse/elantech.c:384:
+			 * no longer selected */

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#712: FILE: drivers/input/mouse/elantech.c:399:
+#define ELANTECH_INT_ATTR(_name, _register)				\
+	static struct elantech_attr_data elantech_attr_##_name = {	\
+		.field_offset = offsetof(struct elantech_data, _name),	\
+		.reg = _register,					\
+	};								\
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			\
+			    &elantech_attr_##_name,			\
+			    elantech_show_int_attr,			\
+			    elantech_set_int_attr)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#717: FILE: drivers/input/mouse/elantech.c:404:
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param[0] != 0x3c'
#769: FILE: drivers/input/mouse/elantech.c:456:
+	if ((param[0] != 0x3c) || (param[1] != 0x03) || (param[2] != 0xc8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param[1] != 0x03'
#769: FILE: drivers/input/mouse/elantech.c:456:
+	if ((param[0] != 0x3c) || (param[1] != 0x03) || (param[2] != 0xc8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param[2] != 0xc8'
#769: FILE: drivers/input/mouse/elantech.c:456:
+	if ((param[0] != 0x3c) || (param[1] != 0x03) || (param[2] != 0xc8)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: drivers/input/mouse/elantech.c:476:
+	sysfs_remove_group(&psmouse->ps2dev.serio->dev.kobj,
+				&elantech_attr_group);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#803: FILE: drivers/input/mouse/elantech.c:490:
+		printk(KERN_ERR "elantech.c: failed to rewrite registers.\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#815: FILE: drivers/input/mouse/elantech.c:502:
+^Istruct elantech_data ^I*etd;$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*etd)...) over kzalloc(sizeof(struct elantech_data)...)
#819: FILE: drivers/input/mouse/elantech.c:506:
+	etd = kzalloc(sizeof(struct elantech_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#847: FILE: drivers/input/mouse/elantech.c:534:
+		printk(KERN_ERR "elantech.c: failed to write registers to default state.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/input/mouse/elantech.c:545:
+	error = sysfs_create_group(&psmouse->ps2dev.serio->dev.kobj,
+					&elantech_attr_group);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#860: FILE: drivers/input/mouse/elantech.c:547:
+		printk(KERN_ERR "elantech.c: failed to create sysfs attributes, error: %d.\n", error);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#860: FILE: drivers/input/mouse/elantech.c:547:
+		printk(KERN_ERR "elantech.c: failed to create sysfs attributes, error: %d.\n", error);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#874: FILE: drivers/input/mouse/elantech.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#899: FILE: drivers/input/mouse/elantech.h:26:
+#define ETP_R11_4_BYTE_MODE ^I^I0x02$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: drivers/input/mouse/elantech.h:42:
+#define ETP_XMIN ^I^I^I(  0 + ETP_EDGE_FUZZ)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#915: FILE: drivers/input/mouse/elantech.h:42:
+#define ETP_XMIN 			(  0 + ETP_EDGE_FUZZ)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#916: FILE: drivers/input/mouse/elantech.h:43:
+#define ETP_XMAX ^I^I^I(576 - ETP_EDGE_FUZZ)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#917: FILE: drivers/input/mouse/elantech.h:44:
+#define ETP_YMIN ^I^I^I(  0 + ETP_EDGE_FUZZ)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#917: FILE: drivers/input/mouse/elantech.h:44:
+#define ETP_YMIN 			(  0 + ETP_EDGE_FUZZ)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#918: FILE: drivers/input/mouse/elantech.h:45:
+#define ETP_YMAX ^I^I^I(384 - ETP_EDGE_FUZZ)$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#947: FILE: drivers/input/mouse/elantech.h:74:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#949: FILE: drivers/input/mouse/elantech.h:76:
+}
+static inline int elantech_init(struct psmouse *psmouse)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#951: FILE: drivers/input/mouse/elantech.h:78:
+	return -ENOSYS;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331134.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 42 warnings, 31 checks, 926 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331134.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
