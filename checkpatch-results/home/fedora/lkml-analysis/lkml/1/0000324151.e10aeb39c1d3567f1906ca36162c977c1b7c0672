CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#130: FILE: arch/s390/mm/pgtable.c:93:
+		page = alloc_page(GFP_KERNEL|__GFP_REPEAT);
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#137: FILE: arch/s390/mm/pgtable.c:98:
+		table = (unsigned long *) page_to_phys(page);

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: arch/s390/mm/pgtable.c:129:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#195: FILE: arch/s390/mm/pgtable.c:147:
+			free_pages((unsigned long) page->index, ALLOC_ORDER);

CHECK:SPACING: No space is necessary after a cast
#220: FILE: arch/s390/mm/vmem.c:92:
+		pte = (pte_t *) page_table_alloc(&init_mm);

CHECK:SPACING: No space is necessary after a cast
#226: FILE: arch/s390/mm/vmem.c:97:
+	clear_table((unsigned long *) pte, _PAGE_TYPE_EMPTY,

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#249: FILE: include/asm-s390/elf.h:118:
+#include <asm/mmu_context.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'executable_stack' may be better as '(executable_stack)' to avoid precedence issues
#261: FILE: include/asm-s390/elf.h:222:
+#define elf_read_implies_exec(ex, executable_stack)	\
+({							\
+	if (current->mm->context.noexec &&		\
+	    executable_stack != EXSTACK_DISABLE_X)	\
+		disable_noexec(current->mm, current);	\
+	current->mm->context.noexec == 0;		\
+})

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#278: FILE: include/asm-s390/mmu_context.h:13:
+#include <asm/uaccess.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#321: FILE: include/asm-s390/mmu.h:4:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#364: FILE: include/asm-s390/page.h:80:
+typedef pte_t *pgtable_t;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#399: FILE: include/asm-s390/pgalloc.h:23:
+void crst_table_free(struct mm_struct *, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#399: FILE: include/asm-s390/pgalloc.h:23:
+void crst_table_free(struct mm_struct *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#403: FILE: include/asm-s390/pgalloc.h:25:
+unsigned long *page_table_alloc(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#404: FILE: include/asm-s390/pgalloc.h:26:
+void page_table_free(struct mm_struct *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#404: FILE: include/asm-s390/pgalloc.h:26:
+void page_table_free(struct mm_struct *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#405: FILE: include/asm-s390/pgalloc.h:27:
+void disable_noexec(struct mm_struct *, struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#405: FILE: include/asm-s390/pgalloc.h:27:
+void disable_noexec(struct mm_struct *, struct task_struct *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#418: FILE: include/asm-s390/pgalloc.h:85:
+	unsigned long *table = crst_table_alloc(mm, mm->context.noexec);
+	if (table)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#420: FILE: include/asm-s390/pgalloc.h:87:
+	return (pmd_t *) table;

CHECK:SPACING: No space is necessary after a cast
#423: FILE: include/asm-s390/pgalloc.h:89:
+#define pmd_free(mm, pmd) crst_table_free(mm, (unsigned long *) pmd)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#423: FILE: include/asm-s390/pgalloc.h:89:
 }
+#define pmd_free(mm, pmd) crst_table_free(mm, (unsigned long *) pmd)

CHECK:SPACING: No space is necessary after a cast
#459: FILE: include/asm-s390/pgalloc.h:123:
+#define pgd_free(mm, pgd) crst_table_free(mm, (unsigned long *) pgd)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#459: FILE: include/asm-s390/pgalloc.h:123:
 }
+#define pgd_free(mm, pgd) crst_table_free(mm, (unsigned long *) pgd)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#496: FILE: include/asm-s390/pgalloc.h:141:
+#define pmd_pgtable(pmd) \
+	(pgtable_t)(pmd_val(pmd) & -sizeof(pte_t)*PTRS_PER_PTE)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#497: FILE: include/asm-s390/pgalloc.h:142:
+	(pgtable_t)(pmd_val(pmd) & -sizeof(pte_t)*PTRS_PER_PTE)
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#511: FILE: include/asm-s390/pgalloc.h:147:
+#define pte_alloc_one_kernel(mm, vmaddr) ((pte_t *) page_table_alloc(mm))

CHECK:SPACING: No space is necessary after a cast
#512: FILE: include/asm-s390/pgalloc.h:148:
+#define pte_alloc_one(mm, vmaddr) ((pte_t *) page_table_alloc(mm))

CHECK:SPACING: No space is necessary after a cast
#514: FILE: include/asm-s390/pgalloc.h:150:
+#define pte_free_kernel(mm, pte) page_table_free(mm, (unsigned long *) pte)

CHECK:SPACING: No space is necessary after a cast
#515: FILE: include/asm-s390/pgalloc.h:151:
+#define pte_free(mm, pte) page_table_free(mm, (unsigned long *) pte)

CHECK:SPACING: No space is necessary after a cast
#755: FILE: include/asm-s390/tlbflush.h:68:
+		__tlb_flush_idte((unsigned long) mm->pgd |

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 18 checks, 661 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
