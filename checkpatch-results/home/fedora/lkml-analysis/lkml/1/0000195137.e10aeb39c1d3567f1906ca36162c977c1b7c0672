WARNING:TYPO_SPELLING: 'improvments' may be misspelled - perhaps 'improvements'?
#37: 
this patch patch are various improvments and board support by
                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'patch'
#37: 
this patch patch are various improvments and board support by

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: arch/arm/mach-omap2/board-2430sdp.c:202:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after sdp2430_i2c_boardinfo[]
#165: FILE: arch/arm/mach-omap2/board-2430sdp.c:217:
+static struct i2c_board_info __initdata sdp2430_i2c_boardinfo[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: arch/arm/mach-omap2/board-2430sdp.c:230:
+	omap_register_i2c_bus(2, 2600, sdp2430_i2c_boardinfo,
+			ARRAY_SIZE(sdp2430_i2c_boardinfo));

WARNING:MISPLACED_INIT: __initdata should be placed after ldp_i2c_boardinfo[]
#244: FILE: arch/arm/mach-omap2/board-ldp.c:129:
+static struct i2c_board_info __initdata ldp_i2c_boardinfo[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: arch/arm/mach-omap2/board-ldp.c:141:
+	omap_register_i2c_bus(1, 2600, ldp_i2c_boardinfo,
+			ARRAY_SIZE(ldp_i2c_boardinfo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: arch/arm/mach-omap2/board-omap3beagle.c:120:
+static int beagle_twl_gpio_setup(struct device *dev,
+		unsigned gpio, unsigned ngpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: arch/arm/mach-omap2/board-omap3beagle.c:120:
+		unsigned gpio, unsigned ngpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: arch/arm/mach-omap2/board-omap3beagle.c:120:
+		unsigned gpio, unsigned ngpio)

WARNING:MISPLACED_INIT: __initdata should be placed after beagle_i2c_boardinfo[]
#354: FILE: arch/arm/mach-omap2/board-omap3beagle.c:160:
+static struct i2c_board_info __initdata beagle_i2c_boardinfo[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: arch/arm/mach-omap2/board-omap3beagle.c:172:
+	omap_register_i2c_bus(1, 2600, beagle_i2c_boardinfo,
+			ARRAY_SIZE(beagle_i2c_boardinfo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: arch/arm/mach-omap2/board-omap3pandora.c:165:
+static int omap3pandora_twl_gpio_setup(struct device *dev,
+		unsigned gpio, unsigned ngpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: arch/arm/mach-omap2/board-omap3pandora.c:165:
+		unsigned gpio, unsigned ngpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: arch/arm/mach-omap2/board-omap3pandora.c:165:
+		unsigned gpio, unsigned ngpio)

WARNING:MISPLACED_INIT: __initdata should be placed after overo_i2c_boardinfo[]
#507: FILE: arch/arm/mach-omap2/board-overo.c:157:
+static struct i2c_board_info __initdata overo_i2c_boardinfo[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: arch/arm/mach-omap2/board-overo.c:169:
+	omap_register_i2c_bus(1, 2600, overo_i2c_boardinfo,
+			ARRAY_SIZE(overo_i2c_boardinfo));

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#576: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#581: FILE: arch/arm/mach-omap2/mmc-twl4030.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#582: FILE: arch/arm/mach-omap2/mmc-twl4030.c:2:
+ * linux/arch/arm/mach-omap2/mmc-twl4030.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#656: FILE: arch/arm/mach-omap2/mmc-twl4030.c:76:
+	unsigned i;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#670: FILE: arch/arm/mach-omap2/mmc-twl4030.c:90:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: arch/arm/mach-omap2/mmc-twl4030.c:227:
+	ret = twl4030_i2c_write_u8(TWL4030_MODULE_PM_RECEIVER,
+					dev_grp_val, c->twl_vmmc_dev_grp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: arch/arm/mach-omap2/mmc-twl4030.c:232:
+	ret = twl4030_i2c_write_u8(TWL4030_MODULE_PM_RECEIVER,
+					vmmc, c->twl_mmc_dedicated);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: arch/arm/mach-omap2/mmc-twl4030.c:238:
+static int twl_mmc1_set_power(struct device *dev, int slot, int power_on,
+				int vdd)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mmc)...) over kzalloc(sizeof(struct omap_mmc_platform_data)...)
#926: FILE: arch/arm/mach-omap2/mmc-twl4030.c:346:
+		mmc = kzalloc(sizeof(struct omap_mmc_platform_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#928: FILE: arch/arm/mach-omap2/mmc-twl4030.c:348:
+		if (!mmc) {
+			pr_err("Cannot allocate memory for mmc device!\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#944: FILE: arch/arm/mach-omap2/mmc-twl4030.c:364:
+		if (gpio_is_valid(c->gpio_cd)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#953: FILE: arch/arm/mach-omap2/mmc-twl4030.c:373:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#957: FILE: arch/arm/mach-omap2/mmc-twl4030.c:377:
+		if (gpio_is_valid(c->gpio_wp)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#963: FILE: arch/arm/mach-omap2/mmc-twl4030.c:383:
+		} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#995: FILE: arch/arm/mach-omap2/mmc-twl4030.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#1048: FILE: arch/arm/plat-omap/include/mach/control.h:159:
+#define OMAP2_MMCSDIO1ADPCLKISEL	(1 << 24) /* MMC1 loop back clock */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1054: FILE: arch/arm/plat-omap/include/mach/control.h:165:
+#define OMAP243X_MMC1_ACTIVE_OVERWRITE	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1055: FILE: arch/arm/plat-omap/include/mach/control.h:166:
+#define OMAP2_MMCSDIO2ADPCLKISEL	(1 << 6) /* MMC2 loop back clock */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1064: FILE: arch/arm/plat-omap/include/mach/control.h:181:
+#define OMAP343X_PBIASLITESUPPLY_HIGH1	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1065: FILE: arch/arm/plat-omap/include/mach/control.h:182:
+#define OMAP343X_PBIASLITEVMODEERROR1	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1066: FILE: arch/arm/plat-omap/include/mach/control.h:183:
+#define OMAP343X_PBIASSPEEDCTRL1	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1067: FILE: arch/arm/plat-omap/include/mach/control.h:184:
+#define OMAP343X_PBIASLITEPWRDNZ1	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1068: FILE: arch/arm/plat-omap/include/mach/control.h:185:
+#define OMAP343X_PBIASLITEVMODE1	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1069: FILE: arch/arm/plat-omap/include/mach/control.h:186:
+#define OMAP343X_PBIASLITESUPPLY_HIGH0	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1070: FILE: arch/arm/plat-omap/include/mach/control.h:187:
+#define OMAP343X_PBIASLITEVMODEERROR0	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1071: FILE: arch/arm/plat-omap/include/mach/control.h:188:
+#define OMAP2_PBIASSPEEDCTRL0		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1072: FILE: arch/arm/plat-omap/include/mach/control.h:189:
+#define OMAP2_PBIASLITEPWRDNZ0		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1073: FILE: arch/arm/plat-omap/include/mach/control.h:190:
+#define OMAP2_PBIASLITEVMODE0		(1 << 0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195137.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 28 checks, 983 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000195137.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
