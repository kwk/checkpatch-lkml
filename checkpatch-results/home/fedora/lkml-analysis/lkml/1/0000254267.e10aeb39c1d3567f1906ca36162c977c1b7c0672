WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: drivers/infiniband/hw/mlx4/main.c:136:
+	props->max_fast_reg_page_list_len = PAGE_SIZE / sizeof (u64);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *mr should be sizeof(*mr)
#180: FILE: drivers/infiniband/hw/mlx4/mr.c:193:
+	mr = kmalloc(sizeof *mr, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/infiniband/hw/mlx4/mr.c:221:
+	int size = page_list_len * sizeof (u64);

WARNING:SIZEOF_PARENTHESIS: sizeof *mfrpl should be sizeof(*mfrpl)
#213: FILE: drivers/infiniband/hw/mlx4/mr.c:226:
+	mfrpl = kmalloc(sizeof *mfrpl, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: drivers/infiniband/hw/mlx4/mr.c:249:
+	int size = page_list->max_page_list_len * sizeof (u64);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#254: FILE: drivers/infiniband/hw/mlx4/qp.c:81:
+	[IB_WR_SEND_WITH_INV]		= __constant_cpu_to_be32(MLX4_OPCODE_SEND_INVAL),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#255: FILE: drivers/infiniband/hw/mlx4/qp.c:82:
+	[IB_WR_LOCAL_INV]		= __constant_cpu_to_be32(MLX4_OPCODE_LOCAL_INVAL),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#256: FILE: drivers/infiniband/hw/mlx4/qp.c:83:
+	[IB_WR_FAST_REG_MR]		= __constant_cpu_to_be32(MLX4_OPCODE_FMR),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: drivers/infiniband/hw/mlx4/qp.c:1571:
+				wqe  += sizeof (struct mlx4_wqe_local_inval_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: drivers/infiniband/hw/mlx4/qp.c:1572:
+				size += sizeof (struct mlx4_wqe_local_inval_seg) / 16;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: drivers/infiniband/hw/mlx4/qp.c:1577:
+				wqe  += sizeof (struct mlx4_wqe_fmr_seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/infiniband/hw/mlx4/qp.c:1578:
+				size += sizeof (struct mlx4_wqe_fmr_seg) / 16;

CHECK:BIT_MACRO: Prefer using the BIT macro
#441: FILE: drivers/net/mlx4/mr.c:70:
+#define MLX4_MPT_PD_FLAG_FAST_REG   (1 << 26)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 1 checks, 426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000254267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
