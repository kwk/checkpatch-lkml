WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/atm/fore200e.c:190:
+    chunk->alloc_addr = kzalloc(chunk->alloc_size, GFP_KERNEL | GFP_DMA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/atm/fore200e.c:212:
+    kfree(chunk->alloc_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/atm/fore200e.c:866:
+    fore200e = kzalloc(sizeof(struct fore200e), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fore200e)...) over kzalloc(sizeof(struct fore200e)...)
#90: FILE: drivers/atm/fore200e.c:866:
+    fore200e = kzalloc(sizeof(struct fore200e), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/atm/fore200e.c:1489:
+    fore200e_vcc = kzalloc(sizeof(struct fore200e_vcc), GFP_ATOMIC);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fore200e_vcc)...) over kzalloc(sizeof(struct fore200e_vcc)...)
#99: FILE: drivers/atm/fore200e.c:1489:
+    fore200e_vcc = kzalloc(sizeof(struct fore200e_vcc), GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/atm/fore200e.c:1614:
+    kfree(fore200e_vcc);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fore200e->stats)...) over kzalloc(sizeof(struct stats)...)
#135: FILE: drivers/atm/fore200e.c:1815:
+	fore200e->stats = kzalloc(sizeof(struct stats), GFP_KERNEL | GFP_DMA);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/atm/fore200e.c:1994:
+    tmp.section_bip = cpu_to_be32(fore200e->stats->oc3.section_bip8_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/atm/fore200e.c:1995:
+    tmp.line_bip    = cpu_to_be32(fore200e->stats->oc3.line_bip24_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/atm/fore200e.c:1996:
+    tmp.path_bip    = cpu_to_be32(fore200e->stats->oc3.path_bip8_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/atm/fore200e.c:1997:
+    tmp.line_febe   = cpu_to_be32(fore200e->stats->oc3.line_febe_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/atm/fore200e.c:1998:
+    tmp.path_febe   = cpu_to_be32(fore200e->stats->oc3.path_febe_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/atm/fore200e.c:1999:
+    tmp.corr_hcs    = cpu_to_be32(fore200e->stats->oc3.corr_hcs_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/atm/fore200e.c:2000:
+    tmp.uncorr_hcs  = cpu_to_be32(fore200e->stats->oc3.ucorr_hcs_errors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/atm/fore200e.c:2001:
+    tmp.tx_cells    = cpu_to_be32(fore200e->stats->aal0.cells_transmitted)  +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/atm/fore200e.c:2002:
+^I              cpu_to_be32(fore200e->stats->aal34.cells_transmitted) +$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/atm/fore200e.c:2003:
+^I              cpu_to_be32(fore200e->stats->aal5.cells_transmitted);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/atm/fore200e.c:2004:
+    tmp.rx_cells    = cpu_to_be32(fore200e->stats->aal0.cells_received)     +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/atm/fore200e.c:2005:
+^I              cpu_to_be32(fore200e->stats->aal34.cells_received)    +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/atm/fore200e.c:2006:
+^I              cpu_to_be32(fore200e->stats->aal5.cells_received);$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#191: FILE: drivers/atm/fore200e.c:2116:
 static int __devinit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/atm/fore200e.c:2119:
+    struct prom_data* prom = kzalloc(sizeof(struct prom_data), GFP_KERNEL | GFP_DMA);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: drivers/atm/fore200e.c:2119:
+    struct prom_data* prom = kzalloc(sizeof(struct prom_data), GFP_KERNEL | GFP_DMA);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*prom)...) over kzalloc(sizeof(struct prom_data)...)
#195: FILE: drivers/atm/fore200e.c:2119:
+    struct prom_data* prom = kzalloc(sizeof(struct prom_data), GFP_KERNEL | GFP_DMA);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/atm/fore200e.c:2142:
+    kfree(prom);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#222: FILE: drivers/atm/fore200e.c:2167:
+	    buffer = bsq->buffer = kzalloc(nbr * sizeof(struct buffer), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/atm/fore200e.c:2709:
+    fore200e = kzalloc(sizeof(struct fore200e), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fore200e)...) over kzalloc(sizeof(struct fore200e)...)
#240: FILE: drivers/atm/fore200e.c:2709:
+    fore200e = kzalloc(sizeof(struct fore200e), GFP_KERNEL);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.08070.commit.4d7a6e5e9e326ddaa6e8107d76c55f4ef4a304dd total: 5 errors, 18 warnings, 6 checks, 310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.08070.commit.4d7a6e5e9e326ddaa6e8107d76c55f4ef4a304dd has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
