WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: include/linux/rcuclassic.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: include/linux/rcuclassic.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: include/linux/rcuclassic.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: include/linux/rcuclassic.h:21:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: include/linux/rcuclassic.h:29:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: include/linux/rcuclassic.h:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: include/linux/rcuclassic.h:54:
+^I                         /* for current batch to proceed.        */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: include/linux/rcuclassic.h:60:
+        return (a - b) < 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/linux/rcuclassic.h:60:
+        return (a - b) < 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: include/linux/rcuclassic.h:66:
+        return (a - b) > 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: include/linux/rcuclassic.h:66:
+        return (a - b) > 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: include/linux/rcuclassic.h:81:
+^Ilong  ^I       ^Ibatch;           /* Batch # for current RCU batch */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: include/linux/rcuclassic.h:84:
+^Ilong            qlen; ^I ^I /* # of queued callbacks */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: include/linux/rcuclassic.h:108:
+	struct rcu_data *rdp = &per_cpu(rcu_data, cpu);
+	rdp->passed_quiesc = 1;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#161: FILE: include/linux/rcuclassic.h:110:
+}
+static inline void rcu_bh_qsctr_inc(int cpu)

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: include/linux/rcuclassic.h:113:
+	struct rcu_data *rdp = &per_cpu(rcu_bh_data, cpu);
+	rdp->passed_quiesc = 1;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/linux/rcuclassic.h:116:
+extern int rcu_pending(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/linux/rcuclassic.h:117:
+extern int rcu_needs_cpu(int cpu);

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: include/linux/rcuclassic.h:123:
+	} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: include/linux/rcuclassic.h:128:
+	} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: include/linux/rcuclassic.h:134:
+	} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#190: FILE: include/linux/rcuclassic.h:139:
+	} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/rcuclassic.h:143:
+extern void __rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/rcuclassic.h:144:
+extern void rcu_check_callbacks(int cpu, int user);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/rcuclassic.h:145:
+extern void rcu_restart_cpu(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/rcuclassic.h:146:
+extern long rcu_batches_completed(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: include/linux/rcupdate.h:123:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: include/linux/rcupdate.h:123:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: include/linux/rcupdate.h:130:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/linux/rcupdate.h:130:
+  $

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#353: FILE: include/linux/rcupdate.h:181:
+#define synchronize_sched()	__synchronize_sched()

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: include/linux/rcupdate.h:182:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/linux/rcupdate.h:182:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: include/linux/rcupdate.h:194:
+extern void FASTCALL(call_rcu(struct rcu_head *head, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: include/linux/rcupdate.h:194:
+extern void FASTCALL(call_rcu(struct rcu_head *head, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: include/linux/rcupdate.h:195:
+  ^I^I^I^Ivoid (*func)(struct rcu_head *head)));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: include/linux/rcupdate.h:195:
+  ^I^I^I^Ivoid (*func)(struct rcu_head *head)));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: include/linux/rcupdate.h:195:
+extern void FASTCALL(call_rcu(struct rcu_head *head, 
+  				void (*func)(struct rcu_head *head)));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: include/linux/rcupdate.h:195:
+  ^I^I^I^Ivoid (*func)(struct rcu_head *head)));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: include/linux/rcupdate.h:220:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: include/linux/rcupdate.h:220:
+  $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/linux/rcupdate.h:222:
+extern void rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/rcupdate.h:223:
+extern void rcu_check_callbacks(int cpu, int user);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#424: FILE: kernel/rcuclassic.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#438: FILE: kernel/rcuclassic.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#439: FILE: kernel/rcuclassic.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: kernel/rcuclassic.c:22:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: kernel/rcuclassic.c:29:
+ * ^I^IDocumentation/RCU/ *.txt$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#463: FILE: kernel/rcuclassic.c:40:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#476: FILE: kernel/rcuclassic.c:53:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#484: FILE: kernel/rcuclassic.c:61:
+};
+static struct rcu_ctrlblk rcu_bh_ctrlblk = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: kernel/rcuclassic.c:82:
+static void force_quiescent_state(struct rcu_data *rdp,
+			struct rcu_ctrlblk *rcp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#509: FILE: kernel/rcuclassic.c:86:
+	cpumask_t cpumask;
+	set_need_resched();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: kernel/rcuclassic.c:101:
+static inline void force_quiescent_state(struct rcu_data *rdp,
+			struct rcu_ctrlblk *rcp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: kernel/rcuclassic.c:119:
+void fastcall call_rcu(struct rcu_head *head,
+				void (*func)(struct rcu_head *rcu))

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#576: FILE: kernel/rcuclassic.c:153:
+void fastcall call_rcu_bh(struct rcu_head *head,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: kernel/rcuclassic.c:154:
+void fastcall call_rcu_bh(struct rcu_head *head,
+				void (*func)(struct rcu_head *rcu))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#626: FILE: kernel/rcuclassic.c:203:
+		next = rdp->donelist = list->next;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: kernel/rcuclassic.c:244:
+	if (rcp->next_pending &&
+			rcp->completed == rcp->cur) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#685: FILE: kernel/rcuclassic.c:262:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: kernel/rcuclassic.c:286:
+static void rcu_check_quiescent_state(struct rcu_ctrlblk *rcp,
+					struct rcu_data *rdp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: kernel/rcuclassic.c:303:
+^I/* $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#745: FILE: kernel/rcuclassic.c:322:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: kernel/rcuclassic.c:330:
+static void rcu_move_batch(struct rcu_data *this_rdp, struct rcu_head *list,
+				struct rcu_head **tail)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: kernel/rcuclassic.c:340:
+static void __rcu_offline_cpu(struct rcu_data *this_rdp,
+				struct rcu_ctrlblk *rcp, struct rcu_data *rdp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: kernel/rcuclassic.c:361:
+	__rcu_offline_cpu(this_rdp, &rcu_ctrlblk,
+					&per_cpu(rcu_data, cpu));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#786: FILE: kernel/rcuclassic.c:363:
+	__rcu_offline_cpu(this_bh_rdp, &rcu_bh_ctrlblk,
+					&per_cpu(rcu_bh_data, cpu));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: kernel/rcuclassic.c:378:
+ * This does the RCU processing work from tasklet context. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: kernel/rcuclassic.c:381:
+static void __rcu_process_callbacks(struct rcu_ctrlblk *rcp,
+					struct rcu_data *rdp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: kernel/rcuclassic.c:480:
+^Iif (user || $

CHECK:BRACES: braces {} should be used on all arms of this statement
#903: FILE: kernel/rcuclassic.c:480:
+	if (user || 
[...]
+	} else if (!in_softirq())
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: kernel/rcuclassic.c:481:
+^I    (idle_cpu(cpu) && !in_softirq() && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: kernel/rcuclassic.c:491:
+static void rcu_init_percpu_data(int cpu, struct rcu_ctrlblk *rcp,
+						struct rcu_data *rdp)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#926: FILE: kernel/rcuclassic.c:503:
+static void __devinit rcu_online_cpu(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#936: FILE: kernel/rcuclassic.c:513:
+static int __devinit rcu_cpu_notify(struct notifier_block *self,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: kernel/rcuclassic.c:514:
+static int __devinit rcu_cpu_notify(struct notifier_block *self,
+				unsigned long action, void *hcpu)

WARNING:LINE_SPACING: Missing a blank line after declarations
#940: FILE: kernel/rcuclassic.c:517:
+	long cpu = (long)hcpu;
+	switch (action) {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#953: FILE: kernel/rcuclassic.c:530:
+static struct notifier_block __devinitdata rcu_nb = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after rcu_nb
#953: FILE: kernel/rcuclassic.c:530:
+static struct notifier_block __devinitdata rcu_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: kernel/rcuclassic.c:543:
+	rcu_cpu_notify(&rcu_nb, CPU_UP_PREPARE,
+			(void *)(long)smp_processor_id());

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#978: FILE: kernel/rcuclassic.c:555:
+EXPORT_SYMBOL_GPL(rcu_batches_completed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#979: FILE: kernel/rcuclassic.c:556:
+EXPORT_SYMBOL_GPL(rcu_batches_completed_bh);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#980: FILE: kernel/rcuclassic.c:557:
+EXPORT_SYMBOL_GPL(call_rcu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#981: FILE: kernel/rcuclassic.c:558:
+EXPORT_SYMBOL_GPL(call_rcu_bh);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: kernel/rcupdate.c:83:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: kernel/rcupdate.c:83:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1160: FILE: kernel/rcupdate.c:87:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: kernel/rcupdate.c:87:
+ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1589: FILE: kernel/rcupdate.c:130:
+EXPORT_SYMBOL_GPL(rcu_barrier);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43326.commit.ee47f4b10aae8e29982989322fce6eca4a121ab2 total: 25 errors, 32 warnings, 32 checks, 1517 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43326.commit.ee47f4b10aae8e29982989322fce6eca4a121ab2 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
