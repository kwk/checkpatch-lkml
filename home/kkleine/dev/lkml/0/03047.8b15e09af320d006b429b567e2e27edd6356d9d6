WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

CHECK:CAMELCASE: Avoid CamelCase: <NvRegReceiverControl>
#145: FILE: drivers/net/forcedeth.c:1174:
+	u32 rx_ctrl = readl(base + NvRegReceiverControl);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/net/forcedeth.c:1185:
+        rx_ctrl |= NVREG_RCVCTL_START;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/net/forcedeth.c:1185:
+        rx_ctrl |= NVREG_RCVCTL_START;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/net/forcedeth.c:1186:
+        if (np->mac_in_use)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/net/forcedeth.c:1186:
+        if (np->mac_in_use)$

CHECK:CAMELCASE: Avoid CamelCase: <NvRegLinkSpeed>
#188: FILE: drivers/net/forcedeth.c:1212:
+		writel(0, base + NvRegLinkSpeed);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTransmitterControl>
#195: FILE: drivers/net/forcedeth.c:1219:
+	u32 tx_ctrl = readl(base + NvRegTransmitterControl);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTransmitPoll>
#226: FILE: drivers/net/forcedeth.c:1247:
+		writel(readl(base + NvRegTransmitPoll) & NVREG_TRANSMITPOLL_MAC_ADDR_REV,

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#275: FILE: drivers/net/forcedeth.c:4677:
+			np->mac_in_use = readl(base + NvRegTransmitterControl) & NVREG_XMITCTL_MGMT_ST;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#276: FILE: drivers/net/forcedeth.c:4678:
+			dprintk(KERN_INFO "%s: mgmt unit is running. mac in use %x.\n", pci_name(pci_dev), np->mac_in_use);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#278: FILE: drivers/net/forcedeth.c:4680:
+				msleep(1);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#281: FILE: drivers/net/forcedeth.c:4683:
+					if ((readl(base + NvRegTransmitterControl) & NVREG_XMITCTL_SYNC_MASK) ==

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#285: FILE: drivers/net/forcedeth.c:4687:
+						dprintk(KERN_INFO "%s: Phy already initialized by mgmt unit.\n", pci_name(pci_dev));

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: drivers/net/forcedeth.c:4734:
+		u32 mii_status = mii_rw(dev, np->phyaddr, MII_BMSR, MII_READ);
+		if (mii_status & PHY_GIGABIT) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#312: FILE: drivers/net/forcedeth.c:4734:
+		if (mii_status & PHY_GIGABIT) {
+			np->gigabit = PHY_GIGABIT;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#385: FILE: drivers/net/ixgb/ixgb_main.c:39:
+#define DRV_VERSION		"1.0.126-k2"DRIVERNAPI

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: drivers/net/ixgb/ixgb_main.c:1303:
+		 * in TSO mode.  Append 4-byte sentinel desc */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#415: FILE: drivers/net/ixgb/ixgb_main.c:1335:
+			 * in TSO mode.  Append 4-byte sentinel desc */

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/net/ixgb/ixgb_main.c:1337:
+^I^I^I             && size > 8))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#417: FILE: drivers/net/ixgb/ixgb_main.c:1337:
+			if (unlikely(mss && !nr_frags && size == len
+			             && size > 8))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: drivers/net/ixgb/ixgb_main.c:1422:
+	 * but since that doesn't exist yet, just open code it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#439: FILE: drivers/net/ixgb/ixgb_main.c:1426:
+	 * made room available. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: drivers/net/ixgb/ixgb_main.c:1437:
+                              struct ixgb_desc_ring *tx_ring, int size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/net/ixgb/ixgb_main.c:1437:
+                              struct ixgb_desc_ring *tx_ring, int size)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#457: FILE: drivers/net/ixgb/ixgb_main.c:1444:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#463: FILE: drivers/net/ixgb/ixgb_main.c:1448:
+#define DESC_NEEDED TXD_USE_COUNT(IXGB_MAX_DATA_PER_TXD) /* skb->date */ + \
+	MAX_SKB_FRAGS * TXD_USE_COUNT(PAGE_SIZE) + 1 /* for context */ \
+	+ 1 /* one more needed for sentinel TSO workaround */

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/net/ixgb/ixgb_main.c:1479:
+                     DESC_NEEDED))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/net/ixgb/ixgb_main.c:1479:
+	if (unlikely(ixgb_maybe_stop_tx(netdev, &adapter->tx_ring,
+                     DESC_NEEDED))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/net/ixgb/ixgb_main.c:1479:
+                     DESC_NEEDED))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/net/qla3xxx.c:212:
+static void ql_write_nvram_reg(struct ql3_adapter *qdev,
+				u32 __iomem *reg, u32 value)

WARNING:RETURN_VOID: void function return statements are not generally useful
#524: FILE: drivers/net/qla3xxx.c:218:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <CommonRegs>
#534: FILE: drivers/net/qla3xxx.c:348:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,

CHECK:CAMELCASE: Avoid CamelCase: <serialPortInterfaceReg>
#534: FILE: drivers/net/qla3xxx.c:348:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/net/qla3xxx.c:349:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ISP_NVRAM_MASK | qdev->eeprom_cmd_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/net/qla3xxx.c:351:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ((ISP_NVRAM_MASK << 16) | qdev->eeprom_cmd_data));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/net/qla3xxx.c:368:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ISP_NVRAM_MASK | qdev->eeprom_cmd_data |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/net/qla3xxx.c:371:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ISP_NVRAM_MASK | qdev->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/net/qla3xxx.c:375:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ISP_NVRAM_MASK | qdev->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/net/qla3xxx.c:391:
+			ql_write_nvram_reg(qdev,
 					    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: drivers/net/qla3xxx.c:398:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/net/qla3xxx.c:404:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/net/qla3xxx.c:425:
+			ql_write_nvram_reg(qdev,
 					    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/net/qla3xxx.c:432:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: drivers/net/qla3xxx.c:438:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/net/qla3xxx.c:456:
+	ql_write_nvram_reg(qdev, &port_regs->CommonRegs.serialPortInterfaceReg,
 			    ISP_NVRAM_MASK | qdev->eeprom_cmd_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: drivers/net/qla3xxx.c:474:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: drivers/net/qla3xxx.c:479:
+		ql_write_nvram_reg(qdev,
 				    &port_regs->CommonRegs.

WARNING:SPACING: space prohibited before semicolon
#847: FILE: drivers/s390/net/qeth_main.c:1817:
+	while (atomic_cmpxchg(&card->write.irq_pending, 0, 1)) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#847: FILE: drivers/s390/net/qeth_main.c:1817:
+	while (atomic_cmpxchg(&card->write.irq_pending, 0, 1)) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:BRACES: Unbalanced braces around else statement
#978: FILE: drivers/s390/net/qeth_main.c:4931:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1014: FILE: drivers/s390/net/qeth_main.c:6300:
+	/* cause of the manipulated arp constructor and the ARP
+	   flag for OSAE devices we have some nasty exceptions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1014: FILE: drivers/s390/net/qeth_main.c:6300:
+	   flag for OSAE devices we have some nasty exceptions */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1017: FILE: drivers/s390/net/qeth_main.c:6303:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
 			                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->pkt_type==PACKET_OUTGOING'
#1017: FILE: drivers/s390/net/qeth_main.c:6303:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
+			    (skb->protocol==ETH_P_IPV6))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->protocol==ETH_P_IPV6'
#1017: FILE: drivers/s390/net/qeth_main.c:6303:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
+			    (skb->protocol==ETH_P_IPV6))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1018: FILE: drivers/s390/net/qeth_main.c:6304:
+			    (skb->protocol==ETH_P_IPV6))
 			                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1023: FILE: drivers/s390/net/qeth_main.c:6309:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
 			                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->pkt_type==PACKET_OUTGOING'
#1023: FILE: drivers/s390/net/qeth_main.c:6309:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
+			    (skb->protocol==ETH_P_IP))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->protocol==ETH_P_IP'
#1023: FILE: drivers/s390/net/qeth_main.c:6309:
+			if ((skb->pkt_type==PACKET_OUTGOING) &&
+			    (skb->protocol==ETH_P_IP))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1024: FILE: drivers/s390/net/qeth_main.c:6310:
+			    (skb->protocol==ETH_P_IP))
 			                  ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1026: FILE: drivers/s390/net/qeth_main.c:6312:
+				return 0;
+			else

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.03047.commit.8b15e09af320d006b429b567e2e27edd6356d9d6 total: 11 errors, 21 warnings, 30 checks, 923 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.03047.commit.8b15e09af320d006b429b567e2e27edd6356d9d6 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
