WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#363: FILE: drivers/pci/pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#379: FILE: drivers/pci/pm.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#410: FILE: drivers/pci/pm.c:48:
+	for (i = 0; i < numres; i ++)
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#414: FILE: drivers/pci/pm.c:52:
+EXPORT_SYMBOL_GPL(pci_restore_bars);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#425: FILE: drivers/pci/pm.c:63:
+		pci_read_config_dword(dev, i * 4,&dev->saved_config_space[i]);
 		                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#425: FILE: drivers/pci/pm.c:63:
+		pci_read_config_dword(dev, i * 4,&dev->saved_config_space[i]);
 		                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#426: FILE: drivers/pci/pm.c:64:
+	if ((i = pci_save_msi_state(dev)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#428: FILE: drivers/pci/pm.c:66:
+	if ((i = pci_save_msix_state(dev)) != 0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#433: FILE: drivers/pci/pm.c:71:
+EXPORT_SYMBOL(pci_save_state);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/pci/pm.c:82:
+		pci_write_config_dword(dev,i * 4, dev->saved_config_space[i]);
 		                          ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#450: FILE: drivers/pci/pm.c:88:
+EXPORT_SYMBOL(pci_restore_state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: drivers/pci/pm.c:90:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: drivers/pci/pm.c:102:
+ * Transition a device to a new power state, using the Power Management $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: drivers/pci/pm.c:105:
+ * RETURN VALUE: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: drivers/pci/pm.c:121:
+^I * Can enter D0 from any state, but if we can only go deeper $

CHECK:BRACES: braces {} should be used on all arms of this statement
#486: FILE: drivers/pci/pm.c:124:
+	if (state != PCI_D0 && dev->current_state > state) {
[...]
+	} else if (dev->current_state == state)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#487: FILE: drivers/pci/pm.c:125:
+		printk(KERN_ERR "%s(): %s: state=%d, current state=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/pci/pm.c:126:
+		printk(KERN_ERR "%s(): %s: state=%d, current state=%d\n",
+			__FUNCTION__, pci_name(dev), state, dev->current_state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#488: FILE: drivers/pci/pm.c:126:
+			__FUNCTION__, pci_name(dev), state, dev->current_state);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: drivers/pci/pm.c:133:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: drivers/pci/pm.c:136:
+^I^Ireturn -EIO; $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#500: FILE: drivers/pci/pm.c:138:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#500: FILE: drivers/pci/pm.c:138:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#500: FILE: drivers/pci/pm.c:138:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#502: FILE: drivers/pci/pm.c:140:
+		printk(KERN_DEBUG

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#529: FILE: drivers/pci/pm.c:167:
+		if ((pmcsr & PCI_PM_CTRL_STATE_MASK) == PCI_D3hot
+		 && !(pmcsr & PCI_PM_CTRL_NO_SOFT_RESET))

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#531: FILE: drivers/pci/pm.c:169:
+		/* Fall-through: force to D0 */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#543: FILE: drivers/pci/pm.c:181:
+		msleep(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#545: FILE: drivers/pci/pm.c:183:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#574: FILE: drivers/pci/pm.c:212:
+EXPORT_SYMBOL(pci_set_power_state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#576: FILE: drivers/pci/pm.c:214:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#608: FILE: drivers/pci/pm.c:246:
+		printk("They asked me for state %d\n", state.event);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#609: FILE: drivers/pci/pm.c:247:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#614: FILE: drivers/pci/pm.c:252:
+EXPORT_SYMBOL(pci_choose_state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: drivers/pci/pm.c:254:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: drivers/pci/pm.c:266:
+ * the system is suspended. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: drivers/pci/pm.c:268:
+ * -EIO is returned if device doesn't have PM Capabilities. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: drivers/pci/pm.c:282:
+	 * wake events, it's a nop; otherwise fail */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/pci/pm.c:283:
+^Iif (!pm) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: drivers/pci/pm.c:284:
+^I^Ireturn enable ? -EIO : 0; $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: drivers/pci/pm.c:287:
+	pci_read_config_word(dev,pm+PCI_PM_PMC,&value);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: drivers/pci/pm.c:287:
+	pci_read_config_word(dev,pm+PCI_PM_PMC,&value);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#649: FILE: drivers/pci/pm.c:287:
+	pci_read_config_word(dev,pm+PCI_PM_PMC,&value);
 	                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#649: FILE: drivers/pci/pm.c:287:
+	pci_read_config_word(dev,pm+PCI_PM_PMC,&value);
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/pci/pm.c:293:
+^Iif (!value || !(value & (1 << state))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: drivers/pci/pm.c:305:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#671: FILE: drivers/pci/pm.c:309:
+EXPORT_SYMBOL(pci_enable_wake);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62187.commit.ecebdca992bb5be4ba81ce2d94069317133ea9cb total: 23 errors, 15 warnings, 9 checks, 620 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62187.commit.ecebdca992bb5be4ba81ce2d94069317133ea9cb has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
