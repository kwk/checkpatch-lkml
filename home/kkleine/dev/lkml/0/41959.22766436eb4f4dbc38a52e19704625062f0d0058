WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#74: FILE: fs/lockd/host.c:37:
+static struct nsm_handle *	__nsm_find(const struct sockaddr_in *,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: fs/lockd/host.c:38:
+static struct nsm_handle *	__nsm_find(const struct sockaddr_in *,
+					const char *, int, int);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#104: FILE: fs/lockd/host.c:103:
+		if (!nsm && (nsm = host->h_nsmhandle) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#128: FILE: fs/lockd/host.c:128:
+	if (!nsm && !(nsm = nsm_find(sin, hostname, hostname_len)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: fs/lockd/host.c:415:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/lockd/host.c:424:
+__nsm_find(const struct sockaddr_in *sin,
+		const char *hostname, int hostname_len,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "memchr"
#185: FILE: fs/lockd/host.c:433:
+	if (hostname && memchr(hostname, '/', hostname_len) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#186: FILE: fs/lockd/host.c:434:
+		if (printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#187: FILE: fs/lockd/host.c:435:
+			printk(KERN_WARNING "Invalid hostname \"%.*s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: fs/lockd/host.c:436:
+			printk(KERN_WARNING "Invalid hostname \"%.*s\" "
+					    "in NFS lock request\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nsm"
#210: FILE: fs/lockd/host.c:458:
+	if (nsm != NULL) {

CHECK:SPACING: No space is necessary after a cast
#212: FILE: fs/lockd/host.c:460:
+		nsm->sm_name = (char *) (nsm + 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: fs/lockd/mon.c:78:
+	BUG_ON(nsm == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nsm"
#261: FILE: fs/lockd/mon.c:78:
+	BUG_ON(nsm == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nsm"
#286: FILE: fs/lockd/mon.c:103:
+	if (nsm == NULL)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#310: FILE: include/linux/lockd/lockd.h:43:
+	char *			h_name;		/* remote hostname */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#326: FILE: include/linux/lockd/lockd.h:63:
+	struct nsm_handle *	h_nsmhandle;	/* NSM status handle */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#332: FILE: include/linux/lockd/lockd.h:69:
+	char *			sm_name;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct sockaddr_in *' should also have an identifier name
#343: FILE: include/linux/lockd/lockd.h:183:
+struct nsm_handle *nsm_find(const struct sockaddr_in *, const char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#343: FILE: include/linux/lockd/lockd.h:183:
+struct nsm_handle *nsm_find(const struct sockaddr_in *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#343: FILE: include/linux/lockd/lockd.h:183:
+struct nsm_handle *nsm_find(const struct sockaddr_in *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nsm_handle *' should also have an identifier name
#344: FILE: include/linux/lockd/lockd.h:184:
+void		  nsm_release(struct nsm_handle *);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.41959.commit.22766436eb4f4dbc38a52e19704625062f0d0058 total: 6 errors, 12 warnings, 8 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.41959.commit.22766436eb4f4dbc38a52e19704625062f0d0058 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
