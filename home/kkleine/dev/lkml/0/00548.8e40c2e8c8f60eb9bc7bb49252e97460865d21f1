WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   > this is a new 2.6.20 module implementing a user inactivity trigger. Ba=

WARNING:TYPO_SPELLING: 'Ba' may be misspelled - perhaps 'By'?
#38: 
   > this is a new 2.6.20 module implementing a user inactivity trigger. Ba=
                                                                         ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#99: FILE: procfs.c:173:
+	if (!interact) {
+		goto cleanout9;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#103: FILE: procfs.c:177:
+	interact->data = (void *) simulate_interaction;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: sin.c:189:
+	printk("System Inactivity Notifier 1.2 - (c) Alessandro Di Marco <dmr@c0nc3pt.com>\n");

CHECK:SPACING: No space is necessary after a cast
#201: FILE: sin.c:196:
+	(void) stop_monitor();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: sin.h:29:
+extern void signal_interaction(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#246: FILE: table.c:58:
+		if (unlikely(rt.debug)) {
 			printk("user activity detected, counter reset!\n");
 		}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#283: FILE: table.c:105:
+	counter = action = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: table.c:157:
+	nrt.devices = kmalloc(nrt.dnum * sizeof (int), GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: table.c:158:
+	if (!nrt.devices) {
 		goto out;
 	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: table.c:162:
+	nrt.rules = kmalloc((nrt.rnum + 1) * sizeof (struct rule), GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#329: FILE: table.c:163:
+	if (!nrt.rules) {
 		goto cleanout1;
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#342: FILE: table.c:173:
+		if (uniq_check(&uniq, nrt.devices[i])) {
 			break;
 		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: table.c:208:
+	sort(nrt.rules, nrt.rnum, sizeof (struct rule), cmp, swap);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#425: FILE: table.c:234:
+	for (i = 0; i < nrt.dnum; i++) {
+		fill_input_device(&idi[i], nrt.devices[i]);
 	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: table.c:238:
+	memcpy(&rt, &nrt, sizeof (struct table));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: table.c:292:
+	memset(&rt, 0, sizeof (struct table));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#468: FILE: table.c:294:
+	counter = action = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: table.h:54:
+	if (memcmp(l->devices, r->devices, l->dnum * sizeof (int))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#496: FILE: table.h:54:
+	if (memcmp(l->devices, r->devices, l->dnum * sizeof (int))) {
+		return 1;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: table.h:58:
+	if (memcmp(l->rules, r->rules, l->rnum * sizeof (struct rule))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#500: FILE: table.h:58:
+	if (memcmp(l->rules, r->rules, l->rnum * sizeof (struct rule))) {
+		return 1;
+	}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: table.h:78:
+extern void cleanup_table(void);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00548.commit.8e40c2e8c8f60eb9bc7bb49252e97460865d21f1 total: 0 errors, 18 warnings, 6 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00548.commit.8e40c2e8c8f60eb9bc7bb49252e97460865d21f1 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
