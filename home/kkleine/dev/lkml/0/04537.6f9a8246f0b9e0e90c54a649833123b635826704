WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
When we cache a guest page table into a shadow page table, we need to prevent

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#46: FILE: drivers/kvm/mmu.c:285:
+	BUG_ON(!slot);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#50: FILE: drivers/kvm/mmu.c:289:
+		if (!(page->private & 1))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#52: FILE: drivers/kvm/mmu.c:291:
+		else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#56: FILE: drivers/kvm/mmu.c:295:
+		BUG_ON(!spte);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#57: FILE: drivers/kvm/mmu.c:296:
+		BUG_ON((*spte & PT64_BASE_ADDR_MASK) !=

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: drivers/kvm/mmu.c:298:
+		BUG_ON(!(*spte & PT_PRESENT_MASK));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#60: FILE: drivers/kvm/mmu.c:299:
+		BUG_ON(!(*spte & PT_WRITABLE_MASK));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rmap_write_protect', this function's name, in a string
#61: FILE: drivers/kvm/mmu.c:300:
+		rmap_printk("rmap_write_protect: spte %p %llx\n", spte, *spte);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#83: FILE: drivers/kvm/mmu.c:739:
+	pgprintk("%s: cr3 %lx\n", __FUNCTION__, vcpu->cr3);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#132: FILE: drivers/kvm/mmu.c:785:
+				 __FUNCTION__, (gfn_t)(gaddr >> PAGE_SHIFT));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#154: FILE: drivers/kvm/paging_tmpl.h:136:
+	pgprintk("%s: pte %llx\n", __FUNCTION__, (u64)*ptep);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04537.commit.6f9a8246f0b9e0e90c54a649833123b635826704 total: 0 errors, 10 warnings, 2 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04537.commit.6f9a8246f0b9e0e90c54a649833123b635826704 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
