WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#46: FILE: fs/namei.c:1930:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#72: FILE: fs/namei.c:1937:
+	error = do_path_lookup(dfd, tmp, LOOKUP_PARENT, &nd);
 	                                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#75: FILE: fs/namei.c:1940:
+	dentry = lookup_create(&nd, 1);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#80: FILE: fs/namei.c:1945:
+	if (!IS_POSIXACL(nd.dentry->d_inode))
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#82: FILE: fs/namei.c:1947:
+	error = vfs_mkdir(nd.dentry->d_inode, dentry, mode);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#85: FILE: fs/namei.c:1950:
+	mutex_unlock(&nd.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#86: FILE: fs/namei.c:1951:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#103: FILE: fs/namei.c:2055:
+	error = vfs_rmdir(nd.dentry->d_inode, dentry);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#114: FILE: fs/namei.c:2198:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: fs/namei.c:2208:
+	error = do_path_lookup(newdfd, to, LOOKUP_PARENT, &nd);
 	                                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#141: FILE: fs/namei.c:2211:
+	dentry = lookup_create(&nd, 0);
 	                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#146: FILE: fs/namei.c:2216:
+	error = vfs_symlink(nd.dentry->d_inode, dentry, from, S_IALLUGO);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#149: FILE: fs/namei.c:2219:
+	mutex_unlock(&nd.dentry->d_inode->i_mutex);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#150: FILE: fs/namei.c:2220:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#169: FILE: fs/namei.c:2311:
+	error = vfs_link(old_nd.dentry, nd.dentry->d_inode, new_dentry);
 	                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#193: FILE: fs/open.c:526:
+	res = vfs_permission(&nd, mode);
 	                      ^^

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: fs/open.c:528:
+	if(res || !(mode & S_IWOTH) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWOTH' are not preferred. Consider using octal permissions '0002'.
#195: FILE: fs/open.c:528:
+	if(res || !(mode & S_IWOTH) ||

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#196: FILE: fs/open.c:529:
+	   special_file(nd.dentry->d_inode->i_mode))
 	                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#199: FILE: fs/open.c:532:
+	if(IS_RDONLY(nd.dentry->d_inode))
 	             ^^

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: fs/open.c:532:
+	if(IS_RDONLY(nd.dentry->d_inode))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#203: FILE: fs/open.c:536:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#218: FILE: fs/open.c:748:
+	error = chown_common(nd.dentry, user, group);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#219: FILE: fs/open.c:749:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#234: FILE: fs/open.c:768:
+	error = chown_common(nd.dentry, user, group);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#235: FILE: fs/open.c:769:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#249: FILE: fs/open.c:782:
+	error = chown_common(nd.dentry, user, group);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#250: FILE: fs/open.c:783:
+	path_release(&nd);
 	              ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: fs/open.c:793:
+	struct dentry * dentry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49626.commit.f6e24dc9475f3445474baaf2769bb94d11ca34b0 total: 3 errors, 26 warnings, 0 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49626.commit.f6e24dc9475f3445474baaf2769bb94d11ca34b0 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
