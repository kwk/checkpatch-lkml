WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#73: FILE: fs/nfsd/nfsctl.c:370:
+extern int nfsd_get_nrthreads(int n, int *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#73: FILE: fs/nfsd/nfsctl.c:370:
+extern int nfsd_get_nrthreads(int n, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#74: FILE: fs/nfsd/nfsctl.c:371:
+extern int nfsd_set_nrthreads(int n, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#74: FILE: fs/nfsd/nfsctl.c:371:
+extern int nfsd_set_nrthreads(int n, int *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/nfsd/nfsctl.c:382:
+    ^Iint npools = nfsd_nrpools();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: fs/nfsd/nfsctl.c:382:
+    ^Iint npools = nfsd_nrpools();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/nfsd/nfsctl.c:382:
+    ^Iint npools = nfsd_nrpools();$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nthreads"
#99: FILE: fs/nfsd/nfsctl.c:396:
+	if (nthreads == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: fs/nfsd/nfsctl.c:422:
+		snprintf(mesg, size, "%d%c", nthreads[i], (i == npools-1 ? '\n' : ' '));
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#131: FILE: fs/nfsd/nfsctl.c:428:
+	return (mesg-buf);
 	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#145: FILE: fs/nfsd/nfsctl.c:616:
+		[NFSD_Pool_Threads] = {"pool_threads", &transaction_ops, S_IWUSR|S_IRUSR},
 		                                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUSR' are not preferred. Consider using octal permissions '0600'.
#145: FILE: fs/nfsd/nfsctl.c:616:
+		[NFSD_Pool_Threads] = {"pool_threads", &transaction_ops, S_IWUSR|S_IRUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfsd_serv"
#159: FILE: fs/nfsd/nfssvc.c:243:
+	if (nfsd_serv == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nfsd_serv"
#169: FILE: fs/nfsd/nfssvc.c:253:
+	if (nfsd_serv != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfsd_serv"
#183: FILE: fs/nfsd/nfssvc.c:267:
+	if (nfsd_serv == NULL || n <= 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: fs/nfsd/nfssvc.c:283:
+^I^I    ^Iint new = nthreads[i] * NFSD_MAXSERVS / tot;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: fs/nfsd/nfssvc.c:283:
+^I^I    ^Iint new = nthreads[i] * NFSD_MAXSERVS / tot;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/nfsd/nfssvc.c:305:
+^I^I^I^I    ^I  nthreads[i]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: fs/nfsd/nfssvc.c:305:
+^I^I^I^I    ^I  nthreads[i]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: fs/nfsd/nfssvc.c:305:
+		err = svc_set_num_threads(nfsd_serv, &nfsd_serv->sv_pools[i],
+				    	  nthreads[i]);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.53185.commit.5597fd3e2a4017e3eab63fbbd59dca30c8a177d9 total: 3 errors, 11 warnings, 8 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.53185.commit.5597fd3e2a4017e3eab63fbbd59dca30c8a177d9 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
