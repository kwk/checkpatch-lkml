CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*res)...) over kzalloc(sizeof(struct memctlr)...)
#64: FILE: kernel/res_group/memctlr.c:81:
+	res = kzalloc(sizeof(struct memctlr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: kernel/res_group/memctlr.c:89:
+		printk("Memory Controller version %s\n", version);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: kernel/res_group/memctlr.c:99:
+	BUG_ON(!res);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: kernel/res_group/memctlr.c:109:
+static ssize_t memctlr_show_stats(struct res_shares *shares, char *buf,
+					size_t len)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19840.commit.6a19ef9519b5be4d2488e1d6cd78a7e12da71533 total: 0 errors, 2 warnings, 2 checks, 75 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19840.commit.6a19ef9519b5be4d2488e1d6cd78a7e12da71533 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
