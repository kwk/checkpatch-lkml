WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .6
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: drivers/ieee1394/ohci1394.c:3523:
+	 * to save power on laptops */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for single statement blocks
#325: FILE: drivers/net/bonding/bond_main.c:3550:
+			if (netif_carrier_ok(bond->dev)) {
 				mii->val_out = BMSR_LSTATUS;
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#392: FILE: include/asm-arm/unistd.h:350:
+#define __NR_openat			(__NR_SYSCALL_BASE+322)
                    			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#393: FILE: include/asm-arm/unistd.h:351:
+#define __NR_mkdirat			(__NR_SYSCALL_BASE+323)
                     			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#394: FILE: include/asm-arm/unistd.h:352:
+#define __NR_mknodat			(__NR_SYSCALL_BASE+324)
                     			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: include/asm-arm/unistd.h:353:
+#define __NR_fchownat			(__NR_SYSCALL_BASE+325)
                      			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: include/asm-arm/unistd.h:354:
+#define __NR_futimesat			(__NR_SYSCALL_BASE+326)
                       			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: include/asm-arm/unistd.h:355:
+#define __NR_fstatat64			(__NR_SYSCALL_BASE+327)
                       			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#398: FILE: include/asm-arm/unistd.h:356:
+#define __NR_unlinkat			(__NR_SYSCALL_BASE+328)
                      			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#399: FILE: include/asm-arm/unistd.h:357:
+#define __NR_renameat			(__NR_SYSCALL_BASE+329)
                      			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#400: FILE: include/asm-arm/unistd.h:358:
+#define __NR_linkat			(__NR_SYSCALL_BASE+330)
                    			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#401: FILE: include/asm-arm/unistd.h:359:
+#define __NR_symlinkat			(__NR_SYSCALL_BASE+331)
                       			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#402: FILE: include/asm-arm/unistd.h:360:
+#define __NR_readlinkat			(__NR_SYSCALL_BASE+332)
                        			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#403: FILE: include/asm-arm/unistd.h:361:
+#define __NR_fchmodat			(__NR_SYSCALL_BASE+333)
                      			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#404: FILE: include/asm-arm/unistd.h:362:
+#define __NR_faccessat			(__NR_SYSCALL_BASE+334)
                       			                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: net/bridge/netfilter/ebtables.c:397:
+	if (left < sizeof(struct ebt_entry_watcher) ||
+	   left - sizeof(struct ebt_entry_watcher) < w->watcher_size)

CHECK:CAMELCASE: Avoid CamelCase: <Esmall>
#643: FILE: net/bridge/netfilter/ebtables.c:433:
+		goto Esmall;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#872: FILE: net/sched/act_gact.c:57:
+	if (!p->pval || net_random()%p->pval)
 	                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#880: FILE: net/sched/act_gact.c:64:
+	if (!p->pval || p->bstats.packets%p->pval)
 	                                 ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#894: FILE: net/sched/act_police.c:49:
+struct tc_police_compat
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#918: FILE: net/sched/act_police.c:189:
+	if (tb[TCA_POLICE_TBF-1] == NULL)
 	                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tb[TCA_POLICE_TBF-1]"
#918: FILE: net/sched/act_police.c:189:
+	if (tb[TCA_POLICE_TBF-1] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#920: FILE: net/sched/act_police.c:191:
+	size = RTA_PAYLOAD(tb[TCA_POLICE_TBF-1]);
 	                                    ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#921: FILE: net/sched/act_police.c:192:
+	if (size != sizeof(*parm) && size != sizeof(struct tc_police_compat))
 	                    ^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#936: FILE: net/sched/act_police.c:436:
+	if (tb[TCA_POLICE_TBF-1] == NULL)
 	                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tb[TCA_POLICE_TBF-1]"
#936: FILE: net/sched/act_police.c:436:
+	if (tb[TCA_POLICE_TBF-1] == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#938: FILE: net/sched/act_police.c:438:
+	size = RTA_PAYLOAD(tb[TCA_POLICE_TBF-1]);
 	                                    ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#939: FILE: net/sched/act_police.c:439:
+	if (size != sizeof(*parm) && size != sizeof(struct tc_police_compat))
 	                    ^^^^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.08100.commit.a231a4fda3bdf2cb669ded078f319e8e6d2401b1 total: 1 errors, 6 warnings, 23 checks, 752 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.08100.commit.a231a4fda3bdf2cb669ded078f319e8e6d2401b1 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
