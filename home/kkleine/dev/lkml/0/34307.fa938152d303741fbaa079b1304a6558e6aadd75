WARNING:TYPO_SPELLING: 'resposibility' may be misspelled - perhaps 'responsibility'?
#28: 
the resposibility of constructing the struct irq_chip
    ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/i386/kernel/io_apic.c:2539:
+	int ret;
+	ret = msi_compose_msg(dev, irq, &msg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#171: FILE: arch/i386/kernel/io_apic.c:2553:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: arch/x86_64/kernel/io_apic.c:1793:
+	int ret;
+	ret = msi_compose_msg(dev, irq, &msg);

WARNING:RETURN_VOID: void function return statements are not generally useful
#295: FILE: arch/x86_64/kernel/io_apic.c:1807:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/pci/msi-altix.c:215:
+	unsigned int vector = irq;
+	ia64_resend_irq(vector);

WARNING:LINE_SPACING: Missing a blank line after declarations
#559: FILE: drivers/pci/msi-apic.c:109:
+	unsigned int vector = irq;
+	ia64_resend_irq(vector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: drivers/pci/msi-apic.c:110:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#585: FILE: drivers/pci/msi-apic.c:128:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: drivers/pci/msi.c:508:
+		pci_read_config_dword(dev,
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: drivers/pci/msi.c:514:
+		pci_write_config_dword(dev,
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#959: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1044: FILE: include/asm-ia64/machvec.h:414:
+# define platform_setup_msi_irq		((ia64_mv_setup_msi_irq_t*)NULL)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1047: FILE: include/asm-ia64/machvec.h:417:
+# define platform_teardown_msi_irq	((ia64_mv_teardown_msi_irq_t*)NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1074: FILE: include/asm-ia64/machvec_sn2.h:127:
+#define platform_setup_msi_irq		((ia64_mv_setup_msi_irq_t*)NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1075: FILE: include/asm-ia64/machvec_sn2.h:128:
+#define platform_teardown_msi_irq	((ia64_mv_teardown_msi_irq_t*)NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1147: FILE: include/linux/msi.h:1:
+#ifndef LINUX_MSI_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1157: FILE: include/linux/msi.h:11:
+extern void mask_msi_irq(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1158: FILE: include/linux/msi.h:12:
+extern void unmask_msi_irq(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1159: FILE: include/linux/msi.h:13:
+extern void read_msi_msg(unsigned int irq, struct msi_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1161: FILE: include/linux/msi.h:15:
+extern void write_msi_msg(unsigned int irq, struct msi_msg *msg);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1165: FILE: include/linux/msi.h:19:
+^I^I__u8^Itype^I: 5; ^I/* {0: unused, 5h:MSI, 11h:MSI-X} */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1166: FILE: include/linux/msi.h:20:
+^I^I__u8^Imaskbit^I: 1; ^I/* mask-pending bit supported ?   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1169: FILE: include/linux/msi.h:23:
+^I^I__u8^Ipos;^I ^I/* Location of the msi capability */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1170: FILE: include/linux/msi.h:24:
+^I^I__u16^Ientry_nr;    ^I/* specific enabled entry ^I  */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1171: FILE: include/linux/msi.h:25:
+		unsigned default_irq;	/* default pre-assigned irq	  */

ERROR:SPACING: space required after that close brace '}'
#1172: FILE: include/linux/msi.h:26:
+	}msi_attrib;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that close brace '}'
#1177: FILE: include/linux/msi.h:31:
+	}link;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1194: FILE: include/linux/msi.h:48:
+
+

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.34307.commit.fa938152d303741fbaa079b1304a6558e6aadd75 total: 7 errors, 14 warnings, 8 checks, 1043 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.34307.commit.fa938152d303741fbaa079b1304a6558e6aadd75 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
