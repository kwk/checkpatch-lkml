CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: include/linux/capability.h:43:
   
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#149: FILE: include/linux/capability.h:46:
+#define XATTR_NAME_CAPS XATTR_SECURITY_PREFIX XATTR_CAPS_SUFFIX

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: include/linux/security.h:56:
+extern int cap_task_kill(struct task_struct *p, struct siginfo *info, int sig, u32 secid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: include/linux/security.h:57:
+extern int cap_task_setscheduler (struct task_struct *p, int policy, struct sched_param *lp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/linux/security.h:57:
+extern int cap_task_setscheduler (struct task_struct *p, int policy, struct sched_param *lp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: include/linux/security.h:58:
+extern int cap_task_setioprio (struct task_struct *p, int ioprio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/linux/security.h:58:
+extern int cap_task_setioprio (struct task_struct *p, int ioprio);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: include/linux/security.h:59:
+extern int cap_task_setnice (struct task_struct *p, int nice);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/security.h:59:
+extern int cap_task_setnice (struct task_struct *p, int nice);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: security/commoncap.c:114:
+static inline void cap_from_disk(struct vfs_cap_data_disk *dcap,
+					struct vfs_cap_data *cap)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#290: FILE: security/commoncap.c:129:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->effective); i++) {
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#294: FILE: security/commoncap.c:133:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->permitted); i++) {
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: security/commoncap.c:137:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->inheritable); i++) {
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#331: FILE: security/commoncap.c:170:
+		printk(KERN_NOTICE "%s: Error (%zd) getting xattr\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: security/commoncap.c:171:
+		printk(KERN_NOTICE "%s: Error (%zd) getting xattr\n",
+				__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#332: FILE: security/commoncap.c:171:
+				__FUNCTION__, rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#337: FILE: security/commoncap.c:176:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%zd)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: security/commoncap.c:177:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%zd)\n",
+					__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#338: FILE: security/commoncap.c:177:
+					__FUNCTION__, rc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: security/commoncap.c:400:
+ *   ^Ithen those actions should be allowed$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: security/commoncap.c:413:
+int cap_task_setscheduler (struct task_struct *p, int policy,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: security/commoncap.c:419:
+int cap_task_setioprio (struct task_struct *p, int ioprio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: security/commoncap.c:424:
+int cap_task_setnice (struct task_struct *p, int nice)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: security/commoncap.c:430:
+int cap_task_kill(struct task_struct *p, struct siginfo *info,
+				int sig, u32 secid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: security/commoncap.c:451:
+int cap_task_setscheduler (struct task_struct *p, int policy,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#465: FILE: security/commoncap.c:456:
+}
+int cap_task_setioprio (struct task_struct *p, int ioprio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: security/commoncap.c:456:
+int cap_task_setioprio (struct task_struct *p, int ioprio)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#469: FILE: security/commoncap.c:460:
+}
+int cap_task_setnice (struct task_struct *p, int nice)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: security/commoncap.c:460:
+int cap_task_setnice (struct task_struct *p, int nice)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#473: FILE: security/commoncap.c:464:
+}
+int cap_task_kill(struct task_struct *p, struct siginfo *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: security/commoncap.c:465:
+int cap_task_kill(struct task_struct *p, struct siginfo *info,
+				int sig, u32 secid)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#488: FILE: security/commoncap.c:509:
+EXPORT_SYMBOL(cap_task_setscheduler);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#489: FILE: security/commoncap.c:510:
+EXPORT_SYMBOL(cap_task_setioprio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#490: FILE: security/commoncap.c:511:
+EXPORT_SYMBOL(cap_task_setnice);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14865.commit.2142dd66b026de1f41a28a41e4d2ac2106c0416d total: 1 errors, 17 warnings, 16 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14865.commit.2142dd66b026de1f41a28a41e4d2ac2106c0416d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
