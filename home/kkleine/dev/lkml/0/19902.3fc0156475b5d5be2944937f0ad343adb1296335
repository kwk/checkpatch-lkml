WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# mount -t configfs none /cfg

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# ls /cfg

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# ls /cfg/beancounters/

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# cat /cfg/beancounters/description

WARNING:TYPO_SPELLING: 'controll' may be misspelled - perhaps 'control'?
#44: 
  Beancounters controll resource usage of task groups
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# ls /cfg/beancounters/0/

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
    id  kmemsize  numfiles  numtasks  physpages  privvmpages  tasks  threads

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# ls /cfg/beancounters/0/numfiles

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# cat /cfg/beancounters/0/numfiles/*

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# mkdir /cfg/beancounters/1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# echo -n $$ > /cfg/beancounters/1/tasks

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# cat /proc/$$/status | grep Bcid

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: kernel/bc/configfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#81: FILE: kernel/bc/configfs.c:2:
+ * kernel/bc/configfs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'attr' - possible side-effects?
#116: FILE: kernel/bc/configfs.c:37:
+#define attr_to_bc(attr) container_of(attr, \
+		struct bc_configfs_attribute, attr)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#145: FILE: kernel/bc/configfs.c:66:
+declare_bc_attr(BC_ATTR_ID, id, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#146: FILE: kernel/bc/configfs.c:67:
+declare_bc_attr(BC_ATTR_TASKS, tasks, S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#147: FILE: kernel/bc/configfs.c:68:
+declare_bc_attr(BC_ATTR_THREADS, threads, S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#148: FILE: kernel/bc/configfs.c:69:
+declare_bc_attr(BC_RES_HELD, held, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#149: FILE: kernel/bc/configfs.c:70:
+declare_bc_attr(BC_RES_BARRIER, barrier, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#150: FILE: kernel/bc/configfs.c:71:
+declare_bc_attr(BC_RES_LIMIT, limit, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#151: FILE: kernel/bc/configfs.c:72:
+declare_bc_attr(BC_RES_MAXHELD, maxheld, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#152: FILE: kernel/bc/configfs.c:73:
+declare_bc_attr(BC_RES_MINHELD, minheld, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#153: FILE: kernel/bc/configfs.c:74:
+declare_bc_attr(BC_RES_FAILCNT, failcnt, S_IRUGO);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: kernel/bc/configfs.c:94:
+static ssize_t bc_show(struct config_item *item,
+		struct configfs_attribute *attr, char *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: kernel/bc/configfs.c:109:
+static ssize_t bc_store(struct config_item *item,
+		struct configfs_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#195: FILE: kernel/bc/configfs.c:116:
+	ret = simple_strtoul(page, &end, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: kernel/bc/configfs.c:139:
+static ssize_t resource_show(struct config_item *item,
+		struct configfs_attribute *attr, char *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kernel/bc/configfs.c:166:
+static ssize_t resource_store(struct config_item *item,
+		struct configfs_attribute *attr,

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#258: FILE: kernel/bc/configfs.c:179:
+	val = simple_strtoul(page, &end, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: kernel/bc/configfs.c:186:
+		ret = bc_change_param(bc, grp->res,
+				val, bc->bc_parms[grp->res].limit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: kernel/bc/configfs.c:192:
+		ret = bc_change_param(bc, grp->res,
+				bc->bc_parms[grp->res].barrier, val);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!group->default_groups"
#322: FILE: kernel/bc/configfs.c:243:
+	if (group->default_groups == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*def_group)...) over kzalloc(sizeof(struct bc_resource_group)...)
#326: FILE: kernel/bc/configfs.c:247:
+		def_group = kzalloc(sizeof(struct bc_resource_group),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: kernel/bc/configfs.c:248:
+		def_group = kzalloc(sizeof(struct bc_resource_group),
+				GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!def_group"
#328: FILE: kernel/bc/configfs.c:249:
+		if (def_group == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: kernel/bc/configfs.c:254:
+		config_group_init_type_name(&def_group->group,
+				bc_resources[i]->bcr_name, &resource_item_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: kernel/bc/configfs.c:271:
+static struct config_group *bc_new_group(struct beancounter *bc,
+		const char *name)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bc_group)...) over kzalloc(sizeof(struct bc_group)...)
#354: FILE: kernel/bc/configfs.c:275:
+	bc_group = kzalloc(sizeof(struct bc_group), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc_group"
#355: FILE: kernel/bc/configfs.c:276:
+	if (bc_group == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: kernel/bc/configfs.c:293:
+static struct config_group *bc_make_group(struct config_group *group,
+		const char *name)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#379: FILE: kernel/bc/configfs.c:300:
+	id = simple_strtoul(name, &end, 10);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc"
#384: FILE: kernel/bc/configfs.c:305:
+	if (bc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!grp"
#388: FILE: kernel/bc/configfs.c:309:
+	if (grp == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: kernel/bc/configfs.c:327:
+static ssize_t bc_group_attr_show(struct config_item *item,
+		struct configfs_attribute *attr,

WARNING:TYPO_SPELLING: 'controll' may be misspelled - perhaps 'control'?
#410: FILE: kernel/bc/configfs.c:331:
+			"controll resource usage of task groups\n");
 			 ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: kernel/bc/configfs.c:331:
+	return sprintf(page, "Beancounters "
+			"controll resource usage of task groups\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#420: FILE: kernel/bc/configfs.c:341:
+	.ca_mode = S_IRUGO,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc_group"
#450: FILE: kernel/bc/configfs.c:371:
+	if (bc_group == NULL)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19902.commit.3fc0156475b5d5be2944937f0ad343adb1296335 total: 0 errors, 30 warnings, 20 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19902.commit.3fc0156475b5d5be2944937f0ad343adb1296335 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
