WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#88: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: lib/random32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#94: FILE: lib/random32.c:2:
+/*
+  This is a maximally equidistributed combined Tausworthe generator

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: lib/random32.c:5:
+   x_n = (s1_n ^ s2_n ^ s3_n) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: lib/random32.c:19:
+   ftp://ftp.iro.umontreal.ca/pub/simulation/lecuyer/papers/tausme.ps $

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: lib/random32.c:26:
+        ... the k_j most significant bits of z_j must be non-$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: lib/random32.c:27:
+        zero, for each j. (Note: this restriction also applies to the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: lib/random32.c:27:
+        zero, for each j. (Note: this restriction also applies to the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: lib/random32.c:28:
+        computer code given in [4], but was mistakenly not mentioned in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: lib/random32.c:29:
+        that paper.)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: lib/random32.c:30:
+   $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)
                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's' may be better as '(s)' to avoid precedence issues
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#135: FILE: lib/random32.c:43:
+#define TAUSWORTHE(s,a,b,c,d) ((s&c)<<d) ^ (((s <<a) ^ s)>>b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#149: FILE: lib/random32.c:57:
+#define LCG(n) (69069 * n)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: lib/random32.c:73:
+ *^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: lib/random32.c:82:
+	struct nrnd_state *state = &get_cpu_var(net_rand_state);
+	r = __random32(state);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: lib/random32.c:98:
+	struct nrnd_state *state = &get_cpu_var(net_rand_state);
+	__net_srandom(state, state->s1^entropy);

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#190: FILE: lib/random32.c:98:
+	__net_srandom(state, state->s1^entropy);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: lib/random32.c:112:
+		struct nrnd_state *state = &per_cpu(net_rand_state,i);
 		                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: lib/random32.c:113:
+		struct nrnd_state *state = &per_cpu(net_rand_state,i);
+		__net_srandom(state, i+jiffies);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: lib/random32.c:113:
+		__net_srandom(state, i+jiffies);
 		                      ^

WARNING:TYPO_SPELLING: 'initalized' may be misspelled - perhaps 'initialized'?
#212: FILE: lib/random32.c:120:
+ *	is fully initalized.
   	         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: lib/random32.c:128:
+		struct nrnd_state *state = &per_cpu(net_rand_state,i);
 		                                                  ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28600.commit.4c3d60c4ac80b0b1ba55b726f2fbb4d0d9b1e95b total: 16 errors, 7 warnings, 13 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28600.commit.4c3d60c4ac80b0b1ba55b726f2fbb4d0d9b1e95b has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
