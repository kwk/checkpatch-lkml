WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: fs/befs/btree.c:264:
+	this_node = kmalloc(sizeof (befs_btree_node),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: fs/befs/btree.c:265:
+	this_node = kmalloc(sizeof (befs_btree_node),
 						GFP_NOFS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dnotify_req)...) over kmalloc(sizeof(struct dir_notify_req)...)
#150: FILE: fs/cifs/cifssmb.c:4791:
+		dnotify_req = kmalloc(sizeof(struct dir_notify_req),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: fs/cifs/cifssmb.c:4792:
+		dnotify_req = kmalloc(sizeof(struct dir_notify_req),
 						 GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#165: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ret_buf)...) over kzalloc(sizeof (struct cifsSesInfo)...)
#165: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <cifsTconInfo>
#176: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ret_buf)...) over kzalloc(sizeof (struct cifsTconInfo)...)
#176: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: fs/jffs/intrep.c:438:
+	read_buf = kmalloc (sizeof(__u8) * 4096, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: fs/jffs/intrep.c:750:
+	read_buf1 = kmalloc (sizeof(__u8) * READ_AHEAD_BYTES, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: fs/jffs/intrep.c:754:
+	read_buf2 = kmalloc (sizeof(__u8) * READ_AHEAD_BYTES, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: fs/jffs/intrep.c:882:
+	read_buf = kmalloc (sizeof(__u8) * 4096, GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#271: FILE: fs/jffs/intrep.c:1469:
+		if (!(f->name = kmalloc(raw_inode->nsize + 1,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: fs/jffs/intrep.c:1470:
+		if (!(f->name = kmalloc(raw_inode->nsize + 1,
 						 GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#289: FILE: fs/jffs/intrep.c:2633:
+	if (!(space = kmalloc(indent + 1, GFP_KERNEL))) {

CHECK:CAMELCASE: Avoid CamelCase: <ciKey>
#304: FILE: fs/jfs/jfs_dtree.c:595:
+	ciKey.name = kmalloc((JFS_NAME_MAX + 1) * sizeof(wchar_t), GFP_NOFS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*imap)...) over kmalloc(sizeof(struct inomap)...)
#344: FILE: fs/jfs/jfs_imap.c:123:
+	imap = kmalloc(sizeof(struct inomap), GFP_KERNEL);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55788.commit.d399bf69a4de6a0e23599a310770f7d0f3465bd9 total: 2 errors, 7 warnings, 10 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55788.commit.d399bf69a4de6a0e23599a310770f7d0f3465bd9 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
