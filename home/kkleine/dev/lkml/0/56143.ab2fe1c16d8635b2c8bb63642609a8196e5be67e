CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fbi)...) over kzalloc(sizeof(struct pxafb_info)...)
#54: FILE: drivers/video/pxafb.c:1054:
+	fbi = kzalloc(sizeof(struct pxafb_info) + sizeof(u32) * 16, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fbi)...) over kzalloc(sizeof(struct sa1100fb_info)...)
#71: FILE: drivers/video/sa1100fb.c:1376:
+	fbi = kzalloc(sizeof(struct sa1100fb_info) + sizeof(u32) * 16,

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: net/decnet/dn_table.c:762:
+        if ((t = kzalloc(sizeof(struct dn_fib_table) + sizeof(struct dn_hash), GFP_KERNEL)) == NULL)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: net/decnet/dn_table.c:762:
+        if ((t = kzalloc(sizeof(struct dn_fib_table) + sizeof(struct dn_hash), GFP_KERNEL)) == NULL)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#89: FILE: net/decnet/dn_table.c:762:
+        if ((t = kzalloc(sizeof(struct dn_fib_table) + sizeof(struct dn_hash), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*t)...) over kzalloc(sizeof(struct dn_fib_table)...)
#89: FILE: net/decnet/dn_table.c:762:
+        if ((t = kzalloc(sizeof(struct dn_fib_table) + sizeof(struct dn_hash), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*txb)...) over kzalloc(sizeof(struct ieee80211_txb)...)
#106: FILE: net/ieee80211/ieee80211_tx.c:195:
+	txb = kzalloc(sizeof(struct ieee80211_txb) + (sizeof(u8 *) * nr_frags),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: net/sched/sch_atm.c:311:
+	flow = kzalloc(sizeof(struct atm_flow_data)+hdr_len,GFP_KERNEL);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#141: FILE: net/sched/sch_atm.c:311:
+	flow = kzalloc(sizeof(struct atm_flow_data)+hdr_len,GFP_KERNEL);
 	                                                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*flow)...) over kzalloc(sizeof(struct atm_flow_data)...)
#141: FILE: net/sched/sch_atm.c:311:
+	flow = kzalloc(sizeof(struct atm_flow_data)+hdr_len,GFP_KERNEL);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56143.commit.ab2fe1c16d8635b2c8bb63642609a8196e5be67e total: 3 errors, 1 warnings, 6 checks, 76 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56143.commit.ab2fe1c16d8635b2c8bb63642609a8196e5be67e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
