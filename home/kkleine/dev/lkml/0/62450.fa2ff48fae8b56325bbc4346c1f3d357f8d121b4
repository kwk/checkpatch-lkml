WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
This patch applies to kernel 2.6.17-mm4  and depends on previous EDAC patches that

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#35: 
Signed-off-by:	Doug Thompson <norsk5@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#57: FILE: MAINTAINERS:952:
+P:	Doug Thompson
+M:	norsk5@xmission.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: drivers/edac/Kconfig:93:
+config EDAC_K8
+	tristate "AMD K8 (Opteron, Athlon64)"
+	depends on EDAC_MM_EDAC && X86 && PCI
+	help
+	  Support for error detection and correction on the AMD
+	  K8 Memory Controller
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: drivers/edac/edac_mc.c:1403:
+struct mem_ctl_info * edac_mc_find(int idx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: drivers/edac/edac_mc.h:416:
+extern struct mem_ctl_info * edac_mc_find(int idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: drivers/edac/edac_mc.h:416:
+extern struct mem_ctl_info * edac_mc_find(int idx);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#149: FILE: drivers/edac/k8_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/mmzone.h> instead of <asm/mmzone.h>
#185: FILE: drivers/edac/k8_edac.c:37:
+#include <asm/mmzone.h>

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#242: FILE: drivers/edac/k8_edac.c:94:
+#define EDAC_K8_VERSION    " Ver: 2.0.0 " __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

WARNING:TYPO_SPELLING: 'Dissable' may be misspelled - perhaps 'Disable'?
#328: FILE: drivers/edac/k8_edac.c:180:
+				 * 24    Dissable receivers - no sockets
 				         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#351: FILE: drivers/edac/k8_edac.c:203:
+				 *  1    MCA UE Reporting
 				             ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#382: FILE: drivers/edac/k8_edac.c:234:
+				 * 13    UE
 				         ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#432: FILE: drivers/edac/k8_edac.c:284:
+				 * 61    UE
 				         ^^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#506: FILE: drivers/edac/k8_edac.c:358:
+	static int initialized = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#567: FILE: drivers/edac/k8_edac.c:419:
+static struct pci_dev * pci_get_related_function(unsigned int vendor,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/edac/k8_edac.c:420:
+static struct pci_dev * pci_get_related_function(unsigned int vendor,
+		unsigned int device, struct pci_dev *related)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->bus->number == related->bus->number'
#575: FILE: drivers/edac/k8_edac.c:427:
+		if ((dev->bus->number == related->bus->number) &&
+		    (PCI_SLOT(dev->devfn) == PCI_SLOT(related->devfn)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#595: FILE: drivers/edac/k8_edac.c:447:
+	struct msr_command *cmd = (struct msr_command *) cmd_block;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#610: FILE: drivers/edac/k8_edac.c:462:
+	struct msr_command *cmd = (struct msr_command *) cmd_block;

CHECK:BRACES: braces {} should be used on all arms of this statement
#630: FILE: drivers/edac/k8_edac.c:482:
+	if (cpu == smp_processor_id())
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#632: FILE: drivers/edac/k8_edac.c:484:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#643: FILE: drivers/edac/k8_edac.c:495:
+static inline void do_rdmsr(int cpu, u32 reg, u32 * eax, u32 * edx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#643: FILE: drivers/edac/k8_edac.c:495:
+static inline void do_rdmsr(int cpu, u32 reg, u32 * eax, u32 * edx)

CHECK:BRACES: braces {} should be used on all arms of this statement
#650: FILE: drivers/edac/k8_edac.c:502:
+	if (cpu == smp_processor_id())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#652: FILE: drivers/edac/k8_edac.c:504:
+	else {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#667: FILE: drivers/edac/k8_edac.c:519:
+	debugf0("%s()\n", __func__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#671: FILE: drivers/edac/k8_edac.c:523:
+static inline void do_rdmsr(int cpu, u32 reg, u32 * eax, u32 * edx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#671: FILE: drivers/edac/k8_edac.c:523:
+static inline void do_rdmsr(int cpu, u32 reg, u32 * eax, u32 * edx)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#673: FILE: drivers/edac/k8_edac.c:525:
+	debugf0("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#777: FILE: drivers/edac/k8_edac.c:629:
+	debugf0("%s()\n", __func__);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#790: FILE: drivers/edac/k8_edac.c:642:
+static const char *tt_msgs[] = {	/* transaction type */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#797: FILE: drivers/edac/k8_edac.c:649:
+static const char *ll_msgs[] = {	/* cache level */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#804: FILE: drivers/edac/k8_edac.c:656:
+static const char *memtt_msgs[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#823: FILE: drivers/edac/k8_edac.c:675:
+static const char *pp_msgs[] = {	/* participating processor */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#830: FILE: drivers/edac/k8_edac.c:682:
+static const char *to_msgs[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#835: FILE: drivers/edac/k8_edac.c:687:
+static const char *ii_msgs[] = {	/* memory or i/o */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#842: FILE: drivers/edac/k8_edac.c:694:
+static const char *ext_msgs[] = {	/* extended error */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#861: FILE: drivers/edac/k8_edac.c:713:
+static const char *htlink_msgs[] = {

CHECK:SPACING: No space is necessary after a cast
#878: FILE: drivers/edac/k8_edac.c:730:
+	return ((u64) (dcsb & 0xffe0fe00)) << 4;

WARNING:REPEATED_WORD: Possible repeated word: 'bits'
#885: FILE: drivers/edac/k8_edac.c:737:
+	/* Extract bits bits 29-21 and 15-9 from DCSM (section 3.5.5). */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/edac/k8_edac.c:758:
+static inline void get_base_and_limit(struct k8_pvt *pvt, int node_id,
+		u64 *base, u64 *limit)

CHECK:SPACING: No space is necessary after a cast
#908: FILE: drivers/edac/k8_edac.c:760:
+	*base = ((u64) (pvt->dbr[node_id] & 0xffff0000)) << 8;

CHECK:SPACING: No space is necessary after a cast
#913: FILE: drivers/edac/k8_edac.c:765:
+	*limit = (((u64) (pvt->dlr[node_id] & 0xffff0000)) << 8) | 0xffffff;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#940: FILE: drivers/edac/k8_edac.c:792:
+static struct mem_ctl_info * find_mc_by_sys_addr(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: drivers/edac/k8_edac.c:793:
+static struct mem_ctl_info * find_mc_by_sys_addr(struct mem_ctl_info *mci,
+		u64 sys_addr)

CHECK:SPACING: No space is necessary after a cast
#951: FILE: drivers/edac/k8_edac.c:803:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:SPLIT_STRING: quoted string split across lines
#967: FILE: drivers/edac/k8_edac.c:819:
+				debugf2("%s(): sys_addr 0x%lx "
+					"does not match any node\n", __func__,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#968: FILE: drivers/edac/k8_edac.c:820:
+					(unsigned long) sys_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#981: FILE: drivers/edac/k8_edac.c:833:
+			  "%s(): junk value of 0x%x extracted from IntlvEn "
+			  "field of DRAM Base Register for node 0: This "

WARNING:SPLIT_STRING: quoted string split across lines
#982: FILE: drivers/edac/k8_edac.c:834:
+			  "field of DRAM Base Register for node 0: This "
+			  "probably indicates a BIOS bug.\n", __func__,

CHECK:SPACING: No space is necessary after a cast
#989: FILE: drivers/edac/k8_edac.c:841:
+	bits = (((u32) sys_addr) >> 12) & intlv_en;

CHECK:SPACING: No space is necessary after a cast
#997: FILE: drivers/edac/k8_edac.c:849:
+				"node\n", __func__, (unsigned long) sys_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#997: FILE: drivers/edac/k8_edac.c:849:
+			debugf2("%s(): sys_addr 0x%lx does not match any "
+				"node\n", __func__, (unsigned long) sys_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1006: FILE: drivers/edac/k8_edac.c:858:
+			  "%s(): sys_addr 0x%lx falls outside base/limit "
+			  "address range for node %d with node interleaving "

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: drivers/edac/k8_edac.c:859:
+			  "enabled.\n", __func__, (unsigned long) sys_addr,

WARNING:SPLIT_STRING: quoted string split across lines
#1007: FILE: drivers/edac/k8_edac.c:859:
+			  "address range for node %d with node interleaving "
+			  "enabled.\n", __func__, (unsigned long) sys_addr,

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: drivers/edac/k8_edac.c:866:
+		(unsigned long) sys_addr, node_id);

CHECK:SPACING: No space is necessary after a cast
#1027: FILE: drivers/edac/k8_edac.c:879:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:SPACING: No space is necessary after a cast
#1028: FILE: drivers/edac/k8_edac.c:880:
+	return ((u64) (pvt->dbr[pvt->node_id] & 0xffff0000)) << 8;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: drivers/edac/k8_edac.c:898:
+static int get_dram_hole_info(struct mem_ctl_info *mci, u64 *hole_base,
+		u64 *hole_offset, u64 *hole_size)

CHECK:SPACING: No space is necessary after a cast
#1051: FILE: drivers/edac/k8_edac.c:903:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:SPACING: No space is necessary after a cast
#1086: FILE: drivers/edac/k8_edac.c:938:
+		pvt->node_id, (unsigned long) *hole_base,

CHECK:SPACING: No space is necessary after a cast
#1087: FILE: drivers/edac/k8_edac.c:939:
+		(unsigned long) *hole_offset, (unsigned long) *hole_size);

WARNING:SPLIT_STRING: quoted string split across lines
#1141: FILE: drivers/edac/k8_edac.c:993:
+			debugf2("using DHAR to translate SysAddr 0x%lx to "
+				"DramAddr 0x%lx\n",

CHECK:SPACING: No space is necessary after a cast
#1142: FILE: drivers/edac/k8_edac.c:994:
+				(unsigned long) sys_addr,

CHECK:SPACING: No space is necessary after a cast
#1143: FILE: drivers/edac/k8_edac.c:995:
+				(unsigned long) dram_addr);

CHECK:SPACING: No space is necessary after a cast
#1159: FILE: drivers/edac/k8_edac.c:1011:
+		"DramAddr 0x%lx\n", (unsigned long) sys_addr,

WARNING:SPLIT_STRING: quoted string split across lines
#1159: FILE: drivers/edac/k8_edac.c:1011:
+	debugf2("using DRAM Base register to translate SysAddr 0x%lx to "
+		"DramAddr 0x%lx\n", (unsigned long) sys_addr,

CHECK:SPACING: No space is necessary after a cast
#1160: FILE: drivers/edac/k8_edac.c:1012:
+		(unsigned long) dram_addr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1168: FILE: drivers/edac/k8_edac.c:1020:
+static inline int num_node_interleave_bits(unsigned intlv_en)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1173: FILE: drivers/edac/k8_edac.c:1025:
+	BUG_ON(intlv_en > 7);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#1188: FILE: drivers/edac/k8_edac.c:1040:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:SPACING: No space is necessary after a cast
#1199: FILE: drivers/edac/k8_edac.c:1051:
+		(unsigned long) dram_addr, (unsigned long) input_addr);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1210: FILE: drivers/edac/k8_edac.c:1062:
+	input_addr = dram_addr_to_input_addr(

CHECK:SPACING: No space is necessary after a cast
#1213: FILE: drivers/edac/k8_edac.c:1065:
+		__func__, (unsigned long) sys_addr,

CHECK:SPACING: No space is necessary after a cast
#1214: FILE: drivers/edac/k8_edac.c:1066:
+		(unsigned long) input_addr);

CHECK:SPACING: No space is necessary after a cast
#1229: FILE: drivers/edac/k8_edac.c:1081:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'input_addr_to_csrow', this function's name, in a string
#1241: FILE: drivers/edac/k8_edac.c:1093:
+			debugf2("input_addr_to_csrow: CSBE bit is cleared "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#1242: FILE: drivers/edac/k8_edac.c:1094:
+			debugf2("input_addr_to_csrow: CSBE bit is cleared "
+				"for csrow %d (node %d)\n", i,

CHECK:SPACING: No space is necessary after a cast
#1252: FILE: drivers/edac/k8_edac.c:1104:
+				"(node %d)\n", (unsigned long) input_addr, i,

WARNING:SPLIT_STRING: quoted string split across lines
#1252: FILE: drivers/edac/k8_edac.c:1104:
+			debugf2("InputAddr 0x%lx matches csrow %d "
+				"(node %d)\n", (unsigned long) input_addr, i,

CHECK:SPACING: No space is necessary after a cast
#1259: FILE: drivers/edac/k8_edac.c:1111:
+		(unsigned long) input_addr, pvt->node_id);

CHECK:SPACING: No space is necessary after a cast
#1281: FILE: drivers/edac/k8_edac.c:1133:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1283: FILE: drivers/edac/k8_edac.c:1135:
+	BUG_ON((node_id < 0) || (node_id > 7));

WARNING:SPLIT_STRING: quoted string split across lines
#1288: FILE: drivers/edac/k8_edac.c:1140:
+		debugf1("node interleaving disabled: InputAddr 0x%lx "
+			"translates to DramAddr of same value\n",

CHECK:SPACING: No space is necessary after a cast
#1289: FILE: drivers/edac/k8_edac.c:1141:
+			(unsigned long) input_addr);

CHECK:SPACING: No space is necessary after a cast
#1298: FILE: drivers/edac/k8_edac.c:1150:
+		"(%d node interleave bits)\n", (unsigned long) input_addr,

WARNING:SPLIT_STRING: quoted string split across lines
#1298: FILE: drivers/edac/k8_edac.c:1150:
+	debugf1("InputAddr 0x%lx translates to DramAddr 0x%lx "
+		"(%d node interleave bits)\n", (unsigned long) input_addr,

CHECK:SPACING: No space is necessary after a cast
#1299: FILE: drivers/edac/k8_edac.c:1151:
+		(unsigned long) dram_addr, intlv_shift);

CHECK:SPACING: No space is necessary after a cast
#1311: FILE: drivers/edac/k8_edac.c:1163:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dram_addr >= hole_base'
#1314: FILE: drivers/edac/k8_edac.c:1166:
+		if ((dram_addr >= hole_base) &&
+		    (dram_addr < (hole_base + hole_size))) {

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: drivers/edac/k8_edac.c:1171:
+				"SysAddr 0x%lx\n", (unsigned long) dram_addr,

WARNING:SPLIT_STRING: quoted string split across lines
#1319: FILE: drivers/edac/k8_edac.c:1171:
+			debugf1("using DHAR to translate DramAddr 0x%lx to "
+				"SysAddr 0x%lx\n", (unsigned long) dram_addr,

CHECK:SPACING: No space is necessary after a cast
#1320: FILE: drivers/edac/k8_edac.c:1172:
+				(unsigned long) sys_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1341: FILE: drivers/edac/k8_edac.c:1193:
+	debugf1("Using DRAM Base register for node %d to translate "
+		"DramAddr 0x%lx to SysAddr 0x%lx\n", pvt->node_id,

CHECK:SPACING: No space is necessary after a cast
#1342: FILE: drivers/edac/k8_edac.c:1194:
+		(unsigned long) dram_addr, (unsigned long) sys_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1350: FILE: drivers/edac/k8_edac.c:1202:
+static inline u64 input_addr_to_sys_addr(struct mem_ctl_info *mci,
+		u64 input_addr)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1352: FILE: drivers/edac/k8_edac.c:1204:
+	return dram_addr_to_sys_addr(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1360: FILE: drivers/edac/k8_edac.c:1212:
+static void find_csrow_limits(struct mem_ctl_info *mci, int csrow,
+		u64 *input_addr_min, u64 *input_addr_max)

CHECK:SPACING: No space is necessary after a cast
#1365: FILE: drivers/edac/k8_edac.c:1217:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1366: FILE: drivers/edac/k8_edac.c:1218:
+	BUG_ON((csrow < 0) || (csrow >= K8_NR_CSROWS));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1385: FILE: drivers/edac/k8_edac.c:1237:
+static inline u64 error_address_from_k8_error_info(

CHECK:SPACING: No space is necessary after a cast
#1388: FILE: drivers/edac/k8_edac.c:1240:
+	return (((u64) (info->error_info.nbeah & 0xff)) << 32) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: drivers/edac/k8_edac.c:1245:
+static inline void error_address_to_page_and_offset(u64 error_address,
+		u32 *page, u32 *offset)

CHECK:SPACING: No space is necessary after a cast
#1395: FILE: drivers/edac/k8_edac.c:1247:
+	*page = (u32) (error_address >> PAGE_SHIFT);

CHECK:SPACING: No space is necessary after a cast
#1396: FILE: drivers/edac/k8_edac.c:1248:
+	*offset = ((u32) error_address) & ~PAGE_MASK;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1407: FILE: drivers/edac/k8_edac.c:1259:
+static int k8_get_error_info_regs(struct mem_ctl_info *mci,
+		struct k8_error_info_regs *regs)

CHECK:SPACING: No space is necessary after a cast
#1411: FILE: drivers/edac/k8_edac.c:1263:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1424: FILE: drivers/edac/k8_edac.c:1276:
+static void k8_get_error_info(struct mem_ctl_info *mci,
+		struct k8_error_info *info)

CHECK:SPACING: No space is necessary after a cast
#1429: FILE: drivers/edac/k8_edac.c:1281:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1446: FILE: drivers/edac/k8_edac.c:1298:
+	 * best than can be done is to detect that a race has occured
 	                                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1460: FILE: drivers/edac/k8_edac.c:1312:
+	 * and the new error is UE which would be the only situation
 	                        ^^

WARNING:TYPO_SPELLING: 'errorr' may be misspelled - perhaps 'error'?
#1492: FILE: drivers/edac/k8_edac.c:1344:
+		     "GART TLB errorr: transaction type(%s), "
 		               ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1493: FILE: drivers/edac/k8_edac.c:1345:
+		     "GART TLB errorr: transaction type(%s), "
+		     "cache level(%s)\n", tt_msgs[ec_tt], ll_msgs[ec_ll]);

WARNING:TYPO_SPELLING: 'heirarchy' may be misspelled - perhaps 'hierarchy'?
#1509: FILE: drivers/edac/k8_edac.c:1361:
+		     "cache heirarchy error: memory transaction type(%s), "
 		            ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1510: FILE: drivers/edac/k8_edac.c:1362:
+		     "cache heirarchy error: memory transaction type(%s), "
+		     "transaction type(%s), cache level(%s)\n",

CHECK:SPACING: No space is necessary after a cast
#1531: FILE: drivers/edac/k8_edac.c:1383:
+			     "address 0x%lx\n", (unsigned long) sys_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1531: FILE: drivers/edac/k8_edac.c:1383:
+			     "Failed to translate InputAddr to csrow for "
+			     "address 0x%lx\n", (unsigned long) sys_addr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1539: FILE: drivers/edac/k8_edac.c:1391:
+	unsigned syndrome;

CHECK:SPACING: No space is necessary after a cast
#1546: FILE: drivers/edac/k8_edac.c:1398:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#1562: FILE: drivers/edac/k8_edac.c:1414:
+			 * occurred.  There's alot more in doubt than just the
 			                      ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1568: FILE: drivers/edac/k8_edac.c:1420:
+				     "unknown syndrome 0x%x - possible error "
+				     "reporting race\n", syndrome);

CHECK:BRACES: Unbalanced braces around else statement
#1571: FILE: drivers/edac/k8_edac.c:1423:
+	} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1583: FILE: drivers/edac/k8_edac.c:1435:
+	if ((src_mci = find_mc_by_sys_addr(mci, error_address)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#1586: FILE: drivers/edac/k8_edac.c:1438:
+			     (unsigned long) error_address);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1592: FILE: drivers/edac/k8_edac.c:1444:
+	if ((csrow = sys_addr_to_csrow(log_mci, error_address)) < 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1601: FILE: drivers/edac/k8_edac.c:1453:
+	edac_mc_handle_ce_no_info(log_mci,EDAC_MOD_STR);
 	                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1621: FILE: drivers/edac/k8_edac.c:1473:
+	if ((src_mci = find_mc_by_sys_addr(mci, error_address)) == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1624: FILE: drivers/edac/k8_edac.c:1476:
+			     (unsigned long) error_address);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1630: FILE: drivers/edac/k8_edac.c:1482:
+	if ((csrow = sys_addr_to_csrow(log_mci, error_address)) < 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1642: FILE: drivers/edac/k8_edac.c:1494:
+static void decode_bus_error(struct mem_ctl_info *mci,
+		struct k8_error_info *info)

WARNING:SPLIT_STRING: quoted string split across lines
#1662: FILE: drivers/edac/k8_edac.c:1514:
+	k8_mc_printk(mci, KERN_ERR, "general bus error: participating "
+		     "processor(%s), time-out(%s) memory transaction "

WARNING:SPLIT_STRING: quoted string split across lines
#1663: FILE: drivers/edac/k8_edac.c:1515:
+		     "processor(%s), time-out(%s) memory transaction "
+		     "type(%s), mem or i/o(%s), cache level(%s)\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ext_ec != 0x8'
#1671: FILE: drivers/edac/k8_edac.c:1523:
+	if (ext_ec && (ext_ec != 0x8)) {

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1682: FILE: drivers/edac/k8_edac.c:1534:
+	/* If main error is CE then overflow must be CE.  If main error is UE
 	                                                                   ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1690: FILE: drivers/edac/k8_edac.c:1542:
+		edac_mc_handle_ce_no_info(mci,
+		    EDAC_MOD_STR " Error Overflow set");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1695: FILE: drivers/edac/k8_edac.c:1547:
+static int k8_process_error_info(struct mem_ctl_info *mci,
+		struct k8_error_info *info, int handle_errors)

CHECK:SPACING: No space is necessary after a cast
#1702: FILE: drivers/edac/k8_edac.c:1554:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:SPLIT_STRING: quoted string split across lines
#1719: FILE: drivers/edac/k8_edac.c:1571:
+	debugf1("NorthBridge ERROR: mci(0x%p) node(%d) ErrAddr(0x%.8x-%.8x) "
+		"nbsh(0x%.8x) nbsl(0x%.8x)\n", mci, pvt->node_id, regs->nbeah,

CHECK:BRACES: Unbalanced braces around else statement
#1732: FILE: drivers/edac/k8_edac.c:1584:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ext_ec == 6'
#1741: FILE: drivers/edac/k8_edac.c:1593:
+	if (((ext_ec >= 1 && ext_ec <= 4) || (ext_ec == 6)) &&
+	    ((info->error_info.nbsh >> 4) & 0x07UL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1744: FILE: drivers/edac/k8_edac.c:1596:
+		k8_mc_printk(mci, KERN_ERR,
+		    "Error on hypertransport link: %s\n",

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1750: FILE: drivers/edac/k8_edac.c:1602:
+		edac_mc_handle_ue_no_info(mci, "UE bit is set\n");
 		                                ^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1763: FILE: drivers/edac/k8_edac.c:1615:
+	debugf3("%s()\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1775: FILE: drivers/edac/k8_edac.c:1627:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pvt->addr_map"
#1785: FILE: drivers/edac/k8_edac.c:1637:
+	if (pvt->addr_map == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#1787: FILE: drivers/edac/k8_edac.c:1639:
+		k8_printk(KERN_ERR, "error address map device not found: "
+			  "vendor %x device 0x%x (broken BIOS?)\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pvt->misc_ctl"
#1798: FILE: drivers/edac/k8_edac.c:1650:
+	if (pvt->misc_ctl == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1802: FILE: drivers/edac/k8_edac.c:1654:
+		k8_printk(KERN_ERR, "error miscellaneous device not found: "
+			  "vendor %x device 0x%x (broken BIOS?)\n",

CHECK:SPACING: No space is necessary after a cast
#1820: FILE: drivers/edac/k8_edac.c:1672:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:SPACING: No space is necessary after a cast
#1882: FILE: drivers/edac/k8_edac.c:1734:
+	pvt = (struct k8_pvt *) mci->pvt_info;

CHECK:SPACING: No space is necessary after a cast
#1901: FILE: drivers/edac/k8_edac.c:1753:
+		csrow->first_page = (u32) (sys_addr >> PAGE_SHIFT);

CHECK:SPACING: No space is necessary after a cast
#1903: FILE: drivers/edac/k8_edac.c:1755:
+		csrow->last_page = (u32) (sys_addr >> PAGE_SHIFT);

WARNING:SPLIT_STRING: quoted string split across lines
#1910: FILE: drivers/edac/k8_edac.c:1762:
+		debugf1("for node %d csrow %d:\n    nr_pages: %u "
+			"input_addr_min: 0x%lx input_addr_max: 0x%lx "

WARNING:SPLIT_STRING: quoted string split across lines
#1911: FILE: drivers/edac/k8_edac.c:1763:
+			"input_addr_min: 0x%lx input_addr_max: 0x%lx "
+			"sys_addr: 0x%lx first_page: 0x%lx last_page: 0x%lx "

WARNING:SPLIT_STRING: quoted string split across lines
#1912: FILE: drivers/edac/k8_edac.c:1764:
+			"sys_addr: 0x%lx first_page: 0x%lx last_page: 0x%lx "
+			"page_mask: 0x%lx\n", pvt->node_id, i,

CHECK:SPACING: No space is necessary after a cast
#1913: FILE: drivers/edac/k8_edac.c:1765:
+			(unsigned) csrow->nr_pages,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1913: FILE: drivers/edac/k8_edac.c:1765:
+			(unsigned) csrow->nr_pages,

CHECK:SPACING: No space is necessary after a cast
#1914: FILE: drivers/edac/k8_edac.c:1766:
+			(unsigned long) input_addr_min,

CHECK:SPACING: No space is necessary after a cast
#1915: FILE: drivers/edac/k8_edac.c:1767:
+			(unsigned long) input_addr_max,

CHECK:SPACING: No space is necessary after a cast
#1916: FILE: drivers/edac/k8_edac.c:1768:
+			(unsigned long) sys_addr,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1933: FILE: drivers/edac/k8_edac.c:1785:
+	u32 mc4ctl_l=0, mc4ctl_h=0, mcgctl_l=0, mcgctl_h=0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1933: FILE: drivers/edac/k8_edac.c:1785:
+	u32 mc4ctl_l=0, mc4ctl_h=0, mcgctl_l=0, mcgctl_h=0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1933: FILE: drivers/edac/k8_edac.c:1785:
+	u32 mc4ctl_l=0, mc4ctl_h=0, mcgctl_l=0, mcgctl_h=0;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1933: FILE: drivers/edac/k8_edac.c:1785:
+	u32 mc4ctl_l=0, mc4ctl_h=0, mcgctl_l=0, mcgctl_h=0;
 	                                                ^

CHECK:SPACING: No space is necessary after a cast
#1935: FILE: drivers/edac/k8_edac.c:1787:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1953: FILE: drivers/edac/k8_edac.c:1805:
+	debugf0("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci"
#1961: FILE: drivers/edac/k8_edac.c:1813:
+	if (mci == NULL)

CHECK:SPACING: No space is necessary after a cast
#1965: FILE: drivers/edac/k8_edac.c:1817:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:SPLIT_STRING: quoted string split across lines
#1991: FILE: drivers/edac/k8_edac.c:1843:
+			debugf1("setting EDAC_FLAG_S4ECD4ED in "
+				"mci->edac_cap\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#2002: FILE: drivers/edac/k8_edac.c:1854:
+	if (k8_init_csrows(mci)) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#2004: FILE: drivers/edac/k8_edac.c:1856:
+		debugf1("Setting mci->edac_cap to EDAC_FLAG_NONE "
+			"because k8_init_csrows() returned nonzero "

WARNING:SPLIT_STRING: quoted string split across lines
#2005: FILE: drivers/edac/k8_edac.c:1857:
+			"because k8_init_csrows() returned nonzero "
+			"value\n");

CHECK:BRACES: Unbalanced braces around else statement
#2007: FILE: drivers/edac/k8_edac.c:1859:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2031: FILE: drivers/edac/k8_edac.c:1883:
+static int __devinit k8_init_one(struct pci_dev *pdev,

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2034: FILE: drivers/edac/k8_edac.c:1886:
+	debugf0("%s()\n", __func__);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2041: FILE: drivers/edac/k8_edac.c:1893:
+static void __devexit k8_remove_one(struct pci_dev *pdev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2046: FILE: drivers/edac/k8_edac.c:1898:
+	debugf0("%s()\n", __func__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2048: FILE: drivers/edac/k8_edac.c:1900:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

CHECK:SPACING: No space is necessary after a cast
#2051: FILE: drivers/edac/k8_edac.c:1903:
+	pvt = (struct k8_pvt *) mci->pvt_info;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2057: FILE: drivers/edac/k8_edac.c:1909:
+static const struct pci_device_id k8_pci_tbl[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#2057: FILE: drivers/edac/k8_edac.c:1909:
+static const struct pci_device_id k8_pci_tbl[] __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2087: FILE: drivers/edac/k8_edac.c:1939:
+MODULE_DESCRIPTION("MC support for AMD K8 memory controllers - " EDAC_K8_VERSION );

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62450.commit.fa2ff48fae8b56325bbc4346c1f3d357f8d121b4 total: 22 errors, 72 warnings, 90 checks, 2011 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62450.commit.fa2ff48fae8b56325bbc4346c1f3d357f8d121b4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
