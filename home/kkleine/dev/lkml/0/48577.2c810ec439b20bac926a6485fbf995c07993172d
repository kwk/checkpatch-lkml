WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Mingming Cao<cmm@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#296: FILE: fs/ext3/ialloc.c:245:
+ * Parent's group is prefered, if it doesn't satisfy these
                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#312: FILE: fs/ext3/ialloc.c:457:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#508: FILE: fs/ext3/inode.c:2634:
+					 * size */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#602: FILE: fs/ext3/namei.c:253:
 struct stats
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#629: FILE: fs/ext3/namei.c:652:
+	dxtrace(printk("Fill tree: returned %d entries, next hash: %x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: fs/ext3/namei.c:1575:
+static int ext3_delete_entry (handle_t *handle,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#737: FILE: fs/ext3/super.c:372:
+	printk(KERN_ERR "sb orphan head is %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#764: FILE: fs/ext3/super.c:1444:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#773: FILE: fs/ext3/super.c:1470:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#782: FILE: fs/ext3/super.c:1494:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#790: FILE: fs/ext3/super.c:1501:
+			printk (KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#790: FILE: fs/ext3/super.c:1501:
+			printk (KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: fs/jbd/checkpoint.c:639:
+void __journal_insert_checkpoint(struct journal_head *jh,
 			       transaction_t *transaction)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1297: FILE: fs/jbd/recovery.c:441:
+					printk (KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1297: FILE: fs/jbd/recovery.c:441:
+					printk (KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1315: FILE: fs/jbd/recovery.c:468:
+						printk(KERN_ERR

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#1508: FILE: fs/jbd/revoke.c:587:
+	* ((__be32 *)(&jh2bh(descriptor)->b_data[offset])) =
 	^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2097: FILE: include/linux/ext3_jbd.h:101:
+int ext3_reserve_inode_write(handle_t *handle, struct inode *inode,
 			struct ext3_iloc *iloc);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#2279: FILE: include/linux/jbd.h:917:
+extern int	   journal_check_used_features

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2279: FILE: include/linux/jbd.h:917:
+extern int	   journal_check_used_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2279: FILE: include/linux/jbd.h:917:
+extern int	   journal_check_used_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2279: FILE: include/linux/jbd.h:917:
+extern int	   journal_check_used_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#2282: FILE: include/linux/jbd.h:919:
+extern int	   journal_check_available_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2282: FILE: include/linux/jbd.h:919:
+extern int	   journal_check_available_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2282: FILE: include/linux/jbd.h:919:
+extern int	   journal_check_available_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2282: FILE: include/linux/jbd.h:919:
+extern int	   journal_check_available_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#2285: FILE: include/linux/jbd.h:921:
+extern int	   journal_set_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2285: FILE: include/linux/jbd.h:921:
+extern int	   journal_set_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2285: FILE: include/linux/jbd.h:921:
+extern int	   journal_set_features

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2285: FILE: include/linux/jbd.h:921:
+extern int	   journal_set_features

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48577.commit.2c810ec439b20bac926a6485fbf995c07993172d total: 2 errors, 26 warnings, 3 checks, 2017 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48577.commit.2c810ec439b20bac926a6485fbf995c07993172d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
