WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Associate function calls with significant events in a task's lifetime much like

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#261: FILE: kernel/task_watchers.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#273: FILE: kernel/task_watchers.c:13:
+static const task_watcher_fn __attribute__((__section__(".task.table"))) \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".task.table") over __attribute__((__section__(".task.table")))
#273: FILE: kernel/task_watchers.c:13:
+static const task_watcher_fn __attribute__((__section__(".task.table"))) \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err < 0'
#297: FILE: kernel/task_watchers.c:37:
+		if (unlikely((err < 0) && (ret_err == 0)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret_err == 0'
#297: FILE: kernel/task_watchers.c:37:
+		if (unlikely((err < 0) && (ret_err == 0)))

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#421: FILE: include/asm-generic/vmlinux.lds.h:65:
+		*(.task.function.INIT)				\
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#422: FILE: include/asm-generic/vmlinux.lds.h:66:
+		*(.task.function.CLONE)				\
 		^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#423: FILE: include/asm-generic/vmlinux.lds.h:67:
+		*(.task.function.EXEC)				\
 		^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#424: FILE: include/asm-generic/vmlinux.lds.h:68:
+		*(.task.function.UID)				\
 		^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#425: FILE: include/asm-generic/vmlinux.lds.h:69:
+		*(.task.function.GID)				\
 		^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#426: FILE: include/asm-generic/vmlinux.lds.h:70:
+		*(.task.function.EXIT)				\
 		^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: include/linux/init.h:311:
+extern int notify_task_watchers(unsigned int ev_idx, unsigned long val,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#462: FILE: include/linux/init.h:315:
+ * Watch for events occuring within a task and call the supplied function
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: include/linux/init.h:321:
+	__attribute__ ((__section__ (".task." #ev))) = fn

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".task." #ev) over __attribute__((__section__(".task." #ev)))
#468: FILE: include/linux/init.h:321:
+	__attribute__ ((__section__ (".task." #ev))) = fn

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: include/linux/init.h:332:
+        __attribute__((__section__(".task.function." #sect)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: include/linux/init.h:332:
+        __attribute__((__section__(".task.function." #sect)))$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".task.function." #sect) over __attribute__((__section__(".task.function." #sect)))
#479: FILE: include/linux/init.h:332:
+        __attribute__((__section__(".task.function." #sect)))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09039.commit.f55be4c817ec5e8300351062b97a28e733e9d663 total: 1 errors, 9 warnings, 9 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09039.commit.f55be4c817ec5e8300351062b97a28e733e9d663 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
