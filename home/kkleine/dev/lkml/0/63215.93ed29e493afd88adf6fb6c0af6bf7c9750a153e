WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#186: FILE: arch/i386/kernel/microcode.c:136:
+	BUG_ON(raw_smp_processor_id() != cpu_num);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#187: FILE: arch/i386/kernel/microcode.c:137:
+	uci->pf = uci->rev = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#194: FILE: arch/i386/kernel/microcode.c:143:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel "

WARNING:SPLIT_STRING: quoted string split across lines
#195: FILE: arch/i386/kernel/microcode.c:144:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel "
+			"processor\n", cpu_num);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model >= 5'
#210: FILE: arch/i386/kernel/microcode.c:151:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 > 6'
#210: FILE: arch/i386/kernel/microcode.c:151:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: arch/i386/kernel/microcode.c:167:
+static inline int microcode_update_match(int cpu_num,
+	microcode_header_t *mc_header, int sig, int pf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#275: FILE: arch/i386/kernel/microcode.c:172:
+	if (!sigmatch(sig, uci->sig, pf, uci->pf)
+		|| mc_header->rev <= uci->rev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data_size < DEFAULT_UCODE_DATASIZE'
#311: FILE: arch/i386/kernel/microcode.c:187:
+	if ((data_size + MC_HEADER_SIZE > total_size)
+		|| (data_size < DEFAULT_UCODE_DATASIZE)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#312: FILE: arch/i386/kernel/microcode.c:188:
+	if ((data_size + MC_HEADER_SIZE > total_size)
+		|| (data_size < DEFAULT_UCODE_DATASIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#313: FILE: arch/i386/kernel/microcode.c:189:
+		printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#314: FILE: arch/i386/kernel/microcode.c:190:
+		printk(KERN_ERR "microcode: error! "
+			"Bad data size in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: arch/i386/kernel/microcode.c:195:
+		printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#325: FILE: arch/i386/kernel/microcode.c:196:
+		printk(KERN_ERR "microcode: error! "
+			"Unknown microcode update format\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ext_table_size < EXT_HEADER_SIZE'
#330: FILE: arch/i386/kernel/microcode.c:201:
+		if ((ext_table_size < EXT_HEADER_SIZE)
+		 || ((ext_table_size - EXT_HEADER_SIZE) % EXT_SIGNATURE_SIZE)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#331: FILE: arch/i386/kernel/microcode.c:202:
+		if ((ext_table_size < EXT_HEADER_SIZE)
+		 || ((ext_table_size - EXT_HEADER_SIZE) % EXT_SIGNATURE_SIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#332: FILE: arch/i386/kernel/microcode.c:203:
+			printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#333: FILE: arch/i386/kernel/microcode.c:204:
+			printk(KERN_ERR "microcode: error! "
+				"Small exttable size in microcode data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#338: FILE: arch/i386/kernel/microcode.c:209:
+			printk(KERN_ERR "microcode: error! "

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: arch/i386/kernel/microcode.c:210:
+			printk(KERN_ERR "microcode: error! "
+				"Bad exttable size in microcode data file\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#352: FILE: arch/i386/kernel/microcode.c:219:
+		int * ext_tablep = (int *)ext_header;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#358: FILE: arch/i386/kernel/microcode.c:225:
+			printk(KERN_WARNING "microcode: aborting, "

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: arch/i386/kernel/microcode.c:226:
+			printk(KERN_WARNING "microcode: aborting, "
+				"bad extended signature table checksum\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: arch/i386/kernel/microcode.c:237:
+		printk(KERN_ERR "microcode: aborting, bad checksum\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#388: FILE: arch/i386/kernel/microcode.c:250:
+			printk(KERN_ERR "microcode: aborting, bad checksum\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: arch/i386/kernel/microcode.c:273:
+	if (microcode_update_match(cpu, mc_header,
+			mc_header->sig, mc_header->pf))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/i386/kernel/microcode.c:286:
+		if (microcode_update_match(cpu, mc_header,
+				ext_sig->sig, ext_sig->pf))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/i386/kernel/microcode.c:293:
+		" version 0x%x (current=0x%x)\n", cpu, mc_header->rev,uci->rev);
 		                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#454: FILE: arch/i386/kernel/microcode.c:293:
+	pr_debug("microcode: CPU %d found a matching microcode update with"
+		" version 0x%x (current=0x%x)\n", cpu, mc_header->rev,uci->rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#457: FILE: arch/i386/kernel/microcode.c:296:
+		printk(KERN_ERR "microcode: error! Can not allocate memory\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: arch/i386/kernel/microcode.c:317:
+	BUG_ON(cpu_num != cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uci->mc"
#563: FILE: arch/i386/kernel/microcode.c:319:
+	if (uci->mc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#578: FILE: arch/i386/kernel/microcode.c:339:
+		printk(KERN_ERR "microcode: CPU%d updated from revision "

WARNING:SPLIT_STRING: quoted string split across lines
#579: FILE: arch/i386/kernel/microcode.c:340:
+		printk(KERN_ERR "microcode: CPU%d updated from revision "
+			"0x%x to 0x%x failed\n", cpu_num, uci->rev, val[1]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#630: FILE: arch/i386/kernel/microcode.c:362:
+		printk(KERN_ERR "microcode: error! Can not read user data\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'total_size < DEFAULT_UCODE_TOTALSIZE'
#634: FILE: arch/i386/kernel/microcode.c:366:
+	if ((offset + total_size > user_buffer_size)
+		|| (total_size < DEFAULT_UCODE_TOTALSIZE)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#635: FILE: arch/i386/kernel/microcode.c:367:
+	if ((offset + total_size > user_buffer_size)
+		|| (total_size < DEFAULT_UCODE_TOTALSIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#636: FILE: arch/i386/kernel/microcode.c:368:
+		printk(KERN_ERR "microcode: error! Bad total size in microcode "

WARNING:SPLIT_STRING: quoted string split across lines
#637: FILE: arch/i386/kernel/microcode.c:369:
+		printk(KERN_ERR "microcode: error! Bad total size in microcode "
+				"data file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#644: FILE: arch/i386/kernel/microcode.c:376:
+		printk(KERN_ERR "microcode: error! Can not read user data\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: arch/i386/kernel/microcode.c:383:
+static int do_microcode_update (void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: arch/i386/kernel/microcode.c:387:
+	void * new_mc;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: arch/i386/kernel/microcode.c:424:
+static int microcode_open (struct inode *unused1, struct file *unused2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: arch/i386/kernel/microcode.c:472:
+static int __init microcode_dev_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#735: FILE: arch/i386/kernel/microcode.c:487:
+static void __exit microcode_dev_exit (void)

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: arch/i386/kernel/microcode.c:495:
+#define microcode_dev_exit() do { } while(0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: arch/i386/kernel/microcode.c:498:
+static int __init microcode_init (void)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63215.commit.93ed29e493afd88adf6fb6c0af6bf7c9750a153e total: 4 errors, 29 warnings, 14 checks, 653 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63215.commit.93ed29e493afd88adf6fb6c0af6bf7c9750a153e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
