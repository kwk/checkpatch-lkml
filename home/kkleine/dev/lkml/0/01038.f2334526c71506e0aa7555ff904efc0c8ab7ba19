ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: kernel/posix-timers.c:233:
+^I * It is not ugly - there is no pointer in the id field union, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: kernel/posix-timers.c:237:
+	struct k_itimer *tmr = (struct k_itimer *)(unsigned long)k->event.id.raw_u64;
+	return kevent_storage_enqueue(&tmr->st, k);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#118: FILE: kernel/posix-timers.c:239:
+}
+static int posix_kevent_dequeue(struct kevent *k)

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: kernel/posix-timers.c:242:
+	struct k_itimer *tmr = (struct k_itimer *)(unsigned long)k->event.id.raw_u64;
+	kevent_storage_dequeue(&tmr->st, k);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#124: FILE: kernel/posix-timers.c:245:
+}
+static int posix_kevent_callback(struct kevent *k)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#128: FILE: kernel/posix-timers.c:249:
+}
+static int posix_kevent_init(void)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#139: FILE: kernel/posix-timers.c:260:
+extern struct file_operations kevent_user_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#190: FILE: kernel/posix-timers.c:311:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#192: FILE: kernel/posix-timers.c:313:
+}
+static int posix_kevent_init(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#196: FILE: kernel/posix-timers.c:317:
+}
+static void posix_kevent_fini_timer(struct k_itimer *tmr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: kernel/posix-timers.c:322:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#210: FILE: kernel/posix-timers.c:341:
+		printk(KERN_ERR "Failed to initialize kevent posix timers.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: kernel/posix-timers.c:342:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: kernel/posix-timers.c:447:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: kernel/posix-timers.c:622:
+			if ((process = good_sigevent(&event))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'invloved' may be misspelled - perhaps 'involved'?
#332: FILE: kernel/posix-timers.c:630:
+				 * The exec case is a bit more invloved but easy
 				                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#346: FILE: kernel/posix-timers.c:644:
+					if (new_timer->it_sigev_notify == (SIGEV_SIGNAL|SIGEV_THREAD_ID))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#346: FILE: kernel/posix-timers.c:644:
+					if (new_timer->it_sigev_notify == (SIGEV_SIGNAL|SIGEV_THREAD_ID))
 					                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.01038.commit.f2334526c71506e0aa7555ff904efc0c8ab7ba19 total: 3 errors, 8 warnings, 7 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.01038.commit.f2334526c71506e0aa7555ff904efc0c8ab7ba19 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
