ERROR:INITIALISED_STATIC: do not initialise statics to 0
#80: FILE: kernel/container.c:100:
+static int need_forkexit_callback = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: kernel/container.c:1523:
+ ^Imutex_lock(&callback_mutex);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: kernel/container.c:1523:
+ ^Imutex_lock(&callback_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: kernel/container.c:1523:
+ ^Imutex_lock(&callback_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: kernel/container.c:1524:
+ ^I/* If this is the first subsystem that requested a fork or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: kernel/container.c:1524:
+ ^I/* If this is the first subsystem that requested a fork or$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: kernel/container.c:1524:
+ ^I/* If this is the first subsystem that requested a fork or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: kernel/container.c:1525:
+ ^I * exit callback, tell our fork/exit hooks that they need to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: kernel/container.c:1525:
+ ^I * exit callback, tell our fork/exit hooks that they need to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: kernel/container.c:1526:
+ ^I * grab callback_mutex on every invocation. If they are$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#93: FILE: kernel/container.c:1526:
+ ^I * grab callback_mutex on every invocation. If they are$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: kernel/container.c:1527:
+ ^I * running concurrently with this code, they will either not$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: kernel/container.c:1527:
+ ^I * running concurrently with this code, they will either not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: kernel/container.c:1528:
+ ^I * see the change now and go straight on, or they will see it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: kernel/container.c:1528:
+ ^I * see the change now and go straight on, or they will see it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: kernel/container.c:1529:
+ ^I * and grab callback_mutex, which will deschedule them. Either$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: kernel/container.c:1529:
+ ^I * and grab callback_mutex, which will deschedule them. Either$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: kernel/container.c:1530:
+ ^I * way once synchronize_rcu() returns we know that all current$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: kernel/container.c:1530:
+ ^I * way once synchronize_rcu() returns we know that all current$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: kernel/container.c:1531:
+ ^I * and future forks will make the callbacks. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: kernel/container.c:1531:
+ ^I * and future forks will make the callbacks. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#98: FILE: kernel/container.c:1531:
+ 	 * and future forks will make the callbacks. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: kernel/container.c:1532:
+ ^Iif (!need_forkexit_callback &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: kernel/container.c:1532:
+ ^Iif (!need_forkexit_callback &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: kernel/container.c:1532:
+ ^Iif (!need_forkexit_callback &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: kernel/container.c:1533:
+ ^I    (new_subsys->fork || new_subsys->exit)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: kernel/container.c:1533:
+ ^I    (new_subsys->fork || new_subsys->exit)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: kernel/container.c:1533:
+ 	if (!need_forkexit_callback &&
+ 	    (new_subsys->fork || new_subsys->exit)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: kernel/container.c:1533:
+ ^I    (new_subsys->fork || new_subsys->exit)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: kernel/container.c:1534:
+ ^I^Ineed_forkexit_callback = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: kernel/container.c:1534:
+ ^I^Ineed_forkexit_callback = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/container.c:1534:
+ ^I^Ineed_forkexit_callback = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: kernel/container.c:1535:
+ ^I^Isynchronize_rcu();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: kernel/container.c:1535:
+ ^I^Isynchronize_rcu();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: kernel/container.c:1535:
+ ^I^Isynchronize_rcu();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: kernel/container.c:1536:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: kernel/container.c:1536:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: kernel/container.c:1536:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kernel/container.c:1538:
+ ^I/* If this subsystem requested that it be notified with fork$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: kernel/container.c:1538:
+ ^I/* If this subsystem requested that it be notified with fork$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kernel/container.c:1538:
+ ^I/* If this subsystem requested that it be notified with fork$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: kernel/container.c:1539:
+ ^I * events, we should send it one now for every process in the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: kernel/container.c:1539:
+ ^I * events, we should send it one now for every process in the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: kernel/container.c:1540:
+ ^I * system */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: kernel/container.c:1540:
+ ^I * system */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: kernel/container.c:1540:
+ 	 * system */

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: kernel/container.c:1541:
+ ^Iif (new_subsys->fork) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: kernel/container.c:1541:
+ ^Iif (new_subsys->fork) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: kernel/container.c:1541:
+ ^Iif (new_subsys->fork) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: kernel/container.c:1542:
+ ^I^Istruct task_struct *g, *p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: kernel/container.c:1542:
+ ^I^Istruct task_struct *g, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: kernel/container.c:1542:
+ ^I^Istruct task_struct *g, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: kernel/container.c:1544:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: kernel/container.c:1544:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/container.c:1544:
+ ^I^Iread_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: kernel/container.c:1545:
+ ^I^Ido_each_thread(g, p) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: kernel/container.c:1545:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: kernel/container.c:1545:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: kernel/container.c:1546:
+ ^I^I^Inew_subsys->fork(new_subsys, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: kernel/container.c:1546:
+ ^I^I^Inew_subsys->fork(new_subsys, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/container.c:1546:
+ ^I^I^Inew_subsys->fork(new_subsys, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: kernel/container.c:1547:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: kernel/container.c:1547:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/container.c:1547:
+ ^I^I} while_each_thread(g, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: kernel/container.c:1548:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: kernel/container.c:1548:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/container.c:1548:
+ ^I^Iread_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: kernel/container.c:1549:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: kernel/container.c:1549:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/container.c:1549:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: kernel/container.c:1552:
+ ^Imutex_unlock(&callback_mutex);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: kernel/container.c:1552:
+ ^Imutex_unlock(&callback_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/container.c:1552:
+ ^Imutex_unlock(&callback_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: kernel/container.c:1554:
+ ^Imutex_unlock(&manage_mutex);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: kernel/container.c:1554:
+ ^Imutex_unlock(&manage_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/container.c:1554:
+ ^Imutex_unlock(&manage_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: kernel/container.c:1555:
+ ^Ireturn retval;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: kernel/container.c:1555:
+ ^Ireturn retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/container.c:1555:
+ ^Ireturn retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: kernel/container.c:1583:
+ ^I * a callback */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: kernel/container.c:1583:
+ ^I * a callback */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: kernel/container.c:1583:
+ 	 * a callback */

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: kernel/container.c:1599:
+			struct container_subsys *ss = subsys[i];
+			if (ss->fork) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#154: FILE: kernel/container.c:1599:
+			if (ss->fork) {
+				ss->fork(ss, child);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#160: FILE: kernel/container.c:1605:
+	if (need_callback) {
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: kernel/container.c:1681:
+			struct container_subsys *ss = subsys[i];
+			if (ss->exit) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#178: FILE: kernel/container.c:1681:
+			if (ss->exit) {
+				ss->exit(ss, tsk);
+			}

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.17330.commit.93e3d3a3a55e0dfd292da018f4b7ccceb02010aa total: 30 errors, 56 warnings, 1 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.17330.commit.93e3d3a3a55e0dfd292da018f4b7ccceb02010aa has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
