WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
This patch adds a new interface to the scheduler: A task can be scheduled in 

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#79: 
I can imagine it can be usefull for other subsystems too.
                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: include/linux/sched.h:1262:
+	int old = task->sched_lifo;
+	task->sched_lifo = 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: include/linux/sched.h:1271:
+
+

WARNING:TYPO_SPELLING: 'sleeped' may be misspelled - perhaps 'slept'?
#166: FILE: include/linux/sched.h:1278:
+   * what if we never sleeped while in sched_lifo  ?
                       ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: include/linux/sched.h:1287:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: kernel/sched.c:165:
+#define TASK_PREEMPTS(p,q) task_preempts(p,q)
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: kernel/sched.c:165:
+#define TASK_PREEMPTS(p,q) task_preempts(p,q)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: kernel/sched.c:166:
+#define TASK_PREEMPTS_CURR(p, rq)	TASK_PREEMPTS(p,(rq)->curr)
                                  	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: kernel/sched.c:1335:
+		if (p && TASK_PREEMPTS(p,next)) {
 		                        ^

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#351: FILE: scripts/rt-tester/check-all.sh:21:
+testit t5-l4-pi-boost-deboost-setsched.tst

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#359: FILE: scripts/rt-tester/reset-tester.py:2:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'whith' may be misspelled - perhaps 'with'?
#784: FILE: kernel/rtmutex.c:329:
+ * whith unlocking and locking lock->wait_lock.
    ^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#910: FILE: kernel/rtmutex.c:722:
+		if (unlikely(!waiter.task))
 				continue;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#936: FILE: kernel/rtmutex.c:772:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#937: FILE: kernel/rtmutex.c:773:
+	BUG_ON(waiter.old_sched_lifo != get_sched_lifo());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#960: FILE: kernel/rtmutex.c:792:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1002: FILE: kernel/rtmutex.c:919:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1025: FILE: kernel/rtmutex.c:949:
+	if (unlikely(waiter.task)) {
[...]
+	else if (unlikely(ret))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1029: FILE: kernel/rtmutex.c:953:
+	}
+	else if (unlikely(ret))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1060: FILE: kernel/rtmutex.c:979:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1069: FILE: kernel/rtmutex.c:1033:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54760.commit.1a3a83f20978d5cc32cacda652fcf01c87c724bb total: 5 errors, 13 warnings, 4 checks, 979 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54760.commit.1a3a83f20978d5cc32cacda652fcf01c87c724bb has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
