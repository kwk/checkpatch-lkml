CHECK:SPACING: No space is necessary after a cast
#80: FILE: arch/arm/mach-iop32x/iq80321.c:180:
+		.start = (unsigned long) IOP3XX_DMA_CCR(0),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#81: FILE: arch/arm/mach-iop32x/iq80321.c:181:
+		.end = ((unsigned long) IOP3XX_DMA_DCR(0)) + 4,

CHECK:SPACING: No space is necessary after a cast
#103: FILE: arch/arm/mach-iop32x/iq80321.c:203:
+		.start = (unsigned long) IOP3XX_DMA_CCR(1),

CHECK:SPACING: No space is necessary after a cast
#104: FILE: arch/arm/mach-iop32x/iq80321.c:204:
+		.end = ((unsigned long) IOP3XX_DMA_DCR(1)) + 4,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: arch/arm/mach-iop32x/iq80321.c:224:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#127: FILE: arch/arm/mach-iop32x/iq80321.c:227:
+		.start = (unsigned long) IOP3XX_AAU_ACR,

CHECK:SPACING: No space is necessary after a cast
#128: FILE: arch/arm/mach-iop32x/iq80321.c:228:
+		.end = (unsigned long) IOP3XX_AAU_SAR_EDCR(32),

CHECK:SPACING: No space is necessary after a cast
#176: FILE: arch/arm/mach-iop32x/iq80321.c:276:
+		.platform_data = (void *) &iop3xx_dma_0_data,

CHECK:SPACING: No space is necessary after a cast
#188: FILE: arch/arm/mach-iop32x/iq80321.c:288:
+		.platform_data = (void *) &iop3xx_dma_1_data,

CHECK:SPACING: No space is necessary after a cast
#200: FILE: arch/arm/mach-iop32x/iq80321.c:300:
+		.platform_data = (void *) &iop3xx_aau_data,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#206: FILE: arch/arm/mach-iop32x/iq80321.c:306:
+extern struct platform_device iop3xx_dma_1_channel;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#207: FILE: arch/arm/mach-iop32x/iq80321.c:307:
+extern struct platform_device iop3xx_aau_channel;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#231: FILE: arch/arm/mach-iop33x/iq80331.c:125:
 
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#232: FILE: arch/arm/mach-iop33x/iq80331.c:126:
+extern struct platform_device iop3xx_dma_0_channel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#233: FILE: arch/arm/mach-iop33x/iq80331.c:127:
+extern struct platform_device iop3xx_dma_1_channel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#234: FILE: arch/arm/mach-iop33x/iq80331.c:128:
+extern struct platform_device iop3xx_aau_channel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#258: FILE: arch/arm/mach-iop33x/iq80332.c:132:
+extern struct platform_device iop3xx_dma_0_channel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#259: FILE: arch/arm/mach-iop33x/iq80332.c:133:
+extern struct platform_device iop3xx_dma_1_channel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#260: FILE: arch/arm/mach-iop33x/iq80332.c:134:
+extern struct platform_device iop3xx_aau_channel;

CHECK:SPACING: No space is necessary after a cast
#299: FILE: arch/arm/mach-iop33x/setup.c:114:
+		.start = (unsigned long) IOP3XX_DMA_CCR(0),

CHECK:SPACING: No space is necessary after a cast
#300: FILE: arch/arm/mach-iop33x/setup.c:115:
+		.end = ((unsigned long) IOP3XX_DMA_DCR(0)) + 4,

CHECK:SPACING: No space is necessary after a cast
#322: FILE: arch/arm/mach-iop33x/setup.c:137:
+		.start = (unsigned long) IOP3XX_DMA_CCR(1),

CHECK:SPACING: No space is necessary after a cast
#323: FILE: arch/arm/mach-iop33x/setup.c:138:
+		.end = ((unsigned long) IOP3XX_DMA_DCR(1)) + 4,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#343: FILE: arch/arm/mach-iop33x/setup.c:158:
+
+

CHECK:SPACING: No space is necessary after a cast
#346: FILE: arch/arm/mach-iop33x/setup.c:161:
+		.start = (unsigned long) IOP3XX_AAU_ACR,

CHECK:SPACING: No space is necessary after a cast
#347: FILE: arch/arm/mach-iop33x/setup.c:162:
+		.end = (unsigned long) IOP3XX_AAU_SAR_EDCR(32),

CHECK:SPACING: No space is necessary after a cast
#395: FILE: arch/arm/mach-iop33x/setup.c:210:
+		.platform_data = (void *) &iop3xx_dma_0_data,

CHECK:SPACING: No space is necessary after a cast
#407: FILE: arch/arm/mach-iop33x/setup.c:222:
+		.platform_data = (void *) &iop3xx_dma_1_data,

CHECK:SPACING: No space is necessary after a cast
#419: FILE: arch/arm/mach-iop33x/setup.c:234:
+		.platform_data = (void *) &iop3xx_aau_data,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#424: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#429: FILE: include/asm-arm/arch-iop32x/adma.h:1:
+#ifndef IOP32X_ADMA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: include/asm-arm/arch-iop33x/adma.h:1:
+#ifndef IOP33X_ADMA_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#451: FILE: include/asm-arm/hardware/iop3xx-adma.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#465: FILE: include/asm-arm/hardware/iop3xx-adma.h:15:
+ * this program; if not, write to the Free Software Foundation, Inc., 59$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: include/asm-arm/hardware/iop3xx-adma.h:91:
+^Iu32 crc_addr;^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: include/asm-arm/hardware/iop3xx-adma.h:110:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#625: FILE: include/asm-arm/hardware/iop3xx-adma.h:175:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#645: FILE: include/asm-arm/hardware/iop3xx-adma.h:195:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#647: FILE: include/asm-arm/hardware/iop3xx-adma.h:197:
+#define IOP3XX_ADMA_STATUS_BUSY (1 << 10)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#666: FILE: include/asm-arm/hardware/iop3xx-adma.h:216:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: include/asm-arm/hardware/iop3xx-adma.h:223:
+static inline int iop_desc_is_aligned(struct iop_adma_desc_slot *desc,
+					int num_slots)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: include/asm-arm/hardware/iop3xx-adma.h:244:
+static inline int iop3xx_aau_xor_slot_count(size_t len, int src_cnt,
+					int *slots_per_op)

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#696: FILE: include/asm-arm/hardware/iop3xx-adma.h:246:
+	const static int slot_count_table[] = { 0,

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: include/asm-arm/hardware/iop3xx-adma.h:247:
+^I^I^I^I^I        1, 1, 1, 1, /* 01 - 04 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: include/asm-arm/hardware/iop3xx-adma.h:248:
+^I^I^I^I^I        2, 2, 2, 2, /* 05 - 08 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: include/asm-arm/hardware/iop3xx-adma.h:249:
+^I^I^I^I^I        4, 4, 4, 4, /* 09 - 12 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: include/asm-arm/hardware/iop3xx-adma.h:250:
+^I^I^I^I^I        4, 4, 4, 4, /* 13 - 16 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: include/asm-arm/hardware/iop3xx-adma.h:251:
+^I^I^I^I^I        8, 8, 8, 8, /* 17 - 20 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: include/asm-arm/hardware/iop3xx-adma.h:252:
+^I^I^I^I^I        8, 8, 8, 8, /* 21 - 24 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: include/asm-arm/hardware/iop3xx-adma.h:253:
+^I^I^I^I^I        8, 8, 8, 8, /* 25 - 28 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: include/asm-arm/hardware/iop3xx-adma.h:254:
+^I^I^I^I^I        8, 8, 8, 8, /* 29 - 32 */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: include/asm-arm/hardware/iop3xx-adma.h:261:
+static inline int iop_chan_xor_slot_count(size_t len, int src_cnt,
+						int *slots_per_op)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: include/asm-arm/hardware/iop3xx-adma.h:284:
+static inline int iop_chan_zero_sum_slot_count(size_t len, int src_cnt,
+						int *slots_per_op)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: include/asm-arm/hardware/iop3xx-adma.h:304:
+static inline u32 iop_desc_get_dest_addr(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#765: FILE: include/asm-arm/hardware/iop3xx-adma.h:315:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: include/asm-arm/hardware/iop3xx-adma.h:321:
+static inline u32 iop_desc_get_byte_count(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#782: FILE: include/asm-arm/hardware/iop3xx-adma.h:332:
+		BUG();

WARNING:STATIC_CONST: Move const after static - use 'static const int '
#789: FILE: include/asm-arm/hardware/iop3xx-adma.h:339:
+	const static int src_edc_idx_table[] = { 0, 0, 0, 0,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#815: FILE: include/asm-arm/hardware/iop3xx-adma.h:365:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: include/asm-arm/hardware/iop3xx-adma.h:375:
+static inline void iop3xx_aau_desc_set_src_addr(struct iop3xx_desc_aau *hw_desc,
+					int src_idx, dma_addr_t addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: include/asm-arm/hardware/iop3xx-adma.h:418:
+static inline u32 iop3xx_desc_init_xor(struct iop3xx_desc_aau *hw_desc,
+				int src_cnt)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#889: FILE: include/asm-arm/hardware/iop3xx-adma.h:439:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#903: FILE: include/asm-arm/hardware/iop3xx-adma.h:453:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#915: FILE: include/asm-arm/hardware/iop3xx-adma.h:465:
+		/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: include/asm-arm/hardware/iop3xx-adma.h:486:
+static inline void iop_desc_init_xor(struct iop_adma_desc_slot *desc,
+				int src_cnt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: include/asm-arm/hardware/iop3xx-adma.h:494:
+static inline int iop_desc_init_zero_sum(struct iop_adma_desc_slot *desc,
+					int src_cnt,

WARNING:LINE_SPACING: Missing a blank line after declarations
#954: FILE: include/asm-arm/hardware/iop3xx-adma.h:504:
+	int i = 0, j = 0;
+	hw_desc = desc->hw_desc;

CHECK:SPACING: No space is necessary after a cast
#967: FILE: include/asm-arm/hardware/iop3xx-adma.h:517:
+			prev_hw_desc->next_desc = (u32) (desc->phys + (i << 5));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#979: FILE: include/asm-arm/hardware/iop3xx-adma.h:529:
+static inline void iop_desc_init_null_xor(struct iop_adma_desc_slot *desc,
+				int src_cnt)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#992: FILE: include/asm-arm/hardware/iop3xx-adma.h:542:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#999: FILE: include/asm-arm/hardware/iop3xx-adma.h:549:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1004: FILE: include/asm-arm/hardware/iop3xx-adma.h:554:
+		/* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: include/asm-arm/hardware/iop3xx-adma.h:567:
+static inline void iop_desc_set_byte_count(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1031: FILE: include/asm-arm/hardware/iop3xx-adma.h:581:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: include/asm-arm/hardware/iop3xx-adma.h:586:
+static inline void iop_desc_set_zero_sum_byte_count(struct iop_adma_desc_slot *desc,
+					u32 len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: include/asm-arm/hardware/iop3xx-adma.h:610:
+static inline void iop_desc_set_dest_addr(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1074: FILE: include/asm-arm/hardware/iop3xx-adma.h:624:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: include/asm-arm/hardware/iop3xx-adma.h:629:
+static inline void iop_desc_set_memcpy_src_addr(struct iop_adma_desc_slot *desc,
+					dma_addr_t addr, int slot_cnt,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1083: FILE: include/asm-arm/hardware/iop3xx-adma.h:633:
+	struct iop3xx_desc_dma *hw_desc = desc->hw_desc;
+	hw_desc->src_addr = addr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: include/asm-arm/hardware/iop3xx-adma.h:637:
+static inline void iop_desc_set_zero_sum_src_addr(struct iop_adma_desc_slot *desc,
+					int src_idx, dma_addr_t addr, int slot_cnt,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1090: FILE: include/asm-arm/hardware/iop3xx-adma.h:640:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: include/asm-arm/hardware/iop3xx-adma.h:654:
+static inline void iop_desc_set_xor_src_addr(struct iop_adma_desc_slot *desc,
+					int src_idx, dma_addr_t addr, int slot_cnt,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1107: FILE: include/asm-arm/hardware/iop3xx-adma.h:657:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1121: FILE: include/asm-arm/hardware/iop3xx-adma.h:671:
+static inline void iop_desc_set_next_desc(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1129: FILE: include/asm-arm/hardware/iop3xx-adma.h:679:
+		BUG_ON(hw_desc.dma->next_desc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1133: FILE: include/asm-arm/hardware/iop3xx-adma.h:683:
+		BUG_ON(hw_desc.aau->next_desc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1137: FILE: include/asm-arm/hardware/iop3xx-adma.h:687:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: include/asm-arm/hardware/iop3xx-adma.h:692:
+static inline u32 iop_desc_get_next_desc(struct iop_adma_desc_slot *desc,
+					struct iop_adma_chan *chan)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1153: FILE: include/asm-arm/hardware/iop3xx-adma.h:703:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: include/asm-arm/hardware/iop3xx-adma.h:710:
+static inline void iop_desc_set_block_fill_val(struct iop_adma_desc_slot *desc,
+						u32 val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1163: FILE: include/asm-arm/hardware/iop3xx-adma.h:713:
+	struct iop3xx_desc_aau *hw_desc = desc->hw_desc;
+	hw_desc->src[0] = val;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1172: FILE: include/asm-arm/hardware/iop3xx-adma.h:722:
+	BUG_ON(!(desc_ctrl.tx_complete && desc_ctrl.zero_result_en));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1185: FILE: include/asm-arm/hardware/iop3xx-adma.h:735:
+	for (i = 0; i < sizeof(iop32x_zero_result_buffer)/sizeof(u32); i++)
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1186: FILE: include/asm-arm/hardware/iop3xx-adma.h:736:
+		if (((u32 *) iop32x_zero_result_buffer)[i])

CHECK:SPACING: No space is necessary after a cast
#1189: FILE: include/asm-arm/hardware/iop3xx-adma.h:739:
+			prefetch(((u32 *) iop32x_zero_result_buffer) + 8);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1210: FILE: include/asm-arm/hardware/iop3xx-adma.h:760:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1230: FILE: include/asm-arm/hardware/iop3xx-adma.h:780:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1245: FILE: include/asm-arm/hardware/iop3xx-adma.h:795:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1262: FILE: include/asm-arm/hardware/iop3xx-adma.h:812:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1282: FILE: include/asm-arm/hardware/iop3xx-adma.h:832:
+		BUG();

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1294: FILE: include/asm-arm/hardware/iop3xx-adma.h:844:
+	static struct dma_chan_client_ref *chan_ref = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1297: FILE: include/asm-arm/hardware/iop3xx-adma.h:847:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1301: FILE: include/asm-arm/hardware/iop3xx-adma.h:851:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1302: FILE: include/asm-arm/hardware/iop3xx-adma.h:852:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: include/asm-arm/hardware/iop3xx-adma.h:861:
+		chan_ref = list_entry(req[req_idx]->channels.next, typeof(*chan_ref),
+					req_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: include/asm-arm/hardware/iop3xx-adma.h:864:
+		chan_ref = list_entry(chan_ref->req_node.next,
+					typeof(*chan_ref), req_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1321: FILE: include/asm-arm/hardware/iop3xx-adma.h:871:
+static inline struct dma_chan *iop_raid5_dma_check_channel(struct dma_chan *chan,
+						dma_cookie_t cookie,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1327: FILE: include/asm-arm/hardware/iop3xx-adma.h:877:
+	if ((chan->device->capabilities & capabilities) == capabilities)
[...]
+	else if (dma_async_operation_complete(chan,
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: include/asm-arm/hardware/iop3xx-adma.h:886:
+			chan_ref = list_entry(client->req[0].channels.next,
+						typeof(*chan_ref),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1341: FILE: include/asm-arm/hardware/iop3xx-adma.h:891:
+			chan_ref = list_entry(client->req[1].channels.next,
+						typeof(*chan_ref),

CHECK:BRACES: Unbalanced braces around else statement
#1348: FILE: include/asm-arm/hardware/iop3xx-adma.h:898:
+	} else

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39176.commit.b6dd16539bf9bf64f7c395fadcfe80f684b33358 total: 14 errors, 40 warnings, 57 checks, 1252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39176.commit.b6dd16539bf9bf64f7c395fadcfe80f684b33358 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
