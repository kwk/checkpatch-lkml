CHECK:SPACING: No space is necessary after a cast
#82: FILE: ./arch/sh/mm/cache-sh7705.c:33:
+#define pte_offset(dir, address) ((pte_t *) pmd_page_vaddr(*(dir)) + \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: ./arch/um/kernel/skas/mmu.c:58:
+        mm->context.skas.last_page_table = pmd_page_vaddr(*pmd);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: ./arch/um/kernel/skas/mmu.c:58:
+        mm->context.skas.last_page_table = pmd_page_vaddr(*pmd);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: ./arch/x86_64/mm/fault.c:302:
+		BUG_ON(pgd_page_vaddr(*pgd) != pgd_page_vaddr(*pgd_ref));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#142: FILE: ./arch/x86_64/mm/fault.c:644:
+					BUG_ON(pgd_page_vaddr(*pgd) != pgd_page_vaddr(*pgd_ref));

CHECK:SPACING: No space is necessary after a cast
#183: FILE: ./include/asm-alpha/pgtable.h:297:
+	return (pmd_t *) pgd_page_vaddr(*dir) + ((address >> PMD_SHIFT) & (PTRS_PER_PAGE - 1));

CHECK:SPACING: No space is necessary after a cast
#190: FILE: ./include/asm-alpha/pgtable.h:303:
+	return (pte_t *) pmd_page_vaddr(*dir)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: ./include/asm-arm/pgtable.h:227:
+#define pte_offset_kernel(dir,addr)	(pmd_page_vaddr(*(dir)) + __pte_index(addr))
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: ./include/asm-arm/pgtable.h:228:
+#define pte_offset_map(dir,addr)	(pmd_page_vaddr(*(dir)) + __pte_index(addr))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: ./include/asm-arm/pgtable.h:229:
+#define pte_offset_map_nested(dir,addr)	(pmd_page_vaddr(*(dir)) + __pte_index(addr))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: ./include/asm-arm26/pgtable.h:191:
+#define pte_offset_kernel(dir,addr)     (pmd_page_vaddr(*(dir)) + __pte_index(addr))
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: ./include/asm-arm26/pgtable.h:193:
+#define pte_offset_map(dir,addr)        (pmd_page_vaddr(*(dir)) + __pte_index(addr))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: ./include/asm-arm26/pgtable.h:194:
+#define pte_offset_map_nested(dir,addr) (pmd_page_vaddr(*(dir)) + __pte_index(addr))
                                  ^

CHECK:SPACING: No space is necessary after a cast
#244: FILE: ./include/asm-cris/pgtable.h:256:
+#define pmd_page_vaddr(pmd)	((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#253: FILE: ./include/asm-cris/pgtable.h:274:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  __pte_offset(address))

CHECK:SPACING: No space is necessary after a cast
#291: FILE: ./include/asm-frv/pgtable.h:461:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#348: FILE: ./include/asm-i386/pgtable.h:367:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#364: FILE: ./include/asm-ia64/pgtable.h:278:
+#define pmd_page_vaddr(pmd)		((unsigned long) __va(pmd_val(pmd) & _PFN_MASK))

CHECK:SPACING: No space is necessary after a cast
#372: FILE: ./include/asm-ia64/pgtable.h:285:
+#define pud_page_vaddr(pud)		((unsigned long) __va(pud_val(pud) & _PFN_MASK))

CHECK:SPACING: No space is necessary after a cast
#381: FILE: ./include/asm-ia64/pgtable.h:293:
+#define pgd_page_vaddr(pgd)		((unsigned long) __va(pgd_val(pgd) & _PFN_MASK))

CHECK:SPACING: No space is necessary after a cast
#391: FILE: ./include/asm-ia64/pgtable.h:365:
+	((pud_t *) pgd_page_vaddr(*(dir)) + (((addr) >> PUD_SHIFT) & (PTRS_PER_PUD - 1)))

CHECK:SPACING: No space is necessary after a cast
#397: FILE: ./include/asm-ia64/pgtable.h:370:
+	((pmd_t *) pud_page_vaddr(*(dir)) + (((addr) >> PMD_SHIFT) & (PTRS_PER_PMD - 1)))

CHECK:SPACING: No space is necessary after a cast
#405: FILE: ./include/asm-ia64/pgtable.h:377:
+#define pte_offset_kernel(dir,addr)	((pte_t *) pmd_page_vaddr(*(dir)) + pte_index(addr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: ./include/asm-ia64/pgtable.h:377:
+#define pte_offset_kernel(dir,addr)	((pte_t *) pmd_page_vaddr(*(dir)) + pte_index(addr))
                              ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#452: FILE: ./include/asm-m68k/motorola_pgtable.h:153:
+#define pgd_page(pgd)		(mem_map + ((unsigned long)(__va(pgd_val(pgd)) - PAGE_OFFSET) >> PAGE_SHIFT))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#463: FILE: ./include/asm-mips/pgtable-32.h:159:
+	((pte_t *) (pmd_page_vaddr(*dir)) + __pte_offset(address))

CHECK:SPACING: No space is necessary after a cast
#466: FILE: ./include/asm-mips/pgtable-32.h:161:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  __pte_offset(address))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#481: FILE: ./include/asm-mips/pgtable-64.h:185:
 }
+#define pud_phys(pud)		(pud_val(pud) - PAGE_OFFSET)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#488: FILE: ./include/asm-mips/pgtable-64.h:191:
+	return (pmd_t *) pud_page_vaddr(*pud) + pmd_index(address);

CHECK:SPACING: No space is necessary after a cast
#496: FILE: ./include/asm-mips/pgtable-64.h:198:
+	((pte_t *) (pmd_page_vaddr(*dir)) + __pte_offset(address))

CHECK:SPACING: No space is necessary after a cast
#499: FILE: ./include/asm-mips/pgtable-64.h:200:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  __pte_offset(address))

CHECK:SPACING: No space is necessary after a cast
#521: FILE: ./include/asm-parisc/pgtable.h:306:
+#define pgd_page_vaddr(pgd) ((unsigned long) __va(pgd_address(pgd)))

CHECK:SPACING: No space is necessary after a cast
#531: FILE: ./include/asm-parisc/pgtable.h:386:
+#define pmd_page_vaddr(pmd)	((unsigned long) __va(pmd_address(pmd)))

CHECK:SPACING: No space is necessary after a cast
#540: FILE: ./include/asm-parisc/pgtable.h:404:
+((pmd_t *) pgd_page_vaddr(*(dir)) + (((address)>>PMD_SHIFT) & (PTRS_PER_PMD-1)))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#540: FILE: ./include/asm-parisc/pgtable.h:404:
+((pmd_t *) pgd_page_vaddr(*(dir)) + (((address)>>PMD_SHIFT) & (PTRS_PER_PMD-1)))
                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#540: FILE: ./include/asm-parisc/pgtable.h:404:
+((pmd_t *) pgd_page_vaddr(*(dir)) + (((address)>>PMD_SHIFT) & (PTRS_PER_PMD-1)))
                                                                            ^

CHECK:SPACING: No space is necessary after a cast
#549: FILE: ./include/asm-parisc/pgtable.h:412:
+	((pte_t *) pmd_page_vaddr(*(pmd)) + pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#565: FILE: ./include/asm-powerpc/pgtable-4k.h:95:
+  (((pud_t *) pgd_page_vaddr(*(pgdp))) + \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: ./include/asm-powerpc/pgtable-4k.h:95:
+  (((pud_t *) pgd_page_vaddr(*(pgdp))) + \$

CHECK:SPACING: No space is necessary after a cast
#597: FILE: ./include/asm-powerpc/pgtable.h:223:
+  (((pmd_t *) pud_page_vaddr(*(pudp))) + (((addr) >> PMD_SHIFT) & (PTRS_PER_PMD - 1)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: ./include/asm-powerpc/pgtable.h:223:
+  (((pmd_t *) pud_page_vaddr(*(pudp))) + (((addr) >> PMD_SHIFT) & (PTRS_PER_PMD - 1)))$

CHECK:SPACING: No space is necessary after a cast
#601: FILE: ./include/asm-powerpc/pgtable.h:226:
+  (((pte_t *) pmd_page_vaddr(*(dir))) + (((addr) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: ./include/asm-powerpc/pgtable.h:226:
+  (((pte_t *) pmd_page_vaddr(*(dir))) + (((addr) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1)))$

CHECK:SPACING: No space is necessary after a cast
#636: FILE: ./include/asm-ppc/pgtable.h:751:
+	((pte_t *) pmd_page_vaddr(*(dir)) + pte_index(addr))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#654: FILE: ./include/asm-s390/pgtable.h:681:
+#define pgd_page(pgd) (mem_map+(pgd_val(pgd) >> PAGE_SHIFT))
                               ^

CHECK:SPACING: No space is necessary after a cast
#663: FILE: ./include/asm-s390/pgtable.h:703:
+	((pmd_t *) pgd_page_vaddr(*(dir)) + pmd_index(addr))

CHECK:SPACING: No space is necessary after a cast
#671: FILE: ./include/asm-s390/pgtable.h:710:
+	((pte_t *) pmd_page_vaddr(*(pmd)) + pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#707: FILE: ./include/asm-sh/pgtable.h:245:
+	((pte_t *) pmd_page_vaddr(*(dir)) + pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#718: FILE: ./include/asm-sh64/pgtable.h:193:
+#define pgd_page_vaddr(pgd_entry)	((unsigned long) (pgd_val(pgd_entry) & PAGE_MASK))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#757: FILE: ./include/asm-sparc64/pgtable.h:635:
+#define pud_page(pud) ^I^I^Ivirt_to_page((void *)pud_page_vaddr(pud))$

CHECK:SPACING: No space is necessary after a cast
#766: FILE: ./include/asm-sparc64/pgtable.h:657:
+	((pmd_t *) pud_page_vaddr(*(pudp)) + \

CHECK:SPACING: No space is necessary after a cast
#794: FILE: ./include/asm-um/pgtable-3level.h:82:
+#define pmd_offset(pud, address) ((pmd_t *) pud_page_vaddr(*(pud)) + \

CHECK:SPACING: No space is necessary after a cast
#805: FILE: ./include/asm-um/pgtable.h:352:
+#define pmd_page_vaddr(pmd) ((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#814: FILE: ./include/asm-um/pgtable.h:392:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#835: FILE: ./include/asm-x86_64/pgtable.h:326:
+#define pgd_page_vaddr(pgd) ((unsigned long) __va((unsigned long)pgd_val(pgd) & PTE_MASK))

CHECK:SPACING: No space is necessary after a cast
#844: FILE: ./include/asm-x86_64/pgtable.h:336:
+#define pud_page_vaddr(pud) ((unsigned long) __va(pud_val(pud) & PHYSICAL_PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#848: FILE: ./include/asm-x86_64/pgtable.h:339:
+#define pud_offset(pgd, address) ((pud_t *) pgd_page_vaddr(*(pgd)) + pud_index(address))

CHECK:SPACING: No space is necessary after a cast
#853: FILE: ./include/asm-x86_64/pgtable.h:343:
+#define pmd_page_vaddr(pmd) ((unsigned long) __va(pmd_val(pmd) & PTE_MASK))

CHECK:SPACING: No space is necessary after a cast
#858: FILE: ./include/asm-x86_64/pgtable.h:347:
+#define pmd_offset(dir, address) ((pmd_t *) pud_page_vaddr(*(dir)) + \

CHECK:SPACING: No space is necessary after a cast
#867: FILE: ./include/asm-x86_64/pgtable.h:385:
+#define pte_offset_kernel(dir, address) ((pte_t *) pmd_page_vaddr(*(dir)) + \

CHECK:SPACING: No space is necessary after a cast
#887: FILE: ./include/asm-xtensa/pgtable.h:352:
+	((pte_t*) pmd_page_vaddr(*(dir)) + pte_index(addr))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#887: FILE: ./include/asm-xtensa/pgtable.h:352:
+	((pte_t*) pmd_page_vaddr(*(dir)) + pte_index(addr))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.47480.commit.8983d31469cdbb6fd6ddef3aa10329ec4c5f4d55 total: 9 errors, 8 warnings, 45 checks, 676 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.47480.commit.8983d31469cdbb6fd6ddef3aa10329ec4c5f4d55 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
