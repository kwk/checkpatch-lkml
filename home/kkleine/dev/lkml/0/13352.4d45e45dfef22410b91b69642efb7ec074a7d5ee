WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Alan Stern has discovered a race in sysfs, whereby driver callbacks could be

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/sysfs/file.c:273:
+static int sysfs_open_file(struct inode * inode, struct file * file)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/sysfs/file.c:273:
+static int sysfs_open_file(struct inode * inode, struct file * file)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#156: FILE: fs/sysfs/file.c:309:
+	if (!(set = inode->i_private)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#157: FILE: fs/sysfs/file.c:310:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL))) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#157: FILE: fs/sysfs/file.c:310:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*inode->i_private)...) over kmalloc(sizeof(struct sysfs_buffer_collection)...)
#157: FILE: fs/sysfs/file.c:310:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#159: FILE: fs/sysfs/file.c:312:
+			goto Done;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo				* bar" should be "foo				*bar"
#223: FILE: fs/sysfs/sysfs.h:40:
+	char				* page;

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#224: FILE: fs/sysfs/sysfs.h:41:
+	struct sysfs_ops		* ops;

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#224: FILE: fs/sysfs/sysfs.h:41:
+	struct sysfs_ops		* ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#315: FILE: fs/sysfs/inode.c:252:
+			iput(inode);
 			^^^^

Some words may have been misspelled.  Consider reviewing them.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13352.commit.4d45e45dfef22410b91b69642efb7ec074a7d5ee total: 6 errors, 4 warnings, 2 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13352.commit.4d45e45dfef22410b91b69642efb7ec074a7d5ee has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
