WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: drivers/macintosh/Kconfig:203:
+config SOFTWARE_REPLACE_SLEEP
+	bool "Using Software suspend replace broken sleep function"
+	depends on SUSPEND2
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#59: FILE: drivers/macintosh/via-pmu.c:2659:
+		extern void suspend2_try_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#61: FILE: drivers/macintosh/via-pmu.c:2661:
+		return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: include/asm-ppc/cpu_context.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#84: FILE: include/asm-ppc/cpu_context.h:12:
+#include <asm/mmu_context.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: include/asm-ppc/cpu_context.h:17:
+^Iu32 r[20]; /* r12 - r31 */                                                 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#92: FILE: include/asm-ppc/cpu_context.h:20:
+} __attribute__((packed));

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#94: FILE: include/asm-ppc/cpu_context.h:22:
+inline static void __save_processor_state(struct saved_context *s)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#104: FILE: include/asm-ppc/cpu_context.h:32:
+	asm volatile ("mfsdr1 4; stw 4,%0": "=m" (s->sdr1));
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: include/asm-ppc/cpu_context.h:40:
+^I^I^I  "bne 1b" : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: include/asm-ppc/cpu_context.h:43:
+^I^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#123: FILE: include/asm-ppc/cpu_context.h:51:
+inline static void __restore_processor_state(struct saved_context *s)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#129: FILE: include/asm-ppc/cpu_context.h:57:
+	asm volatile ("lwz 4,%0; mtsprg 0,4": "=m" (s->sprg[0]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#130: FILE: include/asm-ppc/cpu_context.h:58:
+	asm volatile ("lwz 4,%0; mtsprg 1,4": "=m" (s->sprg[1]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#131: FILE: include/asm-ppc/cpu_context.h:59:
+	asm volatile ("lwz 4,%0; mtsprg 2,4": "=m" (s->sprg[2]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#132: FILE: include/asm-ppc/cpu_context.h:60:
+	asm volatile ("lwz 4,%0; mtsprg 3,4": "=m" (s->sprg[3]));
 	                                    ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#135: FILE: include/asm-ppc/cpu_context.h:63:
+	asm volatile ("li 3,0; mttbl 3; \n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: include/asm-ppc/cpu_context.h:70:
+^Iasm volatile ("lmw 12,%0" : "=m" (s->r)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: include/asm-ppc/cpu_context.h:74:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: include/asm-ppc/cpu_context.h:75:
+^I/* tell gcc that we clobbered all the registers... $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#148: FILE: include/asm-ppc/cpu_context.h:76:
+	 * otherwise it might keep some addresses there. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 164 exceeds 100 columns
#149: FILE: include/asm-ppc/cpu_context.h:77:
+	asm volatile ("" : : : "r13", "r14", "r15", "r16", "r17", "r18", "r19", "r20", "r21", "r22", "r23", "r24", "r25", "r26", "r27", "r28", "r29", "r30", "r31");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: include/asm-ppc/cpu_context.h:84:
+	printk("pmu suspend\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/asm-ppc/cpu_context.h:89:
+extern void enable_kernel_altivec(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: include/asm-ppc/cpu_context.h:93:
+	printk("set context: <%p>\n", current);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: include/asm-ppc/cpu_context.h:95:
+	set_context(current->active_mm->context,
+			current->active_mm->pgd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: include/asm-ppc/cpu_context.h:98:
+	printk("pmu_resume\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#176: FILE: include/asm-ppc/cpu_context.h:104:
+		printk("enable altivec\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: include/asm-ppc/cpu_context.h:108:
+	printk("enable fp\n");

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64395.commit.0a5776f6183faab7619b5dbc97c00fa1bddd37a7 total: 14 errors, 14 warnings, 2 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64395.commit.0a5776f6183faab7619b5dbc97c00fa1bddd37a7 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
