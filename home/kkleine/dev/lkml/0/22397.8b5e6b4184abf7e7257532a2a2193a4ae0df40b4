WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
Some bits of documentation can be found on project's homepage (and links from there):

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: include/linux/kevent.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: include/linux/kevent.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#138: FILE: include/linux/kevent.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#158: FILE: include/linux/kevent.h:37:
+typedef int (* kevent_callback_t)(struct kevent *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#158: FILE: include/linux/kevent.h:37:
+typedef int (* kevent_callback_t)(struct kevent *);
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#173: FILE: include/linux/kevent.h:52:
+struct kevent
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#204: FILE: include/linux/kevent.h:83:
+struct kevent_user
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#206: FILE: include/linux/kevent.h:85:
+	spinlock_t		kevent_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: include/linux/kevent.h:94:
+^Ispinlock_t ^I^Iready_lock;$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#232: FILE: include/linux/kevent.h:111:
+	struct kevent_mring	**pring;
 	                   	  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: include/linux/kevent.h:131:
+void kevent_storage_ready(struct kevent_storage *st,
+		kevent_callback_t ready_callback, u32 event);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#271: FILE: include/linux/kevent.h:150:
+	u->wait_num = u->im_num = u->total = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#273: FILE: include/linux/kevent.h:152:
+}
+static inline void kevent_stat_print(struct kevent_user *u)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#275: FILE: include/linux/kevent.h:154:
+	printk(KERN_INFO "%s: u: %p, wait: %lu, mmap: %lu, immediately: %lu, total: %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: include/linux/kevent.h:155:
+	printk(KERN_INFO "%s: u: %p, wait: %lu, mmap: %lu, immediately: %lu, total: %lu.\n",
+			__func__, u, u->wait_num, u->mmap_num, u->im_num, u->total);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#278: FILE: include/linux/kevent.h:157:
+}
+static inline void kevent_stat_im(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#282: FILE: include/linux/kevent.h:161:
+}
+static inline void kevent_stat_mmap(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#286: FILE: include/linux/kevent.h:165:
+}
+static inline void kevent_stat_wait(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#290: FILE: include/linux/kevent.h:169:
+}
+static inline void kevent_stat_total(struct kevent_user *u)

CHECK:SPACING: No space is necessary after a cast
#295: FILE: include/linux/kevent.h:174:
+#define kevent_stat_print(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#295: FILE: include/linux/kevent.h:174:
+#define kevent_stat_print(u)		({ (void) u;})
                             		           ^

CHECK:SPACING: No space is necessary after a cast
#296: FILE: include/linux/kevent.h:175:
+#define kevent_stat_init(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#296: FILE: include/linux/kevent.h:175:
+#define kevent_stat_init(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#297: FILE: include/linux/kevent.h:176:
+#define kevent_stat_im(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#297: FILE: include/linux/kevent.h:176:
+#define kevent_stat_im(u)		({ (void) u;})
                          		           ^

CHECK:SPACING: No space is necessary after a cast
#298: FILE: include/linux/kevent.h:177:
+#define kevent_stat_wait(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#298: FILE: include/linux/kevent.h:177:
+#define kevent_stat_wait(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#299: FILE: include/linux/kevent.h:178:
+#define kevent_stat_mmap(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#299: FILE: include/linux/kevent.h:178:
+#define kevent_stat_mmap(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#300: FILE: include/linux/kevent.h:179:
+#define kevent_stat_total(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#300: FILE: include/linux/kevent.h:179:
+#define kevent_stat_total(u)		({ (void) u;})
                             		           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#310: FILE: include/linux/kevent.h:189:
+}
+static inline void kevent_sk_reinit(struct sock *sk)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#323: FILE: include/linux/kevent.h:202:
+}
+#define sock_async(__sk)	({ (void)__sk; 0; })

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#333: FILE: include/linux/kevent_storage.h:1:
+#ifndef __KEVENT_STORAGE_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#337: FILE: include/linux/kevent_storage.h:5:
+struct kevent_storage
+{

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#338: FILE: include/linux/kevent_storage.h:6:
+	void			*origin;		/* Originator's pointer, e.g. struct sock or struct file. Can be NULL. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: include/linux/syscalls.h:604:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max,
+		__u64 timeout, struct ukevent __user *buf, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#361: FILE: include/linux/syscalls.h:604:
+		__u64 timeout, struct ukevent __user *buf, unsigned flags);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#362: FILE: include/linux/syscalls.h:605:
+asmlinkage long sys_kevent_ctl(int ctl_fd, unsigned int cmd, unsigned int num, struct ukevent __user *buf);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: include/linux/ukevent.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#386: FILE: include/linux/ukevent.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#387: FILE: include/linux/ukevent.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: include/linux/ukevent.h:41:
+#define KEVENT_SOCKET ^I^I0$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#470: FILE: include/linux/ukevent.h:100:
+struct kevent_id
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: include/linux/ukevent.h:103:
+		__u32		raw[2];
+		__u64		raw_u64 __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#473: FILE: include/linux/ukevent.h:103:
+		__u64		raw_u64 __attribute__((aligned(8)));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#478: FILE: include/linux/ukevent.h:108:
+struct ukevent
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#502: FILE: include/linux/ukevent.h:132:
+struct mukevent
+{

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#511: FILE: include/linux/ukevent.h:141:
+ * so we reuse 4 bytes at the begining of the page to store index.
                               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#514: FILE: include/linux/ukevent.h:144:
+#define KEVENTS_ON_PAGE ((PAGE_SIZE-2*sizeof(unsigned int))/sizeof(struct mukevent))
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: include/linux/ukevent.h:144:
+#define KEVENTS_ON_PAGE ((PAGE_SIZE-2*sizeof(unsigned int))/sizeof(struct mukevent))
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#514: FILE: include/linux/ukevent.h:144:
+#define KEVENTS_ON_PAGE ((PAGE_SIZE-2*sizeof(unsigned int))/sizeof(struct mukevent))
                                                            ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#516: FILE: include/linux/ukevent.h:146:
+struct kevent_mring
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: include/linux/ukevent.h:159:
+#define^IKEVENT_CTL_ADD ^I^I0$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#583: FILE: kernel/kevent/Kconfig:19:
+config KEVENT_TIMER
+	bool "Kernel event notifications for timers"
+	depends on KEVENT
+	help
+	  This option allows to use timers through KEVENT subsystem.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#589: FILE: kernel/kevent/Kconfig:25:
+config KEVENT_POLL
+	bool "Kernel event notifications for poll()/select()"
+	depends on KEVENT
+	help
+	  This option allows to use kevent subsystem for poll()/select()
+	  notifications.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#596: FILE: kernel/kevent/Kconfig:32:
+config KEVENT_SOCKET
+	bool "Kernel event notifications for sockets"
+	depends on NET && KEVENT
+	help
+	  This option enables notifications through KEVENT subsystem of 
+	  sockets operations, like new packet receiving conditions, 
+	  ready for accept conditions and so on.
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: kernel/kevent/Kconfig:36:
+^I  This option enables notifications through KEVENT subsystem of $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: kernel/kevent/Kconfig:37:
+^I  sockets operations, like new packet receiving conditions, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: kernel/kevent/Kconfig:39:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#620: FILE: kernel/kevent/kevent.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#635: FILE: kernel/kevent/kevent.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#636: FILE: kernel/kevent/kevent.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#697: FILE: kernel/kevent/kevent.c:78:
+	printk(KERN_INFO "KEVENT: Added callbacks for type %d.\n", pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: kernel/kevent/kevent.c:95:
+	if (unlikely(k->event.type >= KEVENT_MAX ||
+			!kevent_registered_callbacks[k->event.type].callback))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#775: FILE: kernel/kevent/kevent.c:156:
+		ret = (k->event.ret_flags & (KEVENT_RET_BROKEN|KEVENT_RET_DONE));
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: kernel/kevent/kevent.c:195:
+void kevent_storage_ready(struct kevent_storage *st,
+		kevent_callback_t ready_callback, u32 event)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#853: FILE: kernel/kevent/kevent_user.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#868: FILE: kernel/kevent/kevent_user.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#869: FILE: kernel/kevent/kevent_user.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#885: FILE: kernel/kevent/kevent_user.c:33:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: kernel/kevent/kevent_user.c:63:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#916: FILE: kernel/kevent/kevent_user.c:64:
+	ring = k->user->pring[0];
 	                ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: kernel/kevent/kevent_user.c:66:
+^Iif ((ring->kidx + 1 == ring->uidx) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: kernel/kevent/kevent_user.c:67:
+	if ((ring->kidx + 1 == ring->uidx) || 
+			((ring->kidx + 1 == KEVENT_MAX_EVENTS) && ring->uidx == 0)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!k->user->overflow_kevent"
#920: FILE: kernel/kevent/kevent_user.c:68:
+		if (k->user->overflow_kevent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#925: FILE: kernel/kevent/kevent_user.c:73:
+	pidx = ring->kidx/KEVENTS_ON_PAGE;
 	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#926: FILE: kernel/kevent/kevent_user.c:74:
+	off = ring->kidx%KEVENTS_ON_PAGE;
 	                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#929: FILE: kernel/kevent/kevent_user.c:77:
+		printk(KERN_ERR "%s: kidx: %u, pidx: %u, on_page: %lu, pidx: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: kernel/kevent/kevent_user.c:78:
+		printk(KERN_ERR "%s: kidx: %u, pidx: %u, on_page: %lu, pidx: %u.\n",
+				__func__, ring->kidx, ring->uidx, KEVENTS_ON_PAGE, pidx);

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#934: FILE: kernel/kevent/kevent_user.c:82:
+	copy_ring = k->user->pring[pidx];
 	                     ^^^^^

WARNING:TYPO_SPELLING: 'Esentially' may be misspelled - perhaps 'Essentially'?
#949: FILE: kernel/kevent/kevent_user.c:97:
+ * of using syscall. Esentially syscall becomes just a waiting point.
                      ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#956: FILE: kernel/kevent/kevent_user.c:104:
+	u->pring = kzalloc(KEVENT_MAX_PAGES * sizeof(struct kevent_mring *), GFP_KERNEL);
 	   ^^^^^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#956: FILE: kernel/kevent/kevent_user.c:104:
+	u->pring = kzalloc(KEVENT_MAX_PAGES * sizeof(struct kevent_mring *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#957: FILE: kernel/kevent/kevent_user.c:105:
+	if (!u->pring)
 	        ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#960: FILE: kernel/kevent/kevent_user.c:108:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#960: FILE: kernel/kevent/kevent_user.c:108:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#961: FILE: kernel/kevent/kevent_user.c:109:
+		u->pring[i] = (struct kevent_mring *)__get_free_page(GFP_KERNEL);
 		   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#962: FILE: kernel/kevent/kevent_user.c:110:
+		if (!u->pring[i])
 		        ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#966: FILE: kernel/kevent/kevent_user.c:114:
+	u->pring[0]->uidx = u->pring[0]->kidx = 0;
 	   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#966: FILE: kernel/kevent/kevent_user.c:114:
+	u->pring[0]->uidx = u->pring[0]->kidx = 0;
 	                       ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#966: FILE: kernel/kevent/kevent_user.c:114:
+	u->pring[0]->uidx = u->pring[0]->kidx = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#971: FILE: kernel/kevent/kevent_user.c:119:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#971: FILE: kernel/kevent/kevent_user.c:119:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#972: FILE: kernel/kevent/kevent_user.c:120:
+		if (!u->pring[i])
 		        ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#975: FILE: kernel/kevent/kevent_user.c:123:
+		free_page((unsigned long)u->pring[i]);
 		                            ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: kernel/kevent/kevent_user.c:125:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#978: FILE: kernel/kevent/kevent_user.c:126:
+	kfree(u->pring);
 	         ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#987: FILE: kernel/kevent/kevent_user.c:135:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#987: FILE: kernel/kevent/kevent_user.c:135:
+	for (i=0; i<KEVENT_MAX_PAGES; ++i)
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#988: FILE: kernel/kevent/kevent_user.c:136:
+		free_page((unsigned long)u->pring[i]);
 		                            ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#990: FILE: kernel/kevent/kevent_user.c:138:
+	kfree(u->pring);
 	         ^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*u)...) over kzalloc(sizeof(struct kevent_user)...)
#997: FILE: kernel/kevent/kevent_user.c:145:
+	u = kzalloc(sizeof(struct kevent_user), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1060: FILE: kernel/kevent/kevent_user.c:208:
+	if (vm_insert_page(vma, start, virt_to_page(u->pring[off])))
 	                                               ^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1086: FILE: kernel/kevent/kevent_user.c:234:
+	struct kevent *kevent = container_of(rcu, struct kevent, rcu_head);
+	kmem_cache_free(kevent_cache, kevent);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: kernel/kevent/kevent_user.c:239:
+ * This function removes kevent from ready queue and $

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1098: FILE: kernel/kevent/kevent_user.c:246:
+	if (++u->pring[0]->uidx == KEVENT_MAX_EVENTS)
 	         ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1099: FILE: kernel/kevent/kevent_user.c:247:
+		u->pring[0]->uidx = 0;
 		   ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: kernel/kevent/kevent_user.c:257:
+^I^I^I^Iu->overflow_kevent = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: kernel/kevent/kevent_user.c:258:
+^I^I^I^I^Ilist_entry(u->overflow_kevent->ready_entry.next, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: kernel/kevent/kevent_user.c:259:
+					list_entry(u->overflow_kevent->ready_entry.next, 
+							struct kevent, ready_entry);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1205: FILE: kernel/kevent/kevent_user.c:353:
+		if (cmp > 0)
[...]
+		else if (cmp < 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1209: FILE: kernel/kevent/kevent_user.c:357:
+		else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ukev)...) over kmalloc(sizeof(struct ukevent)...)
#1292: FILE: kernel/kevent/kevent_user.c:440:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1292: FILE: kernel/kevent/kevent_user.c:440:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1332: FILE: kernel/kevent/kevent_user.c:480:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1390: FILE: kernel/kevent/kevent_user.c:538:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1438: FILE: kernel/kevent/kevent_user.c:586:
+		if (cmp > 0)
[...]
+		else if (cmp < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1442: FILE: kernel/kevent/kevent_user.c:590:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1504: FILE: kernel/kevent/kevent_user.c:652:
+	if (err < 0) {
[...]
+	} else if (err > 0)
[...]

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1540: FILE: kernel/kevent/kevent_user.c:688:
+						memcpy(&ukev[rnum], &ukev[i], sizeof(struct ukevent));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1544: FILE: kernel/kevent/kevent_user.c:692:
+			if (copy_to_user(orig, ukev, rnum*sizeof(struct ukevent)))
 			                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1588: FILE: kernel/kevent/kevent_user.c:736:
+static int kevent_user_wait(struct file *file, struct kevent_user *u,
+		unsigned int min_nr, unsigned int max_nr, __u64 timeout,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1596: FILE: kernel/kevent/kevent_user.c:744:
+		wait_event_interruptible_timeout(u->wait,
+			u->ready_num >= min_nr,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1601: FILE: kernel/kevent/kevent_user.c:749:
+		if (copy_to_user(buf + num*sizeof(struct ukevent),
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1602: FILE: kernel/kevent/kevent_user.c:750:
+		if (copy_to_user(buf + num*sizeof(struct ukevent),
+					&k->event, sizeof(struct ukevent)))

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1618: FILE: kernel/kevent/kevent_user.c:766:
+static struct file_operations kevent_user_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1632: FILE: kernel/kevent/kevent_user.c:780:
+static int kevent_ctl_process(struct file *file, unsigned int cmd, unsigned int num, void __user *arg)

WARNING:TYPO_SPELLING: 'ununsed' may be misspelled - perhaps 'unused'?
#1662: FILE: kernel/kevent/kevent_user.c:810:
+ * @flags - ununsed for now (will be used for mmap implementation).
             ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1665: FILE: kernel/kevent/kevent_user.c:813:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min_nr, unsigned int max_nr,
+		__u64 timeout, struct ukevent __user *buf, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1665: FILE: kernel/kevent/kevent_user.c:813:
+		__u64 timeout, struct ukevent __user *buf, unsigned flags)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1694: FILE: kernel/kevent/kevent_user.c:842:
+ * ^Ifree space in kevent queue.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1696: FILE: kernel/kevent/kevent_user.c:844:
+ * Ring buffer is designed in a way that first ready kevent will be at @ring->uidx $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1702: FILE: kernel/kevent/kevent_user.c:850:
+ * An example: thread 1 and thread 2 simultaneously call kevent_wait() to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1703: FILE: kernel/kevent/kevent_user.c:851:
+ * commit 2 and 3 events. It is possible that first thread will commit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1710: FILE: kernel/kevent/kevent_user.c:858:
+ * If user asks to commit events which have beed removed by kevent_get_events() recently $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1711: FILE: kernel/kevent/kevent_user.c:859:
+ * (for example when one thread looked into ring indexes and started to commit evets, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1719: FILE: kernel/kevent/kevent_user.c:867:
+ * An example: if ready events use positions 2-5, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1720: FILE: kernel/kevent/kevent_user.c:868:
+ * it is permitted to start to commit 3 events from position 0, $

WARNING:TYPO_SPELLING: 'ommited' may be misspelled - perhaps 'omitted'?
#1721: FILE: kernel/kevent/kevent_user.c:869:
+ *   in this case 0 and 1 positions will be ommited and only event in position 2 will 
                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1721: FILE: kernel/kevent/kevent_user.c:869:
+ *   in this case 0 and 1 positions will be ommited and only event in position 2 will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1724: FILE: kernel/kevent/kevent_user.c:872:
+ * This means that if some events were committed using kevent_get_events(), $

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1748: FILE: kernel/kevent/kevent_user.c:896:
+	ring = u->pring[0];
 	          ^^^^^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1751: FILE: kernel/kevent/kevent_user.c:899:
+	actual = (ring->kidx > ring->uidx)?
 	                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1752: FILE: kernel/kevent/kevent_user.c:900:
+			(ring->kidx - ring->uidx):
 			                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1758: FILE: kernel/kevent/kevent_user.c:906:
+	if (start < ring->uidx) {
[...]
+	} else if (start > ring->uidx)
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1776: FILE: kernel/kevent/kevent_user.c:924:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1779: FILE: kernel/kevent/kevent_user.c:927:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1779: FILE: kernel/kevent/kevent_user.c:927:
+	for (i=0; i<num; ++i) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1792: FILE: kernel/kevent/kevent_user.c:940:
+		wait_event_interruptible_timeout(u->wait,
+			u->ready_num >= 1,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1795: FILE: kernel/kevent/kevent_user.c:943:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1811: FILE: kernel/kevent/kevent_user.c:959:
+asmlinkage long sys_kevent_ctl(int fd, unsigned int cmd, unsigned int num, struct ukevent __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1839: FILE: kernel/kevent/kevent_user.c:987:
+	kevent_cache = kmem_cache_create("kevent_cache",
+			sizeof(struct kevent), 0, SLAB_PANIC, NULL, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1843: FILE: kernel/kevent/kevent_user.c:991:
+		printk(KERN_ERR "Failed to register kevent miscdev: err=%d.\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1847: FILE: kernel/kevent/kevent_user.c:995:
+	printk(KERN_INFO "KEVENT subsystem has been successfully registered.\n");

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22397.commit.8b5e6b4184abf7e7257532a2a2193a4ae0df40b4 total: 52 errors, 56 warnings, 49 checks, 1742 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22397.commit.8b5e6b4184abf7e7257532a2a2193a4ae0df40b4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
