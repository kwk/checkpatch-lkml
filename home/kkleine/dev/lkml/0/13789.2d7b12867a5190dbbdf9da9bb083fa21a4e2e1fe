ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#52: FILE: drivers/md/raid5.c:2023:
+	int compute=0, req_compute=0, non_overwrite=0;
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#52: FILE: drivers/md/raid5.c:2023:
+	int compute=0, req_compute=0, non_overwrite=0;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#52: FILE: drivers/md/raid5.c:2023:
+	int compute=0, req_compute=0, non_overwrite=0;
 	                                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#60: FILE: drivers/md/raid5.c:2074:
+		if (test_bit(R5_Wantcompute, &dev->flags)) BUG_ON(++compute > 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#60: FILE: drivers/md/raid5.c:2074:
+		if (test_bit(R5_Wantcompute, &dev->flags)) BUG_ON(++compute > 1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantcompute>
#60: FILE: drivers/md/raid5.c:2074:
+		if (test_bit(R5_Wantcompute, &dev->flags)) BUG_ON(++compute > 1);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#84: FILE: drivers/md/raid5.c:2230:
+	if (to_read || non_overwrite || (syncing && (uptodate + compute < disks)) || expanding ||
 	                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/md/raid5.c:2231:
+	if (to_read || non_overwrite || (syncing && (uptodate + compute < disks)) || expanding ||
+		test_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.pending)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#86: FILE: drivers/md/raid5.c:2232:
+		test_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.pending)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/md/raid5.c:2238:
+		if (test_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.complete) &&
+			!test_bit(STRIPE_OP_MOD_REPAIR_PD, &sh->ops.pending)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/md/raid5.c:2249:
+		if (!test_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.pending) &&
+			!test_bit(STRIPE_OP_PREXOR, &sh->ops.pending) &&

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/md/raid5.c:2251:
+			for (i=disks; i--;) {
 			      ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#118: FILE: drivers/md/raid5.c:2257:
+				if ((i == sh->pd_idx) && test_bit(STRIPE_OP_CHECK, &sh->ops.pending))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == sh->pd_idx'
#118: FILE: drivers/md/raid5.c:2257:
+				if ((i == sh->pd_idx) && test_bit(STRIPE_OP_CHECK, &sh->ops.pending))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#121: FILE: drivers/md/raid5.c:2260:
+				if (!test_bit(R5_LOCKED, &dev->flags) && !test_bit(R5_UPTODATE, &dev->flags) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/md/raid5.c:2261:
+				if (!test_bit(R5_LOCKED, &dev->flags) && !test_bit(R5_UPTODATE, &dev->flags) &&
+				     (dev->toread ||

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#128: FILE: drivers/md/raid5.c:2267:
+						 	!test_bit(R5_OVERWRITE, &sh->dev[failed_num].flags))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/md/raid5.c:2267:
+^I^I^I^I^I^I ^I!test_bit(R5_OVERWRITE, &sh->dev[failed_num].flags))))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: drivers/md/raid5.c:2267:
+^I^I^I^I^I^I ^I!test_bit(R5_OVERWRITE, &sh->dev[failed_num].flags))))$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#135: FILE: drivers/md/raid5.c:2274:
+					 * make the parity block !uptodate it will need
 					                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#142: FILE: drivers/md/raid5.c:2281:
+					if ((uptodate == disks-1) && !test_bit(STRIPE_OP_CHECK, &sh->ops.pending)) {
 					     ^^^^^^^^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#142: FILE: drivers/md/raid5.c:2281:
+					if ((uptodate == disks-1) && !test_bit(STRIPE_OP_CHECK, &sh->ops.pending)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#142: FILE: drivers/md/raid5.c:2281:
+					if ((uptodate == disks-1) && !test_bit(STRIPE_OP_CHECK, &sh->ops.pending)) {
 					                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#146: FILE: drivers/md/raid5.c:2285:
+						BUG_ON(req_compute++);

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#148: FILE: drivers/md/raid5.c:2287:
+						/* Careful: from this point on 'uptodate' is in the eye of the

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#149: FILE: drivers/md/raid5.c:2288:
+						 * workqueue which services 'compute' operations before writes.

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#150: FILE: drivers/md/raid5.c:2289:
+						 * R5_Wantcompute flags a block that will be R5_UPTODATE

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#151: FILE: drivers/md/raid5.c:2290:
+						 * by the time it is needed for a subsequent operation.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#153: FILE: drivers/md/raid5.c:2292:
+						uptodate++;
 						^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#154: FILE: drivers/md/raid5.c:2293:
+					} else if ((uptodate < disks-1) && test_bit(R5_Insync, &dev->flags)) {
 					            ^^^^^^^^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#154: FILE: drivers/md/raid5.c:2293:
+					} else if ((uptodate < disks-1) && test_bit(R5_Insync, &dev->flags)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#154: FILE: drivers/md/raid5.c:2293:
+					} else if ((uptodate < disks-1) && test_bit(R5_Insync, &dev->flags)) {
 					                            ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#154: FILE: drivers/md/raid5.c:2293:
+					} else if ((uptodate < disks-1) && test_bit(R5_Insync, &dev->flags)) {

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#155: FILE: drivers/md/raid5.c:2294:
+						/* Note: we hold off compute operations while checks are in flight,

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#156: FILE: drivers/md/raid5.c:2295:
+						 * but we still prefer 'compute' over 'read' hence we only read if

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#157: FILE: drivers/md/raid5.c:2296:
+						 * (uptodate < disks-1)
 						    ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#160: FILE: drivers/md/raid5.c:2299:
+						set_bit(R5_Wantread, &dev->flags);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#161: FILE: drivers/md/raid5.c:2300:
+						if (!test_and_set_bit(STRIPE_OP_IO, &sh->ops.pending))

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#161: FILE: drivers/md/raid5.c:2300:
+						if (!test_and_set_bit(STRIPE_OP_IO, &sh->ops.pending))

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#172: FILE: drivers/md/raid5.c:2304:
+						   a failed drive, or any pending writes then sidestep the cache */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: drivers/md/raid5.c:2304:
+						/* if I am just reading this block and we don't have
+						   a failed drive, or any pending writes then sidestep the cache */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#172: FILE: drivers/md/raid5.c:2304:
+						   a failed drive, or any pending writes then sidestep the cache */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#173: FILE: drivers/md/raid5.c:2305:
+						if (sh->bh_read[i] && !sh->bh_read[i]->b_reqnext &&

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#174: FILE: drivers/md/raid5.c:2306:
+						    ! syncing && !failed && !to_write) {
 						    ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#175: FILE: drivers/md/raid5.c:2307:
+							sh->bh_cache[i]->b_page =  sh->bh_read[i]->b_page;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#176: FILE: drivers/md/raid5.c:2308:
+							sh->bh_cache[i]->b_data =  sh->bh_read[i]->b_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/md/raid5.c:2313:
+						PRINTK("Reading block %d (sync=%d)\n",
+							i, syncing);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#194: FILE: drivers/md/raid5.c:2392:
+			    !(test_bit(R5_UPTODATE, &dev->flags) || test_bit(R5_Wantcompute, &dev->flags))) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#203: FILE: drivers/md/raid5.c:2406:
+			    !(test_bit(R5_UPTODATE, &dev->flags) || test_bit(R5_Wantcompute, &dev->flags))) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#213: FILE: drivers/md/raid5.c:2420:
+				    !(test_bit(R5_UPTODATE, &dev->flags) || test_bit(R5_Wantcompute, &dev->flags)) &&

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#223: FILE: drivers/md/raid5.c:2440:
+				    !(test_bit(R5_UPTODATE, &dev->flags) || test_bit(R5_Wantcompute, &dev->flags)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/md/raid5.c:2463:
+		if ((req_compute || !test_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.pending)) &&
+			(locked == 0 && (rcw == 0 ||rmw == 0) &&

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#241: FILE: drivers/md/raid5.c:2463:
+			(locked == 0 && (rcw == 0 ||rmw == 0) &&
 			                          ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13789.commit.2d7b12867a5190dbbdf9da9bb083fa21a4e2e1fe total: 8 errors, 32 warnings, 13 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13789.commit.2d7b12867a5190dbbdf9da9bb083fa21a4e2e1fe has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
