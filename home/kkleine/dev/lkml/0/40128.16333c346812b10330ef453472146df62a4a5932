ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Takashi Sato sho@tnes.nec.co.jp'
#29: 
Signed-off-by: Takashi Sato sho@tnes.nec.co.jp

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#81: FILE: fs/ext2/dir.c:357:
+			kaddr = page_start = page_address(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#85: FILE: fs/ext2/dir.c:361:
+				de = EXT2_DIR_ADJUST_TAIL_ADDR(page_start, de, dir->i_sb->s_blocksize);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#110: FILE: fs/ext2/dir.c:466:
+		kaddr = page_start = page_address(page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: fs/ext2/dir.c:472:
+^I^I^Ikaddr += PAGE_CACHE_SIZE - $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: fs/ext2/dir.c:476:
+^I^I^Ide = EXT2_DIR_ADJUST_TAIL_ADDR(page_start, de, chunk_size);^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#159: FILE: fs/ext2/dir.c:618:
+	if (chunk_size < EXT2_DIR_MAX_REC_LEN) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#180: FILE: fs/ext2/dir.c:649:
+		kaddr = page_start = page_address(page);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offs' - possible side-effects?
#201: FILE: include/linux/ext2_fs.h:561:
+#define EXT2_DIR_ADJUST_TAIL_OFFS(offs, bsize) \
+	((((offs) & ((bsize) -1)) == EXT2_DIR_MAX_REC_LEN) ? \
+	((offs) + (bsize) - EXT2_DIR_MAX_REC_LEN):(offs))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bsize' - possible side-effects?
#201: FILE: include/linux/ext2_fs.h:561:
+#define EXT2_DIR_ADJUST_TAIL_OFFS(offs, bsize) \
+	((((offs) & ((bsize) -1)) == EXT2_DIR_MAX_REC_LEN) ? \
+	((offs) + (bsize) - EXT2_DIR_MAX_REC_LEN):(offs))

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#202: FILE: include/linux/ext2_fs.h:562:
+	((((offs) & ((bsize) -1)) == EXT2_DIR_MAX_REC_LEN) ? \
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#203: FILE: include/linux/ext2_fs.h:563:
+	((offs) + (bsize) - EXT2_DIR_MAX_REC_LEN):(offs))
 	                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'de' - possible side-effects?
#205: FILE: include/linux/ext2_fs.h:565:
+#define EXT2_DIR_ADJUST_TAIL_ADDR(page, de, bsize) \
+	(((((char*)(de) - (page)) & ((bsize) - 1)) == EXT2_DIR_MAX_REC_LEN) ? \
+	((ext2_dirent*)((char*)(de) + (bsize) - EXT2_DIR_MAX_REC_LEN)):(de))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bsize' - possible side-effects?
#205: FILE: include/linux/ext2_fs.h:565:
+#define EXT2_DIR_ADJUST_TAIL_ADDR(page, de, bsize) \
+	(((((char*)(de) - (page)) & ((bsize) - 1)) == EXT2_DIR_MAX_REC_LEN) ? \
+	((ext2_dirent*)((char*)(de) + (bsize) - EXT2_DIR_MAX_REC_LEN)):(de))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#206: FILE: include/linux/ext2_fs.h:566:
+	(((((char*)(de) - (page)) & ((bsize) - 1)) == EXT2_DIR_MAX_REC_LEN) ? \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#207: FILE: include/linux/ext2_fs.h:567:
+	((ext2_dirent*)((char*)(de) + (bsize) - EXT2_DIR_MAX_REC_LEN)):(de))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#207: FILE: include/linux/ext2_fs.h:567:
+	((ext2_dirent*)((char*)(de) + (bsize) - EXT2_DIR_MAX_REC_LEN)):(de))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#207: FILE: include/linux/ext2_fs.h:567:
+	((ext2_dirent*)((char*)(de) + (bsize) - EXT2_DIR_MAX_REC_LEN)):(de))
 	                                                              ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40128.commit.16333c346812b10330ef453472146df62a4a5932 total: 6 errors, 2 warnings, 10 checks, 161 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40128.commit.16333c346812b10330ef453472146df62a4a5932 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
