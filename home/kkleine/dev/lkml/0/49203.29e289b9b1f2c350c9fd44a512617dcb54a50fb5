WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: lib/ioremap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#88: FILE: lib/ioremap.c:11:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#89: FILE: lib/ioremap.c:12:
+#include <asm/pgtable.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: lib/ioremap.c:15:
+static int ioremap_pte_range(pmd_t *pmd, unsigned long addr,
+		unsigned long end, unsigned long phys_addr, pgprot_t prot)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#102: FILE: lib/ioremap.c:25:
+		BUG_ON(!pte_none(*pte));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: lib/ioremap.c:33:
+static inline int ioremap_pmd_range(pud_t *pud, unsigned long addr,
+		unsigned long end, unsigned long phys_addr, pgprot_t prot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: lib/ioremap.c:51:
+static inline int ioremap_pud_range(pgd_t *pgd, unsigned long addr,
+		unsigned long end, unsigned long phys_addr, pgprot_t prot)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: lib/ioremap.c:76:
+	BUG_ON(addr >= end);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: lib/ioremap.c:85:
+		err = ioremap_pud_range(pgd, addr, next, phys_addr+addr, prot);
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49203.commit.29e289b9b1f2c350c9fd44a512617dcb54a50fb5 total: 0 errors, 6 warnings, 4 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49203.commit.29e289b9b1f2c350c9fd44a512617dcb54a50fb5 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
