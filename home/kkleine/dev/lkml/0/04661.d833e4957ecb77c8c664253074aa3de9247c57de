WARNING:INLINE: plain inline is preferred over __inline__
#37: FILE: net/x25/x25_proc.c:168:
+static __inline__ struct x25_forward *x25_get_forward_idx(loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: net/x25/x25_proc.c:201:
+			f = list_entry(x25_forward_list.next,
+					struct x25_forward, node);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: net/x25/x25_proc.c:207:
+^Ielse $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#81: FILE: net/x25/x25_proc.c:212:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#93: FILE: net/x25/x25_proc.c:224:
+		seq_printf(seq, "lci dev1       dev2\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: net/x25/x25_proc.c:231:
+	seq_printf(seq, "%d %-10s %-10s\n",
+			f->lci, f->dev1->name, f->dev2->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: net/x25/x25_proc.c:235:
+} $

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#113: FILE: net/x25/x25_proc.c:251:
+static struct seq_operations x25_seq_forward_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#139: FILE: net/x25/x25_proc.c:289:
+static struct file_operations x25_seq_forward_fops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#155: FILE: net/x25/x25_proc.c:318:
+	p = create_proc_entry("forward", S_IRUGO, x25_proc_dir);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04661.commit.d833e4957ecb77c8c664253074aa3de9247c57de total: 2 errors, 5 warnings, 3 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04661.commit.d833e4957ecb77c8c664253074aa3de9247c57de has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
