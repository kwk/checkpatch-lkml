CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer_mapping"
#108: FILE: fs/buffer.c:770:
+	if (buffer_mapping == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'bh->b_assoc_buffers.prev'
#189: FILE: fs/buffer.c:2980:
+				struct buffer_head *prev = BH_ENTRY(bh->
+					b_assoc_buffers.prev);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: fs/inode.c:199:
+ ^IINIT_LIST_HEAD(&inode->i_data.metadata_buffers.b_assoc_buffers);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: fs/inode.c:199:
+ ^IINIT_LIST_HEAD(&inode->i_data.metadata_buffers.b_assoc_buffers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/inode.c:199:
+ ^IINIT_LIST_HEAD(&inode->i_data.metadata_buffers.b_assoc_buffers);$

CHECK:CAMELCASE: Avoid CamelCase: <File_EIO>
#245: FILE: include/linux/buffer_head_struct.h:124:
+BUFFER_FNS(File_EIO, file_io_error)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#259: FILE: include/linux/fs.h:404:
+	/* Fake buffer head in the list of metadata buffers belonging to block
+	   device address space */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#259: FILE: include/linux/fs.h:404:
+	   device address space */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: include/linux/fs.h:405:
+^Istruct buffer_head^Imetadata_buffers;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30867.commit.c89adab986e58a0a5df1a284238ed1d8e5b21430 total: 2 errors, 5 warnings, 2 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30867.commit.c89adab986e58a0a5df1a284238ed1d8e5b21430 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
