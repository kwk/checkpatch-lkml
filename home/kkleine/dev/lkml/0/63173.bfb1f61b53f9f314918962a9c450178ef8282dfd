WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#42: FILE: drivers/isdn/i4l/isdn_common.c:345:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d] NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#43: FILE: drivers/isdn/i4l/isdn_common.c:346:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d] NULL\n",
+			cmd->command, cmd->driver);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#44: FILE: drivers/isdn/i4l/isdn_common.c:347:
+		return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#47: FILE: drivers/isdn/i4l/isdn_common.c:350:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d]->interface NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: drivers/isdn/i4l/isdn_common.c:351:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d]->interface NULL\n",
+			cmd->command, cmd->driver);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#49: FILE: drivers/isdn/i4l/isdn_common.c:352:
+		return(1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'di < 0'
#58: FILE: drivers/isdn/i4l/isdn_common.c:1811:
+	if ((di < 0) || (ch < 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch < 0'
#58: FILE: drivers/isdn/i4l/isdn_common.c:1811:
+	if ((di < 0) || (ch < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#59: FILE: drivers/isdn/i4l/isdn_common.c:1812:
+		printk(KERN_WARNING "%s: called with invalid drv(%d) or channel(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: drivers/isdn/i4l/isdn_common.c:1813:
+		printk(KERN_WARNING "%s: called with invalid drv(%d) or channel(%d)\n",
+			__FUNCTION__, di, ch);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#60: FILE: drivers/isdn/i4l/isdn_common.c:1813:
+			__FUNCTION__, di, ch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#91: FILE: drivers/isdn/i4l/isdn_common.c:344:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d] NULL\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isdn_command', this function's name, in a string
#91: FILE: drivers/isdn/i4l/isdn_common.c:344:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d] NULL\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/isdn/i4l/isdn_common.c:345:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d] NULL\n",
+			cmd->command, cmd->driver);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#93: FILE: drivers/isdn/i4l/isdn_common.c:346:
+		return(1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#96: FILE: drivers/isdn/i4l/isdn_common.c:349:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d]->interface NULL\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isdn_command', this function's name, in a string
#96: FILE: drivers/isdn/i4l/isdn_common.c:349:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d]->interface NULL\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/isdn/i4l/isdn_common.c:350:
+		printk(KERN_WARNING "isdn_command command(%x) dev->drv[%d]->interface NULL\n",
+			cmd->command, cmd->driver);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#98: FILE: drivers/isdn/i4l/isdn_common.c:351:
+		return(1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'di < 0'
#107: FILE: drivers/isdn/i4l/isdn_common.c:1916:
+	if ((di < 0) || (ch < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch < 0'
#107: FILE: drivers/isdn/i4l/isdn_common.c:1916:
+	if ((di < 0) || (ch < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#108: FILE: drivers/isdn/i4l/isdn_common.c:1917:
+		printk(KERN_WARNING "%s: called with invalid drv(%d) or channel(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/isdn/i4l/isdn_common.c:1918:
+		printk(KERN_WARNING "%s: called with invalid drv(%d) or channel(%d)\n",
+			__FUNCTION__, di, ch);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#109: FILE: drivers/isdn/i4l/isdn_common.c:1918:
+			__FUNCTION__, di, ch);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63173.commit.bfb1f61b53f9f314918962a9c450178ef8282dfd total: 4 errors, 10 warnings, 10 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63173.commit.bfb1f61b53f9f314918962a9c450178ef8282dfd has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
