WARNING:TYPO_SPELLING: 'rised' may be misspelled - perhaps 'raised'?
#29: 
but questions has been rised if this couldn't be made into a generic
                       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'it'
#38: 
evdev-driver except that it it registers one device when it is loaded

WARNING:TYPO_SPELLING: 'functionallity' may be misspelled - perhaps 'functionality'?
#57: 
the functionallity be included in the evdev-driver?
    ^^^^^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: drivers/input/Kconfig:120:
+config INPUT_WACOMPROXY
+	tristate "Wacom tablet proxy device"
+	default y
+	depends on EXPERIMENTAL
+	---help---
+	  Say Y here if you want a proxy device that will emulate the
+	  latest connected Wacom device when no Wacom tablet is connected.
+	  The initial device it will emulate is a Wacom Penpartner. Only
+	  one Wacom tablet will be available at a time, and the tablets
+	  are opened in the order they are connected. The device is
+	  accessible as a single char device 10:xx - /dev/input/wacomproxy.
+
+	  The minor device used can be found in the
+	  /sys/class/input/wacomproxy/dev file once the module has
+	  been loaded.
+
+	  To compile this driver as a module, choose M here, the module
+	  will be called wacomproxy.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/input/wacomproxy.c:1:
+/* -*- linux-c -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#117: FILE: drivers/input/wacomproxy.c:3:
+ * Copyright (c) 2006 Magnus Vigerlöf
                                    ^

WARNING:TYPO_SPELLING: 'FINDOUT' may be misspelled - perhaps 'FIND OUT'?
#166: FILE: drivers/input/wacomproxy.c:52:
+ * FINDOUT: GRAB, what should the semantics be?
    ^^^^^^^

WARNING:TYPO_SPELLING: 'FINDOUT' may be misspelled - perhaps 'FIND OUT'?
#167: FILE: drivers/input/wacomproxy.c:53:
+ * FINDOUT: Should the device really be registered in 'misc'-major?
    ^^^^^^^

WARNING:TYPO_SPELLING: 'FINDOUT' may be misspelled - perhaps 'FIND OUT'?
#168: FILE: drivers/input/wacomproxy.c:54:
+ * FINDOUT: Is there a need to support several connected tablets?
    ^^^^^^^

WARNING:TYPO_SPELLING: 'possibillity' may be misspelled - perhaps 'possibility'?
#194: FILE: drivers/input/wacomproxy.c:80:
+/* Add the possibillity to force return of ENODEV when opening, */
            ^^^^^^^^^^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#201: FILE: drivers/input/wacomproxy.c:87:
+MODULE_AUTHOR("Magnus Vigerlöf <wigge@bigfoot.com>");
                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#208: FILE: drivers/input/wacomproxy.c:94:
+static int exclusivegrab = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: drivers/input/wacomproxy.c:97:
+MODULE_PARM_DESC(exclusivegrab, "Defines behaviour of the GRAB ioctl, y "
+		 "gives the same behaviour as eventX.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#213: FILE: drivers/input/wacomproxy.c:99:
+static int debugconnect = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#216: FILE: drivers/input/wacomproxy.c:102:
+MODULE_PARM_DESC(debugconnect, "Defines whether to print the names of "
+		 "the ignored devices, y will print the names.");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#218: FILE: drivers/input/wacomproxy.c:104:
+static short openfailcount = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#222: FILE: drivers/input/wacomproxy.c:108:
+MODULE_PARM_DESC(openfailcount, "Number of upcoming open that will fail"
+		 " with -ENODEV.");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#249: FILE: drivers/input/wacomproxy.c:135:
+	const char* devdesc;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#256: FILE: drivers/input/wacomproxy.c:142:
+static const char* wp_tabletlist[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#256: FILE: drivers/input/wacomproxy.c:142:
+static const char* wp_tabletlist[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#323: FILE: drivers/input/wacomproxy.c:209:
+static struct wp_devnode* wp_currenthndl;

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/input/wacomproxy.c:218:
+                        unsigned int maxlen, void __user *p)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/input/wacomproxy.c:218:
+                        unsigned int maxlen, void __user *p)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#360: FILE: drivers/input/wacomproxy.c:246:
+static int wp_open(struct inode *inodp, struct file *filp)
                                                      ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: drivers/input/wacomproxy.c:255:
+	if (!(list = kzalloc(sizeof(*list), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#382: FILE: drivers/input/wacomproxy.c:268:
+				printk(KERN_WARNING WP_MODNAME

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#391: FILE: drivers/input/wacomproxy.c:277:
+static int wp_fasync(int fd, struct file *filp, int on)
                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#395: FILE: drivers/input/wacomproxy.c:281:
+	int retval = fasync_helper(fd, filp, on, &list->fasync);
 	                               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: drivers/input/wacomproxy.c:282:
+	int retval = fasync_helper(fd, filp, on, &list->fasync);
+	return retval < 0 ? retval : 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#399: FILE: drivers/input/wacomproxy.c:285:
+static int wp_release(struct inode *inodp, struct file *filp)
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#422: FILE: drivers/input/wacomproxy.c:308:
+	wp_fasync(-1, filp, 0);
 	              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#427: FILE: drivers/input/wacomproxy.c:313:
+static ssize_t wp_read(struct file *filp, char __user *buffer,
                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/input/wacomproxy.c:335:
+	retval = wait_event_interruptible(wp_waitq,
+			(list->head != list->tail

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#450: FILE: drivers/input/wacomproxy.c:336:
+			(list->head != list->tail
+			 || wp_proxyhndl.tabletid != list->tabletid));

CHECK:SPACING: No space is necessary after a cast
#460: FILE: drivers/input/wacomproxy.c:346:
+		event = (struct input_event *) list->buffer + list->tail;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#469: FILE: drivers/input/wacomproxy.c:355:
+static int wp_ioctl(struct inode *inodp, struct file *filp,
                                                       ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: drivers/input/wacomproxy.c:375:
+		if(copy_to_user(ip, &wp_proxydev.id, sizeof(struct input_id)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#508: FILE: drivers/input/wacomproxy.c:394:
+						printk(KERN_WARNING WP_MODNAME

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#514: FILE: drivers/input/wacomproxy.c:400:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#514: FILE: drivers/input/wacomproxy.c:400:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#534: FILE: drivers/input/wacomproxy.c:420:
+			if ((_IOC_NR(cmd) & ~EV_MAX) == _IOC_NR(EVIOCGBIT(0,0))) {
 			                                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#537: FILE: drivers/input/wacomproxy.c:423:
+				int len;
+				switch (_IOC_NR(cmd) & EV_MAX) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: drivers/input/wacomproxy.c:456:
+				int t = _IOC_NR(cmd) & ABS_MAX;
+				abs.value =   wp_proxydev.abs[t];

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#584: FILE: drivers/input/wacomproxy.c:470:
+static unsigned int wp_poll(struct file *filp, poll_table *wait)
                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#589: FILE: drivers/input/wacomproxy.c:475:
+	poll_wait(filp, &wp_waitq, wait);
 	          ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#601: FILE: drivers/input/wacomproxy.c:487:
+static struct file_operations wp_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#622: FILE: drivers/input/wacomproxy.c:508:
+		if (!exclusivegrab || !wp_devgrabcount
+		    || list->flags & WP_FLAG_GRAB) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#684: FILE: drivers/input/wacomproxy.c:570:
+					printk(KERN_WARNING WP_MODNAME

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#689: FILE: drivers/input/wacomproxy.c:575:
+		}
+		else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#690: FILE: drivers/input/wacomproxy.c:576:
+			printk(KERN_WARNING WP_MODNAME

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#700: FILE: drivers/input/wacomproxy.c:586:
+	int c, tab=-1;
 	          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#700: FILE: drivers/input/wacomproxy.c:586:
+	int c, tab=-1;
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#703: FILE: drivers/input/wacomproxy.c:589:
+		printk(KERN_ERR WP_MODNAME ": Attempting to attach unnamed "

WARNING:SPLIT_STRING: quoted string split across lines
#704: FILE: drivers/input/wacomproxy.c:590:
+		printk(KERN_ERR WP_MODNAME ": Attempting to attach unnamed "
+		       "tablet device.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#708: FILE: drivers/input/wacomproxy.c:594:
+	for (c=0; wp_tabletlist[c]; c++) {
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#709: FILE: drivers/input/wacomproxy.c:595:
+		if(!strcmp(dev->name, wp_tabletlist[c])) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#716: FILE: drivers/input/wacomproxy.c:602:
+			printk(KERN_INFO WP_MODNAME ": Skipping unknown device "

WARNING:SPLIT_STRING: quoted string split across lines
#717: FILE: drivers/input/wacomproxy.c:603:
+			printk(KERN_INFO WP_MODNAME ": Skipping unknown device "
+			       "'%s'.\n", dev->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: drivers/input/wacomproxy.c:607:
+ ^Iprintk(KERN_INFO WP_MODNAME ": Attaching '%s'\n", dev->name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#721: FILE: drivers/input/wacomproxy.c:607:
+ ^Iprintk(KERN_INFO WP_MODNAME ": Attaching '%s'\n", dev->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/input/wacomproxy.c:607:
+ ^Iprintk(KERN_INFO WP_MODNAME ": Attaching '%s'\n", dev->name);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#721: FILE: drivers/input/wacomproxy.c:607:
+ 	printk(KERN_INFO WP_MODNAME ": Attaching '%s'\n", dev->name);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: drivers/input/wacomproxy.c:608:
+	if (!(devh = kzalloc(sizeof(*devh), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#820: FILE: drivers/input/wacomproxy.c:706:
+	if ((c = misc_register(&wp_miscdev)))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55732.commit.5964b0397ee00390ab978d0444aedc6495dc745e total: 19 errors, 38 warnings, 7 checks, 764 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55732.commit.5964b0397ee00390ab978d0444aedc6495dc745e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
