WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: include/linux/srog.h:1:
+#ifndef _LINUX_SROG_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: include/linux/srog.h:8:
+extern void *srog_alloc(void *srogp, unsigned long size, gfp_t gfp_mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: include/linux/srog.h:9:
+extern void srog_free(void *srogp, void *obj);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/linux/srog.h:10:
+extern void srog_link(void *srogp1, void *srogp2);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: mm/srog.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#85: FILE: mm/srog.c:2:
+ * mm/srog.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#87: FILE: mm/srog.c:4:
+ * Written by Peter Zijlstra <a.p.zijlstra@chello.nl>
                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#185: FILE: mm/srog.c:102:
+#define next_srog(s) list_entry((s)->list.next, typeof(*(s)), list)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#187: FILE: mm/srog.c:104:
+#define INC_PTR(p, a) ((typeof(p))(((void *)p) + a))

WARNING:MINMAX: max() should probably be max_t(unsigned long, size, sizeof(struct srog_free_area))
#215: FILE: mm/srog.c:132:
+	size = max(size, (unsigned long)sizeof(struct srog_free_area));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#224: FILE: mm/srog.c:141:
+	BUG_ON(srog->magic != SROG_MAGIC);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: mm/srog.c:151:
+		struct srog_free_area *sfa, *prev = &srog_iter->free;
+		for (sfa = prev->next; sfa; prev = sfa, sfa = sfa->next) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: mm/srog.c:183:
+		BUG_ON(!srogp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: mm/srog.c:212:
+	BUG_ON(srog->magic != SROG_MAGIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: mm/srog.c:220:
+		struct srog_head *srog_iter;
+		list_for_each_entry(srog_iter, &srog->list, list) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#315: FILE: mm/srog.c:232:
+	BUG_ON(((unsigned long)(obj - (void *)srog)) >

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#323: FILE: mm/srog.c:240:
+		if ((void*)prev < obj)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'seperatly' may be misspelled - perhaps 'separately'?
#358: FILE: mm/srog.c:275:
+ *	srog_link - link two seperatly allocated SROGs into one
   	                     ^^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: mm/srog.c:284:
+	BUG_ON(srog1->magic != SROG_MAGIC);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#368: FILE: mm/srog.c:285:
+	BUG_ON(srog2->magic != SROG_MAGIC);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48522.commit.d5dbc9c50e6b3d42d3f2254da632d1eab64cadf5 total: 1 errors, 14 warnings, 5 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48522.commit.d5dbc9c50e6b3d42d3f2254da632d1eab64cadf5 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
