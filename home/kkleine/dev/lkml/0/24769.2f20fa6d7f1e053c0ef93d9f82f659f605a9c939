ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: ethtool.c:961:
+        { "vioc", vioc_dump_regs },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: ethtool.c:961:
+        { "vioc", vioc_dump_regs },$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: vioc.c:1:
+/* Copyright 2006 Fabric7 Systems, Inc */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#99: FILE: vioc.c:18:
+	struct regs_line *reg_info = (struct regs_line *) regs->data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#101: FILE: vioc.c:20:
+	printf("%s: Enter\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#109: FILE: vioc.c:28:
+	num_regs = regs->len/VIOC_REGS_LINE_SIZE;
 	                    ^

ERROR:SPACING: space required before the open brace '{'
#111: FILE: vioc.c:30:
+	for (i = 0; i < num_regs; i++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#111: FILE: vioc.c:30:
+	for (i = 0; i < num_regs; i++){
+		printf("%08x = %08x\n", reg_info[i].addr, reg_info[i].data);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24769.commit.2f20fa6d7f1e053c0ef93d9f82f659f605a9c939 total: 2 errors, 5 warnings, 2 checks, 56 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24769.commit.2f20fa6d7f1e053c0ef93d9f82f659f605a9c939 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
