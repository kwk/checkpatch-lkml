CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ac)...) over kzalloc(sizeof(struct acpi_ac)...)
#67: FILE: drivers/acpi/ac.c:224:
+	ac = kzalloc(sizeof(struct acpi_ac), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mem_device)...) over kzalloc(sizeof(struct acpi_memory_device)...)
#112: FILE: drivers/acpi/acpi_memhotplug.c:390:
+	mem_device = kzalloc(sizeof(struct acpi_memory_device), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#147: FILE: drivers/acpi/asus_acpi.c:1249:
+	    (struct asus_hotk *)kzalloc(sizeof(struct asus_hotk), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*battery)...) over kzalloc(sizeof(struct acpi_battery)...)
#193: FILE: drivers/acpi/battery.c:691:
+	battery = kzalloc(sizeof(struct acpi_battery), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*event)...) over kzalloc(sizeof(struct acpi_bus_event)...)
#226: FILE: drivers/acpi/bus.c:298:
+	event = kzalloc(sizeof(struct acpi_bus_event), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*button)...) over kzalloc(sizeof(struct acpi_button)...)
#239: FILE: drivers/acpi/button.c:299:
+	button = kzalloc(sizeof(struct acpi_button), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*container)...) over kzalloc(sizeof(struct acpi_container)...)
#256: FILE: drivers/acpi/container.c:99:
+	container = kzalloc(sizeof(struct acpi_container), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fan)...) over kzalloc(sizeof(struct acpi_fan)...)
#344: FILE: drivers/acpi/fan.c:189:
+	fan = kzalloc(sizeof(struct acpi_fan), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ec_hc)...) over kzalloc(sizeof(struct acpi_ec_hc)...)
#360: FILE: drivers/acpi/i2c_ec.c:312:
+	ec_hc = kzalloc(sizeof(struct acpi_ec_hc), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*smbus)...) over kzalloc(sizeof(struct acpi_ec_smbus)...)
#367: FILE: drivers/acpi/i2c_ec.c:316:
+	smbus = kzalloc(sizeof(struct acpi_ec_smbus), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct acpi_pci_data)...)
#407: FILE: drivers/acpi/pci_bind.c:131:
+	data = kzalloc(sizeof(struct acpi_pci_data), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#426: FILE: drivers/acpi/pci_bind.c:280:
+	pathname = (char *)kzalloc(ACPI_PATHNAME_MAX, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#439: FILE: drivers/acpi/pci_bind.c:329:
+	pathname = (char *)kzalloc(ACPI_PATHNAME_MAX, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct acpi_pci_data)...)
#452: FILE: drivers/acpi/pci_bind.c:340:
+	data = kzalloc(sizeof(struct acpi_pci_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*entry)...) over kzalloc(sizeof(struct acpi_prt_entry)...)
#482: FILE: drivers/acpi/pci_irq.c:88:
+	entry = kzalloc(sizeof(struct acpi_prt_entry), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#501: FILE: drivers/acpi/pci_irq.c:157:
+	pathname = (char *)kzalloc(ACPI_PATHNAME_MAX, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*link)...) over kzalloc(sizeof(struct acpi_pci_link)...)
#544: FILE: drivers/acpi/pci_link.c:720:
+	link = kzalloc(sizeof(struct acpi_pci_link), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*root)...) over kzalloc(sizeof(struct acpi_pci_root)...)
#560: FILE: drivers/acpi/pci_root.c:167:
+	root = kzalloc(sizeof(struct acpi_pci_root), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*resource)...) over kzalloc(sizeof(struct acpi_power_resource)...)
#576: FILE: drivers/acpi/power.c:538:
+	resource = kzalloc(sizeof(struct acpi_power_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pr)...) over kzalloc(sizeof(struct acpi_processor)...)
#593: FILE: drivers/acpi/processor_core.c:618:
+	pr = kzalloc(sizeof(struct acpi_processor), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sbs)...) over kzalloc(sizeof(struct acpi_sbs)...)
#610: FILE: drivers/acpi/sbs.c:1579:
+	sbs = kzalloc(sizeof(struct acpi_sbs), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#636: FILE: drivers/acpi/thermal.c:909:
+	active = kzalloc(ACPI_THERMAL_MAX_ACTIVE * sizeof(int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tz)...) over kzalloc(sizeof(struct acpi_thermal)...)
#655: FILE: drivers/acpi/thermal.c:1269:
+	tz = kzalloc(sizeof(struct acpi_thermal), GFP_KERNEL);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43719.commit.67a5f3ee5a8a9df1e90781e421d24346f161af8c total: 0 errors, 5 warnings, 18 checks, 501 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43719.commit.67a5f3ee5a8a9df1e90781e421d24346f161af8c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
