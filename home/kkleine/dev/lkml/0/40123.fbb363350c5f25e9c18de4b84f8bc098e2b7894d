WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#99: FILE: security/commoncap.c:101:
+	 * cap_capset_set will intersect them anyway */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: security/commoncap.c:110:
+	target->cap_inheritable = cap_intersect (*effective, *inheritable);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: security/commoncap.c:119:
+	cap_set_full (bprm->cap_inheritable);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: security/commoncap.c:121:
+	cap_set_full (bprm->cap_effective);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: security/commoncap.c:150:
+	new_effective = cap_intersect (bprm->cap_permitted, bprm->cap_effective);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: security/commoncap.c:151:
+	new_effective = cap_intersect (new_effective, cap_bset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: security/commoncap.c:152:
+	working = cap_intersect (bprm->cap_inheritable,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: security/commoncap.c:154:
+	working = cap_intersect (working, current->cap_inheritable);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: security/commoncap.c:155:
+	new_effective = cap_combine (new_effective, working);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: security/commoncap.c:171:
+				new_effective = cap_intersect (new_permitted,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: security/commoncap.c:189:
+	cap_task_post_setuid (old_ruid, old_euid, old_suid, LSM_SETID_RES);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#215: FILE: security/commoncap.c:198:
+	   test between the old and new capability sets. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#217: FILE: security/commoncap.c:200:
+	return ((bprm->is_suid || bprm->is_sgid)
+		&& !cap_issubset (bprm->cap_permitted,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: security/commoncap.c:200:
+		&& !cap_issubset (bprm->cap_permitted,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#227: FILE: security/commoncap.c:267:
+		current->cap_inheritable
+			= cap_intersect (current->cap_inheritable,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: security/commoncap.c:267:
+			= cap_intersect (current->cap_inheritable,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#236: FILE: security/commoncap.c:274:
+	if (old_euid != 0 && current->euid == 0 && !current->keep_capabilities) {
 		current->cap_effective = current->cap_permitted;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40123.commit.fbb363350c5f25e9c18de4b84f8bc098e2b7894d total: 0 errors, 15 warnings, 2 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40123.commit.fbb363350c5f25e9c18de4b84f8bc098e2b7894d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
