WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/net/vioc/f7/spp.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: drivers/net/vioc/f7/spp.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/net/vioc/f7/spp.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/net/vioc/f7/spp.h:39:
+#define SPP_SIM_PMM_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#79: FILE: drivers/net/vioc/f7/spp.h:39:
+#define SPP_SIM_PMM_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#80: FILE: drivers/net/vioc/f7/spp.h:39:
VREG_BMC_REG_R1)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#81: FILE: drivers/net/vioc/f7/spp.h:40:
+#define VIOCCP_SPP_SIM_PMM_CMDREG              \
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/net/vioc/f7/spp.h:41:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/net/vioc/f7/spp.h:41:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/net/vioc/f7/spp.h:41:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/net/vioc/f7/spp.h:42:
+#define SPP_PMM_SIM_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/net/vioc/f7/spp.h:42:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 
+#define SPP_PMM_SIM_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#84: FILE: drivers/net/vioc/f7/spp.h:42:
+#define SPP_PMM_SIM_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/net/vioc/f7/spp.h:42:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 
VREG_BMC_REG_R2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#86: FILE: drivers/net/vioc/f7/spp.h:43:
+#define VIOCCP_SPP_PMM_SIM_CMDREG              \
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/net/vioc/f7/spp.h:44:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/net/vioc/f7/spp.h:44:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/net/vioc/f7/spp.h:44:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/net/vioc/f7/spp.h:45:
+#define SPP_PMM_BMC_HB_CMDREG  GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/net/vioc/f7/spp.h:45:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 
+#define SPP_PMM_BMC_HB_CMDREG  GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#89: FILE: drivers/net/vioc/f7/spp.h:45:
+#define SPP_PMM_BMC_HB_CMDREG  GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/net/vioc/f7/spp.h:45:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 
VREG_BMC_REG_R3)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/net/vioc/f7/spp.h:46:
+#define SPP_PMM_BMC_SIG_CMDREG GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#91: FILE: drivers/net/vioc/f7/spp.h:46:
+#define SPP_PMM_BMC_SIG_CMDREG GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/net/vioc/f7/spp.h:47:
+#define SPP_PMM_BMC_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#93: FILE: drivers/net/vioc/f7/spp.h:47:
+#define SPP_PMM_BMC_CMDREG     GETRELADDR(SPP_MODULE, SPP_CMD_REG_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/net/vioc/f7/spp.h:51:
+#define SPP_SIM_PMM_DATA GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#98: FILE: drivers/net/vioc/f7/spp.h:51:
+#define SPP_SIM_PMM_DATA GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#100: FILE: drivers/net/vioc/f7/spp.h:52:
+#define VIOCCP_SPP_SIM_PMM_DATA                        \
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/net/vioc/f7/spp.h:53:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/net/vioc/f7/spp.h:53:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/net/vioc/f7/spp.h:53:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/net/vioc/f7/spp.h:54:
+                       VIOCCP_GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#113: FILE: drivers/net/vioc/f7/spp.h:64:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: drivers/net/vioc/f7/spp_msgdata.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: drivers/net/vioc/f7/spp_msgdata.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/net/vioc/f7/spp_msgdata.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/net/vioc/f7/spp_msgdata.h:38:
+#define SPP_VIOC_ID_OFFSET GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#162: FILE: drivers/net/vioc/f7/spp_msgdata.h:38:
+#define SPP_VIOC_ID_OFFSET GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/net/vioc/f7/spp_msgdata.h:39:
+#define VIOCCP_SPP_VIOC_ID_OFFSET VIOCCP_GETRELADDR(SPP_MODULE, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: drivers/net/vioc/f7/spp_msgdata.h:39:
+#define VIOCCP_SPP_VIOC_ID_OFFSET VIOCCP_GETRELADDR(SPP_MODULE, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/net/vioc/f7/spp_msgdata.h:46:
+#define SPP_UOS_RESET_TYPE_OFFSET GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#172: FILE: drivers/net/vioc/f7/spp_msgdata.h:46:
+#define SPP_UOS_RESET_TYPE_OFFSET GETRELADDR(SPP_MODULE, SPP_SIM_PMM_BANK, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/net/vioc/f7/spp_msgdata.h:47:
+#define VIOCCP_SPP_UOS_RESET_TYPE_OFFSET VIOCCP_GETRELADDR(SPP_MODULE, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#174: FILE: drivers/net/vioc/f7/spp_msgdata.h:47:
+#define VIOCCP_SPP_UOS_RESET_TYPE_OFFSET VIOCCP_GETRELADDR(SPP_MODULE, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: drivers/net/vioc/f7/spp_msgdata.h:54:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#190: FILE: drivers/net/vioc/f7/sppapi.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#205: FILE: drivers/net/vioc/f7/sppapi.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#206: FILE: drivers/net/vioc/f7/sppapi.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#220: FILE: drivers/net/vioc/f7/sppapi.h:31:
+/*
+ * COMMAND REGISTER is encoded as follows:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/net/vioc/f7/sppapi.h:43:
+#define SPP_FACILITY_MASK_SHIFTED      (SPP_FACILITY_MASK >> $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#232: FILE: drivers/net/vioc/f7/sppapi.h:43:
+#define SPP_FACILITY_MASK_SHIFTED      (SPP_FACILITY_MASK >> 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#247: FILE: drivers/net/vioc/f7/sppapi.h:57:
+#define SPP_GET_KEY(m)                         \
+    ((m & SPP_KEY_MASK) >> SPP_KEY_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/net/vioc/f7/sppapi.h:58:
+    ((m & SPP_KEY_MASK) >> SPP_KEY_SHIFT)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#250: FILE: drivers/net/vioc/f7/sppapi.h:60:
+#define SPP_GET_FACILITY(m)                            \
+    ((m & SPP_FACILITY_MASK) >> SPP_FACILITY_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/net/vioc/f7/sppapi.h:61:
+    ((m & SPP_FACILITY_MASK) >> SPP_FACILITY_SHIFT)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#253: FILE: drivers/net/vioc/f7/sppapi.h:63:
+#define SPP_GET_D(m)                                   \
+    ((m & SPP_D_MASK) >> SPP_D_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/net/vioc/f7/sppapi.h:64:
+    ((m & SPP_D_MASK) >> SPP_D_SHIFT)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#256: FILE: drivers/net/vioc/f7/sppapi.h:66:
+#define SPP_GET_RC(m)                                  \
+    ((m & SPP_D_MASK) >> SPP_D_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/net/vioc/f7/sppapi.h:67:
+    ((m & SPP_D_MASK) >> SPP_D_SHIFT)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#259: FILE: drivers/net/vioc/f7/sppapi.h:69:
+#define SPP_GET_UNIQID(m)                                      \
+    ((m & SPP_UNIQID_MASK) >> SPP_UNIQID_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/net/vioc/f7/sppapi.h:70:
+    ((m & SPP_UNIQID_MASK) >> SPP_UNIQID_SHIFT)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#262: FILE: drivers/net/vioc/f7/sppapi.h:72:
+#define SPP_GET_CHKSUM(m)                                      \
+    ((m & SPP_CHKSUM_MASK) >> SPP_CHKSUM_SHIFT)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/net/vioc/f7/sppapi.h:73:
+    ((m & SPP_CHKSUM_MASK) >> SPP_CHKSUM_SHIFT)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#265: FILE: drivers/net/vioc/f7/sppapi.h:75:
+#define SPP_SET_KEY(m, key) do { \
+    m = ((m & ~SPP_KEY_MASK) | ((key << SPP_KEY_SHIFT) & SPP_KEY_MASK)) ; \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'key' may be better as '(key)' to avoid precedence issues
#265: FILE: drivers/net/vioc/f7/sppapi.h:75:
+#define SPP_SET_KEY(m, key) do { \
+    m = ((m & ~SPP_KEY_MASK) | ((key << SPP_KEY_SHIFT) & SPP_KEY_MASK)) ; \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#265: FILE: drivers/net/vioc/f7/sppapi.h:75:
+#define SPP_SET_KEY(m, key) do { \
+    m = ((m & ~SPP_KEY_MASK) | ((key << SPP_KEY_SHIFT) & SPP_KEY_MASK)) ; \
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/net/vioc/f7/sppapi.h:76:
+    m = ((m & ~SPP_KEY_MASK) | ((key << SPP_KEY_SHIFT) & SPP_KEY_MASK)) ; \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#269: FILE: drivers/net/vioc/f7/sppapi.h:79:
+#define SPP_SET_FACILITY(m, facility) do { \
+    m = ((m & ~SPP_FACILITY_MASK) | ((facility << SPP_FACILITY_SHIFT) & 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'facility' may be better as '(facility)' to avoid precedence issues
#269: FILE: drivers/net/vioc/f7/sppapi.h:79:
+#define SPP_SET_FACILITY(m, facility) do { \
+    m = ((m & ~SPP_FACILITY_MASK) | ((facility << SPP_FACILITY_SHIFT) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/net/vioc/f7/sppapi.h:80:
+    m = ((m & ~SPP_FACILITY_MASK) | ((facility << SPP_FACILITY_SHIFT) & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/net/vioc/f7/sppapi.h:80:
+    m = ((m & ~SPP_FACILITY_MASK) | ((facility << SPP_FACILITY_SHIFT) & $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#280: FILE: drivers/net/vioc/f7/sppapi.h:89:
+#define SPP_SET_D(m, D) do { \
+    m = ((m & ~SPP_D_MASK) | ((D << SPP_D_SHIFT) & SPP_D_MASK)) ; \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'D' may be better as '(D)' to avoid precedence issues
#280: FILE: drivers/net/vioc/f7/sppapi.h:89:
+#define SPP_SET_D(m, D) do { \
+    m = ((m & ~SPP_D_MASK) | ((D << SPP_D_SHIFT) & SPP_D_MASK)) ; \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#280: FILE: drivers/net/vioc/f7/sppapi.h:89:
+#define SPP_SET_D(m, D) do { \
+    m = ((m & ~SPP_D_MASK) | ((D << SPP_D_SHIFT) & SPP_D_MASK)) ; \
+} while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/net/vioc/f7/sppapi.h:90:
+    m = ((m & ~SPP_D_MASK) | ((D << SPP_D_SHIFT) & SPP_D_MASK)) ; \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#287: FILE: drivers/net/vioc/f7/sppapi.h:96:
+#define SPP_SET_RC(m, rc) do { \
+    m = ((m & ~SPP_RC_MASK) | ((rc << SPP_RC_SHIFT) & SPP_RC_MASK)) ; \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rc' may be better as '(rc)' to avoid precedence issues
#287: FILE: drivers/net/vioc/f7/sppapi.h:96:
+#define SPP_SET_RC(m, rc) do { \
+    m = ((m & ~SPP_RC_MASK) | ((rc << SPP_RC_SHIFT) & SPP_RC_MASK)) ; \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#287: FILE: drivers/net/vioc/f7/sppapi.h:96:
+#define SPP_SET_RC(m, rc) do { \
+    m = ((m & ~SPP_RC_MASK) | ((rc << SPP_RC_SHIFT) & SPP_RC_MASK)) ; \
+} while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/net/vioc/f7/sppapi.h:97:
+    m = ((m & ~SPP_RC_MASK) | ((rc << SPP_RC_SHIFT) & SPP_RC_MASK)) ; \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#291: FILE: drivers/net/vioc/f7/sppapi.h:100:
+#define SPP_SET_UNIQID(m, uniqid) do { \
+    m = ((m & ~SPP_UNIQID_MASK) | ((uniqid << SPP_UNIQID_SHIFT) & 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uniqid' may be better as '(uniqid)' to avoid precedence issues
#291: FILE: drivers/net/vioc/f7/sppapi.h:100:
+#define SPP_SET_UNIQID(m, uniqid) do { \
+    m = ((m & ~SPP_UNIQID_MASK) | ((uniqid << SPP_UNIQID_SHIFT) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/net/vioc/f7/sppapi.h:101:
+    m = ((m & ~SPP_UNIQID_MASK) | ((uniqid << SPP_UNIQID_SHIFT) & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/net/vioc/f7/sppapi.h:101:
+    m = ((m & ~SPP_UNIQID_MASK) | ((uniqid << SPP_UNIQID_SHIFT) & $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#296: FILE: drivers/net/vioc/f7/sppapi.h:104:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#297: FILE: drivers/net/vioc/f7/sppapi.h:105:
+#define SPP_SET_CHKSUM(m, chksum) do { \
+    m = ((m & ~SPP_CHKSUM_MASK) | ((chksum << SPP_CHKSUM_SHIFT) & 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chksum' may be better as '(chksum)' to avoid precedence issues
#297: FILE: drivers/net/vioc/f7/sppapi.h:105:
+#define SPP_SET_CHKSUM(m, chksum) do { \
+    m = ((m & ~SPP_CHKSUM_MASK) | ((chksum << SPP_CHKSUM_SHIFT) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: drivers/net/vioc/f7/sppapi.h:106:
+    m = ((m & ~SPP_CHKSUM_MASK) | ((chksum << SPP_CHKSUM_SHIFT) & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/net/vioc/f7/sppapi.h:106:
+    m = ((m & ~SPP_CHKSUM_MASK) | ((chksum << SPP_CHKSUM_SHIFT) & $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: drivers/net/vioc/f7/sppapi.h:109:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/net/vioc/f7/sppapi.h:112:
+       int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/net/vioc/f7/sppapi.h:113:
+       int nibbles = (n > 8) ? 8:n;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#306: FILE: drivers/net/vioc/f7/sppapi.h:113:
+       int nibbles = (n > 8) ? 8:n;
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/net/vioc/f7/sppapi.h:114:
+       u32 cs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/net/vioc/f7/sppapi.h:116:
+       for (len = 0; len < nibbles; len++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#309: FILE: drivers/net/vioc/f7/sppapi.h:116:
+       for (len = 0; len < nibbles; len++) {
+               w = (w >> len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: drivers/net/vioc/f7/sppapi.h:117:
+               w = (w >> len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/net/vioc/f7/sppapi.h:117:
+               w = (w >> len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/net/vioc/f7/sppapi.h:118:
+               cs += w  & SPP_CHKSUM_MASK_SHIFTED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/net/vioc/f7/sppapi.h:118:
+               cs += w  & SPP_CHKSUM_MASK_SHIFTED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/net/vioc/f7/sppapi.h:119:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/net/vioc/f7/sppapi.h:121:
+       while (cs >> 4)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#314: FILE: drivers/net/vioc/f7/sppapi.h:121:
+       while (cs >> 4)
+               cs = (cs & SPP_CHKSUM_MASK_SHIFTED) + (cs >> 4);

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: drivers/net/vioc/f7/sppapi.h:122:
+               cs = (cs & SPP_CHKSUM_MASK_SHIFTED) + (cs >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/net/vioc/f7/sppapi.h:122:
+               cs = (cs & SPP_CHKSUM_MASK_SHIFTED) + (cs >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/net/vioc/f7/sppapi.h:124:
+       return (~cs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/net/vioc/f7/sppapi.h:129:
+       return (spp_calc_u32_4bit_chksum(w, 7));$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#322: FILE: drivers/net/vioc/f7/sppapi.h:129:
+       return (spp_calc_u32_4bit_chksum(w, 7));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/net/vioc/f7/sppapi.h:135:
+       return (spp_calc_u32_4bit_chksum(w, 8) & SPP_CHKSUM_MASK_SHIFTED);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/net/vioc/f7/sppapi.h:141:
+       u32     m = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/net/vioc/f7/sppapi.h:142:
+       u32 cs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/net/vioc/f7/sppapi.h:144:
+       SPP_SET_KEY(m, key);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/net/vioc/f7/sppapi.h:145:
+       SPP_SET_FACILITY(m, facility);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/net/vioc/f7/sppapi.h:146:
+       SPP_SET_UNIQID(m, uniqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/net/vioc/f7/sppapi.h:147:
+       SPP_SET_D(m, SPP_MBOX_OCCUPIED);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/net/vioc/f7/sppapi.h:148:
+       cs = spp_calc_u32_4bit_chksum(m, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/net/vioc/f7/sppapi.h:149:
+       cs = (cs)?cs:~cs;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#342: FILE: drivers/net/vioc/f7/sppapi.h:149:
+       cs = (cs)?cs:~cs;
                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#342: FILE: drivers/net/vioc/f7/sppapi.h:149:
+       cs = (cs)?cs:~cs;
                    ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#342: FILE: drivers/net/vioc/f7/sppapi.h:149:
+       cs = (cs)?cs:~cs;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/net/vioc/f7/sppapi.h:150:
+       SPP_SET_CHKSUM(m, cs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/net/vioc/f7/sppapi.h:152:
+       return (m);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#345: FILE: drivers/net/vioc/f7/sppapi.h:152:
+       return (m);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/net/vioc/f7/sppapi.h:158:
+       u32     m = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/net/vioc/f7/sppapi.h:160:
+       SPP_SET_KEY(m, key);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/net/vioc/f7/sppapi.h:161:
+       SPP_SET_FACILITY(m, facility);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/net/vioc/f7/sppapi.h:163:
+       return (m);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#356: FILE: drivers/net/vioc/f7/sppapi.h:163:
+       return (m);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: drivers/net/vioc/f7/sppapi.h:166:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/net/vioc/f7/sppapi.h:170:
+       u32 reply = cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/net/vioc/f7/sppapi.h:171:
+       u32 cs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/net/vioc/f7/sppapi.h:173:
+       SPP_SET_D(reply, SPP_MBOX_FREE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/net/vioc/f7/sppapi.h:174:
+       if (success == SPP_CMD_OK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#367: FILE: drivers/net/vioc/f7/sppapi.h:174:
+       if (success == SPP_CMD_OK)
+               SPP_SET_RC(reply, SPP_CMD_OK);

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/net/vioc/f7/sppapi.h:175:
+               SPP_SET_RC(reply, SPP_CMD_OK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/net/vioc/f7/sppapi.h:175:
+               SPP_SET_RC(reply, SPP_CMD_OK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/net/vioc/f7/sppapi.h:176:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#369: FILE: drivers/net/vioc/f7/sppapi.h:176:
+       else
+               SPP_SET_RC(reply, SPP_CMD_FAIL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/net/vioc/f7/sppapi.h:177:
+               SPP_SET_RC(reply, SPP_CMD_FAIL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/net/vioc/f7/sppapi.h:177:
+               SPP_SET_RC(reply, SPP_CMD_FAIL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/net/vioc/f7/sppapi.h:179:
+       cs = spp_calc_u32_4bit_chksum(reply, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/net/vioc/f7/sppapi.h:180:
+       cs = (cs)?cs:~cs;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#373: FILE: drivers/net/vioc/f7/sppapi.h:180:
+       cs = (cs)?cs:~cs;
                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#373: FILE: drivers/net/vioc/f7/sppapi.h:180:
+       cs = (cs)?cs:~cs;
                    ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#373: FILE: drivers/net/vioc/f7/sppapi.h:180:
+       cs = (cs)?cs:~cs;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/net/vioc/f7/sppapi.h:181:
+       SPP_SET_CHKSUM(reply, cs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/net/vioc/f7/sppapi.h:183:
+       return (reply);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#376: FILE: drivers/net/vioc/f7/sppapi.h:183:
+       return (reply);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/net/vioc/f7/sppapi.h:189:
+       return SPP_MBOX_EMPTY(m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/net/vioc/f7/sppapi.h:195:
+       return SPP_MBOX_FULL(m);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#392: FILE: drivers/net/vioc/f7/sppapi.h:199:
+/*
+ * SPP Facilities 0 - 15

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/net/vioc/f7/sppapi.h:204:
+#define SPP_FACILITY_ISCSI_VNIC        2       /* iSCSI Initiator $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#399: FILE: drivers/net/vioc/f7/sppapi.h:205:
+#define SPP_FACILITY_ISCSI_VNIC        2       /* iSCSI Initiator 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#400: FILE: drivers/net/vioc/f7/sppapi.h:206:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: drivers/net/vioc/f7/sppapi.h:208:
+ * spp_msg_register() is use to install a callback - cb_fn() function, that $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#402: FILE: drivers/net/vioc/f7/sppapi.h:208:
+/*
+ * spp_msg_register() is use to install a callback - cb_fn() function, that 

WARNING:TYPO_SPELLING: 'inlude' may be misspelled - perhaps 'include'?
#409: FILE: drivers/net/vioc/f7/sppapi.h:214:
+ * The inlude spp_build_key_facility(key, facility) builds such handle.
        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/net/vioc/f7/sppapi.h:223:
+ * IMPORTANT: If the message was already waiting, at the time of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/net/vioc/f7/sppapi.h:227:
+extern int spp_msg_register(u32 key_facility, void (*cb_fn)(u32, void *, int, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: drivers/net/vioc/f7/sppapi.h:227:
+extern int spp_msg_register(u32 key_facility, void (*cb_fn)(u32, void *, int, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/net/vioc/f7/sppapi.h:228:
+extern int spp_msg_register(u32 key_facility, void (*cb_fn)(u32, void *, int, 
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#427: FILE: drivers/net/vioc/f7/sppapi.h:230:
+/*
+ * spp_msg_unregirster() will remove the callback function, so that

WARNING:TYPO_SPELLING: 'imcoming' may be misspelled - perhaps 'incoming'?
#428: FILE: drivers/net/vioc/f7/sppapi.h:231:
+ * the imcoming messages with the key_facility handle will basically be
        ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: drivers/net/vioc/f7/sppapi.h:235:
+extern void spp_msg_unregister(u32 key_facility);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: drivers/net/vioc/f7/sppapi.h:237:
+extern int read_spp_regbank32(int vioc, int bank, char *buffer);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: drivers/net/vioc/khash.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#459: FILE: drivers/net/vioc/khash.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#460: FILE: drivers/net/vioc/khash.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/net/vioc/khash.h:43:
+    struct hash_elem_t *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/net/vioc/khash.h:44:
+    void *key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/net/vioc/khash.h:45:
+    void *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/net/vioc/khash.h:46:
+       void (*cb_fn)(u32, void *, int, u32);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#489: FILE: drivers/net/vioc/khash.h:46:
+       void (*cb_fn)(u32, void *, int, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#489: FILE: drivers/net/vioc/khash.h:46:
+       void (*cb_fn)(u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#489: FILE: drivers/net/vioc/khash.h:46:
+       void (*cb_fn)(u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#489: FILE: drivers/net/vioc/khash.h:46:
+       void (*cb_fn)(u32, void *, int, u32);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/net/vioc/khash.h:47:
+       u32      command;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/net/vioc/khash.h:48:
+       u32      timestamp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/net/vioc/khash.h:49:
+       spinlock_t lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#492: FILE: drivers/net/vioc/khash.h:49:
+       spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#495: FILE: drivers/net/vioc/khash.h:52:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: drivers/net/vioc/khash.h:53:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#496: FILE: drivers/net/vioc/khash.h:53:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#496: FILE: drivers/net/vioc/khash.h:53:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#496: FILE: drivers/net/vioc/khash.h:53:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#496: FILE: drivers/net/vioc/khash.h:53:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/net/vioc/khash.h:54:
+struct shash_t  *hashT_create(u32, size_t, size_t, u32(*)(unsigned char *, 
+int hashT_delete(struct shash_t * , void *);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#498: FILE: drivers/net/vioc/khash.h:54:
+int hashT_delete(struct shash_t * , void *);
                                   ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#498: FILE: drivers/net/vioc/khash.h:54:
+int hashT_delete(struct shash_t * , void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#498: FILE: drivers/net/vioc/khash.h:54:
+int hashT_delete(struct shash_t * , void *);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#499: FILE: drivers/net/vioc/khash.h:55:
+struct hash_elem_t *hashT_lookup(struct shash_t * , void *);
                                                   ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#499: FILE: drivers/net/vioc/khash.h:55:
+struct hash_elem_t *hashT_lookup(struct shash_t * , void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#499: FILE: drivers/net/vioc/khash.h:55:
+struct hash_elem_t *hashT_lookup(struct shash_t * , void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#500: FILE: drivers/net/vioc/khash.h:56:
+struct hash_elem_t *hashT_add(struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#500: FILE: drivers/net/vioc/khash.h:56:
+struct hash_elem_t *hashT_add(struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#501: FILE: drivers/net/vioc/khash.h:57:
+void hashT_destroy(struct shash_t *);

WARNING:TYPO_SPELLING: 'Accesors' may be misspelled - perhaps 'Accessors'?
#502: FILE: drivers/net/vioc/khash.h:58:
+/* Accesors */
    ^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#503: FILE: drivers/net/vioc/khash.h:59:
+void **hashT_getkeys(struct shash_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#504: FILE: drivers/net/vioc/khash.h:60:
+size_t hashT_tablesize(struct shash_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#505: FILE: drivers/net/vioc/khash.h:61:
+size_t hashT_size(struct shash_t *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#515: FILE: drivers/net/vioc/spp.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#530: FILE: drivers/net/vioc/spp.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#531: FILE: drivers/net/vioc/spp.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
+{ \
+  a -= b; a -= c; a ^= (c >> 13); \
+  b -= c; b -= a; b ^= (a << 8); \
+  c -= a; c -= b; c ^= (b >> 13); \
+  a -= b; a -= c; a ^= (c >> 12);  \
+  b -= c; b -= a; b ^= (a << 16); \
+  c -= a; c -= b; c ^= (b >> 5); \
+  a -= b; a -= c; a ^= (c >> 3);  \
+  b -= c; b -= a; b ^= (a << 10); \
+  c -= a; c -= b; c ^= (b >> 15); \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
+{ \
+  a -= b; a -= c; a ^= (c >> 13); \
+  b -= c; b -= a; b ^= (a << 8); \
+  c -= a; c -= b; c ^= (b >> 13); \
+  a -= b; a -= c; a ^= (c >> 12);  \
+  b -= c; b -= a; b ^= (a << 16); \
+  c -= a; c -= b; c ^= (b >> 5); \
+  a -= b; a -= c; a ^= (c >> 3);  \
+  b -= c; b -= a; b ^= (a << 10); \
+  c -= a; c -= b; c ^= (b >> 15); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
+{ \
+  a -= b; a -= c; a ^= (c >> 13); \
+  b -= c; b -= a; b ^= (a << 8); \
+  c -= a; c -= b; c ^= (b >> 13); \
+  a -= b; a -= c; a ^= (c >> 12);  \
+  b -= c; b -= a; b ^= (a << 16); \
+  c -= a; c -= b; c ^= (b >> 5); \
+  a -= b; a -= c; a ^= (c >> 3);  \
+  b -= c; b -= a; b ^= (a << 10); \
+  c -= a; c -= b; c ^= (b >> 15); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#552: FILE: drivers/net/vioc/spp.c:38:
+#define mix(a,b,c) \
+{ \
+  a -= b; a -= c; a ^= (c >> 13); \
+  b -= c; b -= a; b ^= (a << 8); \
+  c -= a; c -= b; c ^= (b >> 13); \
+  a -= b; a -= c; a ^= (c >> 12);  \
+  b -= c; b -= a; b ^= (a << 16); \
+  c -= a; c -= b; c ^= (b >> 5); \
+  a -= b; a -= c; a ^= (c >> 3);  \
+  b -= c; b -= a; b ^= (a << 10); \
+  c -= a; c -= b; c ^= (b >> 15); \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/net/vioc/spp.c:40:
+  a -= b; a -= c; a ^= (c >> 13); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/net/vioc/spp.c:41:
+  b -= c; b -= a; b ^= (a << 8); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/net/vioc/spp.c:42:
+  c -= a; c -= b; c ^= (b >> 13); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/net/vioc/spp.c:43:
+  a -= b; a -= c; a ^= (c >> 12);  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: drivers/net/vioc/spp.c:44:
+  b -= c; b -= a; b ^= (a << 16); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/net/vioc/spp.c:45:
+  c -= a; c -= b; c ^= (b >> 5); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/net/vioc/spp.c:46:
+  a -= b; a -= c; a ^= (c >> 3);  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/net/vioc/spp.c:47:
+  b -= c; b -= a; b ^= (a << 10); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/net/vioc/spp.c:48:
+  c -= a; c -= b; c ^= (b >> 15); \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#565: FILE: drivers/net/vioc/spp.c:51:
+
+

WARNING:SPACING: missing space after return type
#573: FILE: drivers/net/vioc/spp.c:59:
+	 u32(*hash_fn) (unsigned char *, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#573: FILE: drivers/net/vioc/spp.c:59:
+	 u32(*hash_fn) (unsigned char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#573: FILE: drivers/net/vioc/spp.c:59:
+	 u32(*hash_fn) (unsigned char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#573: FILE: drivers/net/vioc/spp.c:59:
+	 u32(*hash_fn) (unsigned char *, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#574: FILE: drivers/net/vioc/spp.c:60:
+	void (*copy_fn) (void *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#574: FILE: drivers/net/vioc/spp.c:60:
+	void (*copy_fn) (void *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#574: FILE: drivers/net/vioc/spp.c:60:
+	void (*copy_fn) (void *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#574: FILE: drivers/net/vioc/spp.c:60:
+	void (*copy_fn) (void *, int, void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#575: FILE: drivers/net/vioc/spp.c:61:
+	int (*compare_fn) (void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#575: FILE: drivers/net/vioc/spp.c:61:
+	int (*compare_fn) (void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#575: FILE: drivers/net/vioc/spp.c:61:
+	int (*compare_fn) (void *, void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#580: FILE: drivers/net/vioc/spp.c:66:
+	int (*delete) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#580: FILE: drivers/net/vioc/spp.c:66:
+	int (*delete) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#580: FILE: drivers/net/vioc/spp.c:66:
+	int (*delete) (struct shash_t *, void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#581: FILE: drivers/net/vioc/spp.c:67:
+	struct hash_elem_t *(*lookup) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#581: FILE: drivers/net/vioc/spp.c:67:
+	struct hash_elem_t *(*lookup) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#581: FILE: drivers/net/vioc/spp.c:67:
+	struct hash_elem_t *(*lookup) (struct shash_t *, void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#582: FILE: drivers/net/vioc/spp.c:68:
+	void (*destroy) (struct shash_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#582: FILE: drivers/net/vioc/spp.c:68:
+	void (*destroy) (struct shash_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#583: FILE: drivers/net/vioc/spp.c:69:
+	struct hash_elem_t *(*add) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#583: FILE: drivers/net/vioc/spp.c:69:
+	struct hash_elem_t *(*add) (struct shash_t *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#583: FILE: drivers/net/vioc/spp.c:69:
+	struct hash_elem_t *(*add) (struct shash_t *, void *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#584: FILE: drivers/net/vioc/spp.c:70:
+	void **(*getkeys) (struct shash_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct shash_t *' should also have an identifier name
#584: FILE: drivers/net/vioc/spp.c:70:
+	void **(*getkeys) (struct shash_t *);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#589: FILE: drivers/net/vioc/spp.c:75:
+	spinlock_t lock;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#598: FILE: drivers/net/vioc/spp.c:84:
+	a = b = c = 0x9e3779b9;	/* the golden ratio; an arbitrary value */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#618: FILE: drivers/net/vioc/spp.c:104:
+	switch (len) {		/* all the case statements fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BRACES: Unbalanced braces around else statement
#680: FILE: drivers/net/vioc/spp.c:166:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor->next"
#682: FILE: drivers/net/vioc/spp.c:168:
+		while (cursor->next != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#705: FILE: drivers/net/vioc/spp.c:191:
+		while (cursor != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#724: FILE: drivers/net/vioc/spp.c:210:
+	if (!keys) {
+		return NULL;
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#731: FILE: drivers/net/vioc/spp.c:217:
+	for (idx = 0; idx < htable->tsize; idx++) {
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#733: FILE: drivers/net/vioc/spp.c:219:
+		while (cursor != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#734: FILE: drivers/net/vioc/spp.c:220:
+			printk(KERN_INFO "Element %d in bucket %d, key %p value %px\n",

WARNING:VSPRINTF_SPECIFIER_PX: Using vsprintf specifier '%px' potentially exposes the kernel memory layout, if you don't really need the address please consider using '%p'.
#734: FILE: drivers/net/vioc/spp.c:220:
+			printk(KERN_INFO "Element %d in bucket %d, key %p value %px\n",
+			       kidx, idx, cursor->key, cursor->data);

WARNING:TYPO_SPELLING: 'Accesors' may be misspelled - perhaps 'Accessors'?
#746: FILE: drivers/net/vioc/spp.c:232:
+/* Accesors 
    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/net/vioc/spp.c:232:
+/* Accesors $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#748: FILE: drivers/net/vioc/spp.c:233:
+/* Accesors 
+inline size_t hashT_tablesize(struct shash_t * htable)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#768: FILE: drivers/net/vioc/spp.c:253:
+	while (cursor != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor"
#788: FILE: drivers/net/vioc/spp.c:273:
+	while (cursor != NULL) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#799: FILE: drivers/net/vioc/spp.c:284:
+		    (struct hash_elem_t *)vmalloc(sizeof(struct hash_elem_t) +

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!htable->chtable[idx]"
#815: FILE: drivers/net/vioc/spp.c:300:
+		if (htable->chtable[idx] == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#818: FILE: drivers/net/vioc/spp.c:303:
+		else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cursor->next"
#821: FILE: drivers/net/vioc/spp.c:306:
+			while (cursor->next != NULL)

CHECK:SPACING: No space is necessary after a cast
#840: FILE: drivers/net/vioc/spp.c:325:
+	if ((u16) * ((u16 *) key_in) == (u16) * ((u16 *) key_out))

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#840: FILE: drivers/net/vioc/spp.c:325:
+	if ((u16) * ((u16 *) key_in) == (u16) * ((u16 *) key_out))
 	          ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#840: FILE: drivers/net/vioc/spp.c:325:
+	if ((u16) * ((u16 *) key_in) == (u16) * ((u16 *) key_out))
 	                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <fTable>
#854: FILE: drivers/net/vioc/spp.c:339:
+struct facility fTable[FACILITY_CNT];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <hashT>
#861: FILE: drivers/net/vioc/spp.c:346:
+		fTable[i].hashT = NULL;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#895: FILE: drivers/net/vioc/spp.c:380:
+	vioc_reg_rd(viocdev->ba.virt, SPP_SIM_PMM_CMDREG, &command_reg);
 	                     ^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#897: FILE: drivers/net/vioc/spp.c:382:
+	if (spp_mbox_empty(command_reg)) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#902: FILE: drivers/net/vioc/spp.c:387:
+	if (spp_validate_u32_chksum(command_reg) != 0) {
+		return;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fTable[facility].hashT"
#916: FILE: drivers/net/vioc/spp.c:401:
+	if (fTable[facility].hashT == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#919: FILE: drivers/net/vioc/spp.c:404:
+		if (fTable[facility].hashT == NULL) {
+			goto error_exit;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fTable[facility].hashT"
#919: FILE: drivers/net/vioc/spp.c:404:
+		if (fTable[facility].hashT == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#926: FILE: drivers/net/vioc/spp.c:411:
+	if (!elem) {
+		goto error_exit;
+	}

CHECK:SPACING: No space is necessary after a cast
#935: FILE: drivers/net/vioc/spp.c:420:
+	for (i = 0, data_p = (u32 *) elem->data; i < SPP_BANK_REGS;

CHECK:SPACING: No space is necessary after a cast
#936: FILE: drivers/net/vioc/spp.c:421:
+	     i++, (u32 *) data_p++) {

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#937: FILE: drivers/net/vioc/spp.c:422:
+		vioc_reg_rd(viocdev->ba.virt, SPP_SIM_PMM_DATA + (i << 2), (u32 *) data_p);
 		                     ^^

CHECK:SPACING: No space is necessary after a cast
#937: FILE: drivers/net/vioc/spp.c:422:
+		vioc_reg_rd(viocdev->ba.virt, SPP_SIM_PMM_DATA + (i << 2), (u32 *) data_p);

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#946: FILE: drivers/net/vioc/spp.c:431:
+	vioc_reg_wr(pmm_reply, viocdev->ba.virt, SPP_SIM_PMM_CMDREG);
 	                                ^^

WARNING:INDENTED_LABEL: labels should not be indented
#962: FILE: drivers/net/vioc/spp.c:447:
+      error_exit:

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#965: FILE: drivers/net/vioc/spp.c:450:
+	vioc_reg_wr(pmm_reply, viocdev->ba.virt, SPP_SIM_PMM_CMDREG);
 	                                ^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#968: FILE: drivers/net/vioc/spp.c:453:
+
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fTable[facility].hashT"
#979: FILE: drivers/net/vioc/spp.c:464:
+	if (fTable[facility].hashT == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#982: FILE: drivers/net/vioc/spp.c:467:
+		if (fTable[facility].hashT == NULL) {
+			goto error_exit;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fTable[facility].hashT"
#982: FILE: drivers/net/vioc/spp.c:467:
+		if (fTable[facility].hashT == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#989: FILE: drivers/net/vioc/spp.c:474:
+	if (!elem) {
+		goto error_exit;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#1004: FILE: drivers/net/vioc/spp.c:489:
+      error_exit:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fTable[facility].hashT"
#1015: FILE: drivers/net/vioc/spp.c:500:
+	if (fTable[facility].hashT == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1027: FILE: drivers/net/vioc/spp.c:512:
+
+

CHECK:SPACING: No space is necessary after a cast
#1039: FILE: drivers/net/vioc/spp.c:524:
+	for (i = 0, data_p = (u32 *) buffer; i < SPP_BANK_REGS;

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: drivers/net/vioc/spp.c:525:
+	     i++, (u32 *) data_p++) {

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1042: FILE: drivers/net/vioc/spp.c:527:
+		vioc_reg_rd(viocdev->ba.virt, reg, (u32 *) data_p);
 		                     ^^

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: drivers/net/vioc/spp.c:527:
+		vioc_reg_rd(viocdev->ba.virt, reg, (u32 *) data_p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: drivers/net/vioc/spp.c:533:
+struct shash_t *hashT_create(u32 sizehint, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: drivers/net/vioc/spp.c:534:
+struct shash_t *hashT_create(u32 sizehint, 
+							size_t keybuf_size,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/net/vioc/spp.c:535:
+^I^I^I     ^I^I^Isize_t databuf_size, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: drivers/net/vioc/spp.c:535:
+^I^I^I     ^I^I^Isize_t databuf_size, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1050: FILE: drivers/net/vioc/spp.c:535:
+^I^I^I     ^I^I^Isize_t databuf_size, $

WARNING:SPACING: missing space after return type
#1051: FILE: drivers/net/vioc/spp.c:536:
+							u32(*hfunc) (unsigned char *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1051: FILE: drivers/net/vioc/spp.c:536:
+							u32(*hfunc) (unsigned char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: drivers/net/vioc/spp.c:537:
+							u32(*hfunc) (unsigned char *,
+							unsigned long),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/net/vioc/spp.c:538:
+^I^I^I^I^I^I^Iint (*cfunc) (void *, void *), $

WARNING:SPACING: Unnecessary space before function pointer arguments
#1053: FILE: drivers/net/vioc/spp.c:538:
+							int (*cfunc) (void *, void *), 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfunc"
#1069: FILE: drivers/net/vioc/spp.c:554:
+	if (cfunc == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*htable)...) over vmalloc(sizeof(struct shash_t)...)
#1073: FILE: drivers/net/vioc/spp.c:558:
+	htable = vmalloc(sizeof(struct shash_t) + keybuf_size + databuf_size);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1081: FILE: drivers/net/vioc/spp.c:566:
+^I^I^I^I^I^I   ^I+ keybuf_size $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: drivers/net/vioc/spp.c:566:
+^I^I^I^I^I^I   ^I+ keybuf_size $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1081: FILE: drivers/net/vioc/spp.c:566:
+^I^I^I^I^I^I   ^I+ keybuf_size $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1124: FILE: drivers/net/vioc/spp.c:609:
+{
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1137: FILE: drivers/net/vioc/spp.c:622:
+EXPORT_SYMBOL(spp_msg_unregister);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1138: FILE: drivers/net/vioc/spp.c:623:
+EXPORT_SYMBOL(read_spp_regbank32);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1147: FILE: drivers/net/vioc/spp_vnic.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1162: FILE: drivers/net/vioc/spp_vnic.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1163: FILE: drivers/net/vioc/spp_vnic.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1186: FILE: drivers/net/vioc/spp_vnic.c:40:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'stamp' may be better as '(stamp)' to avoid precedence issues
#1187: FILE: drivers/net/vioc/spp_vnic.c:41:
+#define VIOC_ID_FROM_STAMP(stamp)      ((stamp >> 28) & 0xf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1202: FILE: drivers/net/vioc/spp_vnic.c:56:
+		printk(KERN_ERR "%s: MSG to VIOC=%d, but param VIOC=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1203: FILE: drivers/net/vioc/spp_vnic.c:57:
+		       __FUNCTION__, vioc_id, viocdev_idx);

CHECK:SPACING: No space is necessary after a cast
#1221: FILE: drivers/net/vioc/spp_vnic.c:75:
+	reset_type = ((u32 *) msg_buf)[SPP_UOS_RESET_TYPE_IDX];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1224: FILE: drivers/net/vioc/spp_vnic.c:78:
+		printk(KERN_ERR "Invalid reset request %d\n", reset_type);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1227: FILE: drivers/net/vioc/spp_vnic.c:81:
+}
+static void spp_prov_cb(u32 cmd, void *msg_buf, int buf_size, u32 viocstamp)

WARNING:SPACING: Unnecessary space before function pointer arguments
#1237: FILE: drivers/net/vioc/spp_vnic.c:91:
+	void (*cb) (u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1237: FILE: drivers/net/vioc/spp_vnic.c:91:
+	void (*cb) (u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1237: FILE: drivers/net/vioc/spp_vnic.c:91:
+	void (*cb) (u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1237: FILE: drivers/net/vioc/spp_vnic.c:91:
+	void (*cb) (u32, void *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1237: FILE: drivers/net/vioc/spp_vnic.c:91:
+	void (*cb) (u32, void *, int, u32);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1254: FILE: drivers/net/vioc/spp_vnic.c:108:
+	for (i = 0; local_cb[i].cb; i++) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1269: FILE: drivers/net/vioc/spp_vnic.c:123:
+	for (i = 0; local_cb[i].cb; i++) {
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#1276: FILE: drivers/net/vioc/spp_vnic.c:130:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1285: FILE: drivers/net/vioc/vioc_spp.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1300: FILE: drivers/net/vioc/vioc_spp.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1301: FILE: drivers/net/vioc/vioc_spp.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1335: FILE: drivers/net/vioc/vioc_spp.c:51:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1337: FILE: drivers/net/vioc/vioc_spp.c:53:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/net/vioc/vioc_spp.c:76:
+#define SPP_HB_SENSOR_REG      GETRELADDR(SPP_VIOC_MODULE, 0, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1360: FILE: drivers/net/vioc/vioc_spp.c:76:
+#define SPP_HB_SENSOR_REG      GETRELADDR(SPP_VIOC_MODULE, 0, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1362: FILE: drivers/net/vioc/vioc_spp.c:77:
+#define SPP_SHUTDWN_SENSOR_REG GETRELADDR(SPP_VIOC_MODULE, 0, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1362: FILE: drivers/net/vioc/vioc_spp.c:77:
+#define SPP_SHUTDWN_SENSOR_REG GETRELADDR(SPP_VIOC_MODULE, 0, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1364: FILE: drivers/net/vioc/vioc_spp.c:78:
+#define SPP_PANIC_SENSOR_REG   GETRELADDR(SPP_VIOC_MODULE, 0, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1364: FILE: drivers/net/vioc/vioc_spp.c:78:
+#define SPP_PANIC_SENSOR_REG   GETRELADDR(SPP_VIOC_MODULE, 0, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1366: FILE: drivers/net/vioc/vioc_spp.c:79:
+#define SPP_RST_SENSOR_REG     GETRELADDR(SPP_VIOC_MODULE, 0, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1366: FILE: drivers/net/vioc/vioc_spp.c:79:
+#define SPP_RST_SENSOR_REG     GETRELADDR(SPP_VIOC_MODULE, 0, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: drivers/net/vioc/vioc_spp.c:82:
+#define SPP_BMC_HB_REG         GETRELADDR(SPP_VIOC_MODULE, SPP_BMC_VNIC, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1370: FILE: drivers/net/vioc/vioc_spp.c:82:
+#define SPP_BMC_HB_REG         GETRELADDR(SPP_VIOC_MODULE, SPP_BMC_VNIC, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1372: FILE: drivers/net/vioc/vioc_spp.c:83:
+#define SPP_BMC_CMD_REG                GETRELADDR(SPP_VIOC_MODULE, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1372: FILE: drivers/net/vioc/vioc_spp.c:83:
+#define SPP_BMC_CMD_REG                GETRELADDR(SPP_VIOC_MODULE, 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!netdev"
#1395: FILE: drivers/net/vioc/vioc_spp.c:105:
+	if (netdev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!netdev"
#1397: FILE: drivers/net/vioc/vioc_spp.c:107:
+		if (netdev == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1403: FILE: drivers/net/vioc/vioc_spp.c:113:
+			if ((rc = register_netdev(netdev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:INDENTED_LABEL: labels should not be indented
#1415: FILE: drivers/net/vioc/vioc_spp.c:125:
+      vioc_vnic_enable_exit:

CHECK:BRACES: braces {} should be used on all arms of this statement
#1430: FILE: drivers/net/vioc/vioc_spp.c:140:
+		if (viocdev->vnic_netdev[vnic_id]) {
[...]
+		} else
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1432: FILE: drivers/net/vioc/vioc_spp.c:142:
+			dev_err(&viocdev->pdev->dev, "%s: %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1433: FILE: drivers/net/vioc/vioc_spp.c:143:
+			dev_err(&viocdev->pdev->dev, "%s: %s\n", __FUNCTION__,
+			       (viocdev->vnic_netdev[vnic_id])->name);

CHECK:BRACES: Unbalanced braces around else statement
#1436: FILE: drivers/net/vioc/vioc_spp.c:146:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1437: FILE: drivers/net/vioc/vioc_spp.c:147:
+			BUG_ON(viocdev->vnic_netdev[vnic_id] == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!viocdev->vnic_netdev[vnic_id]"
#1437: FILE: drivers/net/vioc/vioc_spp.c:147:
+			BUG_ON(viocdev->vnic_netdev[vnic_id] == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1462: FILE: drivers/net/vioc/vioc_spp.c:172:
+				dev_err(&viocdev->pdev->dev, "%s: Enable VNIC %d FAILED\n",
+				       __FUNCTION__, vnic_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1462: FILE: drivers/net/vioc/vioc_spp.c:172:
+				       __FUNCTION__, vnic_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: drivers/net/vioc/vioc_spp.c:183:
+				dev_err(&viocdev->pdev->dev, "%s: Disable VNIC %d FAILED\n",
+				       __FUNCTION__, vnic_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1473: FILE: drivers/net/vioc/vioc_spp.c:183:
+				       __FUNCTION__, vnic_id);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1479: FILE: drivers/net/vioc/vioc_spp.c:189:
+	/*
+	 * Now, after all VNIC enable-disable changes are in place,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/net/vioc/vioc_spp.c:204:
+					dev_err(&viocdev->pdev->dev, "idx %d, %s: Link UP\n",
+					       vioc_id, netdev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1502: FILE: drivers/net/vioc/vioc_spp.c:212:
+					dev_err(&viocdev->pdev->dev,
+					       "idx %d, %s: Link DOWN\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1511: FILE: drivers/net/vioc/vioc_spp.c:221:
+/*
+ * Called from interrupt or task context

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1522: FILE: drivers/net/vioc/vioc_spp.c:232:
+		dev_err(&viocdev->pdev->dev, "VIOC %d is not UP yet\n",
+		       viocdev->viocdev_idx);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1533: FILE: drivers/net/vioc/vioc_spp.c:243:
+	/*
+	 * Clear all pending interrupt bits, we will service all interrupts

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1539: FILE: drivers/net/vioc/vioc_spp.c:249:
+		dev_err(&viocdev->pdev->dev, "%s: vioc_rwr() -> %d\n", __FUNCTION__, rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1547: FILE: drivers/net/vioc/vioc_spp.c:257:
+			dev_err(&viocdev->pdev->dev,
+			       "*** OLD SPP commands (BMC intr %08x) are no longer supported\n",

WARNING:INDENTED_LABEL: labels should not be indented
#1560: FILE: drivers/net/vioc/vioc_spp.c:270:
+      vioc_bmc_interrupt_exit:

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1566: FILE: drivers/net/vioc/vioc_spp.c:276:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1577: FILE: drivers/net/vioc/vioc_spp.c:287:
+	 * SENSOR Register */

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1578: FILE: drivers/net/vioc/vioc_spp.c:288:
+	vioc_reg_wr(1, viocdev->ba.virt, SPP_HB_SENSOR_REG);
 	                        ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1590: FILE: drivers/net/vioc/vioc_spp.c:300:
+		vioc_reg_wr(1, viocdev->ba.virt, SPP_RST_SENSOR_REG);
 		                        ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1594: FILE: drivers/net/vioc/vioc_spp.c:304:
+		vioc_reg_wr(1, viocdev->ba.virt, SPP_SHUTDWN_SENSOR_REG);
 		                        ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1598: FILE: drivers/net/vioc/vioc_spp.c:308:
+		dev_err(&viocdev->pdev->dev, "%s: Received invalid command %d\n",
+		       __FUNCTION__, command);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1598: FILE: drivers/net/vioc/vioc_spp.c:308:
+		       __FUNCTION__, command);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1616: FILE: drivers/net/vioc/vioc_spp.c:326:
+		printk(KERN_ERR "%s: register_reboot_notifier() returned error\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1617: FILE: drivers/net/vioc/vioc_spp.c:327:
+		       __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1624: FILE: drivers/net/vioc/vioc_spp.c:334:
+		printk (KERN_ERR "%s: unregister_reboot_notifier() returned error\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: drivers/net/vioc/vioc_spp.c:334:
+		printk (KERN_ERR "%s: unregister_reboot_notifier() returned error\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1625: FILE: drivers/net/vioc/vioc_spp.c:335:
+		printk (KERN_ERR "%s: unregister_reboot_notifier() returned error\n",
+		     __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1625: FILE: drivers/net/vioc/vioc_spp.c:335:
+		     __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1630: FILE: drivers/net/vioc/vioc_spp.c:340:
+ /*
+  * vioc_shutdown_notify - Called when the OS is going down.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1636: FILE: drivers/net/vioc/vioc_spp.c:346:
+	printk(KERN_ERR "%s: sent %s UOS state to BMC\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: drivers/net/vioc/vioc_spp.c:347:
+	printk(KERN_ERR "%s: sent %s UOS state to BMC\n",
+			__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1637: FILE: drivers/net/vioc/vioc_spp.c:347:
+			__FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: drivers/net/vioc/vioc_spp.c:350:
+^I^I ^I((code == SYS_POWER_OFF) ? "POWER_OFF" : "Unknown"))));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1640: FILE: drivers/net/vioc/vioc_spp.c:350:
+^I^I ^I((code == SYS_POWER_OFF) ? "POWER_OFF" : "Unknown"))));$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1646: FILE: drivers/net/vioc/vioc_spp.c:356:
+/*
+ * FUNCTION: vioc_handle_reset_request

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1656: FILE: drivers/net/vioc/vioc_spp.c:366:
+	printk(KERN_ERR "%s: received reset request %d via SPP\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1657: FILE: drivers/net/vioc/vioc_spp.c:367:
+	       __FUNCTION__, reset_type);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg"
#1663: FILE: drivers/net/vioc/vioc_spp.c:373:
+	if (msg == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1664: FILE: drivers/net/vioc/vioc_spp.c:374:
+		printk(KERN_ERR "%s: nlmsg_new() FAILS\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1664: FILE: drivers/net/vioc/vioc_spp.c:374:
+		printk(KERN_ERR "%s: nlmsg_new() FAILS\n", __FUNCTION__);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31188.commit.97da767b32c62442773a5410e7aa6d6f9c9c7213 total: 94 errors, 201 warnings, 100 checks, 1597 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31188.commit.97da767b32c62442773a5410e7aa6d6f9c9c7213 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
