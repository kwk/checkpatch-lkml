WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/char/raw.c:256:
+^I.aio_write = ^Igeneric_file_aio_write_nolock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/block_dev.c:1186:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: fs/block_dev.c:1186:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/block_dev.c:1186:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#353: FILE: fs/xfs/linux-2.6/xfs_file.c:84:
+	return __xfs_file_read(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#405: FILE: fs/xfs/linux-2.6/xfs_file.c:123:
+	return __xfs_file_write(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                    ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#420: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#420: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#420: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#420: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#420: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#421: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#421: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#421: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#421: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#421: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#430: FILE: include/linux/fs.h:1703:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#430: FILE: include/linux/fs.h:1703:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#430: FILE: include/linux/fs.h:1703:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#430: FILE: include/linux/fs.h:1703:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#430: FILE: include/linux/fs.h:1703:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: include/linux/fs.h:1705:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#433: FILE: include/linux/fs.h:1705:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#433: FILE: include/linux/fs.h:1705:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#433: FILE: include/linux/fs.h:1705:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#433: FILE: include/linux/fs.h:1705:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: mm/filemap.c:1287:
+generic_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: mm/filemap.c:2398:
+ssize_t generic_file_aio_write_nolock(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#491: FILE: mm/filemap.c:2405:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: mm/filemap.c:2408:
+	ret = __generic_file_aio_write_nolock(iocb, iov, nr_segs,
+			&iocb->ki_pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: mm/filemap.c:2454:
+ssize_t generic_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: mm/filemap.c:2465:
+	ret = __generic_file_aio_write_nolock(iocb, iov, nr_segs,
+			&iocb->ki_pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: net/socket.c:99:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: net/socket.c:101:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: net/socket.c:759:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#629: FILE: net/socket.c:769:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: net/socket.c:818:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos)

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#714: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#715: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#716: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#717: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#717: FILE: drivers/usb/gadget/inode.c:568:
+ 	for (i=0; i < priv->nr_segs; i++) {
  	      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#720: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#721: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#722: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#723: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#724: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#727: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#728: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#729: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#730: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#731: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#732: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#733: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#734: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->iv"
#743: FILE: drivers/usb/gadget/inode.c:598:
+	if (priv->iv == NULL

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#753: FILE: drivers/usb/gadget/inode.c:634:
+^Iunsigned long ^Inr_segs$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/usb/gadget/inode.c:696:
+ep_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t o)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: drivers/usb/gadget/inode.c:714:
+ep_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t o)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#818: FILE: drivers/usb/gadget/inode.c:728:
+	for (i=0; i < nr_segs; i++) {
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#820: FILE: drivers/usb/gadget/inode.c:730:
+		if (unlikely(copy_from_user(&buf[len], iov[i].iov_base,
+				iov[i].iov_len) != 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: fs/nfs/direct.c:751:
+ssize_t nfs_file_direct_read(struct kiocb *iocb, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: fs/nfs/direct.c:815:
+ssize_t nfs_file_direct_write(struct kiocb *iocb, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: fs/nfs/file.c:45:
+static ssize_t nfs_file_read(struct kiocb *, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: fs/nfs/file.c:47:
+static ssize_t nfs_file_write(struct kiocb *, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: fs/nfs/file.c:202:
+nfs_file_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: fs/nfs/file.c:338:
+static ssize_t nfs_file_write(struct kiocb *iocb, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos)

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#1010: FILE: fs/nfs/file.c:350:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1011: FILE: fs/nfs/file.c:351:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: fs/nfs/file.c:352:
+		inode->i_ino, (unsigned long) count, (long long) pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1038: FILE: include/linux/nfs_fs.h:371:
+extern ssize_t nfs_file_direct_read(struct kiocb *iocb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: include/linux/nfs_fs.h:372:
+extern ssize_t nfs_file_direct_read(struct kiocb *iocb,
+			const struct iovec *iov, unsigned long nr_segs,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1041: FILE: include/linux/nfs_fs.h:374:
+extern ssize_t nfs_file_direct_write(struct kiocb *iocb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: include/linux/nfs_fs.h:375:
+extern ssize_t nfs_file_direct_write(struct kiocb *iocb,
+			const struct iovec *iov, unsigned long nr_segs,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1071: FILE: fs/ocfs2/file.c:973:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1125: FILE: fs/ocfs2/file.c:1140:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1150: FILE: fs/ntfs/file.c:2180:
+static ssize_t ntfs_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: fs/gfs2/ops_file.c:177:
+static ssize_t gfs2_file_aio_read(struct kiocb *iocb,
 				    const struct iovec *iov,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1196: FILE: fs/gfs2/ops_file.c:187:
+	BUG_ON(iocb->ki_pos != pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1223: FILE: fs/gfs2/ops_file.c:255:
+			do_generic_file_read(filp, &iocb->ki_pos, &desc,
 			                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1224: FILE: fs/gfs2/ops_file.c:256:
+			do_generic_file_read(filp, &iocb->ki_pos, &desc,
+						file_read_actor);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60507.commit.e3f5c3d770839a289ac940b1f18cbdf334974695 total: 23 errors, 68 warnings, 33 checks, 1054 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60507.commit.e3f5c3d770839a289ac940b1f18cbdf334974695 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
