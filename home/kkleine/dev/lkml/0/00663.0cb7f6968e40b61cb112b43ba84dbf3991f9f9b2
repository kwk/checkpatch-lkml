ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: fs/unionfs/copyup.c:517:
+static void __cleanup_dentry(struct dentry * dentry, int bindex,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/unionfs/copyup.c:564:
+static void __set_inode(struct dentry * upper, struct dentry * lower,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/unionfs/copyup.c:564:
+static void __set_inode(struct dentry * upper, struct dentry * lower,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: fs/unionfs/copyup.c:577:
+static void __set_dentry(struct dentry * upper, struct dentry * lower,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: fs/unionfs/copyup.c:577:
+static void __set_dentry(struct dentry * upper, struct dentry * lower,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#273: FILE: fs/unionfs/dentry.c:178:
+				     struct nameidata *nd)
 				                       ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: fs/unionfs/file.c:54:
+static ssize_t unionfs_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: fs/unionfs/file.c:54:
+static ssize_t unionfs_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: fs/unionfs/file.c:55:
+			    size_t count, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: fs/unionfs/file.c:76:
+static ssize_t __unionfs_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: fs/unionfs/file.c:76:
+static ssize_t __unionfs_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: fs/unionfs/file.c:77:
+			       size_t count, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: fs/unionfs/file.c:121:
+static ssize_t unionfs_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: fs/unionfs/file.c:121:
+static ssize_t unionfs_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: fs/unionfs/file.c:122:
+			     size_t count, loff_t * ppos)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#358: FILE: fs/unionfs/inode.c:192:
+				     struct nameidata *nd)
 				                       ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: fs/unionfs/inode.c:684:
+static int unionfs_readlink(struct dentry *dentry, char __user * buf,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#377: FILE: fs/unionfs/inode.c:740:
+static void unionfs_put_link(struct dentry *dentry, struct nameidata *nd,
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#389: FILE: fs/unionfs/main.c:191:
+static int check_branch(struct nameidata *nd)
                                           ^^

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#445: FILE: fs/unionfs/stale_inode.c:18:
+static struct address_space_operations unionfs_stale_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#454: FILE: fs/unionfs/stale_inode.c:53:
+static struct inode_operations stale_inode_ops = {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#462: FILE: fs/unionfs/stale_inode.c:101:
+#if 0

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00663.commit.0cb7f6968e40b61cb112b43ba84dbf3991f9f9b2 total: 15 errors, 7 warnings, 0 checks, 358 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00663.commit.0cb7f6968e40b61cb112b43ba84dbf3991f9f9b2 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
