WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
           +-02.0-[0000:03-08]--+-00.0-[0000:04-07]--+-00.0-[0000:05-06]----00.0-[0000:06]----00.0  Broadcom Corporation NetXtreme II BCM5708S Gigabit Ethernet (labeled NIC2, 2.4 kernel name eth1, 2.6 kernel name eth0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#161: FILE: arch/i386/pci/common.c:126:
+static int __devinit set_bf_sort(struct dmi_system_id *d)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#165: FILE: arch/i386/pci/common.c:130:
+		printk(KERN_INFO "PCI: %s detected, enabling pci=bfsort.\n", d->ident);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#178: FILE: arch/i386/pci/common.c:148:
+static struct dmi_system_id __devinitdata pciprobe_dmi_table[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after pciprobe_dmi_table[]
#178: FILE: arch/i386/pci/common.c:148:
+static struct dmi_system_id __devinitdata pciprobe_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#179: FILE: arch/i386/pci/common.c:149:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#278: FILE: drivers/pci/probe.c:1073:
+	if      (pci_domain_nr(a->bus) < pci_domain_nr(b->bus)) return -1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#279: FILE: drivers/pci/probe.c:1074:
+	else if (pci_domain_nr(a->bus) > pci_domain_nr(b->bus)) return  1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: drivers/pci/probe.c:1076:
+	if      (a->bus->number < b->bus->number) return -1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: drivers/pci/probe.c:1077:
+	else if (a->bus->number > b->bus->number) return  1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: drivers/pci/probe.c:1079:
+	if      (a->devfn < b->devfn) return -1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#285: FILE: drivers/pci/probe.c:1080:
+	else if (a->devfn > b->devfn) return  1;

WARNING:TYPO_SPELLING: 'forcably' may be misspelled - perhaps 'forcibly'?
#291: FILE: drivers/pci/probe.c:1086:
+ * Yes, this forcably breaks the klist abstraction temporarily.  It
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: drivers/pci/probe.c:1099:
+	struct pci_dev *b;
+	list_for_each(pos, list) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: drivers/pci/probe.c:1118:
+	struct pci_dev *pdev;
+	spin_lock(&pci_bus_type.klist_devices.k_lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: drivers/pci/probe.c:1132:
+	struct pci_dev *b;
+	list_for_each_entry(b, list, global_list) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/pci.h:446:
+extern void pci_sort_breadthfirst(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33407.commit.39c7b419738d634b3176bec3282a214f789a9089 total: 6 errors, 9 warnings, 2 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33407.commit.39c7b419738d634b3176bec3282a214f789a9089 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
