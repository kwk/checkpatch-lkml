WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
A binary interface is added to usbmon. For each USB bus present on the host system a new file is added to the debugfs directory, in the form "usb%db".

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: drivers/usb/mon/mon_binary.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#75: FILE: drivers/usb/mon/mon_binary.c:13:
+#include <asm/uaccess.h>

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rp)...) over kzalloc(sizeof(struct mon_reader_list)...)
#98: FILE: drivers/usb/mon/mon_binary.c:36:
+	rp = kzalloc(sizeof(struct mon_reader_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp"
#99: FILE: drivers/usb/mon/mon_binary.c:37:
+	if (rp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/usb/mon/mon_binary.c:41:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#104: FILE: drivers/usb/mon/mon_binary.c:42:
+	if ((rc = mon_list_init(rp, mbus, 'b')) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/usb/mon/mon_binary.c:43:
+^I    ^Igoto err_alloc_pr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/usb/mon/mon_binary.c:43:
+^I    ^Igoto err_alloc_pr;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: drivers/usb/mon/mon_binary.c:65:
+static ssize_t mon_binary_read(struct file *file, char __user *buf,
+				size_t nbytes, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/usb/mon/mon_binary.c:74:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/usb/mon/mon_binary.c:96:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ep->hdr.length > 0'
#160: FILE: drivers/usb/mon/mon_binary.c:98:
+	if ((ep->hdr.length > 0) && (ep->hdr.data_flag == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ep->hdr.data_flag == 0'
#160: FILE: drivers/usb/mon/mon_binary.c:98:
+	if ((ep->hdr.length > 0) && (ep->hdr.data_flag == 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/usb/mon/mon_binary.c:99:
+^I^Idata_len = (ep->hdr.length > rp->data_max) ? rp->data_max: $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#161: FILE: drivers/usb/mon/mon_binary.c:99:
+		data_len = (ep->hdr.length > rp->data_max) ? rp->data_max: 
 		                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/usb/mon/mon_binary.c:101:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/usb/mon/mon_binary.c:103:
+^Ihdr_bytes = sizeof(struct mon_event_list) > nbytes ? nbytes: $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#165: FILE: drivers/usb/mon/mon_binary.c:103:
+	hdr_bytes = sizeof(struct mon_event_list) > nbytes ? nbytes: 
 	                                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#172: FILE: drivers/usb/mon/mon_binary.c:110:
+	data_bytes = data_len > nbytes ? nbytes: data_len;
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/usb/mon/mon_binary.c:111:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: drivers/usb/mon/mon_binary.c:113:
+	if (copy_to_user(buf, ep, hdr_bytes))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/usb/mon/mon_binary.c:118:
+^Iif ((setup_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->setup, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#180: FILE: drivers/usb/mon/mon_binary.c:118:
+	if ((setup_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->setup, 
+								setup_bytes))
+	{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: drivers/usb/mon/mon_binary.c:118:
+	if ((setup_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->setup, 
 	                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'setup_bytes > 0'
#180: FILE: drivers/usb/mon/mon_binary.c:118:
+	if ((setup_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->setup, 
+								setup_bytes))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: drivers/usb/mon/mon_binary.c:119:
+	if ((setup_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->setup, 
+								setup_bytes))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/usb/mon/mon_binary.c:124:
+^Iif ((data_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->data, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: drivers/usb/mon/mon_binary.c:124:
+	if ((data_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->data, 
 	                                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data_bytes > 0'
#186: FILE: drivers/usb/mon/mon_binary.c:124:
+	if ((data_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->data, 
+								data_bytes))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/usb/mon/mon_binary.c:125:
+	if ((data_bytes > 0) && copy_to_user(buf+hdr_bytes, ep->data, 
+								data_bytes))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/usb/mon/mon_binary.c:127:
+out:        $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#204: FILE: drivers/usb/mon/mon_binary.c:142:
+		printk(KERN_ERR TAG ": consistency error on close\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/usb/mon/mon_binary.c:147:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/usb/mon/mon_binary.c:155:
+static int mon_binary_ioctl(struct inode *inode, struct file *file, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/usb/mon/mon_binary.c:156:
+static int mon_binary_ioctl(struct inode *inode, struct file *file, 
+    unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/usb/mon/mon_binary.c:156:
+    unsigned int cmd, unsigned long arg)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: drivers/usb/mon/mon_binary.c:158:
+	unsigned new_data_max;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/usb/mon/mon_binary.c:161:
+^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/usb/mon/mon_binary.c:162:
+^I/* basic sanity check */^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: drivers/usb/mon/mon_binary.c:163:
+	if (!(rp = file->private_data))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: drivers/usb/mon/mon_binary.c:169:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: drivers/usb/mon/mon_binary.c:175:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/usb/mon/mon_binary.c:180:
+^I^I$

WARNING:TYPO_SPELLING: 'relasing' may be misspelled - perhaps 'releasing'?
#243: FILE: drivers/usb/mon/mon_binary.c:181:
+		/* try to allocate new buffer before relasing old one
 		                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#244: FILE: drivers/usb/mon/mon_binary.c:182:
+		 * to be safe*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/usb/mon/mon_binary.c:185:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/usb/mon/mon_binary.c:188:
+^I^Ibreak;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: drivers/usb/mon/mon_binary.c:191:
+^Ireturn ret;    ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/usb/mon/mon_binary.c:191:
+^Ireturn ret;    ^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#256: FILE: drivers/usb/mon/mon_binary.c:194:
+struct file_operations mon_fops_binary = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#270: FILE: drivers/usb/mon/mon_common.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/usb/mon/mon_common.c:6:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/usb/mon/mon_common.c:6:
+ $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#281: FILE: drivers/usb/mon/mon_common.c:12:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: drivers/usb/mon/mon_common.c:29:
+#define EVENT_MAX  (2*PAGE_SIZE / sizeof(struct mon_event_list))
                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/usb/mon/mon_common.c:43:
+static inline char mon_list_get_setup(struct mon_event_list *ep,
+    struct urb *urb, char ev_type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/usb/mon/mon_common.c:43:
+    struct urb *urb, char ev_type)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#314: FILE: drivers/usb/mon/mon_common.c:45:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->setup_packet"
#320: FILE: drivers/usb/mon/mon_common.c:51:
+	if (urb->setup_packet == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/usb/mon/mon_common.c:59:
+static inline char mon_list_get_data(struct mon_event_list *ep, struct urb *urb,
+    int len, char ev_type, int data_max)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/usb/mon/mon_common.c:59:
+    int len, char ev_type, int data_max)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->transfer_buffer"
#357: FILE: drivers/usb/mon/mon_common.c:88:
+	if (urb->transfer_buffer == NULL)

WARNING:TYPO_SPELLING: 'accoring' may be misspelled - perhaps 'according'?
#365: FILE: drivers/usb/mon/mon_common.c:96:
+ * [Re]allocate slab cache accoring to specified sizes.
                            ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#368: FILE: drivers/usb/mon/mon_common.c:99:
+int mon_list_resize(struct mon_reader_list* rp, int data_max)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: drivers/usb/mon/mon_common.c:103:
+	kmem_cache_t * new_e_slab;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#375: FILE: drivers/usb/mon/mon_common.c:106:
+	int ret=0;
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/usb/mon/mon_common.c:107:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/usb/mon/mon_common.c:107:
+    $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#378: FILE: drivers/usb/mon/mon_common.c:109:
+	 * of data */

ERROR:SPACING: spaces required around that '||' (ctx:VxW)
#379: FILE: drivers/usb/mon/mon_common.c:110:
+	if ((data_max < DATA_MIN)|| (data_max > DATA_MAX))
 	                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data_max < DATA_MIN'
#379: FILE: drivers/usb/mon/mon_common.c:110:
+	if ((data_max < DATA_MIN)|| (data_max > DATA_MAX))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data_max > DATA_MAX'
#379: FILE: drivers/usb/mon/mon_common.c:110:
+	if ((data_max < DATA_MIN)|| (data_max > DATA_MAX))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/usb/mon/mon_common.c:112:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/usb/mon/mon_common.c:113:
+    ^I/* remove this reader from list to avoid urb_submit accessing slab $

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/usb/mon/mon_common.c:113:
+    ^I/* remove this reader from list to avoid urb_submit accessing slab $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: drivers/usb/mon/mon_common.c:113:
+    ^I/* remove this reader from list to avoid urb_submit accessing slab $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/usb/mon/mon_common.c:113:
+    ^I/* remove this reader from list to avoid urb_submit accessing slab $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#383: FILE: drivers/usb/mon/mon_common.c:114:
+	 * cache*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/usb/mon/mon_common.c:115:
+    ^Imutex_lock(&mon_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: drivers/usb/mon/mon_common.c:115:
+    ^Imutex_lock(&mon_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/usb/mon/mon_common.c:115:
+    ^Imutex_lock(&mon_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/usb/mon/mon_common.c:116:
+    ^Imon_reader_del(rp->r.m_bus, &rp->r);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: drivers/usb/mon/mon_common.c:116:
+    ^Imon_reader_del(rp->r.m_bus, &rp->r);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/usb/mon/mon_common.c:116:
+    ^Imon_reader_del(rp->r.m_bus, &rp->r);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/usb/mon/mon_common.c:117:
+    ^Imutex_unlock(&mon_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: drivers/usb/mon/mon_common.c:117:
+    ^Imutex_unlock(&mon_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/usb/mon/mon_common.c:117:
+    ^Imutex_unlock(&mon_lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: drivers/usb/mon/mon_common.c:118:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/usb/mon/mon_common.c:118:
+    $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#389: FILE: drivers/usb/mon/mon_common.c:120:
+	 * swap the last char from '0' to '1' and vice versa*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/usb/mon/mon_common.c:125:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#395: FILE: drivers/usb/mon/mon_common.c:126:
+	if ((new_e_slab = kmem_cache_create(new_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/usb/mon/mon_common.c:127:
+	if ((new_e_slab = kmem_cache_create(new_name,
+	    sizeof(struct mon_event_list)+data_max, sizeof(long), 0,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: drivers/usb/mon/mon_common.c:127:
+	    sizeof(struct mon_event_list)+data_max, sizeof(long), 0,
 	                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/usb/mon/mon_common.c:140:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: drivers/usb/mon/mon_common.c:141:
+out:^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#417: FILE: drivers/usb/mon/mon_common.c:148:
+static inline struct mon_event_list * mon_event_alloc(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: drivers/usb/mon/mon_common.c:148:
+static inline struct mon_event_list * mon_event_alloc(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/usb/mon/mon_common.c:149:
+    struct mon_reader_list *rp)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: drivers/usb/mon/mon_common.c:152:
+	struct mon_event_list *ep = kmem_cache_alloc(rp->e_slab, SLAB_ATOMIC);
+	if (!ep)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#423: FILE: drivers/usb/mon/mon_common.c:154:
+	ep->data = ((unsigned char*)ep) + sizeof(struct mon_event_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/usb/mon/mon_common.c:158:
+/* $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#430: FILE: drivers/usb/mon/mon_common.c:161:
+static u64 mon_make_id(void* urb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: drivers/usb/mon/mon_common.c:164:
+		void * ptr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/usb/mon/mon_common.c:173:
+static void mon_list_event(struct mon_reader_list *rp, struct urb *urb,
+    char ev_type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/usb/mon/mon_common.c:173:
+    char ev_type)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#446: FILE: drivers/usb/mon/mon_common.c:177:
+	if (rp->nevents >= EVENT_MAX ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: drivers/usb/mon/mon_common.c:193:
+^Iep->hdr.data_flag = mon_list_get_data(ep, urb, ep->hdr.length, ev_type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/usb/mon/mon_common.c:194:
+	ep->hdr.data_flag = mon_list_get_data(ep, urb, ep->hdr.length, ev_type, 
+	    rp->data_max);

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: drivers/usb/mon/mon_common.c:204:
+	struct mon_reader_list *rp = data;
+	mon_list_event(rp, urb, 'S');

WARNING:LINE_SPACING: Missing a blank line after declarations
#479: FILE: drivers/usb/mon/mon_common.c:210:
+	struct mon_reader_list *rp = data;
+	mon_list_event(rp, urb, 'C');

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#487: FILE: drivers/usb/mon/mon_common.c:218:
+	if (rp->nevents >= EVENT_MAX ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/usb/mon/mon_common.c:244:
+struct mon_event_list *mon_list_fetch(struct mon_reader_list *rp,
+    struct mon_bus *mbus)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/usb/mon/mon_common.c:244:
+    struct mon_bus *mbus)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: drivers/usb/mon/mon_common.c:261:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: drivers/usb/mon/mon_common.c:262:
+ * Initialize list reader. Must be called with mon_lock hold and before $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#534: FILE: drivers/usb/mon/mon_common.c:265:
+int mon_list_init(struct mon_reader_list* rp, struct mon_bus *mbus, char type)

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: drivers/usb/mon/mon_common.c:267:
+    ^Istruct usb_bus *ubus = mbus->u_bus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: drivers/usb/mon/mon_common.c:267:
+    ^Istruct usb_bus *ubus = mbus->u_bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/usb/mon/mon_common.c:267:
+    ^Istruct usb_bus *ubus = mbus->u_bus;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: drivers/usb/mon/mon_common.c:268:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: drivers/usb/mon/mon_common.c:271:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/usb/mon/mon_common.c:271:
+    $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/usb/mon/mon_common.c:279:
+	snprintf(rp->slab_name, SLAB_NAME_SZ, "mon%d%c_%lx", ubus->busnum, type,
+	    (long)rp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/usb/mon/mon_common.c:282:
+	rp->e_slab = kmem_cache_create(rp->slab_name,
+	    sizeof(struct mon_event_list)+rp->data_max, sizeof(long), 0,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#551: FILE: drivers/usb/mon/mon_common.c:282:
+	    sizeof(struct mon_event_list)+rp->data_max, sizeof(long), 0,
 	                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/usb/mon/mon_common.c:284:
+^Iif (rp->e_slab == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->e_slab"
#553: FILE: drivers/usb/mon/mon_common.c:284:
+	if (rp->e_slab == NULL) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: drivers/usb/mon/mon_common.c:289:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/usb/mon/mon_common.c:290:
+ * Destroy list reader. Must be called after mon_reader_del. $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#562: FILE: drivers/usb/mon/mon_common.c:293:
+void mon_list_destroy(struct mon_reader_list* rp)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#587: FILE: drivers/usb/mon/mon_common.c:318:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#618: FILE: drivers/usb/mon/mon_main.c:328:
+	if (d == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/usb/mon/mon_text.c:29:
+    ^Istruct mon_reader_list l;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#717: FILE: drivers/usb/mon/mon_text.c:29:
+    ^Istruct mon_reader_list l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/usb/mon/mon_text.c:29:
+    ^Istruct mon_reader_list l;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#790: FILE: drivers/usb/mon/mon_text.c:35:
+static inline unsigned int mon_get_timestamp(struct timeval* tval)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#920: FILE: drivers/usb/mon/mon_text.c:68:
+	if ((rc = mon_list_init(&rp->l, mbus, 't')) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/usb/mon/mon_text.c:69:
+^I    ^Igoto err_list;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#921: FILE: drivers/usb/mon/mon_text.c:69:
+^I    ^Igoto err_list;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1011: FILE: drivers/usb/mon/mon_text.c:142:
+^I    (long unsigned) ep->hdr.id, mon_get_timestamp(&ep->hdr.tstamp), $

CHECK:SPACING: No space is necessary after a cast
#1011: FILE: drivers/usb/mon/mon_text.c:142:
+	    (long unsigned) ep->hdr.id, mon_get_timestamp(&ep->hdr.tstamp), 

WARNING:MISORDERED_TYPE: type 'long unsigned' should be specified in [[un]signed] [short|int|long|long long] order
#1011: FILE: drivers/usb/mon/mon_text.c:142:
+	    (long unsigned) ep->hdr.id, mon_get_timestamp(&ep->hdr.tstamp), 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: drivers/usb/mon/mon_text.c:143:
+            ep->hdr.type, utype, udir, usb_pipedevice(ep->hdr.pipe), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: drivers/usb/mon/mon_text.c:143:
+            ep->hdr.type, utype, udir, usb_pipedevice(ep->hdr.pipe), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: drivers/usb/mon/mon_text.c:143:
+            ep->hdr.type, utype, udir, usb_pipedevice(ep->hdr.pipe), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: drivers/usb/mon/mon_text.c:144:
+            usb_pipeendpoint(ep->hdr.pipe));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: drivers/usb/mon/mon_text.c:144:
+            usb_pipeendpoint(ep->hdr.pipe));$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1038: FILE: drivers/usb/mon/mon_text.c:162:
+	if ((data_len = ep->hdr.length) > 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1081: FILE: drivers/usb/mon/mon_text.c:206:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1164: FILE: drivers/usb/mon/usb_mon.h:66:
+        struct mon_event_hdr hdr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: drivers/usb/mon/usb_mon.h:66:
+        struct mon_event_hdr hdr;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1166: FILE: drivers/usb/mon/usb_mon.h:68:
+	unsigned char* data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1172: FILE: drivers/usb/mon/usb_mon.h:74:
+    ^Iunsigned data_max;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1172: FILE: drivers/usb/mon/usb_mon.h:74:
+    ^Iunsigned data_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: drivers/usb/mon/usb_mon.h:74:
+    ^Iunsigned data_max;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1172: FILE: drivers/usb/mon/usb_mon.h:74:
+    	unsigned data_max;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1182: FILE: drivers/usb/mon/usb_mon.h:84:
+int mon_list_init(struct mon_reader_list* rp, struct mon_bus *mbus, char type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: drivers/usb/mon/usb_mon.h:86:
+struct mon_event_list *mon_list_fetch(struct mon_reader_list *rp,
+    struct mon_bus *mbus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: drivers/usb/mon/usb_mon.h:86:
+    struct mon_bus *mbus);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1185: FILE: drivers/usb/mon/usb_mon.h:87:
+int mon_list_resize(struct mon_reader_list* rp, int data_max);^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1185: FILE: drivers/usb/mon/usb_mon.h:87:
+int mon_list_resize(struct mon_reader_list* rp, int data_max);	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1186: FILE: drivers/usb/mon/usb_mon.h:88:
+void mon_list_destroy(struct mon_reader_list* rp);^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1186: FILE: drivers/usb/mon/usb_mon.h:88:
+void mon_list_destroy(struct mon_reader_list* rp);	

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1195: FILE: drivers/usb/mon/usb_mon.h:99:
+extern struct file_operations mon_fops_binary;

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29238.commit.1bdf5202120dca114be52586ce9c40ffbcf86de4 total: 81 errors, 51 warnings, 34 checks, 1095 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29238.commit.1bdf5202120dca114be52586ce9c40ffbcf86de4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
