WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#50: FILE: MAINTAINERS:2814:
+P:      Alex Dubov

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#51: FILE: MAINTAINERS:2815:
+M:      oakad@yahoo.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#51: FILE: MAINTAINERS:2815:
+P:      Alex Dubov
+M:      oakad@yahoo.com

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#52: FILE: MAINTAINERS:2816:
+S:      Maintained

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: drivers/misc/tifm_7xx1.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#99: FILE: drivers/misc/tifm_7xx1.c:37:
+	struct tifm_adapter *fm = (struct tifm_adapter*)adapter;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#109: FILE: drivers/misc/tifm_7xx1.c:47:
+			printk(KERN_INFO DRIVER_NAME

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/misc/tifm_7xx1.c:56:
+			writel((TIFM_IRQ_FIFOMASK | TIFM_IRQ_CARDMASK) << cnt,
+				fm->addr + FM_CLEAR_INTERRUPT_ENABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/misc/tifm_7xx1.c:58:
+			writel((TIFM_IRQ_FIFOMASK | TIFM_IRQ_CARDMASK) << cnt,
+				fm->addr + FM_SET_INTERRUPT_ENABLE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: drivers/misc/tifm_7xx1.c:71:
+	struct tifm_adapter *fm = (struct tifm_adapter*)dev_id;

CHECK:BRACES: braces {} should be used on all arms of this statement
#169: FILE: drivers/misc/tifm_7xx1.c:107:
+		if (!fm->remove_mask && !fm->insert_mask)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: drivers/misc/tifm_7xx1.c:109:
+		else {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#191: FILE: drivers/misc/tifm_7xx1.c:129:
+		msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#206: FILE: drivers/misc/tifm_7xx1.c:144:
+		msleep(10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/misc/tifm_7xx1.c:147:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#213: FILE: drivers/misc/tifm_7xx1.c:151:
+		msleep(10);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#223: FILE: drivers/misc/tifm_7xx1.c:161:
+inline static char *tifm_7xx1_sock_addr(char *base_addr, unsigned int sock_num)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#230: FILE: drivers/misc/tifm_7xx1.c:168:
+	struct tifm_adapter *fm = (struct tifm_adapter*)adapter;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: drivers/misc/tifm_7xx1.c:191:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#277: FILE: drivers/misc/tifm_7xx1.c:215:
+				printk(KERN_INFO DRIVER_NAME

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: drivers/misc/tifm_7xx1.c:255:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/misc/tifm_7xx1.c:257:
+        pci_disable_device(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/misc/tifm_7xx1.c:257:
+        pci_disable_device(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/misc/tifm_7xx1.c:258:
+        pci_save_state(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/misc/tifm_7xx1.c:258:
+        pci_save_state(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/misc/tifm_7xx1.c:268:
+        pci_enable_device(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/misc/tifm_7xx1.c:268:
+        pci_enable_device(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/misc/tifm_7xx1.c:269:
+        pci_set_power_state(dev, PCI_D0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/misc/tifm_7xx1.c:269:
+        pci_set_power_state(dev, PCI_D0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/misc/tifm_7xx1.c:270:
+        pci_set_master(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/misc/tifm_7xx1.c:270:
+        pci_set_master(dev);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#376: FILE: drivers/misc/tifm_7xx1.c:314:
+	fm->sockets = kzalloc(sizeof(struct tifm_dev*) * fm->max_sockets, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#376: FILE: drivers/misc/tifm_7xx1.c:314:
+	fm->sockets = kzalloc(sizeof(struct tifm_dev*) * fm->max_sockets, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/misc/tifm_7xx1.c:339:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/misc/tifm_7xx1.c:378:
+^I$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#451: FILE: drivers/misc/tifm_7xx1.c:389:
+static struct pci_device_id tifm_7xx1_pci_tbl [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/misc/tifm_7xx1.c:392:
+        { PCI_VENDOR_ID_TI, 0x803B, PCI_ANY_ID, PCI_ANY_ID, 0, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/misc/tifm_7xx1.c:392:
+        { PCI_VENDOR_ID_TI, 0x803B, PCI_ANY_ID, PCI_ANY_ID, 0, 0,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#492: FILE: drivers/misc/tifm_core.c:1:
+/*

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#541: FILE: drivers/misc/tifm_core.c:50:
+	const char *card_type_name[] = {"INV", "SM", "MS", "SD"};

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#543: FILE: drivers/misc/tifm_core.c:52:
+	if (!dev || !(fm_dev = container_of(dev, struct tifm_dev, dev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#563: FILE: drivers/misc/tifm_core.c:72:
+	if (fm->sockets)
+		kfree(fm->sockets);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fm)...) over kzalloc(sizeof(struct tifm_adapter)...)
#576: FILE: drivers/misc/tifm_core.c:85:
+	struct tifm_adapter *fm = kzalloc(sizeof(struct tifm_adapter), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/misc/tifm_core.c:119:
+^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#630: FILE: drivers/misc/tifm_core.c:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#634: FILE: drivers/misc/tifm_core.c:143:
+	struct tifm_dev *fm_dev = container_of(dev, struct tifm_dev, dev);
+	if (fm_dev->wq)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct tifm_dev)...)
#642: FILE: drivers/misc/tifm_core.c:151:
+	struct tifm_dev *dev = kzalloc(sizeof(struct tifm_dev), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/misc/tifm_core.c:152:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#662: FILE: drivers/misc/tifm_core.c:171:
+	struct tifm_adapter *fm = (struct tifm_adapter*)dev_get_drvdata(sock->dev.parent);

WARNING:LINE_SPACING: Missing a blank line after declarations
#663: FILE: drivers/misc/tifm_core.c:172:
+	struct tifm_adapter *fm = (struct tifm_adapter*)dev_get_drvdata(sock->dev.parent);
+	fm->eject(fm, sock);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#710: FILE: drivers/misc/tifm_core.c:219:
+		if (drv->remove) drv->remove(fm_dev);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: drivers/misc/tifm_core.c:232:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#767: FILE: drivers/mmc/tifm_sd.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#778: FILE: drivers/mmc/tifm_sd.c:12:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#787: FILE: drivers/mmc/tifm_sd.c:21:
+static int no_dma = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#788: FILE: drivers/mmc/tifm_sd.c:22:
+static int fixed_timeout = 0;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#835: FILE: drivers/mmc/tifm_sd.c:69:
+typedef enum {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: drivers/mmc/tifm_sd.c:112:
+static int tifm_sd_transfer_data(struct tifm_dev *sock, struct tifm_sd *host,
+					unsigned int host_status)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#903: FILE: drivers/mmc/tifm_sd.c:137:
+		} else if ((cmd->data->flags & MMC_DATA_WRITE)
+			   && (host_status & TIFM_MMCSD_AE)) {

ERROR:SPACING: space required before the open parenthesis '('
#904: FILE: drivers/mmc/tifm_sd.c:138:
+			for(cnt = 0; cnt < TIFM_MMCSD_FIFO_SIZE; cnt++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#926: FILE: drivers/mmc/tifm_sd.c:160:
+		rc |= TIFM_MMCSD_RSP_BUSY; // deliberate fall-through

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#940: FILE: drivers/mmc/tifm_sd.c:174:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#957: FILE: drivers/mmc/tifm_sd.c:191:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/mmc/tifm_sd.c:225:
+static void tifm_sd_process_cmd(struct tifm_dev *sock, struct tifm_sd *host,
+				       unsigned int host_status)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1002: FILE: drivers/mmc/tifm_sd.c:236:
+			if (cmd->data) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1004: FILE: drivers/mmc/tifm_sd.c:238:
+			} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1012: FILE: drivers/mmc/tifm_sd.c:246:
+				if (cmd->data->flags & MMC_DATA_WRITE) {
[...]
+				} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1026: FILE: drivers/mmc/tifm_sd.c:260:
+			if (cmd->error) {
[...]
+			} else if (cmd->data->flags & MMC_DATA_WRITE) {
[...]
+			} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->written_blocks == cmd->data->blocks'
#1037: FILE: drivers/mmc/tifm_sd.c:271:
+		if (!(host->flags & CARD_BUSY)
+		    && (host->written_blocks == cmd->data->blocks)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1038: FILE: drivers/mmc/tifm_sd.c:272:
+		if (!(host->flags & CARD_BUSY)
+		    && (host->written_blocks == cmd->data->blocks)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1066: FILE: drivers/mmc/tifm_sd.c:300:
+	host = mmc_priv((struct mmc_host*)tifm_get_drvdata(sock));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: drivers/mmc/tifm_sd.c:313:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1100: FILE: drivers/mmc/tifm_sd.c:334:
+				} else if(host->state == BRS) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: drivers/mmc/tifm_sd.c:356:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: drivers/mmc/tifm_sd.c:356:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/mmc/tifm_sd.c:370:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1143: FILE: drivers/mmc/tifm_sd.c:377:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: drivers/mmc/tifm_sd.c:379:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: drivers/mmc/tifm_sd.c:384:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/mmc/tifm_sd.c:403:
+^Idata_timeout *= 10; // call it fudge factor for now^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: drivers/mmc/tifm_sd.c:404:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#1179: FILE: drivers/mmc/tifm_sd.c:413:
+		if(data_timeout > 0xffff) data_timeout = 0; // set to unlimited

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1179: FILE: drivers/mmc/tifm_sd.c:413:
+		if(data_timeout > 0xffff) data_timeout = 0; // set to unlimited

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1184: FILE: drivers/mmc/tifm_sd.c:418:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1200: FILE: drivers/mmc/tifm_sd.c:434:
+		printk(KERN_ERR DRIVER_NAME ": unfinished request detected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1212: FILE: drivers/mmc/tifm_sd.c:446:
+			printk(KERN_ERR DRIVER_NAME ": scatterlist map failed\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1242: FILE: drivers/mmc/tifm_sd.c:476:
+	struct tifm_sd *host = (struct tifm_sd*)data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1256: FILE: drivers/mmc/tifm_sd.c:490:
+		printk(KERN_ERR DRIVER_NAME ": no request to complete?\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1294: FILE: drivers/mmc/tifm_sd.c:528:
+			printk(KERN_ERR DRIVER_NAME ": kmap failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/mmc/tifm_sd.c:532:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1306: FILE: drivers/mmc/tifm_sd.c:540:
+		printk(KERN_ERR DRIVER_NAME ": unfinished request detected\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1347: FILE: drivers/mmc/tifm_sd.c:581:
+	struct tifm_sd *host = (struct tifm_sd*)data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1361: FILE: drivers/mmc/tifm_sd.c:595:
+		printk(KERN_ERR DRIVER_NAME ": no request to complete?\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: drivers/mmc/tifm_sd.c:622:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: drivers/mmc/tifm_sd.c:623:
+        if (r_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: drivers/mmc/tifm_sd.c:623:
+        if (r_data)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1397: FILE: drivers/mmc/tifm_sd.c:631:
+	printk(KERN_ERR DRIVER_NAME ": card failed to respond for a long period of time");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1398: FILE: drivers/mmc/tifm_sd.c:632:
+	tifm_eject(((struct tifm_sd*)data)->dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: drivers/mmc/tifm_sd.c:643:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: drivers/mmc/tifm_sd.c:698:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/mmc/tifm_sd.c:710:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1479: FILE: drivers/mmc/tifm_sd.c:713:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1492: FILE: drivers/mmc/tifm_sd.c:726:
+	struct tifm_sd *host = (struct tifm_sd*)data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1513: FILE: drivers/mmc/tifm_sd.c:747:
+		printk(KERN_WARNING DRIVER_NAME ": card gone, unexpectedly\n");

ERROR:SPACING: space required before the open parenthesis '('
#1549: FILE: drivers/mmc/tifm_sd.c:783:
+	for(rc = 0; rc < 50; rc++) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1555: FILE: drivers/mmc/tifm_sd.c:789:
+		msleep(10);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1556: FILE: drivers/mmc/tifm_sd.c:790:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/mmc/tifm_sd.c:790:
+        }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1559: FILE: drivers/mmc/tifm_sd.c:793:
+		printk(KERN_ERR DRIVER_NAME ": card not ready - probe failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1572: FILE: drivers/mmc/tifm_sd.c:806:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1655: FILE: include/linux/tifm.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1716: FILE: include/linux/tifm.h:62:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1738: FILE: include/linux/tifm.h:84:
+typedef enum {FM_NULL = 0, FM_XD = 0x01, FM_MS = 0x02, FM_SD = 0x03} tifm_media_id;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1743: FILE: include/linux/tifm.h:89:
+	spinlock_t              lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1756: FILE: include/linux/tifm.h:102:
+^Itifm_media_id        *id_table;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1759: FILE: include/linux/tifm.h:105:
+^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1768: FILE: include/linux/tifm.h:114:
+	spinlock_t              lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1797: FILE: include/linux/tifm.h:143:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1800: FILE: include/linux/tifm.h:146:
+        return dev_get_drvdata(&dev->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1800: FILE: include/linux/tifm.h:146:
+        return dev_get_drvdata(&dev->dev);$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.36051.commit.8e65864e0319d39b0b7e0770363eee4dfd171672 total: 55 errors, 46 warnings, 19 checks, 1743 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.36051.commit.8e65864e0319d39b0b7e0770363eee4dfd171672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
