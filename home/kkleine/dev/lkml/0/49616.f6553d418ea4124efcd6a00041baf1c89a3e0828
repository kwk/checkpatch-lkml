WARNING:TYPO_SPELLING: 'exersize' may be misspelled - perhaps 'exercise'?
#41: 
here it is as attachment, and with exersize script.
                                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -ruNp -X dontdiff -X exclude-diffs ../linux-2.6.18-rc3-mm2-sk/Documentation/gpio-model.txt roll3-m2/Documentation/gpio-model.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: Documentation/gpio-model.txt:93:
+trivially reserved by masking in bits as they're taken.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#168: FILE: Documentation/gpio-model.txt:112:
+- when a pin doesnt support feature, it provides a 'ghost-bit', which
              ^^^^^^

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#184: FILE: Documentation/gpio-model.txt:128:
+Sadly, it doesnt expose port-wide output-enable, which means
           ^^^^^^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#210: FILE: drivers/char/nsc_gpio.c:24:
+static int noports = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#214: FILE: drivers/char/nsc_gpio.c:28:
+static int bitpos = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: drivers/char/nsc_gpio.c:33:
+static ssize_t nsc_gpio_status(struct nsc_gpio_ops *amp, unsigned index)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/char/nsc_gpio.c:37:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/char/nsc_gpio.c:37:
+ $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#225: FILE: drivers/char/nsc_gpio.c:38:
+	return sprintf (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: drivers/char/nsc_gpio.c:38:
+	return sprintf (

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: drivers/char/nsc_gpio.c:54:
+void nsc_gpio_dump(struct nsc_gpio_ops *amp, unsigned index)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: drivers/char/nsc_gpio.c:56:
+	nsc_gpio_status(amp,index);
 	                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#248: FILE: drivers/char/nsc_gpio.c:61:
+/* the pin-mode-change 'commands' of the legacy device-file-interface,
+   are reused in the sysfs-interface.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#250: FILE: drivers/char/nsc_gpio.c:63:
+static int command_write(struct nsc_gpio_ops *amp, char c, unsigned m)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#269: FILE: drivers/char/nsc_gpio.c:71:
+	/* cases are a mix of old command letters, and new PF_CMD_*
+	   symbols, for Off & On actions respectively.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#386: FILE: drivers/char/nsc_gpio.c:161:
+/* 8 sysfs-callbacks, partitioned on 3 axes:
+   get/set:	as reqd by 2 different callback fn-signatures

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/char/nsc_gpio.c:171:
+{ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: drivers/char/nsc_gpio.c:176:
+	unsigned res = -1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#403: FILE: drivers/char/nsc_gpio.c:178:
+	BUG_ON(!amp);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/char/nsc_gpio.c:188:
+^Ireturn bitpos ? $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#417: FILE: drivers/char/nsc_gpio.c:192:
+}
+ssize_t nsc_gpio_sysfs_get_portval(struct device *dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/char/nsc_gpio.c:194:
+{ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#424: FILE: drivers/char/nsc_gpio.c:199:
+	unsigned res = -1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#426: FILE: drivers/char/nsc_gpio.c:201:
+	BUG_ON(!amp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#438: FILE: drivers/char/nsc_gpio.c:213:
+EXPORT_SYMBOL_GPL(nsc_gpio_sysfs_get_portval);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/char/nsc_gpio.c:218:
+{ $

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#447: FILE: drivers/char/nsc_gpio.c:222:
+	long setting = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#450: FILE: drivers/char/nsc_gpio.c:225:
+	BUG_ON(!amp);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#454: FILE: drivers/char/nsc_gpio.c:229:
+}
+ssize_t nsc_gpio_sysfs_set_portval(struct device *dev,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/char/nsc_gpio.c:232:
+{ $

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#461: FILE: drivers/char/nsc_gpio.c:236:
+	long setting = simple_strtol(buf, NULL, 10);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#463: FILE: drivers/char/nsc_gpio.c:238:
+	BUG_ON(!amp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#468: FILE: drivers/char/nsc_gpio.c:243:
+EXPORT_SYMBOL_GPL(nsc_gpio_sysfs_set_portval);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/char/nsc_gpio.c:248:
+{ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#480: FILE: drivers/char/nsc_gpio.c:255:
+	BUG_ON(!amp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#484: FILE: drivers/char/nsc_gpio.c:259:
+	switch (func) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: drivers/char/nsc_gpio.c:294:
+^I^Iidx, func, config, res); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#524: FILE: drivers/char/nsc_gpio.c:299:
+EXPORT_SYMBOL_GPL(nsc_gpio_sysfs_set_bitconf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#526: FILE: drivers/char/nsc_gpio.c:301:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0
                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Mask>
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Val>
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Mask' - possible side-effects?
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Mask' may be better as '(Mask)' to avoid precedence issues
#527: FILE: drivers/char/nsc_gpio.c:302:
+#define replace(Mask,Val)	~Mask, Val ? Mask : 0

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#537: FILE: drivers/char/nsc_gpio.c:312:
+	long setting = simple_strtol(buf, NULL, 10);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: drivers/char/nsc_gpio.c:314:
+	BUG_ON(!amp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#542: FILE: drivers/char/nsc_gpio.c:317:
+	switch (func) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: drivers/char/nsc_gpio.c:322:
+		int i, err = 0;
+		dev_warn(dev, "try to set status to: %s\n", buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/char/nsc_gpio.c:364:
+{ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#598: FILE: drivers/char/nsc_gpio.c:373:
+	BUG_ON(!amp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#599: FILE: drivers/char/nsc_gpio.c:374:
+	BUG_ON(!width);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: drivers/char/nsc_gpio.c:377:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#602: FILE: drivers/char/nsc_gpio.c:377:
+	for (bit = 0; bit < width; bit++) {
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: drivers/char/nsc_gpio.c:408:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#638: FILE: drivers/char/nsc_gpio.c:413:
+		res = res ? 1<<bit : 0;
 		             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: drivers/char/nsc_gpio.c:426:
+ssize_t nsc_gpio_sysfs_set_portconf(struct device *dev,
+				   struct device_attribute *devattr,

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#659: FILE: drivers/char/nsc_gpio.c:434:
+	long setting = simple_strtol(buf, NULL, 10);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#661: FILE: drivers/char/nsc_gpio.c:436:
+	BUG_ON(!amp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#664: FILE: drivers/char/nsc_gpio.c:439:
+	for (bit = 0; bit < width; bit++) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#666: FILE: drivers/char/nsc_gpio.c:441:
+		switch (func) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#671: FILE: drivers/char/nsc_gpio.c:446:
+			int i, err = 0;
+			dev_warn(dev, "try to set status to: %s\n", buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: drivers/char/nsc_gpio.c:466:
+^I^I^Iamp->gpio_config(idx, ~PF_CMD_LOCKED, $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#708: FILE: drivers/char/nsc_gpio.c:483:
+EXPORT_SYMBOL_GPL(nsc_gpio_sysfs_set_portconf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: drivers/char/nsc_gpio.c:486:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#715: FILE: drivers/char/nsc_gpio.c:490:
+static void create_devattr_file(struct device* dev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#720: FILE: drivers/char/nsc_gpio.c:495:
+	if (dev_attr->show || dev_attr->store) {
[...]
+	else 
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#721: FILE: drivers/char/nsc_gpio.c:496:
+	if (dev_attr->show || dev_attr->store) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: drivers/char/nsc_gpio.c:501:
+^Ielse $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#726: FILE: drivers/char/nsc_gpio.c:501:
+	}
+	else 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#731: FILE: drivers/char/nsc_gpio.c:506:
+/* next 2 functions (and previous kludge) could be replaced by pair of
+   calls to sysfs_create/remove_group, except that collecting

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#735: FILE: drivers/char/nsc_gpio.c:510:
+void nsc_gpio_sysfs_bits_init(struct device* dev,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#741: FILE: drivers/char/nsc_gpio.c:516:
+	for (i = 0; i < numdevs; i++) {
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#762: FILE: drivers/char/nsc_gpio.c:537:
+void nsc_gpio_sysfs_bits_fini(struct device* dev,

WARNING:LINE_SPACING: Missing a blank line after declarations
#766: FILE: drivers/char/nsc_gpio.c:541:
+	int i;
+	for (i = 0; i < numdevs; i++) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#779: FILE: drivers/char/nsc_gpio.c:554:
+EXPORT_SYMBOL_GPL(nsc_gpio_sysfs_bits_fini);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#784: FILE: drivers/char/nsc_gpio.c:558:
+	printk(KERN_DEBUG DRVNAME " initializing\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#791: FILE: drivers/char/nsc_gpio.c:564:
+	printk(KERN_DEBUG DRVNAME " cleanup\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: drivers/char/pc8736x_gpio.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#801: FILE: drivers/char/pc8736x_gpio.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#823: FILE: drivers/char/pc8736x_gpio.c:26:
+static int nobits = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#827: FILE: drivers/char/pc8736x_gpio.c:30:
+static int noports = 0;

WARNING:TYPO_SPELLING: 'supress' may be misspelled - perhaps 'suppress'?
#829: FILE: drivers/char/pc8736x_gpio.c:32:
+MODULE_PARM_DESC(noports, "noports=1 to supress sysfs ports interface");
                                         ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#839: FILE: drivers/char/pc8736x_gpio.c:151:
+/* vtable-API functions.
+   this is a gpio-port device, so bitvals are pulled from ports (in princple)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#841: FILE: drivers/char/pc8736x_gpio.c:153:
+static u32 pc8736x_gpio_get_port(unsigned port)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#852: FILE: drivers/char/pc8736x_gpio.c:164:
+static u32 pc8736x_gpio_get(unsigned minor)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#872: FILE: drivers/char/pc8736x_gpio.c:208:
+static u32 pc8736x_gpio_current_port(unsigned minor)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#881: FILE: drivers/char/pc8736x_gpio.c:216:
+}
+static u32 pc8736x_gpio_current(unsigned minor)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#881: FILE: drivers/char/pc8736x_gpio.c:216:
+static u32 pc8736x_gpio_current(unsigned minor)

WARNING:LINE_SPACING: Missing a blank line after declarations
#884: FILE: drivers/char/pc8736x_gpio.c:219:
+	int port, bit;
+	minor &= 0x1f;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#895: FILE: drivers/char/pc8736x_gpio.c:230:
+static void pc8736x_gpio_setclr_port(unsigned port, u32 bits, u32 mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#941: FILE: drivers/char/pc8736x_gpio.c:287:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#941: FILE: drivers/char/pc8736x_gpio.c:287:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#941: FILE: drivers/char/pc8736x_gpio.c:287:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: drivers/char/pc8736x_gpio.c:288:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: drivers/char/pc8736x_gpio.c:288:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: drivers/char/pc8736x_gpio.c:288:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#943: FILE: drivers/char/pc8736x_gpio.c:289:
+	GPIO_ATTRS(0,6), GPIO_ATTRS(0,7)
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#943: FILE: drivers/char/pc8736x_gpio.c:289:
+	GPIO_ATTRS(0,6), GPIO_ATTRS(0,7)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: drivers/char/pc8736x_gpio.c:293:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: drivers/char/pc8736x_gpio.c:293:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: drivers/char/pc8736x_gpio.c:293:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#948: FILE: drivers/char/pc8736x_gpio.c:294:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#948: FILE: drivers/char/pc8736x_gpio.c:294:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#948: FILE: drivers/char/pc8736x_gpio.c:294:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: drivers/char/pc8736x_gpio.c:295:
+	GPIO_ATTRS(1,6), GPIO_ATTRS(1,7)
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: drivers/char/pc8736x_gpio.c:295:
+	GPIO_ATTRS(1,6), GPIO_ATTRS(1,7)
 	                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#951: FILE: drivers/char/pc8736x_gpio.c:297:
+};
+static struct gpio_attributes port2[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: drivers/char/pc8736x_gpio.c:298:
+	GPIO_ATTRS(2,0), GPIO_ATTRS(2,1), GPIO_ATTRS(2,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: drivers/char/pc8736x_gpio.c:298:
+	GPIO_ATTRS(2,0), GPIO_ATTRS(2,1), GPIO_ATTRS(2,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: drivers/char/pc8736x_gpio.c:298:
+	GPIO_ATTRS(2,0), GPIO_ATTRS(2,1), GPIO_ATTRS(2,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: drivers/char/pc8736x_gpio.c:299:
+	GPIO_ATTRS(2,3), GPIO_ATTRS(2,4), GPIO_ATTRS(2,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: drivers/char/pc8736x_gpio.c:299:
+	GPIO_ATTRS(2,3), GPIO_ATTRS(2,4), GPIO_ATTRS(2,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: drivers/char/pc8736x_gpio.c:299:
+	GPIO_ATTRS(2,3), GPIO_ATTRS(2,4), GPIO_ATTRS(2,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#954: FILE: drivers/char/pc8736x_gpio.c:300:
+	GPIO_ATTRS(2,6), GPIO_ATTRS(2,7)
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#954: FILE: drivers/char/pc8736x_gpio.c:300:
+	GPIO_ATTRS(2,6), GPIO_ATTRS(2,7)
 	                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#956: FILE: drivers/char/pc8736x_gpio.c:302:
+};
+static struct gpio_attributes port3[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: drivers/char/pc8736x_gpio.c:303:
+	GPIO_ATTRS(3,0), GPIO_ATTRS(3,1), GPIO_ATTRS(3,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: drivers/char/pc8736x_gpio.c:303:
+	GPIO_ATTRS(3,0), GPIO_ATTRS(3,1), GPIO_ATTRS(3,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: drivers/char/pc8736x_gpio.c:303:
+	GPIO_ATTRS(3,0), GPIO_ATTRS(3,1), GPIO_ATTRS(3,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#958: FILE: drivers/char/pc8736x_gpio.c:304:
+	GPIO_ATTRS(3,3), GPIO_ATTRS(3,4), GPIO_ATTRS(3,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#958: FILE: drivers/char/pc8736x_gpio.c:304:
+	GPIO_ATTRS(3,3), GPIO_ATTRS(3,4), GPIO_ATTRS(3,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#958: FILE: drivers/char/pc8736x_gpio.c:304:
+	GPIO_ATTRS(3,3), GPIO_ATTRS(3,4), GPIO_ATTRS(3,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#959: FILE: drivers/char/pc8736x_gpio.c:305:
+	GPIO_ATTRS(3,6), GPIO_ATTRS(3,7)
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#959: FILE: drivers/char/pc8736x_gpio.c:305:
+	GPIO_ATTRS(3,6), GPIO_ATTRS(3,7)
 	                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#967: FILE: drivers/char/pc8736x_gpio.c:313:
+static void __init pc8736x_sysfs_init(struct device* dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#981: FILE: drivers/char/pc8736x_gpio.c:327:
+}
+static void pc8736x_sysfs_fini(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#981: FILE: drivers/char/pc8736x_gpio.c:327:
+static void pc8736x_sysfs_fini(struct device* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: drivers/char/pc8736x_gpio.c:334:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/char/scx200_gpio.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1060: FILE: drivers/char/scx200_gpio.c:1:
+/* 

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1087: FILE: drivers/char/scx200_gpio.c:34:
+static int nobits = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1091: FILE: drivers/char/scx200_gpio.c:38:
+static int noports = 0;

WARNING:TYPO_SPELLING: 'supress' may be misspelled - perhaps 'suppress'?
#1093: FILE: drivers/char/scx200_gpio.c:40:
+MODULE_PARM_DESC(noports, "noports=1 to supress sysfs ports interface");
                                         ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1109: FILE: drivers/char/scx200_gpio.c:57:
+	/* add these back to exploit pxa-2xx, which has separate
+	   set/clear addresses, avoiding read-modify-write cycles on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/scx200_gpio.c:67:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/scx200_gpio.c:67:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/scx200_gpio.c:67:
+	GPIO_ATTRS(0,0), GPIO_ATTRS(0,1), GPIO_ATTRS(0,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/char/scx200_gpio.c:68:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/char/scx200_gpio.c:68:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/char/scx200_gpio.c:68:
+	GPIO_ATTRS(0,3), GPIO_ATTRS(0,4), GPIO_ATTRS(0,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: drivers/char/scx200_gpio.c:69:
+	GPIO_ATTRS(0,6), GPIO_ATTRS(0,7), GPIO_ATTRS(0,8),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: drivers/char/scx200_gpio.c:69:
+	GPIO_ATTRS(0,6), GPIO_ATTRS(0,7), GPIO_ATTRS(0,8),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: drivers/char/scx200_gpio.c:69:
+	GPIO_ATTRS(0,6), GPIO_ATTRS(0,7), GPIO_ATTRS(0,8),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/char/scx200_gpio.c:70:
+	GPIO_ATTRS(0,9), GPIO_ATTRS(0,10), GPIO_ATTRS(0,11),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/char/scx200_gpio.c:70:
+	GPIO_ATTRS(0,9), GPIO_ATTRS(0,10), GPIO_ATTRS(0,11),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/char/scx200_gpio.c:70:
+	GPIO_ATTRS(0,9), GPIO_ATTRS(0,10), GPIO_ATTRS(0,11),
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1123: FILE: drivers/char/scx200_gpio.c:71:
+	GPIO_ATTRS(0,12), GPIO_ATTRS(0,13), GPIO_ATTRS(0,14),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1123: FILE: drivers/char/scx200_gpio.c:71:
+	GPIO_ATTRS(0,12), GPIO_ATTRS(0,13), GPIO_ATTRS(0,14),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1123: FILE: drivers/char/scx200_gpio.c:71:
+	GPIO_ATTRS(0,12), GPIO_ATTRS(0,13), GPIO_ATTRS(0,14),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1124: FILE: drivers/char/scx200_gpio.c:72:
+	GPIO_ATTRS(0,15), GPIO_ATTRS(0,16), GPIO_ATTRS(0,17),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1124: FILE: drivers/char/scx200_gpio.c:72:
+	GPIO_ATTRS(0,15), GPIO_ATTRS(0,16), GPIO_ATTRS(0,17),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1124: FILE: drivers/char/scx200_gpio.c:72:
+	GPIO_ATTRS(0,15), GPIO_ATTRS(0,16), GPIO_ATTRS(0,17),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1125: FILE: drivers/char/scx200_gpio.c:73:
+	GPIO_ATTRS(0,18), GPIO_ATTRS(0,19), GPIO_ATTRS(0,20),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1125: FILE: drivers/char/scx200_gpio.c:73:
+	GPIO_ATTRS(0,18), GPIO_ATTRS(0,19), GPIO_ATTRS(0,20),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1125: FILE: drivers/char/scx200_gpio.c:73:
+	GPIO_ATTRS(0,18), GPIO_ATTRS(0,19), GPIO_ATTRS(0,20),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1126: FILE: drivers/char/scx200_gpio.c:74:
+	GPIO_ATTRS(0,21), GPIO_ATTRS(0,22), GPIO_ATTRS(0,23),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1126: FILE: drivers/char/scx200_gpio.c:74:
+	GPIO_ATTRS(0,21), GPIO_ATTRS(0,22), GPIO_ATTRS(0,23),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1126: FILE: drivers/char/scx200_gpio.c:74:
+	GPIO_ATTRS(0,21), GPIO_ATTRS(0,22), GPIO_ATTRS(0,23),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1127: FILE: drivers/char/scx200_gpio.c:75:
+	GPIO_ATTRS(0,24), GPIO_ATTRS(0,25), GPIO_ATTRS(0,26),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1127: FILE: drivers/char/scx200_gpio.c:75:
+	GPIO_ATTRS(0,24), GPIO_ATTRS(0,25), GPIO_ATTRS(0,26),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1127: FILE: drivers/char/scx200_gpio.c:75:
+	GPIO_ATTRS(0,24), GPIO_ATTRS(0,25), GPIO_ATTRS(0,26),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/char/scx200_gpio.c:76:
+	GPIO_ATTRS(0,27), GPIO_ATTRS(0,28), GPIO_ATTRS(0,29),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/char/scx200_gpio.c:76:
+	GPIO_ATTRS(0,27), GPIO_ATTRS(0,28), GPIO_ATTRS(0,29),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/char/scx200_gpio.c:76:
+	GPIO_ATTRS(0,27), GPIO_ATTRS(0,28), GPIO_ATTRS(0,29),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/char/scx200_gpio.c:77:
+	GPIO_ATTRS(0,30), GPIO_ATTRS(0,31),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/char/scx200_gpio.c:77:
+	GPIO_ATTRS(0,30), GPIO_ATTRS(0,31),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1133: FILE: drivers/char/scx200_gpio.c:81:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1133: FILE: drivers/char/scx200_gpio.c:81:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1133: FILE: drivers/char/scx200_gpio.c:81:
+	GPIO_ATTRS(1,0), GPIO_ATTRS(1,1), GPIO_ATTRS(1,2),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: drivers/char/scx200_gpio.c:82:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: drivers/char/scx200_gpio.c:82:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: drivers/char/scx200_gpio.c:82:
+	GPIO_ATTRS(1,3), GPIO_ATTRS(1,4), GPIO_ATTRS(1,5),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/char/scx200_gpio.c:83:
+	GPIO_ATTRS(1,6), GPIO_ATTRS(1,7), GPIO_ATTRS(1,8),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/char/scx200_gpio.c:83:
+	GPIO_ATTRS(1,6), GPIO_ATTRS(1,7), GPIO_ATTRS(1,8),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/char/scx200_gpio.c:83:
+	GPIO_ATTRS(1,6), GPIO_ATTRS(1,7), GPIO_ATTRS(1,8),
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/char/scx200_gpio.c:84:
+	GPIO_ATTRS(1,9), GPIO_ATTRS(1,10), GPIO_ATTRS(1,11),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/char/scx200_gpio.c:84:
+	GPIO_ATTRS(1,9), GPIO_ATTRS(1,10), GPIO_ATTRS(1,11),
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/char/scx200_gpio.c:84:
+	GPIO_ATTRS(1,9), GPIO_ATTRS(1,10), GPIO_ATTRS(1,11),
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: drivers/char/scx200_gpio.c:85:
+	GPIO_ATTRS(1,12), GPIO_ATTRS(1,13), GPIO_ATTRS(1,14),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: drivers/char/scx200_gpio.c:85:
+	GPIO_ATTRS(1,12), GPIO_ATTRS(1,13), GPIO_ATTRS(1,14),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: drivers/char/scx200_gpio.c:85:
+	GPIO_ATTRS(1,12), GPIO_ATTRS(1,13), GPIO_ATTRS(1,14),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1138: FILE: drivers/char/scx200_gpio.c:86:
+	GPIO_ATTRS(1,15), GPIO_ATTRS(1,16), GPIO_ATTRS(1,17),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1138: FILE: drivers/char/scx200_gpio.c:86:
+	GPIO_ATTRS(1,15), GPIO_ATTRS(1,16), GPIO_ATTRS(1,17),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1138: FILE: drivers/char/scx200_gpio.c:86:
+	GPIO_ATTRS(1,15), GPIO_ATTRS(1,16), GPIO_ATTRS(1,17),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: drivers/char/scx200_gpio.c:87:
+	GPIO_ATTRS(1,18), GPIO_ATTRS(1,19), GPIO_ATTRS(1,20),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: drivers/char/scx200_gpio.c:87:
+	GPIO_ATTRS(1,18), GPIO_ATTRS(1,19), GPIO_ATTRS(1,20),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: drivers/char/scx200_gpio.c:87:
+	GPIO_ATTRS(1,18), GPIO_ATTRS(1,19), GPIO_ATTRS(1,20),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1140: FILE: drivers/char/scx200_gpio.c:88:
+	GPIO_ATTRS(1,21), GPIO_ATTRS(1,22), GPIO_ATTRS(1,23),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1140: FILE: drivers/char/scx200_gpio.c:88:
+	GPIO_ATTRS(1,21), GPIO_ATTRS(1,22), GPIO_ATTRS(1,23),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1140: FILE: drivers/char/scx200_gpio.c:88:
+	GPIO_ATTRS(1,21), GPIO_ATTRS(1,22), GPIO_ATTRS(1,23),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1141: FILE: drivers/char/scx200_gpio.c:89:
+	GPIO_ATTRS(1,24), GPIO_ATTRS(1,25), GPIO_ATTRS(1,26),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1141: FILE: drivers/char/scx200_gpio.c:89:
+	GPIO_ATTRS(1,24), GPIO_ATTRS(1,25), GPIO_ATTRS(1,26),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1141: FILE: drivers/char/scx200_gpio.c:89:
+	GPIO_ATTRS(1,24), GPIO_ATTRS(1,25), GPIO_ATTRS(1,26),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/scx200_gpio.c:90:
+	GPIO_ATTRS(1,27), GPIO_ATTRS(1,28), GPIO_ATTRS(1,29),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/scx200_gpio.c:90:
+	GPIO_ATTRS(1,27), GPIO_ATTRS(1,28), GPIO_ATTRS(1,29),
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/scx200_gpio.c:90:
+	GPIO_ATTRS(1,27), GPIO_ATTRS(1,28), GPIO_ATTRS(1,29),
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1143: FILE: drivers/char/scx200_gpio.c:91:
+	GPIO_ATTRS(1,30), GPIO_ATTRS(1,31),
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1143: FILE: drivers/char/scx200_gpio.c:91:
+	GPIO_ATTRS(1,30), GPIO_ATTRS(1,31),
 	                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1145: FILE: drivers/char/scx200_gpio.c:93:
+};
+static struct gpio_attributes ports[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1149: FILE: drivers/char/scx200_gpio.c:97:
+static void __init scx200_sysfs_init(struct device* dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1158: FILE: drivers/char/scx200_gpio.c:106:
+}
+static void scx200_sysfs_fini(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1158: FILE: drivers/char/scx200_gpio.c:106:
+static void scx200_sysfs_fini(struct device* dev)

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#1240: FILE: include/linux/nsc_gpio.h:21:
+	struct device*	dev;	/* for dev_dbg() support, set in init  */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1244: FILE: include/linux/nsc_gpio.h:25:
+	u32	(*gpio_config)	(unsigned iminor, u32 bits, u32 clr);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1244: FILE: include/linux/nsc_gpio.h:25:
+	u32	(*gpio_config)	(unsigned iminor, u32 bits, u32 clr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1249: FILE: include/linux/nsc_gpio.h:29:
+	u32	(*gpio_get)	(unsigned iminor);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1249: FILE: include/linux/nsc_gpio.h:29:
+	u32	(*gpio_get)	(unsigned iminor);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1254: FILE: include/linux/nsc_gpio.h:32:
+	u32	(*gpio_current)	(unsigned iminor);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1254: FILE: include/linux/nsc_gpio.h:32:
+	u32	(*gpio_current)	(unsigned iminor);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1257: FILE: include/linux/nsc_gpio.h:35:
+	/* want to restore set-hi()/set-lo() for PXA, which has
+	   separate set and clear registers/insns, allowing PXA to

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1266: FILE: include/linux/nsc_gpio.h:44:
+	/* port-wide accessors (thanks Chris).  For hardware which can
+	   exploit it, gpio_setclr_port() separates set and clear

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1269: FILE: include/linux/nsc_gpio.h:47:
+	u32	(*gpio_get_port)	(unsigned portnum);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1269: FILE: include/linux/nsc_gpio.h:47:
+	u32	(*gpio_get_port)	(unsigned portnum);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1270: FILE: include/linux/nsc_gpio.h:48:
+	void	(*gpio_set_port)	(unsigned portnum, u32 bits);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1270: FILE: include/linux/nsc_gpio.h:48:
+	void	(*gpio_set_port)	(unsigned portnum, u32 bits);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1271: FILE: include/linux/nsc_gpio.h:49:
+	void	(*gpio_setclr_port)	(unsigned portnum, u32 bits, u32 clr);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1271: FILE: include/linux/nsc_gpio.h:49:
+	void	(*gpio_setclr_port)	(unsigned portnum, u32 bits, u32 clr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1272: FILE: include/linux/nsc_gpio.h:50:
+	u32	(*gpio_current_port)	(unsigned iminor);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1272: FILE: include/linux/nsc_gpio.h:50:
+	u32	(*gpio_current_port)	(unsigned iminor);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1283: FILE: include/linux/nsc_gpio.h:62:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1289: FILE: include/linux/nsc_gpio.h:68:
+/* basic gpio-sysfs object, with 3-D addressing.  This allows the use
+   of combined-callbacks which decode the 3-D parameters, and perform

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: include/linux/nsc_gpio.h:73:
+        struct device_attribute dev_attr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: include/linux/nsc_gpio.h:73:
+        struct device_attribute dev_attr;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1300: FILE: include/linux/nsc_gpio.h:79:
+};
+#define GPIO_BIT_TYPE	0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1306: FILE: include/linux/nsc_gpio.h:85:
+/* constants for 3 aspects of Pin Features used to initialize the
+   dev_attrs needed for the gpio-object's attr-files

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#1345: FILE: include/linux/nsc_gpio.h:124:
+#define PF_MASK_INT_ENA		16	/* some pins cant do this */
                        		  	             ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1362: FILE: include/linux/nsc_gpio.h:141:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1368: FILE: include/linux/nsc_gpio.h:147:
+	/* pin-features, which are mostly use-once, so hw often
+	   provides it per-pin only. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1368: FILE: include/linux/nsc_gpio.h:147:
+	   provides it per-pin only. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1381: FILE: include/linux/nsc_gpio.h:160:
+/* GPIO_ATTRS and GPIO_PORT_ATTRS macros let driver declare the
+   interfaces for the underlying hardware:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) ^I\$

CHECK:CAMELCASE: Avoid CamelCase: <Port>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Bit>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Suffix>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Mode>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Show>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Store>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#1390: FILE: include/linux/nsc_gpio.h:169:
+#define GPIO_PIN(Port, Bit, Suffix, Mode, Show, Store, Cmd) 	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1391: FILE: include/linux/nsc_gpio.h:170:
+	{	.dev_attr = __ATTR( bit_ ## Port.Bit ## Suffix,		\

CHECK:CAMELCASE: Avoid CamelCase: <bit_ ## Port>
#1391: FILE: include/linux/nsc_gpio.h:170:
+	{	.dev_attr = __ATTR( bit_ ## Port.Bit ## Suffix,		\

CHECK:CAMELCASE: Avoid CamelCase: <Bit ## Suffix>
#1391: FILE: include/linux/nsc_gpio.h:170:
+	{	.dev_attr = __ATTR( bit_ ## Port.Bit ## Suffix,		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1396: FILE: include/linux/nsc_gpio.h:175:
+^I^I.bit_port_type = GPIO_BIT_TYPE ^I}$

CHECK:CAMELCASE: Avoid CamelCase: <Access>
#1398: FILE: include/linux/nsc_gpio.h:177:
+#define SYSFS_CB_RD(Access) nsc_gpio_sysfs_get_ ## Access

CHECK:CAMELCASE: Avoid CamelCase: <nsc_gpio_sysfs_get_ ## Access>
#1398: FILE: include/linux/nsc_gpio.h:177:
+#define SYSFS_CB_RD(Access) nsc_gpio_sysfs_get_ ## Access

CHECK:CAMELCASE: Avoid CamelCase: <nsc_gpio_sysfs_set_ ## Access>
#1399: FILE: include/linux/nsc_gpio.h:178:
+#define SYSFS_CB_WR(Access) nsc_gpio_sysfs_set_ ## Access

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1400: FILE: include/linux/nsc_gpio.h:179:
+#define SYSFS_CB_NULL	    (void*)0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1400: FILE: include/linux/nsc_gpio.h:179:
+#define SYSFS_CB_NULL	    (void*)0

CHECK:CAMELCASE: Avoid CamelCase: <Portnum>
#1402: FILE: include/linux/nsc_gpio.h:181:
+#define GPIO_ATTR(Portnum, Bitnum, Feat, Suffix, Access)	\

CHECK:CAMELCASE: Avoid CamelCase: <Bitnum>
#1402: FILE: include/linux/nsc_gpio.h:181:
+#define GPIO_ATTR(Portnum, Bitnum, Feat, Suffix, Access)	\

CHECK:CAMELCASE: Avoid CamelCase: <Feat>
#1402: FILE: include/linux/nsc_gpio.h:181:
+#define GPIO_ATTR(Portnum, Bitnum, Feat, Suffix, Access)	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Access' - possible side-effects?
#1402: FILE: include/linux/nsc_gpio.h:181:
+#define GPIO_ATTR(Portnum, Bitnum, Feat, Suffix, Access)	\
+	GPIO_PIN(Portnum, Bitnum, Suffix,			\
+		 S_IWUSR | S_IRUGO,				\
+		 SYSFS_CB_RD(Access), SYSFS_CB_WR(Access), Feat)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1404: FILE: include/linux/nsc_gpio.h:183:
+		 S_IWUSR | S_IRUGO,				\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1408: FILE: include/linux/nsc_gpio.h:187:
+/* WARNING: this macro hardwires one of 2 sysfs-callbacks (port-wide
+   vs bit-wide access) to each attr.  This is broken, since each GPIO

WARNING:TYPO_SPELLING: 'theyre' may be misspelled - perhaps 'they're'?
#1411: FILE: include/linux/nsc_gpio.h:190:
+   macro.  But then, theyre already wed to the nsc_gpio_ops ;-)
                      ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Idx>
#1413: FILE: include/linux/nsc_gpio.h:192:
+#define GPIO_ATTRS(Port, Idx) {					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Port' - possible side-effects?
#1413: FILE: include/linux/nsc_gpio.h:192:
+#define GPIO_ATTRS(Port, Idx) {					\
+	.value	= GPIO_ATTR(Port, Idx, PF_CMD_VALUE,	PF_SFX_VALUE,	bitval), \
+	.curr	= GPIO_ATTR(Port, Idx, PF_CMD_CURR,	PF_SFX_CURR,	bitval), \
+	.oe	= GPIO_ATTR(Port, Idx, PF_CMD_OUT_ENA,	PF_SFX_OUT_ENA,	bitconf), \
+	.pue	= GPIO_ATTR(Port, Idx, PF_CMD_PULLUP,	PF_SFX_PULLUP,	bitconf), \
+	.totem	= GPIO_ATTR(Port, Idx, PF_CMD_TOTEM,	PF_SFX_TOTEM,	bitconf), \
+	.locked	= GPIO_ATTR(Port, Idx, PF_CMD_LOCKED,	PF_SFX_LOCKED,	bitconf), \
+	.bounce	= GPIO_ATTR(Port, Idx, PF_CMD_DEBOUNCE,	PF_SFX_DEBOUNCE,bitconf), \
+	.status	= GPIO_ATTR(Port, Idx, PF_CMD_STATUS,	PF_SFX_STATUS,  bitconf), \
+	.int_en	= GPIO_ATTR(Port, Idx, PF_CMD_INT_ENA,	PF_SFX_INT_ENA, bitconf), \
+	.int_lvl= GPIO_ATTR(Port, Idx, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,bitconf) \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Idx' - possible side-effects?
#1413: FILE: include/linux/nsc_gpio.h:192:
+#define GPIO_ATTRS(Port, Idx) {					\
+	.value	= GPIO_ATTR(Port, Idx, PF_CMD_VALUE,	PF_SFX_VALUE,	bitval), \
+	.curr	= GPIO_ATTR(Port, Idx, PF_CMD_CURR,	PF_SFX_CURR,	bitval), \
+	.oe	= GPIO_ATTR(Port, Idx, PF_CMD_OUT_ENA,	PF_SFX_OUT_ENA,	bitconf), \
+	.pue	= GPIO_ATTR(Port, Idx, PF_CMD_PULLUP,	PF_SFX_PULLUP,	bitconf), \
+	.totem	= GPIO_ATTR(Port, Idx, PF_CMD_TOTEM,	PF_SFX_TOTEM,	bitconf), \
+	.locked	= GPIO_ATTR(Port, Idx, PF_CMD_LOCKED,	PF_SFX_LOCKED,	bitconf), \
+	.bounce	= GPIO_ATTR(Port, Idx, PF_CMD_DEBOUNCE,	PF_SFX_DEBOUNCE,bitconf), \
+	.status	= GPIO_ATTR(Port, Idx, PF_CMD_STATUS,	PF_SFX_STATUS,  bitconf), \
+	.int_en	= GPIO_ATTR(Port, Idx, PF_CMD_INT_ENA,	PF_SFX_INT_ENA, bitconf), \
+	.int_lvl= GPIO_ATTR(Port, Idx, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,bitconf) \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1420: FILE: include/linux/nsc_gpio.h:199:
+	.bounce	= GPIO_ATTR(Port, Idx, PF_CMD_DEBOUNCE,	PF_SFX_DEBOUNCE,bitconf), \
 	       	                                       	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1423: FILE: include/linux/nsc_gpio.h:202:
+	.int_lvl= GPIO_ATTR(Port, Idx, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,bitconf) \
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1423: FILE: include/linux/nsc_gpio.h:202:
+	.int_lvl= GPIO_ATTR(Port, Idx, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,bitconf) \
 	                                               	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1425: FILE: include/linux/nsc_gpio.h:204:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <Sfx>
#1428: FILE: include/linux/nsc_gpio.h:207:
+#define GPIO_PORT(Port, Sfx, Mode, Show, Store, Cmd)		\

ERROR:SPACING: space prohibited after that open parenthesis '('
#1429: FILE: include/linux/nsc_gpio.h:208:
+	{	.dev_attr	= __ATTR( port_ ## Port ## Sfx,	\

CHECK:CAMELCASE: Avoid CamelCase: <port_ ## Port ## Sfx>
#1429: FILE: include/linux/nsc_gpio.h:208:
+	{	.dev_attr	= __ATTR( port_ ## Port ## Sfx,	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Access' - possible side-effects?
#1436: FILE: include/linux/nsc_gpio.h:215:
+#define GPIO_PORT_ATTR(Portnum, Cmd, Suffix, Access)		\
+	GPIO_PORT( Portnum, Suffix,				\
+		   S_IWUSR | S_IRUGO,				\
+		   SYSFS_CB_RD(Access), SYSFS_CB_WR(Access), Cmd)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1437: FILE: include/linux/nsc_gpio.h:216:
+	GPIO_PORT( Portnum, Suffix,				\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1438: FILE: include/linux/nsc_gpio.h:217:
+		   S_IWUSR | S_IRUGO,				\

WARNING:TYPO_SPELLING: 'moreso' may be misspelled - perhaps 'more'?
#1441: FILE: include/linux/nsc_gpio.h:220:
+/* WARNING: same caveats as above apply, only moreso */
                                               ^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Port' - possible side-effects?
#1443: FILE: include/linux/nsc_gpio.h:222:
+#define GPIO_PORT_ATTRS(Port) {					\
+	.value	= GPIO_PORT_ATTR(Port, PF_CMD_VALUE,	PF_SFX_VALUE,	portval), \
+	.curr	= GPIO_PORT_ATTR(Port, PF_CMD_CURR,	PF_SFX_CURR,	portval), \
+	.oe	= GPIO_PORT_ATTR(Port, PF_CMD_OUT_ENA,	PF_SFX_OUT_ENA, portconf), \
+	.pue	= GPIO_PORT_ATTR(Port, PF_CMD_PULLUP,	PF_SFX_PULLUP,	portconf), \
+	.totem	= GPIO_PORT_ATTR(Port, PF_CMD_TOTEM,	PF_SFX_TOTEM,	portconf), \
+	.locked	= GPIO_PORT_ATTR(Port, PF_CMD_LOCKED,	PF_SFX_LOCKED,  portconf), \
+	.bounce	= GPIO_PORT_ATTR(Port, PF_CMD_DEBOUNCE,	PF_SFX_DEBOUNCE,portconf), \
+	.status	= GPIO_PORT_ATTR(Port, PF_CMD_STATUS,	PF_SFX_STATUS,  portconf), \
+	.int_en	= GPIO_PORT_ATTR(Port, PF_CMD_INT_ENA,	PF_SFX_INT_ENA, portconf), \
+	.int_lvl= GPIO_PORT_ATTR(Port, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,portconf) \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1450: FILE: include/linux/nsc_gpio.h:229:
+	.bounce	= GPIO_PORT_ATTR(Port, PF_CMD_DEBOUNCE,	PF_SFX_DEBOUNCE,portconf), \
 	       	                                       	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1453: FILE: include/linux/nsc_gpio.h:232:
+	.int_lvl= GPIO_PORT_ATTR(Port, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,portconf) \
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1453: FILE: include/linux/nsc_gpio.h:232:
+	.int_lvl= GPIO_PORT_ATTR(Port, PF_CMD_INT_TRIG,	PF_SFX_INT_TRIG,portconf) \
 	                                               	               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1457: FILE: include/linux/nsc_gpio.h:236:
+/* attr-file callbacks, named per glob-name:
+   nsc_gpio_sysfs_{get,set}_{bit,port}{val,conf}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1464: FILE: include/linux/nsc_gpio.h:243:
+extern ssize_t nsc_gpio_sysfs_get_bitval(struct device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1467: FILE: include/linux/nsc_gpio.h:246:
+extern ssize_t nsc_gpio_sysfs_set_bitval(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1471: FILE: include/linux/nsc_gpio.h:250:
+extern ssize_t nsc_gpio_sysfs_get_portval(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1474: FILE: include/linux/nsc_gpio.h:253:
+extern ssize_t nsc_gpio_sysfs_set_portval(struct device *dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1478: FILE: include/linux/nsc_gpio.h:257:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1479: FILE: include/linux/nsc_gpio.h:258:
+extern ssize_t nsc_gpio_sysfs_get_bitconf(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1482: FILE: include/linux/nsc_gpio.h:261:
+extern ssize_t nsc_gpio_sysfs_set_bitconf(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1486: FILE: include/linux/nsc_gpio.h:265:
+extern ssize_t nsc_gpio_sysfs_get_portconf(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1489: FILE: include/linux/nsc_gpio.h:268:
+extern ssize_t nsc_gpio_sysfs_set_portconf(struct device *dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1493: FILE: include/linux/nsc_gpio.h:272:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1495: FILE: include/linux/nsc_gpio.h:274:
+/* device-create-file for all attrs, all bits in port.
+   called by higher level client _inits unless nobits=1.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1498: FILE: include/linux/nsc_gpio.h:277:
+extern void nsc_gpio_sysfs_bits_init(struct device* dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1498: FILE: include/linux/nsc_gpio.h:277:
+extern void nsc_gpio_sysfs_bits_init(struct device* dev,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1502: FILE: include/linux/nsc_gpio.h:281:
+extern void nsc_gpio_sysfs_bits_fini(struct device* dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1502: FILE: include/linux/nsc_gpio.h:281:
+extern void nsc_gpio_sysfs_bits_fini(struct device* dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1514: FILE: include/linux/scx200_gpio.h:21:
+static inline u32 scx200_gpio_get(unsigned index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1514: FILE: include/linux/scx200_gpio.h:21:
+static inline u32 scx200_gpio_get(unsigned index) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1523: FILE: include/linux/scx200_gpio.h:33:
+static inline u32 scx200_gpio_current(unsigned index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1523: FILE: include/linux/scx200_gpio.h:33:
+static inline u32 scx200_gpio_current(unsigned index) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1532: FILE: include/linux/scx200_gpio.h:87:
+static inline u32 scx200_gpio_get_port(unsigned port)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1534: FILE: include/linux/scx200_gpio.h:89:
+	unsigned bank = port & 0x1f;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1535: FILE: include/linux/scx200_gpio.h:90:
+	unsigned bank = port & 0x1f;
+	__SCx200_GPIO_IOADDR + 0x04;

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_IOADDR>
#1535: FILE: include/linux/scx200_gpio.h:90:
+	__SCx200_GPIO_IOADDR + 0x04;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: include/linux/scx200_gpio.h:91:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1541: FILE: include/linux/scx200_gpio.h:96:
+static inline void scx200_gpio_setclr_port(unsigned port, u32 bits, u32 mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1543: FILE: include/linux/scx200_gpio.h:98:
+	unsigned bank = port & 0x1f;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1544: FILE: include/linux/scx200_gpio.h:99:
+	unsigned bank = port & 0x1f;
+	__SCx200_GPIO_IOADDR;

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_SHADOW>
#1545: FILE: include/linux/scx200_gpio.h:100:
+	__SCx200_GPIO_SHADOW;

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_OUT>
#1547: FILE: include/linux/scx200_gpio.h:102:
+	__SCx200_GPIO_OUT;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1550: FILE: include/linux/scx200_gpio.h:105:
+static inline void scx200_gpio_set_port(unsigned port, u32 bits)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49616.commit.f6553d418ea4124efcd6a00041baf1c89a3e0828 total: 149 errors, 91 warnings, 66 checks, 1455 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49616.commit.f6553d418ea4124efcd6a00041baf1c89a3e0828 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
