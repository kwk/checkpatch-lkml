WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: lib/fault-inject.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: lib/fault-inject.c:29:
+ ^Iunsigned long uniquestack_depth;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: lib/fault-inject.c:29:
+ ^Iunsigned long uniquestack_depth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: lib/fault-inject.c:29:
+ ^Iunsigned long uniquestack_depth;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#149: FILE: lib/fault-inject.c:102:
+	for (depth = 0; depth < attr->uniquestack_depth
+			&& unwind(info) == 0 && UNW_PC(info); depth++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: lib/fault-inject.c:107:
+		printk("%s: depth=%d, jhash=%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#155: FILE: lib/fault-inject.c:108:
+		       __FUNCTION__, depth,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: lib/fault-inject.c:109:
+		       jhash( entries, depth*sizeof(entries[0]), 0));
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#156: FILE: lib/fault-inject.c:109:
+		       jhash( entries, depth*sizeof(entries[0]), 0));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: lib/fault-inject.c:110:
+	return jhash( entries, depth*sizeof(entries[0]), 0/*initval*/);
 	                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: lib/fault-inject.c:110:
+	return jhash( entries, depth*sizeof(entries[0]), 0/*initval*/);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: lib/fault-inject.c:162:
+		printk("%s: trace.nr_entries=%d jhash=%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#215: FILE: lib/fault-inject.c:163:
+		       __FUNCTION__, trace.nr_entries,

ERROR:SPACING: space prohibited after that open parenthesis '('
#216: FILE: lib/fault-inject.c:164:
+		       jhash( trace.entries,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: lib/fault-inject.c:165:
+		       jhash( trace.entries,
+			      trace.nr_entries*sizeof(trace.entries[0]), 0));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#217: FILE: lib/fault-inject.c:165:
+			      trace.nr_entries*sizeof(trace.entries[0]), 0));
 			                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#218: FILE: lib/fault-inject.c:166:
+	return jhash( trace.entries,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: lib/fault-inject.c:167:
+		      trace.nr_entries*sizeof(trace.entries[0]), 0/*initval*/);
 		                      ^

CHECK:SPACING: No space is necessary after a cast
#231: FILE: lib/fault-inject.c:186:
+	(void) fail_stacktrace(attr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#244: FILE: lib/fault-inject.c:199:
+	for ( oldhash = newhash; oldhash != 0; offset++) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#245: FILE: lib/fault-inject.c:200:
+		oldhash = atomic_xchg(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#246: FILE: lib/fault-inject.c:201:
+			&attr->uniquestack_hash_table[

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#247: FILE: lib/fault-inject.c:202:
+				(newhash+offset)%ARRAY_SIZE(attr->uniquestack_hash_table)],
 				        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#247: FILE: lib/fault-inject.c:202:
+				(newhash+offset)%ARRAY_SIZE(attr->uniquestack_hash_table)],
 				                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#252: FILE: lib/fault-inject.c:207:
+			printk(KERN_NOTICE

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: lib/fault-inject.c:209:
+			       "FAULT_INJECTION: table overflow -- "
+			       "fault injection disabled\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#260: FILE: lib/fault-inject.c:215:
+		printk(KERN_NOTICE "FAULT_INJECTION: newhash=%x offset==%d\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#261: FILE: lib/fault-inject.c:216:
+		       newhash, offset-1);
 		                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#293: FILE: lib/fault-inject.c:410:
+		debugfs_create_ul_MAX_STACK_TRACE_DEPTH(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#302: FILE: lib/fault-inject.c:421:
 	    || !attr->dentries.reject_end_file
+	    || !attr->dentries.uniquestack_depth_file

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14716.commit.759a8acc491c450ff08ad184f0bdd065bd6ba9d1 total: 6 errors, 10 warnings, 14 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14716.commit.759a8acc491c450ff08ad184f0bdd065bd6ba9d1 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
