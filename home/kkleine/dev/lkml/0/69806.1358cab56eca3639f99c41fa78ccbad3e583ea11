WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: fs/fuse/control.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#46: FILE: fs/fuse/control.c:2:
+/*
+  FUSE: Filesystem in Userspace

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#65: FILE: fs/fuse/control.c:21:
+	struct fuse_conn *fc;
+	mutex_lock(&fuse_mutex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: fs/fuse/control.c:33:
+	struct fuse_conn *fc = fuse_ctl_file_conn_get(file);
+	if (fc) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#92: FILE: fs/fuse/control.c:48:
+		struct fuse_conn *fc = fuse_ctl_file_conn_get(file);
+		if (!fc)

CHECK:SPACING: No space is necessary after a cast
#95: FILE: fs/fuse/control.c:51:
+		file->private_data = (void *) atomic_read(&fc->num_waiting);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#98: FILE: fs/fuse/control.c:54:
+	size = sprintf(tmp, "%i\n", (int) file->private_data);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#116: FILE: fs/fuse/control.c:72:
+					  struct inode_operations *iop,

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#122: FILE: fs/fuse/control.c:78:
+	BUG_ON(fc->ctl_ndents >= FUSE_CTL_NUM_DENTRIES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#135: FILE: fs/fuse/control.c:91:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#155: FILE: fs/fuse/control.c:111:
+	sprintf(name, "%llu", (unsigned long long) fc->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: fs/fuse/control.c:119:
+	if (!fuse_ctl_add_dentry(parent, fc, "waiting", S_IFREG | 0400, 1,
+				NULL, &fuse_ctl_waiting_ops) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: fs/fuse/control.c:140:
+		struct dentry *dentry = fc->ctl_dentry[i];
+		dentry->d_inode->u.generic_ip = NULL;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#202: FILE: fs/fuse/control.c:158:
+	BUG_ON(fuse_control_sb);

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#265: FILE: fs/fuse/inode.c:26:
+DEFINE_MUTEX(fuse_mutex);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.69806.commit.1358cab56eca3639f99c41fa78ccbad3e583ea11 total: 0 errors, 9 warnings, 6 checks, 605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.69806.commit.1358cab56eca3639f99c41fa78ccbad3e583ea11 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
