ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#84: FILE: arch/cris/arch-v32/mm/intmem.c:30:
+		struct intmem_allocation* alloc =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#105: FILE: arch/cris/arch-v32/mm/intmem.c:66:
+					struct intmem_allocation* tmp =

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hotk)...) over kmalloc(sizeof(struct asus_hotk)...)
#120: FILE: drivers/acpi/asus_acpi.c:1255:
+	hotk = kmalloc(sizeof(struct asus_hotk), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T), GFP_ATOMIC);$

CHECK:CAMELCASE: Avoid CamelCase: <LogicalDeviceInfo>
#182: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T), GFP_ATOMIC);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_LogicalDeviceInfo_T>
#182: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T), GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/block/DAC960.c:2115:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T), GFP_ATOMIC);$

CHECK:CAMELCASE: Avoid CamelCase: <PhysicalDeviceInfo>
#192: FILE: drivers/block/DAC960.c:2115:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T), GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_PhysicalDeviceInfo_T>
#192: FILE: drivers/block/DAC960.c:2115:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T), GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/block/DAC960.c:2123:
+      InquiryUnitSerialNumber =$

CHECK:CAMELCASE: Avoid CamelCase: <InquiryUnitSerialNumber>
#201: FILE: drivers/block/DAC960.c:2123:
+      InquiryUnitSerialNumber =

CHECK:CAMELCASE: Avoid CamelCase: <NewStatusBufferLength>
#219: FILE: drivers/block/DAC960.c:5711:
+	kmalloc(NewStatusBufferLength, GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/block/DAC960.c:5716:
+  NewStatusBuffer =$

CHECK:CAMELCASE: Avoid CamelCase: <NewStatusBuffer>
#225: FILE: drivers/block/DAC960.c:5716:
+  NewStatusBuffer =

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#239: FILE: drivers/char/agp/sgi-agp.c:284:
+	sgi_tioca_agp_bridges = kmalloc(tioca_gart_found *
 					       sizeof(struct agp_bridge_data *),
 					       GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#294: FILE: drivers/hid/hid-core.c:659:
+	if (!(device->rdesc = kmalloc(size, GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/media/video/zoran_driver.c:347:
+			mem = kmalloc(fh->v4l_buffers.buffer_size,
 						      GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*map_banks[idx])...) over kmalloc(sizeof(struct map_info)...)
#352: FILE: drivers/mtd/maps/tqm834x.c:135:
+		map_banks[idx] = kmalloc(sizeof(struct map_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*map_banks[idx])...) over kmalloc(sizeof(struct map_info)...)
#372: FILE: drivers/mtd/maps/tqm8xxl.c:137:
+		map_banks[idx] = kmalloc(sizeof(struct map_info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: drivers/net/gianfar.c:705:
+	priv->tx_skbuff = kmalloc(sizeof (struct sk_buff *) *

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#396: FILE: drivers/net/gianfar.c:705:
+	priv->tx_skbuff = kmalloc(sizeof (struct sk_buff *) *
+					priv->tx_ring_size,
+					GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: drivers/net/gianfar.c:720:
+	priv->rx_skbuff = kmalloc(sizeof (struct sk_buff *) *

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#409: FILE: drivers/net/gianfar.c:720:
+	priv->rx_skbuff = kmalloc(sizeof (struct sk_buff *) *
+					priv->rx_ring_size,
+					GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#427: FILE: drivers/net/ucc_geth.c:2929:
+		ugeth->tx_skbuff[j] = kmalloc(sizeof(struct sk_buff *) *
+						ugeth->ug_info->bdRingLenTx[j],
+						GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <bdRingLenTx>
#428: FILE: drivers/net/ucc_geth.c:2930:
+						ugeth->ug_info->bdRingLenTx[j],

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#441: FILE: drivers/net/ucc_geth.c:2960:
+		ugeth->rx_skbuff[j] = kmalloc(sizeof(struct sk_buff *) *
+						ugeth->ug_info->bdRingLenRx[j],
+						GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <bdRingLenRx>
#442: FILE: drivers/net/ucc_geth.c:2961:
+						ugeth->ug_info->bdRingLenRx[j],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/net/ucc_geth.c:3454:
+	     kmalloc(sizeof(struct ucc_geth_init_pram),
+				GFP_KERNEL))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/net/wireless/ipw2100.c:3366:
+	    kmalloc(IPW_COMMAND_POOL_SIZE * sizeof(struct ipw2100_tx_packet),
+				GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/net/wireless/ipw2100.c:4398:
+	    kmalloc(TX_PENDED_QUEUE_LENGTH * sizeof(struct ipw2100_tx_packet),
+				GFP_ATOMIC);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#495: FILE: drivers/net/wireless/ipw2100.c:4547:
+	priv->rx_buffers = kmalloc(RX_QUEUE_LENGTH * sizeof(struct ipw2100_rx_packet),
+		    		GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: drivers/net/wireless/ipw2100.c:4548:
+^I^I    ^I^IGFP_KERNEL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: drivers/net/wireless/ipw2100.c:4548:
+^I^I    ^I^IGFP_KERNEL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/net/wireless/ipw2100.c:4548:
+	priv->rx_buffers = kmalloc(RX_QUEUE_LENGTH * sizeof(struct ipw2100_rx_packet),
+		    		GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#510: FILE: drivers/parisc/iosapic.c:888:
+	vip = isi->isi_vector =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#525: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#525: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ch)...) over kmalloc(sizeof (struct channel)...)
#525: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/s390/net/ctcmain.c:1643:
+	if ((ch = kmalloc(sizeof (struct channel),
 					GFP_KERNEL)) == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: drivers/scsi/advansys.c:5259:
+                carrp = kmalloc(ADV_CARRIER_BUFSIZE, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/scsi/advansys.c:5259:
+                carrp = kmalloc(ADV_CARRIER_BUFSIZE, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#549: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: drivers/scsi/advansys.c:5298:
+                    sgp = kmalloc(sizeof(adv_sgblk_t), GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/scsi/advansys.c:5298:
+                    sgp = kmalloc(sizeof(adv_sgblk_t), GFP_ATOMIC);$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#573: FILE: drivers/scsi/osst.c:5757:
+		os_scsi_tapes = kmalloc(osst_max_dev * sizeof(struct osst_tape *),
 				   GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/scsi/osst.c:5758:
+		os_scsi_tapes = kmalloc(osst_max_dev * sizeof(struct osst_tape *),
 				   GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <ciKey>
#679: FILE: fs/jfs/jfs_dtree.c:595:
+	ciKey.name = kmalloc((JFS_NAME_MAX + 1) * sizeof(wchar_t),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: fs/jfs/jfs_dtree.c:596:
+	ciKey.name = kmalloc((JFS_NAME_MAX + 1) * sizeof(wchar_t),
 				GFP_NOFS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: fs/jfs/jfs_dtree.c:960:
+	key.name = kmalloc((JFS_NAME_MAX + 2) * sizeof(wchar_t),
 				GFP_NOFS);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#703: FILE: include/asm-um/thread_info.h:54:
+#define alloc_thread_info(tsk) kmalloc(THREAD_SIZE, GFP_KERNEL))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07945.commit.a236f140b0f6558201ce9b606b15c2fcefb90641 total: 9 errors, 19 warnings, 24 checks, 486 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07945.commit.a236f140b0f6558201ce9b606b15c2fcefb90641 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
