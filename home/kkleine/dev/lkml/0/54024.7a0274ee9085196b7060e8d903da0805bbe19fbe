CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#28: 
hotplug to take the non-boot CPUs offline on SMP machines.  However, we
                                                           ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
should better be static.  Also it's better if disable_nonboot_cpus() returns

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#34: 
should better be static.  Also it's better if disable_nonboot_cpus() returns
                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/linux/cpu.h:93:
+extern int disable_nonboot_cpus(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: include/linux/cpu.h:94:
+extern void enable_nonboot_cpus(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: kernel/cpu.c:256:
+	printk("Disabling non-boot CPUs ...\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: kernel/cpu.c:263:
+			printk("CPU%d is down\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#369: FILE: kernel/cpu.c:265:
+			printk(KERN_ERR "Error taking CPU%d down: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: kernel/cpu.c:266:
+			printk(KERN_ERR "Error taking CPU%d down: %d\n",
+				cpu, error);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#375: FILE: kernel/cpu.c:271:
+		BUG_ON(num_online_cpus() > 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#376: FILE: kernel/cpu.c:272:
+		BUG_ON(raw_smp_processor_id() != 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: kernel/cpu.c:276:
+		printk(KERN_ERR "Non-boot CPUs are not disabled");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#395: FILE: kernel/cpu.c:291:
+	printk("Enabling non-boot CPUs ...\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: kernel/cpu.c:295:
+			printk("CPU%d is up\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#402: FILE: kernel/cpu.c:298:
+		printk(KERN_WARNING "Error taking CPU%d up: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: kernel/cpu.c:299:
+		printk(KERN_WARNING "Error taking CPU%d up: %d\n",
+			cpu, error);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54024.commit.7a0274ee9085196b7060e8d903da0805bbe19fbe total: 0 errors, 10 warnings, 6 checks, 256 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54024.commit.7a0274ee9085196b7060e8d903da0805bbe19fbe has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
