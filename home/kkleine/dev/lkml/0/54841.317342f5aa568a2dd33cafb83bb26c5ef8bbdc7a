ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: kernel/rcupreempt.c:15:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: kernel/rcupreempt.c:16:
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: kernel/rcupreempt.c:103:
 };
+static DEFINE_PER_CPU(int [2], rcu_flipctr) = { 0, 0 };

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: kernel/rcupreempt.c:112:
+^Ircu_try_flip_waitack_state, ^I/* "A" */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#121: FILE: kernel/rcupreempt.c:116:
+};
+static enum rcu_try_flip_states rcu_try_flip_state = rcu_try_flip_idle_state;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#124: FILE: kernel/rcupreempt.c:119:
+static char *rcu_try_flip_state_names[] =
+	{ "idle", "gp", "waitack", "waitzero", "waitmb" };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#138: FILE: kernel/rcupreempt.c:133:
+};
+static DEFINE_PER_CPU(enum rcu_flip_flag_values, rcu_flip_flag) = rcu_flip_seen;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#152: FILE: kernel/rcupreempt.c:147:
+};
+static DEFINE_PER_CPU(enum rcu_mb_flag_values, rcu_mb_flag) = rcu_mb_done;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#193: FILE: kernel/rcupreempt.c:189:
+	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#324: FILE: kernel/rcupreempt.c:280:
+	} else {
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#447: FILE: kernel/rcupreempt.c:418:
+	smp_mb();

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#449: FILE: kernel/rcupreempt.c:420:
+	/* Now ask each CPU for acknowledgement of the flip. */
 	                        ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MEMORY_BARRIER: memory barrier without comment
#483: FILE: kernel/rcupreempt.c:454:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#525: FILE: kernel/rcupreempt.c:496:
+	smp_mb();

WARNING:TYPO_SPELLING: 'acccesses' may be misspelled - perhaps 'accesses'?
#662: FILE: kernel/rcupreempt.c:603:
+		smp_mb();  /* Subsequent counter acccesses must see new value */
 		                                 ^^^^^^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#683: FILE: kernel/rcupreempt.c:620:
+		smp_mb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#723: FILE: kernel/rcupreempt.c:736:
+/*&&&&*/printk("WARNING: experimental non-atomic RCU implementation.\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#784: FILE: kernel/rcupreempt.c:830:
+	if ((0 <= rcu_try_flip_state) &&

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: kernel/rcupreempt.c:832:
+^I    ^I^I^I   sizeof(rcu_try_flip_state_names[0])))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#786: FILE: kernel/rcupreempt.c:832:
+^I    ^I^I^I   sizeof(rcu_try_flip_state_names[0])))$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54841.commit.317342f5aa568a2dd33cafb83bb26c5ef8bbdc7a total: 4 errors, 10 warnings, 6 checks, 730 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.54841.commit.317342f5aa568a2dd33cafb83bb26c5ef8bbdc7a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
