WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
--- linux-2.6.18-rc7-mm1.orig/arch/i386/kernel/pci-dma.c	2006-09-22 15:10:42.246731179 -0500

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#64: FILE: arch/i386/kernel/pci-dma.c:49:
+	if (dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#66: FILE: arch/i386/kernel/pci-dma.c:51:
+		high = 16*1024*1024L;
 		         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#66: FILE: arch/i386/kernel/pci-dma.c:51:
+		high = 16*1024*1024L;
 		              ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#67: FILE: arch/i386/kernel/pci-dma.c:52:
+	else
+	if (dev->coherent_dma_mask < 0xffffffff)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/gfp.h:139:
+extern struct page *alloc_pages_range(unsigned long low, unsigned long high,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: include/linux/gfp.h:140:
+extern struct page *alloc_pages_range(unsigned long low, unsigned long high,
+				gfp_t gfp_mask, unsigned int order);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: mm/page_alloc.c:1201:
+static struct page *rmqueue_range(unsigned long low, unsigned long high,
+				struct zone *zone, unsigned int order)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: mm/page_alloc.c:1203:
+	struct free_area * area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#116: FILE: mm/page_alloc.c:1215:
+			if (addr >= low &&
[...]
+					goto found_match;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: mm/page_alloc.c:1216:
+			if (addr >= low &&
+				addr < high - (PAGE_SIZE << order))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: mm/page_alloc.c:1232:
+static struct page *zonelist_alloc_range(unsigned long low, unsigned long high,
+				int order, gfp_t gfp_flags,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!z"
#139: FILE: mm/page_alloc.c:1238:
+	if (unlikely(*z == NULL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: mm/page_alloc.c:1279:
+struct page *alloc_pages_range(unsigned long low, unsigned long high,
+					gfp_t gfp_flags, unsigned int order)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#202: FILE: mm/page_alloc.c:1301:
+	lastpgdat = NODE_DATA(MAX_NUMNODES -1);
 	                                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#204: FILE: mm/page_alloc.c:1303:
+	if (high >= ((lastpgdat->node_start_pfn + lastpgdat->node_spanned_pages) << PAGE_SHIFT) &&
[...]
+			return alloc_pages(gfp_flags, order);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: mm/page_alloc.c:1304:
+	if (high >= ((lastpgdat->node_start_pfn + lastpgdat->node_spanned_pages) << PAGE_SHIFT) &&
+		low <= (NODE_DATA(0)->node_start_pfn << PAGE_SHIFT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: mm/page_alloc.c:1331:
+		page = zonelist_alloc_range(low, high, gfp_flags, order,
+			NODE_DATA(node)->node_zonelists + gfp_zone(gfp_flags));

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.35778.commit.0ceb79eb1a4f9a3c34c65b57f7962bfe8adcd99b total: 1 errors, 4 warnings, 13 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.35778.commit.0ceb79eb1a4f9a3c34c65b57f7962bfe8adcd99b has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
