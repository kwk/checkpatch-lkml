CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#84: FILE: fs/ecryptfs/ecryptfs_kernel.h:60:
+#define ECRYPTFS_MAX_MSG_CTX_TTL (HZ*3)
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#170: FILE: fs/ecryptfs/ecryptfs_kernel.h:311:
+	struct mutex mux;

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: fs/ecryptfs/ecryptfs_kernel.h:319:
+        hash_long((unsigned long)uid, ecryptfs_hash_buckets)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/ecryptfs/ecryptfs_kernel.h:319:
+        hash_long((unsigned long)uid, ecryptfs_hash_buckets)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: fs/ecryptfs/ecryptfs_kernel.h:573:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#235: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: fs/ecryptfs/messaging.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#257: FILE: fs/ecryptfs/messaging.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#258: FILE: fs/ecryptfs/messaging.c:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#266: FILE: fs/ecryptfs/messaging.c:27:
+struct mutex ecryptfs_msg_ctx_lists_mux;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#269: FILE: fs/ecryptfs/messaging.c:30:
+struct mutex ecryptfs_daemon_id_hash_mux;

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: fs/ecryptfs/messaging.c:52:
+		ecryptfs_printk(KERN_WARNING, "The eCryptfs free "
+				"context list is empty.  It may be helpful to "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: fs/ecryptfs/messaging.c:53:
+				"context list is empty.  It may be helpful to "
+				"specify the ecryptfs_message_buf_len "

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: fs/ecryptfs/messaging.c:54:
+				"specify the ecryptfs_message_buf_len "
+				"parameter to be greater than the current "

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: fs/ecryptfs/messaging.c:55:
+				"parameter to be greater than the current "
+				"value of [%d]\n", ecryptfs_message_buf_len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg_ctx->node
#334: FILE: fs/ecryptfs/messaging.c:95:
+	list_move(&(msg_ctx->node), &ecryptfs_msg_ctx_free_list);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#336: FILE: fs/ecryptfs/messaging.c:97:
+	if (msg_ctx->msg)
+		kfree(msg_ctx->msg);

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: fs/ecryptfs/messaging.c:134:
+	switch(transport) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#380: FILE: fs/ecryptfs/messaging.c:141:
+		rc = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: fs/ecryptfs/messaging.c:170:
+		ecryptfs_printk(KERN_ERR, "Failed to allocate memory; unable "
+				"to register daemon [%d] for user\n", pid, uid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#413: FILE: fs/ecryptfs/messaging.c:174:
+		printk(KERN_WARNING "Received request from user [%d] "

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: fs/ecryptfs/messaging.c:175:
+		printk(KERN_WARNING "Received request from user [%d] "
+		       "to register daemon [%d]; unregistering daemon "

WARNING:SPLIT_STRING: quoted string split across lines
#415: FILE: fs/ecryptfs/messaging.c:176:
+		       "to register daemon [%d]; unregistering daemon "
+		       "[%d]\n", uid, pid, old_id->pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#420: FILE: fs/ecryptfs/messaging.c:181:
+			printk(KERN_WARNING "Failed to send QUIT "

WARNING:SPLIT_STRING: quoted string split across lines
#421: FILE: fs/ecryptfs/messaging.c:182:
+			printk(KERN_WARNING "Failed to send QUIT "
+			       "message to daemon [%d]; rc = [%d]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#454: FILE: fs/ecryptfs/messaging.c:215:
+		ecryptfs_printk(KERN_ERR, "Received request from user [%d] to "
+				"unregister unrecognized daemon [%d]\n", uid,

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: fs/ecryptfs/messaging.c:222:
+		ecryptfs_printk(KERN_WARNING, "Received request from user [%d] "
+				"with pid [%d] to unregister daemon [%d]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#494: FILE: fs/ecryptfs/messaging.c:255:
+		ecryptfs_printk(KERN_ERR, "Attempt to reference "
+				"context buffer at index [%d]; maximum "

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: fs/ecryptfs/messaging.c:256:
+				"context buffer at index [%d]; maximum "
+				"allowable is [%d]\n", msg->index,

WARNING:SPLIT_STRING: quoted string split across lines
#504: FILE: fs/ecryptfs/messaging.c:265:
+		ecryptfs_printk(KERN_WARNING, "User [%d] received a "
+				"message response from process [%d] but does "

WARNING:SPLIT_STRING: quoted string split across lines
#505: FILE: fs/ecryptfs/messaging.c:266:
+				"message response from process [%d] but does "
+				"not have a registered daemon\n",

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: fs/ecryptfs/messaging.c:273:
+		ecryptfs_printk(KERN_ERR, "User [%d] received a "
+				"message response from an unrecognized "

WARNING:SPLIT_STRING: quoted string split across lines
#513: FILE: fs/ecryptfs/messaging.c:274:
+				"message response from an unrecognized "
+				"process [%d]\n", msg_ctx->task->euid, pid);

WARNING:SPLIT_STRING: quoted string split across lines
#519: FILE: fs/ecryptfs/messaging.c:280:
+		ecryptfs_printk(KERN_WARNING, "Desired context element is not "
+				"pending a response\n");

WARNING:SPLIT_STRING: quoted string split across lines
#565: FILE: fs/ecryptfs/messaging.c:326:
+		ecryptfs_printk(KERN_ERR, "User [%d] does not have a daemon "
+				"registered\n", current->euid);

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: fs/ecryptfs/messaging.c:335:
+		ecryptfs_printk(KERN_WARNING, "Could not claim a free "
+				"context element\n");

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#588: FILE: fs/ecryptfs/messaging.c:349:
+		rc = -ENOSYS;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#591: FILE: fs/ecryptfs/messaging.c:352:
+		printk(KERN_ERR "Error attempting to send message to userspace "

WARNING:SPLIT_STRING: quoted string split across lines
#592: FILE: fs/ecryptfs/messaging.c:353:
+		printk(KERN_ERR "Error attempting to send message to userspace "
+		       "daemon; rc = [%d]\n", rc);

WARNING:SPLIT_STRING: quoted string split across lines
#644: FILE: fs/ecryptfs/messaging.c:405:
+		ecryptfs_printk(KERN_WARNING, "Specified number of users is "
+				"too large, defaulting to [%d] users\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#650: FILE: fs/ecryptfs/messaging.c:411:
+	while (ecryptfs_number_of_users >> ++ecryptfs_hash_buckets);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ecryptfs_daemon_id_hash)...) over kmalloc(sizeof(struct hlist_head)...)
#651: FILE: fs/ecryptfs/messaging.c:412:
+	ecryptfs_daemon_id_hash = kmalloc(sizeof(struct hlist_head)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#651: FILE: fs/ecryptfs/messaging.c:412:
+	ecryptfs_daemon_id_hash = kmalloc(sizeof(struct hlist_head)
+					  * ecryptfs_hash_buckets, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: space required before the open parenthesis '('
#686: FILE: fs/ecryptfs/messaging.c:447:
+	switch(transport) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#695: FILE: fs/ecryptfs/messaging.c:456:
+		rc = -ENOSYS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: fs/ecryptfs/messaging.c:466:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#710: FILE: fs/ecryptfs/messaging.c:471:
+			if (ecryptfs_msg_ctx_arr[i].msg)
+				kfree(ecryptfs_msg_ctx_arr[i].msg);

ERROR:SPACING: space required before the open parenthesis '('
#733: FILE: fs/ecryptfs/messaging.c:494:
+	switch(transport) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#743: FILE: fs/ecryptfs/messaging.c:504:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#750: FILE: fs/ecryptfs/netlink.c:1:
+/**

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#767: FILE: fs/ecryptfs/netlink.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#768: FILE: fs/ecryptfs/netlink.c:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

WARNING:SPLIT_STRING: quoted string split across lines
#824: FILE: fs/ecryptfs/netlink.c:75:
+		ecryptfs_printk(KERN_ERR, "Failed to send eCryptfs netlink "
+				"message; rc = [%d]\n", rc);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#849: FILE: fs/ecryptfs/netlink.c:100:
+	struct nlmsghdr *nlh = (struct nlmsghdr*)skb->data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#856: FILE: fs/ecryptfs/netlink.c:107:
+		ecryptfs_printk(KERN_ERR, "Received netlink message with "
+				"incorrectly specified data length\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#862: FILE: fs/ecryptfs/netlink.c:113:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#884: FILE: fs/ecryptfs/netlink.c:135:
+		printk(KERN_WARNING "Error processing HELO; rc = [%d]\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#904: FILE: fs/ecryptfs/netlink.c:155:
+		printk(KERN_WARNING

CHECK:BRACES: braces {} should be used on all arms of this statement
#925: FILE: fs/ecryptfs/netlink.c:176:
+	if (rc == -EINTR)
[...]
+	else if (rc < 0) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#929: FILE: fs/ecryptfs/netlink.c:180:
+		ecryptfs_printk(KERN_ERR, "Error occurred while "
+				"receiving eCryptfs netlink message; "

WARNING:SPLIT_STRING: quoted string split across lines
#936: FILE: fs/ecryptfs/netlink.c:187:
+		ecryptfs_printk(KERN_ERR, "Received corrupt netlink "
+				"message\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#939: FILE: fs/ecryptfs/netlink.c:190:
+	switch (nlh->nlmsg_type) {
+		case ECRYPTFS_NLMSG_RESPONSE:
[...]
+		case ECRYPTFS_NLMSG_HELO:
[...]
+		case ECRYPTFS_NLMSG_QUIT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPLIT_STRING: quoted string split across lines
#943: FILE: fs/ecryptfs/netlink.c:194:
+				ecryptfs_printk(KERN_WARNING, "Failed to "
+						"deliver netlink response to "

WARNING:SPLIT_STRING: quoted string split across lines
#944: FILE: fs/ecryptfs/netlink.c:195:
+						"deliver netlink response to "
+						"requesting operation\n");

WARNING:SPLIT_STRING: quoted string split across lines
#950: FILE: fs/ecryptfs/netlink.c:201:
+				ecryptfs_printk(KERN_WARNING, "Failed to "
+						"fulfill HELO request\n");

WARNING:SPLIT_STRING: quoted string split across lines
#956: FILE: fs/ecryptfs/netlink.c:207:
+				ecryptfs_printk(KERN_WARNING, "Failed to "
+						"fulfill QUIT request\n");

WARNING:SPLIT_STRING: quoted string split across lines
#961: FILE: fs/ecryptfs/netlink.c:212:
+			ecryptfs_printk(KERN_WARNING, "Dropping netlink "
+					"message of unrecognized type [%d]\n",

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44359.commit.9a6adb5d8503185829c6737850401c2cf48a71bc total: 12 errors, 47 warnings, 8 checks, 942 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44359.commit.9a6adb5d8503185829c6737850401c2cf48a71bc has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
