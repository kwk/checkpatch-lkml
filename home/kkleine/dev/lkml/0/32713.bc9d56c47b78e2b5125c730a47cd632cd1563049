CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/hrtimer.h:322:
+extern void hrtimer_stop_sched_tick(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/hrtimer.h:323:
+extern void hrtimer_restart_sched_tick(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/hrtimer.h:324:
+extern void hrtimer_update_jiffies(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/hrtimer.h:325:
+extern void show_no_hz_stats(struct seq_file *p);

CHECK:SPACING: No space is necessary after a cast
#216: FILE: kernel/hrtimer.c:580:
+		if ((long) delta_jiffies < 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#306: FILE: kernel/hrtimer.c:670:
+		if (base->idle_sleeps) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#307: FILE: kernel/hrtimer.c:671:
+			uint64_t nsec = ktime_to_ns(base->idle_sleeptime);

CHECK:BRACES: Unbalanced braces around else statement
#311: FILE: kernel/hrtimer.c:675:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#312: FILE: kernel/hrtimer.c:676:
+			tavg.tv_sec = tavg.tv_usec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#316: FILE: kernel/hrtimer.c:680:
+			   (int) tsum.tv_sec, (int) tsum.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#317: FILE: kernel/hrtimer.c:681:
+			   (int) tavg.tv_sec, (int) tavg.tv_usec,

CHECK:BRACES: braces {} should be used on all arms of this statement
#323: FILE: kernel/hrtimer.c:687:
+	if (sleeps) {
[...]
+	} else
[...]

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#324: FILE: kernel/hrtimer.c:688:
+		uint64_t nsec = ktime_to_ns(totaltime);

CHECK:BRACES: Unbalanced braces around else statement
#328: FILE: kernel/hrtimer.c:692:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#329: FILE: kernel/hrtimer.c:693:
+		tavg.tv_sec = tavg.tv_usec = 0;

CHECK:SPACING: No space is necessary after a cast
#333: FILE: kernel/hrtimer.c:697:
+		   (int) tsum.tv_sec, (int) tsum.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#334: FILE: kernel/hrtimer.c:698:
+		   (int) tavg.tv_sec, (int) tavg.tv_usec,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.32713.commit.bc9d56c47b78e2b5125c730a47cd632cd1563049 total: 0 errors, 0 warnings, 17 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.32713.commit.bc9d56c47b78e2b5125c730a47cd632cd1563049 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
