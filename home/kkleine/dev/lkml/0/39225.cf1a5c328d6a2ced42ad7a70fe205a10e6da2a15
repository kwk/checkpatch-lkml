CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: drivers/block/cciss.c:148:
+static void cciss_read_capacity(int ctlr, int logvol, int withirq,
+			sector_t *total_size, unsigned int *block_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: drivers/block/cciss.c:150:
+static void cciss_read_capacity_16(int ctlr, int logvol, int withirq,
+			sector_t *total_size, unsigned int *block_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: drivers/block/cciss.c:152:
+static void cciss_geometry_inquiry(int ctlr, int logvol,
+			int withirq, sector_t total_size,

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#58: FILE: drivers/block/cciss.c:153:
+			unsigned int block_size, InquiryData_struct *inq_buff,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#61: FILE: drivers/block/cciss.c:156:
 static void __devinit cciss_interrupt_mode(ctlr_info_t *, struct pci_dev *,

CHECK:SPACING: No space is necessary after a cast
#92: FILE: drivers/block/cciss.c:1360:
+	if (total_size == (__u32) 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/block/cciss.c:1362:
+		cciss_read_capacity_16(ctlr, drv_index, 1,
+		&total_size, &block_size);

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#117: FILE: drivers/block/cciss.c:1729:
+			c->Header.LUN.LogDev.VolId = h->drv[log_unit].LunID;

CHECK:CAMELCASE: Avoid CamelCase: <LogDev>
#117: FILE: drivers/block/cciss.c:1729:
+			c->Header.LUN.LogDev.VolId = h->drv[log_unit].LunID;

CHECK:CAMELCASE: Avoid CamelCase: <VolId>
#117: FILE: drivers/block/cciss.c:1729:
+			c->Header.LUN.LogDev.VolId = h->drv[log_unit].LunID;

CHECK:CAMELCASE: Avoid CamelCase: <LunID>
#117: FILE: drivers/block/cciss.c:1729:
+			c->Header.LUN.LogDev.VolId = h->drv[log_unit].LunID;

CHECK:CAMELCASE: Avoid CamelCase: <Mode>
#118: FILE: drivers/block/cciss.c:1730:
+			c->Header.LUN.LogDev.Mode = 1;

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#119: FILE: drivers/block/cciss.c:1731:
+			c->Request.CDBLen = 16;

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#119: FILE: drivers/block/cciss.c:1731:
+			c->Request.CDBLen = 16;

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#120: FILE: drivers/block/cciss.c:1732:
+			c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#120: FILE: drivers/block/cciss.c:1732:
+			c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#121: FILE: drivers/block/cciss.c:1733:
+			c->Request.Type.Direction = XFER_READ;

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#122: FILE: drivers/block/cciss.c:1734:
+			c->Request.Timeout = 0;

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata_struct>
#193: FILE: drivers/block/cciss.c:1976:
+	ReadCapdata_struct *buf;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#197: FILE: drivers/block/cciss.c:1979:
+	if (buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#198: FILE: drivers/block/cciss.c:1980:
+		printk(KERN_WARNING "cciss: out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#198: FILE: drivers/block/cciss.c:1980:
+	if (buf == NULL) {
+		printk(KERN_WARNING "cciss: out of memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: drivers/block/cciss.c:1992:
+^Iif (return_code == IO_OK) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#215: FILE: drivers/block/cciss.c:1993:
+		*total_size = be32_to_cpu(*(__u32 *) buf->total_size)+1;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#215: FILE: drivers/block/cciss.c:1993:
+		*total_size = be32_to_cpu(*(__u32 *) buf->total_size)+1;
 		                                                     ^

CHECK:SPACING: No space is necessary after a cast
#216: FILE: drivers/block/cciss.c:1994:
+		*block_size = be32_to_cpu(*(__u32 *) buf->block_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#218: FILE: drivers/block/cciss.c:1996:
+		printk(KERN_WARNING "cciss: read capacity failed\n");

CHECK:SPACING: No space is necessary after a cast
#222: FILE: drivers/block/cciss.c:2000:
+	if (*total_size != (__u32) 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#223: FILE: drivers/block/cciss.c:2001:
+		printk(KERN_INFO "      blocks= %lld block_size= %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/block/cciss.c:2002:
+		printk(KERN_INFO "      blocks= %lld block_size= %d\n",
+		*total_size, *block_size);

WARNING:RETURN_VOID: void function return statements are not generally useful
#227: FILE: drivers/block/cciss.c:2005:
+	return;
+}

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#230: FILE: drivers/block/cciss.c:2008:
+cciss_read_capacity_16(int ctlr, int logvol, int withirq, sector_t *total_size, 				unsigned int *block_size)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: drivers/block/cciss.c:2008:
+cciss_read_capacity_16(int ctlr, int logvol, int withirq, sector_t *total_size, ^I^I^I^Iunsigned int *block_size)$

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata_struct_16>
#232: FILE: drivers/block/cciss.c:2010:
+	ReadCapdata_struct_16 *buf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/block/cciss.c:2012:
+	int return_code;
+	buf = kmalloc(sizeof(ReadCapdata_struct_16), GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#235: FILE: drivers/block/cciss.c:2013:
+	if (buf == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#236: FILE: drivers/block/cciss.c:2014:
+		printk(KERN_WARNING "cciss: out of memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/block/cciss.c:2020:
+^I^I^Ictlr, buf, sizeof(ReadCapdata_struct_16), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/block/cciss.c:2020:
+		return_code = sendcmd_withirq(CCISS_READ_CAPACITY_16,
+			ctlr, buf, sizeof(ReadCapdata_struct_16), 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#245: FILE: drivers/block/cciss.c:2023:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#245: FILE: drivers/block/cciss.c:2023:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/block/cciss.c:2025:
+^I^I^Ictlr, buf, sizeof(ReadCapdata_struct_16), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/block/cciss.c:2025:
+		return_code = sendcmd(CCISS_READ_CAPACITY_16,
+			ctlr, buf, sizeof(ReadCapdata_struct_16), 

CHECK:SPACING: No space is necessary after a cast
#254: FILE: drivers/block/cciss.c:2029:
+		*total_size = be64_to_cpu(*(__u64 *) buf->total_size)+1;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/block/cciss.c:2029:
+		*total_size = be64_to_cpu(*(__u64 *) buf->total_size)+1;
 		                                                     ^

CHECK:SPACING: No space is necessary after a cast
#255: FILE: drivers/block/cciss.c:2030:
+		*block_size = be32_to_cpu(*(__u32 *) buf->block_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#262: FILE: drivers/block/cciss.c:2036:
+	printk(KERN_INFO "      blocks= %lld block_size= %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/block/cciss.c:2069:
+		cciss_read_capacity(h->ctlr, logvol, 1,
+					&total_size, &block_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/block/cciss.c:2072:
+		cciss_read_capacity_16(h->ctlr, logvol, 1,
+					&total_size, &block_size);

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: drivers/block/cciss.c:2570:
+	if(h->cciss_read == CCISS_READ_10) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#358: FILE: drivers/block/cciss.c:2579:
+		c->Request.CDB[9] = c->Request.CDB[11] = c->Request.CDB[12] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#361: FILE: drivers/block/cciss.c:2582:
+		c->Request.CDB[1]= 0;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#362: FILE: drivers/block/cciss.c:2583:
+		c->Request.CDB[2]= (start_blk >> 56) & 0xff;	//MSB
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#363: FILE: drivers/block/cciss.c:2584:
+		c->Request.CDB[3]= (start_blk >> 48) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#364: FILE: drivers/block/cciss.c:2585:
+		c->Request.CDB[4]= (start_blk >> 40) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#365: FILE: drivers/block/cciss.c:2586:
+		c->Request.CDB[5]= (start_blk >> 32) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#366: FILE: drivers/block/cciss.c:2587:
+		c->Request.CDB[6]= (start_blk >> 24) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#367: FILE: drivers/block/cciss.c:2588:
+		c->Request.CDB[7]= (start_blk >> 16) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#368: FILE: drivers/block/cciss.c:2589:
+		c->Request.CDB[8]= (start_blk >>  8) & 0xff;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#369: FILE: drivers/block/cciss.c:2590:
+		c->Request.CDB[9]= start_blk & 0xff;
 		                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/block/cciss.c:2591:
+^I^Ic->Request.CDB[10]= (creq->nr_sectors >>  24) & 0xff; $

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#370: FILE: drivers/block/cciss.c:2591:
+		c->Request.CDB[10]= (creq->nr_sectors >>  24) & 0xff; 
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/block/cciss.c:2592:
+^I^Ic->Request.CDB[11]= (creq->nr_sectors >>  16) & 0xff; $

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#371: FILE: drivers/block/cciss.c:2592:
+		c->Request.CDB[11]= (creq->nr_sectors >>  16) & 0xff; 
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/block/cciss.c:2593:
+^I^Ic->Request.CDB[12]= (creq->nr_sectors >>  8) & 0xff; $

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#372: FILE: drivers/block/cciss.c:2593:
+		c->Request.CDB[12]= (creq->nr_sectors >>  8) & 0xff; 
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/block/cciss.c:2594:
+^I^Ic->Request.CDB[13]= creq->nr_sectors & 0xff; $

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#373: FILE: drivers/block/cciss.c:2594:
+		c->Request.CDB[13]= creq->nr_sectors & 0xff; 
 		                  ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#374: FILE: drivers/block/cciss.c:2595:
+		c->Request.CDB[14] = c->Request.CDB[15] = 0;

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: drivers/block/cciss.c:3127:
+		if(hba[cntl_num]->cciss_read == CCISS_READ_16) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/block/cciss.c:3129:
+			cciss_read_capacity_16(cntl_num, i, 0,
 					    &total_size, &block_size);

CHECK:SPACING: No space is necessary after a cast
#447: FILE: drivers/block/cciss.c:3135:
+		if(total_size == (__u32) 0) {

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: drivers/block/cciss.c:3135:
+		if(total_size == (__u32) 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/block/cciss.c:3137:
+			cciss_read_capacity_16(cntl_num, i, 0,
+			&total_size, &block_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#483: FILE: drivers/block/cciss_cmd.h:124:
+/* service action to differentiate a 16 byte read capacity from
+   other commands that use the 0x9e SCSI op code */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#483: FILE: drivers/block/cciss_cmd.h:124:
+   other commands that use the 0x9e SCSI op code */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#487: FILE: drivers/block/cciss_cmd.h:128:
+typedef struct _ReadCapdata_struct_16

CHECK:CAMELCASE: Avoid CamelCase: <_ReadCapdata_struct_16>
#487: FILE: drivers/block/cciss_cmd.h:128:
+typedef struct _ReadCapdata_struct_16

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#488: FILE: drivers/block/cciss_cmd.h:129:
+typedef struct _ReadCapdata_struct_16
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: drivers/block/cciss_cmd.h:132:
+	BYTE block_size[4];   /* Size of blocks in bytes */
+	BYTE prot_en:1;       /* protection enable bit */

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#491: FILE: drivers/block/cciss_cmd.h:132:
+	BYTE prot_en:1;       /* protection enable bit */
 	            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#492: FILE: drivers/block/cciss_cmd.h:133:
+	BYTE rto_en:1;        /* reference tag own enable bit */
 	           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#493: FILE: drivers/block/cciss_cmd.h:134:
+	BYTE reserved:6;      /* reserved bits */
 	             ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39225.commit.cf1a5c328d6a2ced42ad7a70fe205a10e6da2a15 total: 25 errors, 15 warnings, 43 checks, 455 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39225.commit.cf1a5c328d6a2ced42ad7a70fe205a10e6da2a15 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
