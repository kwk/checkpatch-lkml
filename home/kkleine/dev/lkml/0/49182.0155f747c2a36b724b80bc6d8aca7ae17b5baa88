WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#61: FILE: MAINTAINERS:1887:
+P:	Lennart Poettering
+M:	mzxreary@0pointer.de

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#64: FILE: MAINTAINERS:1890:
+W:	http://0pointer.de/lennart/tchibo.html
+S:	Maintained

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#75: FILE: drivers/misc/Kconfig:31:
+config MSI_S270
+        tristate "MSI S270 Laptop Extras"
+        depends on X86
+        depends on ACPI_EC
+        depends on BACKLIGHT_CLASS_DEVICE
+        ---help---
+          This is a driver for MSI S270 laptops. It adds
+          support for Bluetooth, WLAN and LCD brightness control.
+
+          More information about this driver is available at
+          <http://0pointer.de/lennart/tchibo.html>.
+
+          If you have an MSI S270 laptop, say Y or M here.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/misc/s270.c:1:
+/*-*-linux-c-*-*/

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#103: FILE: drivers/misc/s270.c:3:
+/* $Id: s270.c 109 2006-08-10 16:05:22Z lennart $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: drivers/misc/s270.c:6:
+/***
+  Copyright (C) 2006 Lennart Poettering <mzxreary (at) 0pointer (dot) de>

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#119: FILE: drivers/misc/s270.c:19:
+  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#120: FILE: drivers/misc/s270.c:20:
+  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/misc/s270.c:32:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#180: FILE: drivers/misc/s270.c:80:
+static const uint8_t lcd_table[MSI_LCD_LEVEL_MAX] = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/misc/s270.c:81:
+        0x00, 0x1f, 0x3e, 0x5d, 0x7c, 0x9b, 0xba, 0xd9, 0xf8$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/misc/s270.c:81:
+        0x00, 0x1f, 0x3e, 0x5d, 0x7c, 0x9b, 0xba, 0xd9, 0xf8$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#184: FILE: drivers/misc/s270.c:84:
+static int set_lcd_level(int level) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/misc/s270.c:85:
+        u8 buf[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/misc/s270.c:85:
+        u8 buf[2];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/misc/s270.c:86:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/misc/s270.c:86:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/misc/s270.c:86:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/misc/s270.c:87:
+        if (level < 0 || level >= MSI_LCD_LEVEL_MAX)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/misc/s270.c:87:
+        if (level < 0 || level >= MSI_LCD_LEVEL_MAX)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/misc/s270.c:88:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/misc/s270.c:88:
+                return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/misc/s270.c:89:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/misc/s270.c:89:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/misc/s270.c:89:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/misc/s270.c:90:
+        buf[0] = 0x80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/misc/s270.c:90:
+        buf[0] = 0x80;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/misc/s270.c:91:
+        buf[1] = lcd_table[level];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/misc/s270.c:91:
+        buf[1] = lcd_table[level];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: drivers/misc/s270.c:92:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/misc/s270.c:92:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/misc/s270.c:92:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/misc/s270.c:93:
+        return ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, buf, sizeof(buf), NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/misc/s270.c:93:
+        return ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, buf, sizeof(buf), NULL, 0);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#196: FILE: drivers/misc/s270.c:96:
+static int get_lcd_level(void) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/misc/s270.c:97:
+        u8 wdata = 0, rdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/misc/s270.c:97:
+        u8 wdata = 0, rdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/misc/s270.c:98:
+        int i, result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/misc/s270.c:98:
+        int i, result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/misc/s270.c:99:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/misc/s270.c:99:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/misc/s270.c:99:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/misc/s270.c:100:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/misc/s270.c:100:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: drivers/misc/s270.c:100:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/misc/s270.c:101:
+                return result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/misc/s270.c:101:
+                return result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/misc/s270.c:102:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/misc/s270.c:102:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/misc/s270.c:102:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/misc/s270.c:103:
+        for (i = 0; i < MSI_LCD_LEVEL_MAX; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/misc/s270.c:103:
+        for (i = 0; i < MSI_LCD_LEVEL_MAX; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/misc/s270.c:104:
+                if (lcd_table[i] == rdata)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/misc/s270.c:104:
+                if (lcd_table[i] == rdata)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/misc/s270.c:105:
+                        return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/misc/s270.c:105:
+                        return i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: drivers/misc/s270.c:106:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/misc/s270.c:106:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/misc/s270.c:106:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/misc/s270.c:107:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/misc/s270.c:107:
+        return -EIO;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#210: FILE: drivers/misc/s270.c:110:
+static int get_auto_brightness(void) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/misc/s270.c:111:
+        u8 wdata = 4, rdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/misc/s270.c:111:
+        u8 wdata = 4, rdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/misc/s270.c:112:
+        int result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/misc/s270.c:112:
+        int result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/misc/s270.c:113:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/misc/s270.c:113:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/misc/s270.c:113:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/misc/s270.c:114:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/misc/s270.c:114:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: drivers/misc/s270.c:114:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, &wdata, 1, &rdata, 1)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/misc/s270.c:115:
+                return result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/misc/s270.c:115:
+                return result;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/misc/s270.c:117:
+        return !!(rdata & 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/misc/s270.c:117:
+        return !!(rdata & 8);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#220: FILE: drivers/misc/s270.c:120:
+static int set_auto_brightness(int enable) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/misc/s270.c:121:
+        u8 wdata[2], rdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/misc/s270.c:121:
+        u8 wdata[2], rdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/misc/s270.c:122:
+        int result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/misc/s270.c:122:
+        int result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/misc/s270.c:123:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/misc/s270.c:123:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/misc/s270.c:123:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/misc/s270.c:124:
+        wdata[0] = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/misc/s270.c:124:
+        wdata[0] = 4;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/misc/s270.c:125:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/misc/s270.c:125:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/misc/s270.c:125:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/misc/s270.c:126:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, wdata, 1, &rdata, 1)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/misc/s270.c:126:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, wdata, 1, &rdata, 1)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#226: FILE: drivers/misc/s270.c:126:
+        if ((result = ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, wdata, 1, &rdata, 1)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/misc/s270.c:127:
+                return result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/misc/s270.c:127:
+                return result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/misc/s270.c:128:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/misc/s270.c:128:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/misc/s270.c:128:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/misc/s270.c:129:
+        wdata[0] = 0x84;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/misc/s270.c:129:
+        wdata[0] = 0x84;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/misc/s270.c:130:
+        wdata[1] = (rdata & 0xF7) | (enable ? 8 : 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/misc/s270.c:130:
+        wdata[1] = (rdata & 0xF7) | (enable ? 8 : 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/misc/s270.c:132:
+        return ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, wdata, 2, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/misc/s270.c:132:
+        return ec_transaction(MSI_EC_COMMAND_LCD_LEVEL, wdata, 2, NULL, 0);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#235: FILE: drivers/misc/s270.c:135:
+static int get_wireless_state(int *wlan, int *bluetooth) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/misc/s270.c:136:
+        u8 wdata = 0, rdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/misc/s270.c:136:
+        u8 wdata = 0, rdata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/misc/s270.c:137:
+        int result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/misc/s270.c:137:
+        int result;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/misc/s270.c:139:
+        if ((result = ec_transaction(MSI_EC_COMMAND_WIRELESS, &wdata, 1, &rdata, 1)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/misc/s270.c:139:
+        if ((result = ec_transaction(MSI_EC_COMMAND_WIRELESS, &wdata, 1, &rdata, 1)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: drivers/misc/s270.c:139:
+        if ((result = ec_transaction(MSI_EC_COMMAND_WIRELESS, &wdata, 1, &rdata, 1)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/misc/s270.c:140:
+                return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/misc/s270.c:140:
+                return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/misc/s270.c:142:
+        if (wlan)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/misc/s270.c:142:
+        if (wlan)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/misc/s270.c:143:
+                *wlan = !!(rdata & 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/misc/s270.c:143:
+                *wlan = !!(rdata & 8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/misc/s270.c:145:
+        if (bluetooth)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/misc/s270.c:145:
+        if (bluetooth)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/misc/s270.c:146:
+                *bluetooth = !!(rdata & 128);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/misc/s270.c:146:
+                *bluetooth = !!(rdata & 128);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/misc/s270.c:147:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/misc/s270.c:147:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/misc/s270.c:147:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/misc/s270.c:148:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/misc/s270.c:148:
+        return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#253: FILE: drivers/misc/s270.c:153:
+static int bl_get_brightness(struct backlight_device *b) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/misc/s270.c:154:
+        return get_lcd_level();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/misc/s270.c:154:
+        return get_lcd_level();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: drivers/misc/s270.c:157:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#258: FILE: drivers/misc/s270.c:158:
+static int bl_update_status(struct backlight_device *b) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/misc/s270.c:159:
+        return set_lcd_level(b->props->brightness);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/misc/s270.c:159:
+        return set_lcd_level(b->props->brightness);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/misc/s270.c:163:
+        .owner^I^I= THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/misc/s270.c:163:
+        .owner^I^I= THIS_MODULE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/misc/s270.c:165:
+        .update_status  = bl_update_status,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/misc/s270.c:165:
+        .update_status  = bl_update_status,$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#273: FILE: drivers/misc/s270.c:173:
+static ssize_t show_wlan(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#273: FILE: drivers/misc/s270.c:173:
+static ssize_t show_wlan(
+        struct device *dev,
+        struct device_attribute *attr,
+        char *buf) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/misc/s270.c:174:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/misc/s270.c:174:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/misc/s270.c:175:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/misc/s270.c:175:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/misc/s270.c:176:
+        char *buf) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/misc/s270.c:176:
+        char *buf) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#277: FILE: drivers/misc/s270.c:177:
+        char *buf) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/misc/s270.c:178:
+        int ret, enabled;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/misc/s270.c:178:
+        int ret, enabled;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/misc/s270.c:180:
+        if ((ret = get_wireless_state(&enabled, NULL)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/misc/s270.c:180:
+        if ((ret = get_wireless_state(&enabled, NULL)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#280: FILE: drivers/misc/s270.c:180:
+        if ((ret = get_wireless_state(&enabled, NULL)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: drivers/misc/s270.c:181:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/misc/s270.c:181:
+                return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: drivers/misc/s270.c:183:
+        return sprintf(buf, "%i\n", enabled);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/misc/s270.c:183:
+        return sprintf(buf, "%i\n", enabled);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#286: FILE: drivers/misc/s270.c:186:
+static ssize_t show_bluetooth(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#286: FILE: drivers/misc/s270.c:186:
+static ssize_t show_bluetooth(
+        struct device *dev,
+        struct device_attribute *attr,
+        char *buf) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/misc/s270.c:187:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/misc/s270.c:187:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/misc/s270.c:188:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/misc/s270.c:188:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/misc/s270.c:189:
+        char *buf) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/misc/s270.c:189:
+        char *buf) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#290: FILE: drivers/misc/s270.c:190:
+        char *buf) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: drivers/misc/s270.c:191:
+        int ret, enabled;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/misc/s270.c:191:
+        int ret, enabled;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/misc/s270.c:193:
+        if ((ret = get_wireless_state(NULL, &enabled)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/misc/s270.c:193:
+        if ((ret = get_wireless_state(NULL, &enabled)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#293: FILE: drivers/misc/s270.c:193:
+        if ((ret = get_wireless_state(NULL, &enabled)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/misc/s270.c:194:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/misc/s270.c:194:
+                return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: drivers/misc/s270.c:196:
+        return sprintf(buf, "%i\n", enabled);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/misc/s270.c:196:
+        return sprintf(buf, "%i\n", enabled);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#299: FILE: drivers/misc/s270.c:199:
+static ssize_t show_lcd_level(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#299: FILE: drivers/misc/s270.c:199:
+static ssize_t show_lcd_level(
+        struct device *dev,
+        struct device_attribute *attr,
+        char *buf) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/misc/s270.c:200:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/misc/s270.c:200:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/misc/s270.c:201:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/misc/s270.c:201:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/misc/s270.c:202:
+        char *buf) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/misc/s270.c:202:
+        char *buf) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#303: FILE: drivers/misc/s270.c:203:
+        char *buf) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/misc/s270.c:204:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/misc/s270.c:204:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/misc/s270.c:206:
+        if ((ret = get_lcd_level()) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/misc/s270.c:206:
+        if ((ret = get_lcd_level()) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#306: FILE: drivers/misc/s270.c:206:
+        if ((ret = get_lcd_level()) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/misc/s270.c:207:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/misc/s270.c:207:
+                return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/misc/s270.c:208:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/misc/s270.c:208:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/misc/s270.c:208:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/misc/s270.c:209:
+        return sprintf(buf, "%i\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/misc/s270.c:209:
+        return sprintf(buf, "%i\n", ret);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#312: FILE: drivers/misc/s270.c:212:
+static ssize_t store_lcd_level(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#312: FILE: drivers/misc/s270.c:212:
+static ssize_t store_lcd_level(
+        struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/misc/s270.c:213:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/misc/s270.c:213:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/misc/s270.c:214:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/misc/s270.c:214:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: drivers/misc/s270.c:215:
+        const char *buf, size_t count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/misc/s270.c:215:
+        const char *buf, size_t count) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/misc/s270.c:216:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: drivers/misc/s270.c:216:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/misc/s270.c:216:
+        $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#316: FILE: drivers/misc/s270.c:216:
+        const char *buf, size_t count) {
+        

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/misc/s270.c:217:
+        int level, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/misc/s270.c:217:
+        int level, ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/misc/s270.c:219:
+        if (sscanf(buf, "%i", &level) != 1 || (level < 0 || level > 8))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/misc/s270.c:219:
+        if (sscanf(buf, "%i", &level) != 1 || (level < 0 || level > 8))$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#319: FILE: drivers/misc/s270.c:219:
+        if (sscanf(buf, "%i", &level) != 1 || (level < 0 || level > 8))
+                return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/misc/s270.c:220:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/misc/s270.c:220:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/misc/s270.c:222:
+        if ((ret = set_lcd_level(level)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/misc/s270.c:222:
+        if ((ret = set_lcd_level(level)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#322: FILE: drivers/misc/s270.c:222:
+        if ((ret = set_lcd_level(level)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: drivers/misc/s270.c:223:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/misc/s270.c:223:
+                return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/misc/s270.c:224:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: drivers/misc/s270.c:224:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/misc/s270.c:224:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: drivers/misc/s270.c:225:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/misc/s270.c:225:
+        return count;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#328: FILE: drivers/misc/s270.c:228:
+static ssize_t show_auto_brightness(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#328: FILE: drivers/misc/s270.c:228:
+static ssize_t show_auto_brightness(
+        struct device *dev,
+        struct device_attribute *attr,
+        char *buf) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/misc/s270.c:229:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/misc/s270.c:229:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/misc/s270.c:230:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/misc/s270.c:230:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/misc/s270.c:231:
+        char *buf) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/misc/s270.c:231:
+        char *buf) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#332: FILE: drivers/misc/s270.c:232:
+        char *buf) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/misc/s270.c:233:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/misc/s270.c:233:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/misc/s270.c:235:
+        if ((ret = get_auto_brightness()) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/misc/s270.c:235:
+        if ((ret = get_auto_brightness()) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#335: FILE: drivers/misc/s270.c:235:
+        if ((ret = get_auto_brightness()) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/misc/s270.c:236:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/misc/s270.c:236:
+                return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/misc/s270.c:237:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/misc/s270.c:237:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/misc/s270.c:237:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/misc/s270.c:238:
+        return sprintf(buf, "%i\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/misc/s270.c:238:
+        return sprintf(buf, "%i\n", ret);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#341: FILE: drivers/misc/s270.c:241:
+static ssize_t store_auto_brightness(

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#341: FILE: drivers/misc/s270.c:241:
+static ssize_t store_auto_brightness(
+        struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/misc/s270.c:242:
+        struct device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/misc/s270.c:242:
+        struct device *dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/misc/s270.c:243:
+        struct device_attribute *attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/misc/s270.c:243:
+        struct device_attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/misc/s270.c:244:
+        const char *buf, size_t count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/misc/s270.c:244:
+        const char *buf, size_t count) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/misc/s270.c:245:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/misc/s270.c:245:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/misc/s270.c:245:
+        $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#345: FILE: drivers/misc/s270.c:245:
+        const char *buf, size_t count) {
+        

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/misc/s270.c:246:
+        int enable, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/misc/s270.c:246:
+        int enable, ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: drivers/misc/s270.c:248:
+        if (sscanf(buf, "%i", &enable) != 1 || (enable != (enable & 1)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/misc/s270.c:248:
+        if (sscanf(buf, "%i", &enable) != 1 || (enable != (enable & 1)))$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#348: FILE: drivers/misc/s270.c:248:
+        if (sscanf(buf, "%i", &enable) != 1 || (enable != (enable & 1)))
+                return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: drivers/misc/s270.c:249:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/misc/s270.c:249:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/misc/s270.c:251:
+        if ((ret = set_auto_brightness(enable)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/misc/s270.c:251:
+        if ((ret = set_auto_brightness(enable)) < 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: drivers/misc/s270.c:251:
+        if ((ret = set_auto_brightness(enable)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/misc/s270.c:252:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/misc/s270.c:252:
+                return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: drivers/misc/s270.c:253:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/misc/s270.c:253:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/misc/s270.c:253:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/misc/s270.c:254:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/misc/s270.c:254:
+        return count;$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_lcd_level' to 'lcd_level_show' 'store_lcd_level' to 'lcd_level_store'
#355: FILE: drivers/misc/s270.c:255:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_brightness' to 'auto_brightness_show' 'store_auto_brightness' to 'auto_brightness_store'
#358: FILE: drivers/misc/s270.c:258:
+static DEVICE_ATTR(auto_brightness, 0644, show_auto_brightness, store_auto_brightness);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_bluetooth' to 'bluetooth_show'
#359: FILE: drivers/misc/s270.c:259:
+static DEVICE_ATTR(bluetooth, 0444, show_bluetooth, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_wlan' to 'wlan_show'
#360: FILE: drivers/misc/s270.c:260:
+static DEVICE_ATTR(wlan, 0444, show_wlan, NULL);

WARNING:MISPLACED_INIT: __initdata should be placed after s270_dmi_table[]
#385: FILE: drivers/misc/s270.c:285:
+static struct dmi_system_id __initdata s270_dmi_table[] = { {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/misc/s270.c:286:
+        .ident = "MSI S270",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/misc/s270.c:286:
+        .ident = "MSI S270",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/misc/s270.c:287:
+        .matches = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/misc/s270.c:287:
+        .matches = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/misc/s270.c:288:
+                DMI_MATCH(DMI_SYS_VENDOR, "NOTEBOOK"),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/misc/s270.c:288:
+                DMI_MATCH(DMI_SYS_VENDOR, "NOTEBOOK"),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/misc/s270.c:289:
+                DMI_MATCH(DMI_PRODUCT_NAME, "SAM2000"),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/misc/s270.c:289:
+                DMI_MATCH(DMI_PRODUCT_NAME, "SAM2000"),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/misc/s270.c:290:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/misc/s270.c:290:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#393: FILE: drivers/misc/s270.c:293:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#394: FILE: drivers/misc/s270.c:294:
+static int __init s270_init(void) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/misc/s270.c:295:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/misc/s270.c:295:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/misc/s270.c:297:
+        if (acpi_disabled)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/misc/s270.c:297:
+        if (acpi_disabled)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/misc/s270.c:298:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/misc/s270.c:298:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/misc/s270.c:300:
+        if (!force && !dmi_check_system(s270_dmi_table))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/misc/s270.c:300:
+        if (!force && !dmi_check_system(s270_dmi_table))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/misc/s270.c:301:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/misc/s270.c:301:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/misc/s270.c:303:
+        if (auto_brightness < 0 || auto_brightness > 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/misc/s270.c:303:
+        if (auto_brightness < 0 || auto_brightness > 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/misc/s270.c:304:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/misc/s270.c:304:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/misc/s270.c:306:
+        /* Register backlight stuff */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/misc/s270.c:307:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/misc/s270.c:307:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/misc/s270.c:307:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/misc/s270.c:308:
+        s270bl_device = backlight_device_register("s270bl", NULL, &s270bl_props);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/misc/s270.c:308:
+        s270bl_device = backlight_device_register("s270bl", NULL, &s270bl_props);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/misc/s270.c:309:
+        if (IS_ERR(s270bl_device))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/misc/s270.c:309:
+        if (IS_ERR(s270bl_device))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/misc/s270.c:310:
+                return PTR_ERR(s270bl_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/misc/s270.c:310:
+                return PTR_ERR(s270bl_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/misc/s270.c:312:
+        if ((ret = platform_driver_register(&s270pf_driver)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/misc/s270.c:312:
+        if ((ret = platform_driver_register(&s270pf_driver)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#412: FILE: drivers/misc/s270.c:312:
+        if ((ret = platform_driver_register(&s270pf_driver)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/misc/s270.c:313:
+                goto fail_backlight;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/misc/s270.c:313:
+                goto fail_backlight;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/misc/s270.c:315:
+        /* Register platform stuff */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/misc/s270.c:316:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/misc/s270.c:316:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/misc/s270.c:316:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/misc/s270.c:317:
+        s270pf_device = platform_device_register_simple("s270pf", -1, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/misc/s270.c:317:
+        s270pf_device = platform_device_register_simple("s270pf", -1, NULL, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/misc/s270.c:323:
+        if ((ret = sysfs_create_group(&s270pf_device->dev.kobj, &s270pf_attribute_group)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/misc/s270.c:323:
+        if ((ret = sysfs_create_group(&s270pf_device->dev.kobj, &s270pf_attribute_group)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: drivers/misc/s270.c:323:
+        if ((ret = sysfs_create_group(&s270pf_device->dev.kobj, &s270pf_attribute_group)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: drivers/misc/s270.c:324:
+                goto fail_platform_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/misc/s270.c:324:
+                goto fail_platform_device;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/misc/s270.c:326:
+        /* Disable automatic brightness control by default because$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/misc/s270.c:327:
+         * this module was probably loaded to do brightness control in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/misc/s270.c:328:
+         * software. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#428: FILE: drivers/misc/s270.c:328:
+         * software. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/misc/s270.c:330:
+        if (auto_brightness != 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/misc/s270.c:330:
+        if (auto_brightness != 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/misc/s270.c:331:
+                set_auto_brightness(auto_brightness);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/misc/s270.c:331:
+                set_auto_brightness(auto_brightness);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: drivers/misc/s270.c:332:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: drivers/misc/s270.c:332:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/misc/s270.c:332:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/misc/s270.c:333:
+        printk(KERN_INFO "s270: driver "S270_VERSION" successfully loaded.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/misc/s270.c:333:
+        printk(KERN_INFO "s270: driver "S270_VERSION" successfully loaded.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#433: FILE: drivers/misc/s270.c:333:
+        printk(KERN_INFO "s270: driver "S270_VERSION" successfully loaded.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#433: FILE: drivers/misc/s270.c:333:
+        printk(KERN_INFO "s270: driver "S270_VERSION" successfully loaded.\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/misc/s270.c:334:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/misc/s270.c:334:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/misc/s270.c:334:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/misc/s270.c:335:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/misc/s270.c:335:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/misc/s270.c:338:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/misc/s270.c:338:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/misc/s270.c:338:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/misc/s270.c:339:
+        platform_device_unregister(s270pf_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/misc/s270.c:339:
+        platform_device_unregister(s270pf_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/misc/s270.c:343:
+        platform_driver_unregister(&s270pf_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/misc/s270.c:343:
+        platform_driver_unregister(&s270pf_driver);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/misc/s270.c:344:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/misc/s270.c:344:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/misc/s270.c:344:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/misc/s270.c:347:
+        backlight_device_unregister(s270bl_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/misc/s270.c:347:
+        backlight_device_unregister(s270bl_device);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: drivers/misc/s270.c:348:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/misc/s270.c:348:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/misc/s270.c:348:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/misc/s270.c:349:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/misc/s270.c:349:
+        return ret;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#452: FILE: drivers/misc/s270.c:352:
+static void __exit s270_cleanup(void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#453: FILE: drivers/misc/s270.c:353:
+static void __exit s270_cleanup(void) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/misc/s270.c:354:
+        sysfs_remove_group(&s270pf_device->dev.kobj, &s270pf_attribute_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/misc/s270.c:354:
+        sysfs_remove_group(&s270pf_device->dev.kobj, &s270pf_attribute_group);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/misc/s270.c:355:
+        platform_device_unregister(s270pf_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/misc/s270.c:355:
+        platform_device_unregister(s270pf_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/misc/s270.c:356:
+        platform_driver_unregister(&s270pf_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/misc/s270.c:356:
+        platform_driver_unregister(&s270pf_driver);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/misc/s270.c:357:
+        backlight_device_unregister(s270bl_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/misc/s270.c:357:
+        backlight_device_unregister(s270bl_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: drivers/misc/s270.c:359:
+        /* Enable automatic brightness control again */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/misc/s270.c:360:
+        if (auto_brightness != 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/misc/s270.c:360:
+        if (auto_brightness != 2)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/misc/s270.c:361:
+                set_auto_brightness(1);     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/misc/s270.c:361:
+                set_auto_brightness(1);     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/misc/s270.c:361:
+                set_auto_brightness(1);     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: drivers/misc/s270.c:363:
+        printk(KERN_INFO "s270: driver unloaded.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/misc/s270.c:363:
+        printk(KERN_INFO "s270: driver unloaded.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#463: FILE: drivers/misc/s270.c:363:
+        printk(KERN_INFO "s270: driver unloaded.\n");

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49182.commit.0155f747c2a36b724b80bc6d8aca7ae17b5baa88 total: 207 errors, 162 warnings, 17 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49182.commit.0155f747c2a36b724b80bc6d8aca7ae17b5baa88 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
