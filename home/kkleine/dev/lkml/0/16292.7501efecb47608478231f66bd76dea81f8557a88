WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> /dev/sdb1 on /mnt/iomega type vfat (rw,uid=1000,gid=100,codepage=850,iocharset=iso8859-15) 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#50: 
@@ -787,6 +830,9 @@ static int vfat_rmdir(struct inode *dir,

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#87: FILE: fs/vfat/namei.c:32:
+	printk("%s: name %s, nd %p, flags %08x\n", __FUNCTION__,
 	                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#87: FILE: fs/vfat/namei.c:32:
+	printk("%s: name %s, nd %p, flags %08x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#87: FILE: fs/vfat/namei.c:32:
+	printk("%s: name %s, nd %p, flags %08x\n", __FUNCTION__,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#88: FILE: fs/vfat/namei.c:33:
+	       dentry->d_name.name, nd, nd ? nd->flags : 0);
 	                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#88: FILE: fs/vfat/namei.c:33:
+	       dentry->d_name.name, nd, nd ? nd->flags : 0);
 	                                ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: fs/vfat/namei.c:88:
+	printk("%s: parent %p, parent->d_op %p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#97: FILE: fs/vfat/namei.c:89:
+	       __FUNCTION__, dentry, dentry->d_op);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#98: FILE: fs/vfat/namei.c:90:
+	printk("%s: parent %s, name %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#98: FILE: fs/vfat/namei.c:90:
+	printk("%s: parent %s, name %s\n", __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: fs/vfat/namei.c:109:
+	printk("%s: parent %p, parent->d_op %p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#108: FILE: fs/vfat/namei.c:110:
+	       __FUNCTION__, dentry, dentry->d_op);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: fs/vfat/namei.c:111:
+	printk("%s: a %s, b %s\n", __FUNCTION__, a->name, b->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#109: FILE: fs/vfat/namei.c:111:
+	printk("%s: a %s, b %s\n", __FUNCTION__, a->name, b->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: fs/vfat/namei.c:673:
+	int i;
+	for (i = nr_slots - 1; i >= 0; i--) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: fs/vfat/namei.c:677:
+			printk("%s: %d: %c%c%c%c%c%c%c%c, %c%c%c\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#124: FILE: fs/vfat/namei.c:678:
+			       __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: fs/vfat/namei.c:686:
+		printk("%s: %d: %c%c%c%c%c, %c%c%c%c%c%c, %c%c",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#133: FILE: fs/vfat/namei.c:687:
+		       __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: fs/vfat/namei.c:696:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: fs/vfat/namei.c:732:
+	printk("%s: name %s\n", __FUNCTION__, dentry->d_name.name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#152: FILE: fs/vfat/namei.c:732:
+	printk("%s: name %s\n", __FUNCTION__, dentry->d_name.name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: fs/vfat/namei.c:755:
+			printk("%s: d_op %p\n", __FUNCTION__, alias->d_op);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#160: FILE: fs/vfat/namei.c:755:
+			printk("%s: d_op %p\n", __FUNCTION__, alias->d_op);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: fs/vfat/namei.c:768:
+		printk("%s: d_op %p\n", __FUNCTION__, dentry->d_op);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#168: FILE: fs/vfat/namei.c:768:
+		printk("%s: d_op %p\n", __FUNCTION__, dentry->d_op);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#176: FILE: fs/vfat/namei.c:785:
+	printk("%s: name %s\n", __FUNCTION__, dentry->d_name.name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#176: FILE: fs/vfat/namei.c:785:
+	printk("%s: name %s\n", __FUNCTION__, dentry->d_name.name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#184: FILE: fs/vfat/namei.c:805:
+	printk("%s: err %d\n", __FUNCTION__, err);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#184: FILE: fs/vfat/namei.c:805:
+	printk("%s: err %d\n", __FUNCTION__, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: fs/vfat/namei.c:1072:
+	printk("%s: s_root %p, d_op %p\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#233: FILE: fs/vfat/namei.c:1072:
+	printk("%s: s_root %p, d_op %p\n", __FUNCTION__,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.16292.commit.7501efecb47608478231f66bd76dea81f8557a88 total: 1 errors, 32 warnings, 0 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.16292.commit.7501efecb47608478231f66bd76dea81f8557a88 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
