WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_CreateInitialCCBs>
#49: FILE: drivers/scsi/BusLogic.c:195:
+static bool __init BusLogic_CreateInitialCCBs(struct BusLogic_HostAdapter *HostAdapter)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_HostAdapter>
#49: FILE: drivers/scsi/BusLogic.c:195:
+static bool __init BusLogic_CreateInitialCCBs(struct BusLogic_HostAdapter *HostAdapter)

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapter>
#49: FILE: drivers/scsi/BusLogic.c:195:
+static bool __init BusLogic_CreateInitialCCBs(struct BusLogic_HostAdapter *HostAdapter)

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#58: FILE: drivers/scsi/BusLogic.c:241:
+static void BusLogic_CreateAdditionalCCBs(struct BusLogic_HostAdapter *HostAdapter, int AdditionalCCBs, bool SuccessMessageP)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_CreateAdditionalCCBs>
#58: FILE: drivers/scsi/BusLogic.c:241:
+static void BusLogic_CreateAdditionalCCBs(struct BusLogic_HostAdapter *HostAdapter, int AdditionalCCBs, bool SuccessMessageP)

CHECK:CAMELCASE: Avoid CamelCase: <AdditionalCCBs>
#58: FILE: drivers/scsi/BusLogic.c:241:
+static void BusLogic_CreateAdditionalCCBs(struct BusLogic_HostAdapter *HostAdapter, int AdditionalCCBs, bool SuccessMessageP)

CHECK:CAMELCASE: Avoid CamelCase: <SuccessMessageP>
#58: FILE: drivers/scsi/BusLogic.c:241:
+static void BusLogic_CreateAdditionalCCBs(struct BusLogic_HostAdapter *HostAdapter, int AdditionalCCBs, bool SuccessMessageP)

CHECK:CAMELCASE: Avoid CamelCase: <ForceBusDeviceScanningOrder>
#69: FILE: drivers/scsi/BusLogic.c:642:
+	bool ForceBusDeviceScanningOrder = false;

CHECK:CAMELCASE: Avoid CamelCase: <ForceBusDeviceScanningOrderChecked>
#70: FILE: drivers/scsi/BusLogic.c:643:
+	bool ForceBusDeviceScanningOrderChecked = false;

CHECK:CAMELCASE: Avoid CamelCase: <StandardAddressSeen>
#71: FILE: drivers/scsi/BusLogic.c:644:
+	bool StandardAddressSeen[6];

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_Failure>
#80: FILE: drivers/scsi/BusLogic.c:1014:
+static bool BusLogic_Failure(struct BusLogic_HostAdapter *HostAdapter, char *ErrorMessage)

CHECK:CAMELCASE: Avoid CamelCase: <ErrorMessage>
#80: FILE: drivers/scsi/BusLogic.c:1014:
+static bool BusLogic_Failure(struct BusLogic_HostAdapter *HostAdapter, char *ErrorMessage)

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_ProbeHostAdapter>
#89: FILE: drivers/scsi/BusLogic.c:1033:
+static bool __init BusLogic_ProbeHostAdapter(struct BusLogic_HostAdapter *HostAdapter)

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_HardwareResetHostAdapter>
#99: FILE: drivers/scsi/BusLogic.c:1104:
+static bool BusLogic_HardwareResetHostAdapter(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <HardReset>
#100: FILE: drivers/scsi/BusLogic.c:1105:
+						 *HostAdapter, bool HardReset)

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_CheckHostAdapter>
#109: FILE: drivers/scsi/BusLogic.c:1208:
+static bool __init BusLogic_CheckHostAdapter(struct BusLogic_HostAdapter *HostAdapter)

CHECK:CAMELCASE: Avoid CamelCase: <Result>
#114: FILE: drivers/scsi/BusLogic.c:1212:
+	bool Result = true;

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_ReadHostAdapterConfiguration>
#123: FILE: drivers/scsi/BusLogic.c:1242:
+static bool __init BusLogic_ReadHostAdapterConfiguration(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_ReportHostAdapterConfiguration>
#132: FILE: drivers/scsi/BusLogic.c:1689:
+static bool __init BusLogic_ReportHostAdapterConfiguration(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <CommonSynchronousNegotiation>
#140: FILE: drivers/scsi/BusLogic.c:1696:
+	bool CommonSynchronousNegotiation, CommonTaggedQueueDepth;

CHECK:CAMELCASE: Avoid CamelCase: <CommonTaggedQueueDepth>
#140: FILE: drivers/scsi/BusLogic.c:1696:
+	bool CommonSynchronousNegotiation, CommonTaggedQueueDepth;

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_AcquireResources>
#149: FILE: drivers/scsi/BusLogic.c:1838:
+static bool __init BusLogic_AcquireResources(struct BusLogic_HostAdapter *HostAdapter)

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_InitializeHostAdapter>
#158: FILE: drivers/scsi/BusLogic.c:1906:
+static bool BusLogic_InitializeHostAdapter(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_TargetDeviceInquiry>
#167: FILE: drivers/scsi/BusLogic.c:2005:
+static bool __init BusLogic_TargetDeviceInquiry(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_WriteOutgoingMailbox>
#176: FILE: drivers/scsi/BusLogic.c:2742:
+static bool BusLogic_WriteOutgoingMailbox(struct BusLogic_HostAdapter

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_ResetHostAdapter>
#185: FILE: drivers/scsi/BusLogic.c:3061:
+static int BusLogic_ResetHostAdapter(struct BusLogic_HostAdapter *HostAdapter, bool HardReset)

CHECK:CAMELCASE: Avoid CamelCase: <BeginningOfLine>
#194: FILE: drivers/scsi/BusLogic.c:3312:
+	static bool BeginningOfLine = true;

CHECK:CAMELCASE: Avoid CamelCase: <BusLogic_ParseKeyword>
#203: FILE: drivers/scsi/BusLogic.c:3350:
+static bool __init BusLogic_ParseKeyword(char **StringPointer, char *Keyword)

CHECK:CAMELCASE: Avoid CamelCase: <StringPointer>
#203: FILE: drivers/scsi/BusLogic.c:3350:
+static bool __init BusLogic_ParseKeyword(char **StringPointer, char *Keyword)

CHECK:CAMELCASE: Avoid CamelCase: <Keyword>
#203: FILE: drivers/scsi/BusLogic.c:3350:
+static bool __init BusLogic_ParseKeyword(char **StringPointer, char *Keyword)

CHECK:CAMELCASE: Avoid CamelCase: <NoProbe>
#241: FILE: drivers/scsi/BusLogic.h:266:
+	bool NoProbe:1;		/* Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <NoProbeISA>
#242: FILE: drivers/scsi/BusLogic.h:267:
+	bool NoProbeISA:1;	/* Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <NoProbePCI>
#243: FILE: drivers/scsi/BusLogic.h:268:
+	bool NoProbePCI:1;	/* Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <NoSortPCI>
#244: FILE: drivers/scsi/BusLogic.h:269:
+	bool NoSortPCI:1;	/* Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <MultiMasterFirst>
#245: FILE: drivers/scsi/BusLogic.h:270:
+	bool MultiMasterFirst:1;/* Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <FlashPointFirst>
#246: FILE: drivers/scsi/BusLogic.h:271:
+	bool FlashPointFirst:1;	/* Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <LimitedProbeISA>
#247: FILE: drivers/scsi/BusLogic.h:272:
+	bool LimitedProbeISA:1;	/* Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe330>
#248: FILE: drivers/scsi/BusLogic.h:273:
+	bool Probe330:1;	/* Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe334>
#249: FILE: drivers/scsi/BusLogic.h:274:
+	bool Probe334:1;	/* Bit 8 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe230>
#250: FILE: drivers/scsi/BusLogic.h:275:
+	bool Probe230:1;	/* Bit 9 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe234>
#251: FILE: drivers/scsi/BusLogic.h:276:
+	bool Probe234:1;	/* Bit 10 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe130>
#252: FILE: drivers/scsi/BusLogic.h:277:
+	bool Probe130:1;	/* Bit 11 */

CHECK:CAMELCASE: Avoid CamelCase: <Probe134>
#253: FILE: drivers/scsi/BusLogic.h:278:
+	bool Probe134:1;	/* Bit 12 */

CHECK:CAMELCASE: Avoid CamelCase: <TraceProbe>
#265: FILE: drivers/scsi/BusLogic.h:286:
+	bool TraceProbe:1;	/* Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <TraceHardwareReset>
#266: FILE: drivers/scsi/BusLogic.h:287:
+	bool TraceHardwareReset:1;	/* Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <TraceConfiguration>
#267: FILE: drivers/scsi/BusLogic.h:288:
+	bool TraceConfiguration:1;	/* Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <TraceErrors>
#268: FILE: drivers/scsi/BusLogic.h:289:
+	bool TraceErrors:1;	/* Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <InhibitTargetInquiry>
#277: FILE: drivers/scsi/BusLogic.h:297:
+	bool InhibitTargetInquiry:1;	/* Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <SCSIBusReset>
#289: FILE: drivers/scsi/BusLogic.h:319:
+		bool SCSIBusReset:1;	/* Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <InterruptReset>
#290: FILE: drivers/scsi/BusLogic.h:320:
+		bool InterruptReset:1;	/* Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <SoftReset>
#291: FILE: drivers/scsi/BusLogic.h:321:
+		bool SoftReset:1;	/* Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <CommandInvalid>
#308: FILE: drivers/scsi/BusLogic.h:333:
+		bool CommandInvalid:1;		/* Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#309: FILE: drivers/scsi/BusLogic.h:334:
+		bool Reserved:1;		/* Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <DataInRegisterReady>
#310: FILE: drivers/scsi/BusLogic.h:335:
+		bool DataInRegisterReady:1;	/* Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <CommandParameterRegisterBusy>
#311: FILE: drivers/scsi/BusLogic.h:336:
+		bool CommandParameterRegisterBusy:1;	/* Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterReady>
#312: FILE: drivers/scsi/BusLogic.h:337:
+		bool HostAdapterReady:1;	/* Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <InitializationRequired>
#313: FILE: drivers/scsi/BusLogic.h:338:
+		bool InitializationRequired:1;	/* Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <DiagnosticFailure>
#314: FILE: drivers/scsi/BusLogic.h:339:
+		bool DiagnosticFailure:1;	/* Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <DiagnosticActive>
#315: FILE: drivers/scsi/BusLogic.h:340:
+		bool DiagnosticActive:1;	/* Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <IncomingMailboxLoaded>
#327: FILE: drivers/scsi/BusLogic.h:351:
+		bool IncomingMailboxLoaded:1;	/* Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <OutgoingMailboxAvailable>
#328: FILE: drivers/scsi/BusLogic.h:352:
+		bool OutgoingMailboxAvailable:1;/* Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <CommandComplete>
#329: FILE: drivers/scsi/BusLogic.h:353:
+		bool CommandComplete:1;		/* Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <ExternalBusReset>
#330: FILE: drivers/scsi/BusLogic.h:354:
+		bool ExternalBusReset:1;	/* Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <InterruptValid>
#333: FILE: drivers/scsi/BusLogic.h:356:
+		bool InterruptValid:1;		/* Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <ExtendedTranslationEnabled>
#342: FILE: drivers/scsi/BusLogic.h:370:
+		bool ExtendedTranslationEnabled:1;	/* Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <Synchronous>
#377: FILE: drivers/scsi/BusLogic.h:464:
+	bool Synchronous:1;	/* Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <SynchronousInitiationEnabled>
#383: FILE: drivers/scsi/BusLogic.h:468:
+	bool SynchronousInitiationEnabled:1;	/* Byte 0 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <ParityCheckingEnabled>
#384: FILE: drivers/scsi/BusLogic.h:469:
+	bool ParityCheckingEnabled:1;		/* Byte 0 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <LowByteTerminated>
#394: FILE: drivers/scsi/BusLogic.h:520:
+	bool LowByteTerminated:1;	/* Byte 2 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <HighByteTerminated>
#395: FILE: drivers/scsi/BusLogic.h:521:
+	bool HighByteTerminated:1;	/* Byte 2 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <GenericInfoValid>
#404: FILE: drivers/scsi/BusLogic.h:526:
+	bool GenericInfoValid:1;/* Byte 2 Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <FastOnEISA>
#413: FILE: drivers/scsi/BusLogic.h:542:
+		bool FastOnEISA:1;	/* Byte 9 Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <LevelSensitiveInterrupt>
#416: FILE: drivers/scsi/BusLogic.h:544:
+		bool LevelSensitiveInterrupt:1;	/* Byte 9 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <HostWideSCSI>
#425: FILE: drivers/scsi/BusLogic.h:548:
+	bool HostWideSCSI:1;		/* Byte 13 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <HostDifferentialSCSI>
#426: FILE: drivers/scsi/BusLogic.h:549:
+	bool HostDifferentialSCSI:1;	/* Byte 13 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <HostSupportsSCAM>
#427: FILE: drivers/scsi/BusLogic.h:550:
+	bool HostSupportsSCAM:1;	/* Byte 13 Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <HostUltraSCSI>
#428: FILE: drivers/scsi/BusLogic.h:551:
+	bool HostUltraSCSI:1;		/* Byte 13 Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <HostSmartTermination>
#429: FILE: drivers/scsi/BusLogic.h:552:
+	bool HostSmartTermination:1;	/* Byte 13 Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <FloppyEnabled>
#440: FILE: drivers/scsi/BusLogic.h:587:
+	bool FloppyEnabled:1;		/* Byte 10 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <FloppySecondary>
#441: FILE: drivers/scsi/BusLogic.h:588:
+	bool FloppySecondary:1;		/* Byte 10 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <NoisyCablingEnvironment>
#464: FILE: drivers/scsi/BusLogic.h:601:
+	bool NoisyCablingEnvironment:1;	/* Byte 15 Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <FastSynchronousNegotiation>
#465: FILE: drivers/scsi/BusLogic.h:602:
+	bool FastSynchronousNegotiation:1;	/* Byte 15 Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <BusResetEnabled>
#466: FILE: drivers/scsi/BusLogic.h:603:
+	bool BusResetEnabled:1;		/* Byte 15 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <ActiveNegationEnabled>
#468: FILE: drivers/scsi/BusLogic.h:605:
+	bool ActiveNegationEnabled:1;	/* Byte 15 Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterBIOSEnabled>
#479: FILE: drivers/scsi/BusLogic.h:608:
+	bool HostAdapterBIOSEnabled:1;		/* Byte 18 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <BIOSRedirectionOfINT19Enabled>
#480: FILE: drivers/scsi/BusLogic.h:609:
+	bool BIOSRedirectionOfINT19Enabled:1;	/* Byte 18 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <MapRemovableAsFixedEnabled>
#482: FILE: drivers/scsi/BusLogic.h:611:
+	bool MapRemovableAsFixedEnabled:1;	/* Byte 18 Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <BIOSSupportsMoreThan2DrivesEnabled>
#484: FILE: drivers/scsi/BusLogic.h:613:
+	bool BIOSSupportsMoreThan2DrivesEnabled:1;	/* Byte 18 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <BIOSInterruptModeEnabled>
#485: FILE: drivers/scsi/BusLogic.h:614:
+	bool BIOSInterruptModeEnabled:1;	/* Byte 18 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <FlopticalSupportEnabled>
#486: FILE: drivers/scsi/BusLogic.h:615:
+	bool FlopticalSupportEnabled:1;		/* Byte 19 Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <StrictRoundRobinModeEnabled>
#498: FILE: drivers/scsi/BusLogic.h:625:
+	bool StrictRoundRobinModeEnabled:1;	/* Byte 33 Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <VESABusSpeedGreaterThan33MHz>
#499: FILE: drivers/scsi/BusLogic.h:626:
+	bool VESABusSpeedGreaterThan33MHz:1;	/* Byte 33 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <VESABurstWriteEnabled>
#500: FILE: drivers/scsi/BusLogic.h:627:
+	bool VESABurstWriteEnabled:1;	/* Byte 33 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <VESABurstReadEnabled>
#501: FILE: drivers/scsi/BusLogic.h:628:
+	bool VESABurstReadEnabled:1;	/* Byte 33 Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <INT13ExtensionEnabled>
#518: FILE: drivers/scsi/BusLogic.h:638:
+	bool INT13ExtensionEnabled:1;	/* Byte 43 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <CDROMBootEnabled>
#520: FILE: drivers/scsi/BusLogic.h:640:
+	bool CDROMBootEnabled:1;	/* Byte 43 Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <TagEnable>
#529: FILE: drivers/scsi/BusLogic.h:849:
+	bool TagEnable:1;	/* Byte 1 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <LegacyTagEnable>
#538: FILE: drivers/scsi/BusLogic.h:861:
+	bool LegacyTagEnable:1;	/* Byte 17 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <TargetExists>
#553: FILE: drivers/scsi/BusLogic.h:936:
+	bool TargetExists:1;

CHECK:CAMELCASE: Avoid CamelCase: <TaggedQueuingSupported>
#554: FILE: drivers/scsi/BusLogic.h:937:
+	bool TaggedQueuingSupported:1;

CHECK:CAMELCASE: Avoid CamelCase: <WideTransfersSupported>
#555: FILE: drivers/scsi/BusLogic.h:938:
+	bool WideTransfersSupported:1;

CHECK:CAMELCASE: Avoid CamelCase: <TaggedQueuingActive>
#556: FILE: drivers/scsi/BusLogic.h:939:
+	bool TaggedQueuingActive:1;

CHECK:CAMELCASE: Avoid CamelCase: <WideTransfersActive>
#557: FILE: drivers/scsi/BusLogic.h:940:
+	bool WideTransfersActive:1;

CHECK:CAMELCASE: Avoid CamelCase: <CommandSuccessfulFlag>
#558: FILE: drivers/scsi/BusLogic.h:941:
+	bool CommandSuccessfulFlag:1;

CHECK:CAMELCASE: Avoid CamelCase: <TargetInfoReported>
#559: FILE: drivers/scsi/BusLogic.h:942:
+	bool TargetInfoReported:1;

CHECK:CAMELCASE: Avoid CamelCase: <Present>
#568: FILE: drivers/scsi/BusLogic.h:989:
+	bool Present;		/* Byte 4 */

CHECK:CAMELCASE: Avoid CamelCase: <HostSoftReset>
#587: FILE: drivers/scsi/BusLogic.h:1001:
+	bool HostSoftReset:1;		/* Byte 20 Bit 2 */

CHECK:CAMELCASE: Avoid CamelCase: <ReportDataUnderrun>
#591: FILE: drivers/scsi/BusLogic.h:1005:
+	bool ReportDataUnderrun:1;	/* Byte 20 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <ExtendedLUNSupport>
#634: FILE: drivers/scsi/BusLogic.h:1051:
+	bool ExtendedLUNSupport:1;

CHECK:CAMELCASE: Avoid CamelCase: <TerminationInfoValid>
#635: FILE: drivers/scsi/BusLogic.h:1052:
+	bool TerminationInfoValid:1;

CHECK:CAMELCASE: Avoid CamelCase: <BounceBuffersRequired>
#638: FILE: drivers/scsi/BusLogic.h:1055:
+	bool BounceBuffersRequired:1;

CHECK:CAMELCASE: Avoid CamelCase: <StrictRoundRobinModeSupport>
#639: FILE: drivers/scsi/BusLogic.h:1056:
+	bool StrictRoundRobinModeSupport:1;

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterInitialized>
#642: FILE: drivers/scsi/BusLogic.h:1059:
+	bool HostAdapterInitialized:1;

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterExternalReset>
#643: FILE: drivers/scsi/BusLogic.h:1060:
+	bool HostAdapterExternalReset:1;

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterInternalError>
#644: FILE: drivers/scsi/BusLogic.h:1061:
+	bool HostAdapterInternalError:1;

CHECK:CAMELCASE: Avoid CamelCase: <ProcessCompletedCCBsActive>
#645: FILE: drivers/scsi/BusLogic.h:1062:
+	bool ProcessCompletedCCBsActive;

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterCommandCompleted>
#646: FILE: drivers/scsi/BusLogic.h:1063:
+	volatile bool HostAdapterCommandCompleted;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#646: FILE: drivers/scsi/BusLogic.h:1063:
+	volatile bool HostAdapterCommandCompleted;

CHECK:CAMELCASE: Avoid CamelCase: <TrmIOP>
#663: FILE: drivers/scsi/BusLogic.h:1144:
+	bool TrmIOP:1;		/* Byte 3 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <SftRe>
#676: FILE: drivers/scsi/BusLogic.h:1149:
+	bool SftRe:1;		/* Byte 7 Bit 0 */

CHECK:CAMELCASE: Avoid CamelCase: <CmdQue>
#677: FILE: drivers/scsi/BusLogic.h:1150:
+	bool CmdQue:1;		/* Byte 7 Bit 1 */

CHECK:CAMELCASE: Avoid CamelCase: <Linked>
#679: FILE: drivers/scsi/BusLogic.h:1152:
+	bool Linked:1;		/* Byte 7 Bit 3 */

CHECK:CAMELCASE: Avoid CamelCase: <Sync>
#680: FILE: drivers/scsi/BusLogic.h:1153:
+	bool Sync:1;		/* Byte 7 Bit 4 */

CHECK:CAMELCASE: Avoid CamelCase: <WBus16>
#681: FILE: drivers/scsi/BusLogic.h:1154:
+	bool WBus16:1;		/* Byte 7 Bit 5 */

CHECK:CAMELCASE: Avoid CamelCase: <WBus32>
#682: FILE: drivers/scsi/BusLogic.h:1155:
+	bool WBus32:1;		/* Byte 7 Bit 6 */

CHECK:CAMELCASE: Avoid CamelCase: <RelAdr>
#683: FILE: drivers/scsi/BusLogic.h:1156:
+	bool RelAdr:1;		/* Byte 7 Bit 7 */

CHECK:CAMELCASE: Avoid CamelCase: <FlashPoint_InterruptPending>
#714: FILE: drivers/scsi/FlashPoint.c:7643:
+extern bool FlashPoint_InterruptPending(FlashPoint_CardHandle_T);

CHECK:CAMELCASE: Avoid CamelCase: <FlashPoint_CardHandle_T>
#714: FILE: drivers/scsi/FlashPoint.c:7643:
+extern bool FlashPoint_InterruptPending(FlashPoint_CardHandle_T);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#714: FILE: drivers/scsi/FlashPoint.c:7643:
+extern bool FlashPoint_InterruptPending(FlashPoint_CardHandle_T);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FlashPoint_CardHandle_T' should also have an identifier name
#714: FILE: drivers/scsi/FlashPoint.c:7643:
+extern bool FlashPoint_InterruptPending(FlashPoint_CardHandle_T);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00265.commit.8d61035698039e679ea71b92390ad330c35d02b1 total: 0 errors, 5 warnings, 126 checks, 626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00265.commit.8d61035698039e679ea71b92390ad330c35d02b1 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
