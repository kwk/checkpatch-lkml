WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#31: 
set the inital system clock at boot.
        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: arch/i386/mach-default/setup-time.c:1:
+#include <linux/interrupt.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#102: FILE: arch/i386/mach-default/setup-time.c:4:
+static struct irqaction irq0  = { timer_interrupt, IRQF_DISABLED, CPU_MASK_NONE, "timer", NULL, NULL};

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/xen/core/time.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/xen/core/time.c:1:
+/* 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/xen/core/time.c:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#144: FILE: drivers/xen/core/time.c:26:
+	permitted_clock_jitter = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#147: FILE: drivers/xen/core/time.c:29:
+__setup("permitted_clock_jitter=", __permitted_clock_jitter);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: drivers/xen/core/time.c:31:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#174: FILE: drivers/xen/core/time.c:56:
+#define NS_PER_TICK (1000000000LL/HZ)
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#191: FILE: drivers/xen/core/time.c:73:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#196: FILE: drivers/xen/core/time.c:78:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#210: FILE: drivers/xen/core/time.c:92:
+	rmb();

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#221: FILE: drivers/xen/core/time.c:103:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#230: FILE: drivers/xen/core/time.c:112:
+#ifdef __i386__

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#231: FILE: drivers/xen/core/time.c:113:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#240: FILE: drivers/xen/core/time.c:122:
+		: "a" ((u32)delta), "1" ((u32)(delta >> 32)), "2" (mul_frac) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#242: FILE: drivers/xen/core/time.c:124:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#244: FILE: drivers/xen/core/time.c:126:
+		: "=a" (product) : "0" (delta), "d" ((u64)mul_frac) );

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: drivers/xen/core/time.c:137:
+	u64 now, delta;
+	rdtscll(now);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: drivers/xen/core/time.c:142:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#273: FILE: drivers/xen/core/time.c:155:
+		delta = delta_cpu =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#296: FILE: drivers/xen/core/time.c:178:
+	     unlikely(delta_cpu < -(s64)permitted_clock_jitter))
+	    && printk_ratelimit()) {

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#296: FILE: drivers/xen/core/time.c:178:
+	    && printk_ratelimit()) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: drivers/xen/core/time.c:179:
+		printk("Timer ISR/%d: Time went backwards: "

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: drivers/xen/core/time.c:180:
+		printk("Timer ISR/%d: Time went backwards: "
+		       "delta=%lld delta_cpu=%lld shadow=%lld "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#299: FILE: drivers/xen/core/time.c:181:
+		       "delta=%lld delta_cpu=%lld shadow=%lld "
+		       "off=%lld processed=%lld cpu_processed=%lld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: drivers/xen/core/time.c:187:
+			printk(" %d: %lld\n", i,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stolen > 0'
#320: FILE: drivers/xen/core/time.c:202:
+	if ((stolen > 0) && (delta_cpu > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#320: FILE: drivers/xen/core/time.c:202:
+	if ((stolen > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'blocked > 0'
#335: FILE: drivers/xen/core/time.c:217:
+	if ((blocked > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#335: FILE: drivers/xen/core/time.c:217:
+	if ((blocked > 0) && (delta_cpu > 0)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#367: FILE: drivers/xen/core/time.c:249:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#370: FILE: drivers/xen/core/time.c:252:
+		rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#401: FILE: drivers/xen/core/time.c:283:
+	struct vcpu_time_info *info;
+	info = &HYPERVISOR_shared_info->vcpu_info[0].time;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: drivers/xen/core/time.c:318:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#440: FILE: drivers/xen/core/time.c:322:
+extern void (*late_time_init)(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#443: FILE: drivers/xen/core/time.c:325:
+	printk(KERN_DEBUG "installing Xen timer for CPU 0\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#446: FILE: drivers/xen/core/time.c:328:
+		bind_virq_to_irqhandler(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#453: FILE: drivers/xen/core/time.c:335:
+	BUG_ON(per_cpu(timer_irq, 0) < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#466: FILE: drivers/xen/core/time.c:348:
+	printk(KERN_INFO "Xen reported: %u.%03u MHz processor.\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#485: FILE: include/asm-i386/mach-xen/do_timer.h:1:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#492: FILE: include/asm-i386/mach-xen/mach_time.h:1:
+#ifndef _MACH_TIME_H

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56366.commit.1f03a77090a77fd1cd75cf40f5e36a1c85bb337c total: 3 errors, 23 warnings, 17 checks, 426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56366.commit.1f03a77090a77fd1cd75cf40f5e36a1c85bb337c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
