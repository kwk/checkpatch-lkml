WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#33: 
will be using (this is mainly neccessary for the Pentium 4 chips as they
                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#39: 
Signed-off-by:  Don Zickus <dzickus@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#63: FILE: arch/x86_64/kernel/nmi.c:36:
+static DEFINE_PER_CPU(unsigned, perfctr_nmi_owner);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#64: FILE: arch/x86_64/kernel/nmi.c:37:
+static DEFINE_PER_CPU(unsigned, evntsel_nmi_owner[2]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#107: FILE: arch/x86_64/kernel/nmi.c:136:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: arch/x86_64/kernel/nmi.c:147:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: arch/x86_64/kernel/nmi.c:157:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: arch/x86_64/kernel/nmi.c:169:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#150: FILE: arch/x86_64/kernel/nmi.c:179:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: arch/x86_64/kernel/nmi.c:191:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#284: FILE: arch/x86_64/kernel/nmi.c:684:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#285: FILE: arch/x86_64/kernel/nmi.c:685:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#286: FILE: arch/x86_64/kernel/nmi.c:686:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#287: FILE: arch/x86_64/kernel/nmi.c:687:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#288: FILE: arch/x86_64/kernel/nmi.c:688:
+EXPORT_SYMBOL(release_evntsel_nmi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/asm-x86_64/nmi.h:59:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#301: FILE: include/asm-x86_64/nmi.h:59:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/asm-x86_64/nmi.h:60:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#302: FILE: include/asm-x86_64/nmi.h:60:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/asm-x86_64/nmi.h:61:
+extern int reserve_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#303: FILE: include/asm-x86_64/nmi.h:61:
+extern int reserve_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/asm-x86_64/nmi.h:62:
+extern void release_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#304: FILE: include/asm-x86_64/nmi.h:62:
+extern void release_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/asm-x86_64/nmi.h:63:
+extern int reserve_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#305: FILE: include/asm-x86_64/nmi.h:63:
+extern int reserve_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/asm-x86_64/nmi.h:64:
+extern void release_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#306: FILE: include/asm-x86_64/nmi.h:64:
+extern void release_evntsel_nmi(unsigned int);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#379: FILE: arch/i386/kernel/nmi.c:151:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#390: FILE: arch/i386/kernel/nmi.c:162:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#400: FILE: arch/i386/kernel/nmi.c:172:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#412: FILE: arch/i386/kernel/nmi.c:184:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#422: FILE: arch/i386/kernel/nmi.c:194:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#434: FILE: arch/i386/kernel/nmi.c:206:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

ERROR:SPACING: space required before the open parenthesis '('
#574: FILE: arch/i386/kernel/nmi.c:578:
+			if(!setup_p6_watchdog())

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#584: FILE: arch/i386/kernel/nmi.c:734:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#585: FILE: arch/i386/kernel/nmi.c:735:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#586: FILE: arch/i386/kernel/nmi.c:736:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#587: FILE: arch/i386/kernel/nmi.c:737:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#588: FILE: arch/i386/kernel/nmi.c:738:
+EXPORT_SYMBOL(release_evntsel_nmi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#600: FILE: include/asm-i386/nmi.h:28:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#600: FILE: include/asm-i386/nmi.h:28:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#601: FILE: include/asm-i386/nmi.h:29:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#601: FILE: include/asm-i386/nmi.h:29:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#602: FILE: include/asm-i386/nmi.h:30:
+extern int reserve_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#602: FILE: include/asm-i386/nmi.h:30:
+extern int reserve_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#603: FILE: include/asm-i386/nmi.h:31:
+extern void release_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#603: FILE: include/asm-i386/nmi.h:31:
+extern void release_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#604: FILE: include/asm-i386/nmi.h:32:
+extern int reserve_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#604: FILE: include/asm-i386/nmi.h:32:
+extern int reserve_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#605: FILE: include/asm-i386/nmi.h:33:
+extern void release_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#605: FILE: include/asm-i386/nmi.h:33:
+extern void release_evntsel_nmi(unsigned int);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48989.commit.002caf6e09d3e5427014b1e1a0120df0b33e6ffb total: 1 errors, 38 warnings, 12 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.48989.commit.002caf6e09d3e5427014b1e1a0120df0b33e6ffb has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
