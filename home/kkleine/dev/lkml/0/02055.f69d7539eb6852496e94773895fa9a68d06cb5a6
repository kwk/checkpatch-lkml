WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> We noticed high interrupt hold off times while running some memory intensive

WARNING:REPEATED_WORD: Possible repeated word: 'and'
#40: 
> and and touching each and every page and returning.  Each of the process is

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#158: FILE: mm/swap.c:177:
+	BUG_ON(page_zone(page) != zone);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: mm/swap.c:181:
+		BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: mm/swap.c:234:
+		struct page *page = pb->pages[pos];
+		if (page && cmpxchg(&pb->pages[pos], page, NULL) == page) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmpxchg"
#235: FILE: mm/swap.c:254:
+	if (unlikely(cmpxchg(&pb->pages[pos], NULL, page) != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: mm/swap.c:270:
+	if (__pagebuf_size(pb) > PAGEBUF_SIZE/2 &&
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: mm/swap.c:271:
+	if (__pagebuf_size(pb) > PAGEBUF_SIZE/2 &&
+			spin_trylock_irq(&zone->lock))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#376: FILE: mm/internal.h:40:
+extern void __free_cache_page(struct zone *zone, struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#389: FILE: mm/page_alloc.c:560:
+	BUG_ON(PageCompound(page));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: mm/page_alloc.c:568:
+		debug_check_no_locks_freed(page_address(page),PAGE_SIZE);
 		                                             ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.02055.commit.f69d7539eb6852496e94773895fa9a68d06cb5a6 total: 1 errors, 6 warnings, 4 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.02055.commit.f69d7539eb6852496e94773895fa9a68d06cb5a6 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
