CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#144: FILE: fs/ntfs/aops.c:978:
+	page_is_dirty = rec_is_dirty = false;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#232: FILE: fs/ntfs/attrib.c:103:
+		ctx_is_temporary = ctx_needs_reset = true;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#531: FILE: fs/ntfs/collate.h:29:
+static inline bool ntfs_is_collation_rule_supported(COLLATION_RULE cr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: fs/ntfs/logfile.c:51:
+static bool ntfs_check_restart_page_header(struct inode *vi,
 		RESTART_PAGE_HEADER *rp, s64 pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: fs/ntfs/logfile.c:272:
+static bool ntfs_check_log_client_array(struct inode *vi,
 		RESTART_PAGE_HEADER *rp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: fs/ntfs/logfile.c:296:
+	for (idx_is_first = true; idx != LOGFILE_NO_CLIENT_CPU; nr_clients--,
 			idx = le16_to_cpu(cr->next_client)) {

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1227: FILE: fs/ntfs/logfile.c:471:
+ * Check the $LogFile journal for consistency and return 'true' if it is

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1304: FILE: fs/ntfs/logfile.c:663:
+ * Analyze the $LogFile journal and return 'true' if it indicates the volume was

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1355: FILE: fs/ntfs/logfile.c:718:
+ * Empty the contents of the $LogFile journal @log_vi and return 'true' on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1392: FILE: fs/ntfs/logfile.h:299:
+extern bool ntfs_check_logfile(struct inode *log_vi,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: fs/ntfs/logfile.h:300:
+extern bool ntfs_check_logfile(struct inode *log_vi,
 		RESTART_PAGE_HEADER **rp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1396: FILE: fs/ntfs/logfile.h:302:
+extern bool ntfs_is_logfile_clean(struct inode *log_vi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: fs/ntfs/logfile.h:303:
+extern bool ntfs_is_logfile_clean(struct inode *log_vi,
 		const RESTART_PAGE_HEADER *rp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1400: FILE: fs/ntfs/logfile.h:305:
+extern bool ntfs_empty_logfile(struct inode *log_vi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1503: FILE: fs/ntfs/mft.c:926:
+bool ntfs_may_write_mft_record(ntfs_volume *vol, const unsigned long mft_no,
 		const MFT_RECORD *m, ntfs_inode **locked_ni)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1657: FILE: fs/ntfs/mft.h:114:
+extern bool ntfs_may_write_mft_record(ntfs_volume *vol,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: fs/ntfs/mft.h:115:
+extern bool ntfs_may_write_mft_record(ntfs_volume *vol,
 		const unsigned long mft_no, const MFT_RECORD *m,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1670: FILE: fs/ntfs/ntfs.h:108:
+extern bool ntfs_are_names_equal(const ntfschar *s1, size_t s1_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1671: FILE: fs/ntfs/ntfs.h:109:
+extern bool ntfs_are_names_equal(const ntfschar *s1, size_t s1_len,
 		const ntfschar *s2, size_t s2_len,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1725: FILE: fs/ntfs/quota.h:31:
+extern bool ntfs_mark_quotas_out_of_date(ntfs_volume *vol);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1744: FILE: fs/ntfs/runlist.c:156:
+static inline bool ntfs_are_rl_mergeable(runlist_element *dst,
 		runlist_element *src)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1968: FILE: fs/ntfs/super.c:173:
+		else NTFS_GETOPT_WITH_DEFAULT("sloppy", sloppy, true)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2081: FILE: fs/ntfs/super.c:555:
+static bool is_boot_sector_ntfs(const struct super_block *sb,
+		const NTFS_BOOT_SECTOR *b, const bool silent)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2285: FILE: fs/ntfs/super.c:1187:
+static bool load_and_check_logfile(ntfs_volume *vol,
 		RESTART_PAGE_HEADER **rp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2615: FILE: fs/ntfs/unistr.c:69:
+bool ntfs_are_names_equal(const ntfschar *s1, size_t s1_len,
 		const ntfschar *s2, size_t s2_len, const IGNORE_CASE_BOOL ic,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2670: FILE: fs/ntfs/usnjrnl.h:201:
+extern bool ntfs_stamp_usnjrnl(ntfs_volume *vol);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43824.commit.52dc65468df7adf77d3f390d3569ae122f8af13e total: 2 errors, 3 warnings, 21 checks, 2278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43824.commit.52dc65468df7adf77d3f390d3569ae122f8af13e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
