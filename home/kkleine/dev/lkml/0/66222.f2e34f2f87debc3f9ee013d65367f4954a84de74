WARNING:REPEATED_WORD: Possible repeated word: 'the'
#126: FILE: include/linux/radix-tree.h:91:
+ * - any function _modifying_ the the tree or tags (inserting or deleting

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#129: FILE: include/linux/radix-tree.h:94:
+ * - any function _reading_ the the tree or tags (looking up items or tags,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#168: FILE: include/linux/radix-tree.h:132:
 }
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
#225: FILE: lib/radix-tree.c:559:
+	if (node == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
#242: FILE: lib/radix-tree.c:574:
+		if (node == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slot->slots[i]"
#275: FILE: lib/radix-tree.c:615:
+			if (slot->slots[i] != NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: lib/radix-tree.c:721:
+	shift = (height-1) * RADIX_TREE_MAP_SHIFT;
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#336: FILE: lib/radix-tree.c:724:
+		unsigned long i = (index >> shift) & RADIX_TREE_MAP_MASK ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: lib/radix-tree.c:745:
+					struct radix_tree_node *node = slot->slots[j];
+					if (node) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#369: FILE: lib/radix-tree.c:747:
+						if (nr_found == max_items)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#378: FILE: lib/radix-tree.c:755:
+		if (slot == NULL);
+			break;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#378: FILE: lib/radix-tree.c:755:
+		if (slot == NULL);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#378: FILE: lib/radix-tree.c:755:
+		if (slot == NULL);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.66222.commit.f2e34f2f87debc3f9ee013d65367f4954a84de74 total: 1 errors, 6 warnings, 6 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.66222.commit.f2e34f2f87debc3f9ee013d65367f4954a84de74 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
