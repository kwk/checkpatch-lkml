ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#38: FILE: drivers/net/cxgb3/sge.c

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#38: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: drivers/net/cxgb3/sge.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#75: FILE: drivers/net/cxgb3/sge.c:33:
+/*
+ * Period of the Tx buffer reclaim timer.  This timer does not need to run

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#84: FILE: drivers/net/cxgb3/sge.c:42:
+/*
+ * Types of Tx queues in each queue set.  Order here matters, do not change.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#130: FILE: drivers/net/cxgb3/sge.c:88:
+/*
+ * Maps a number of flits to the number of Tx descriptors that can hold them.

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#188: FILE: drivers/net/cxgb3/sge.c:146:
+ *	Returns true if the platfrom needs sk_buff unmapping.  The compiler
   	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#189: FILE: drivers/net/cxgb3/sge.c:147:
+ *	optimizes away unecessary code if this returns true.
   	               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#194: FILE: drivers/net/cxgb3/sge.c:152:
+	 * This structure is used to tell if the platfrom needs buffer
 	                                         ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#194: FILE: drivers/net/cxgb3/sge.c:152:
+	/*
+	 * This structure is used to tell if the platfrom needs buffer

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/net/cxgb3/sge.c:333:
+	d->addr_hi = cpu_to_be32((u64) mapping >> 32);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#376: FILE: drivers/net/cxgb3/sge.c:334:
+	wmb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: drivers/net/cxgb3/sge.c:429:
+			size_t sw_size, dma_addr_t * phys, void *metadata)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#596: FILE: drivers/net/cxgb3/sge.c:554:
+	BUG_ON(n >= ARRAY_SIZE(flit_desc_map));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#625: FILE: drivers/net/cxgb3/sge.c:583:
+		if (likely(skb != NULL)) {
[...]
+		} else if (!drop_thres)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#625: FILE: drivers/net/cxgb3/sge.c:583:
+		if (likely(skb != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:INDENTED_LABEL: labels should not be indented
#638: FILE: drivers/net/cxgb3/sge.c:596:
+	      recycle:

WARNING:INDENTED_LABEL: labels should not be indented
#646: FILE: drivers/net/cxgb3/sge.c:604:
+      use_orig_buf:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/net/cxgb3/sge.c:634:
+ * ^IReturns the number of Tx descriptors needed for the given Ethernet$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: drivers/net/cxgb3/sge.c:635:
+ * ^Ipacket.  Ethernet packets require addition of WR and CPL headers.$

WARNING:MEMORY_BARRIER: memory barrier without comment
#813: FILE: drivers/net/cxgb3/sge.c:771:
+		wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#858: FILE: drivers/net/cxgb3/sge.c:816:
+		wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#926: FILE: drivers/net/cxgb3/sge.c:884:
+			wmb();

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#963: FILE: drivers/net/cxgb3/sge.c:921:
+	/*
+	 * The chip min packet length is 9 octets but play safe and reject

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1027: FILE: drivers/net/cxgb3/sge.c:985:
+	/*
+	 * We do not use Tx completion interrupts to free DMAd Tx packets.

WARNING:TYPO_SPELLING: 'performamce' may be misspelled - perhaps 'performance'?
#1028: FILE: drivers/net/cxgb3/sge.c:986:
+	 * This is good for performamce but means that we rely on new Tx
 	                    ^^^^^^^^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1079: FILE: drivers/net/cxgb3/sge.c:1037:
+	wmb();

WARNING:INDENTED_LABEL: labels should not be indented
#1109: FILE: drivers/net/cxgb3/sge.c:1067:
+	      addq_exit:__skb_queue_tail(&q->sendq, skb);

WARNING:INDENTED_LABEL: labels should not be indented
#1175: FILE: drivers/net/cxgb3/sge.c:1133:
+      again:reclaim_completed_tx_imm(q);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1194: FILE: drivers/net/cxgb3/sge.c:1152:
+	wmb();

WARNING:INDENTED_LABEL: labels should not be indented
#1214: FILE: drivers/net/cxgb3/sge.c:1172:
+      again:reclaim_completed_tx_imm(q);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1217: FILE: drivers/net/cxgb3/sge.c:1175:
+	while (q->in_use < q->size && (skb = __skb_dequeue(&q->sendq)) != NULL) {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1289: FILE: drivers/net/cxgb3/sge.c:1247:
+ * ^IReturns the number of Tx descriptors needed for the given offload$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1290: FILE: drivers/net/cxgb3/sge.c:1248:
+ * ^Ipacket.  These packets are already fully constructed.$

WARNING:INDENTED_LABEL: labels should not be indented
#1320: FILE: drivers/net/cxgb3/sge.c:1278:
+      again:reclaim_completed_tx(adap, q);

WARNING:INDENTED_LABEL: labels should not be indented
#1361: FILE: drivers/net/cxgb3/sge.c:1319:
+      again:reclaim_completed_tx(adap, q);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1457: FILE: drivers/net/cxgb3/sge.c:1415:
+	skb->next = skb->prev = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#1458: FILE: drivers/net/cxgb3/sge.c:1416:
+	if (q->rx_tail)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1460: FILE: drivers/net/cxgb3/sge.c:1418:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1523: FILE: drivers/net/cxgb3/sge.c:1481:
+		q->rx_head = q->rx_tail = NULL;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1563: FILE: drivers/net/cxgb3/sge.c:1521:
+ *^Iqueue. ^IReturns the index of the next available slot in the bundle.$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1570: FILE: drivers/net/cxgb3/sge.c:1528:
+	skb->mac.raw = skb->nh.raw = skb->h.raw = skb->data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1572: FILE: drivers/net/cxgb3/sge.c:1530:
+	if (rq->polling) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1579: FILE: drivers/net/cxgb3/sge.c:1537:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1665: FILE: drivers/net/cxgb3/sge.c:1623:
+	if (pi->rx_csum_offload && p->csum_valid && p->csum == 0xffff &&
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1669: FILE: drivers/net/cxgb3/sge.c:1627:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1672: FILE: drivers/net/cxgb3/sge.c:1630:
+	if (unlikely(p->vlan_valid)) {
[...]
+	} else if (rq->polling)
[...]
+	else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1833: FILE: drivers/net/cxgb3/sge.c:1791:
+		if (unlikely(flags & F_RSPD_ASYNC_NOTIF)) {
[...]
+		} else if (flags & F_RSPD_IMM_DATA_VALID) {
[...]
+		} else if ((len = ntohl(r->len_cq)) != 0) {
[...]
+		} else
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#1845: FILE: drivers/net/cxgb3/sge.c:1803:
+			      no_mem:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1853: FILE: drivers/net/cxgb3/sge.c:1811:
+		} else if ((len = ntohl(r->len_cq)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#1867: FILE: drivers/net/cxgb3/sge.c:1825:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#1888: FILE: drivers/net/cxgb3/sge.c:1846:
+		if (likely(skb != NULL)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1889: FILE: drivers/net/cxgb3/sge.c:1847:
+			if (eth)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1891: FILE: drivers/net/cxgb3/sge.c:1849:
+			else {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1946: FILE: drivers/net/cxgb3/sge.c:1904:
+	/*
+	 * Because we don't atomically flush the following write it is

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1963: FILE: drivers/net/cxgb3/sge.c:1921:
+/*
+ * Returns true if the device is already scheduled for polling.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2058: FILE: drivers/net/cxgb3/sge.c:2016:
+/*
+ * The MSI-X interrupt handler for an SGE response queue for the non-NAPI case

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2077: FILE: drivers/net/cxgb3/sge.c:2035:
+/*
+ * The MSI-X interrupt handler for an SGE response queue for the NAPI case

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2087: FILE: drivers/net/cxgb3/sge.c:2045:
+	BUG_ON(napi_is_scheduled(qs->netdev));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2096: FILE: drivers/net/cxgb3/sge.c:2054:
+/*
+ * The non-NAPI MSI interrupt handler.  This needs to handle data events from

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2143: FILE: drivers/net/cxgb3/sge.c:2101:
+/*
+ * The MSI interrupt handler for the NAPI case (i.e., response queues serviced

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2169: FILE: drivers/net/cxgb3/sge.c:2127:
+/*
+ * A helper function that processes responses and issues GTS.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2183: FILE: drivers/net/cxgb3/sge.c:2141:
+/*
+ * The legacy INTx interrupt handler.  This needs to handle data events from

CHECK:BRACES: braces {} should be used on all arms of this statement
#2201: FILE: drivers/net/cxgb3/sge.c:2159:
+	if (likely(w0 | w1)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2212: FILE: drivers/net/cxgb3/sge.c:2170:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2220: FILE: drivers/net/cxgb3/sge.c:2178:
+/*
+ * Interrupt handler for legacy INTx interrupts for T3B-based cards.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2254: FILE: drivers/net/cxgb3/sge.c:2212:
+/*
+ * NAPI interrupt handler for legacy INTx interrupts for T3B-based cards.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2281: FILE: drivers/net/cxgb3/sge.c:2239:
+		BUG_ON(napi_is_scheduled(dev));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2288: FILE: drivers/net/cxgb3/sge.c:2246:
+		BUG_ON(napi_is_scheduled(dev));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2306: FILE: drivers/net/cxgb3/sge.c:2264:
+intr_handler_t t3_intr_handler(struct adapter * adap, int polling)

WARNING:SPLIT_STRING: quoted string split across lines
#2335: FILE: drivers/net/cxgb3/sge.c:2293:
+		CH_ALERT("%s: packet delivered to disabled response queue "
+			 "(0x%x)\n", adapter->name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2369: FILE: drivers/net/cxgb3/sge.c:2327:
+	spinlock_t *lock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2462: FILE: drivers/net/cxgb3/sge.c:2420:
+		/*
+		 * The control queue always uses immediate data so does not

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2485: FILE: drivers/net/cxgb3/sge.c:2443:
+	q->fl[0].gen = q->fl[1].gen = 1;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2557: FILE: drivers/net/cxgb3/sge.c:2515:
+	/*
+	 * We use atalk_ptr as a backpointer to a qset.  In case a device is

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!netdev->atalk_ptr"
#2561: FILE: drivers/net/cxgb3/sge.c:2519:
+	if (netdev->atalk_ptr == NULL)

WARNING:INDENTED_LABEL: labels should not be indented
#2574: FILE: drivers/net/cxgb3/sge.c:2532:
+      err_unlock:

WARNING:INDENTED_LABEL: labels should not be indented
#2576: FILE: drivers/net/cxgb3/sge.c:2534:
+      err:

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2684: FILE: drivers/net/cxgb3/sge.c:2642:
+void __devinit t3_sge_prep(struct adapter *adap, struct sge_params *p)

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#2745: FILE: drivers/net/cxgb3/sge_defs.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2750: FILE: drivers/net/cxgb3/sge_defs.h:1:
+/*

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12583.commit.3671e61fb10aee0d154aa4b96114753253067086 total: 5 errors, 52 warnings, 24 checks, 2952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12583.commit.3671e61fb10aee0d154aa4b96114753253067086 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
