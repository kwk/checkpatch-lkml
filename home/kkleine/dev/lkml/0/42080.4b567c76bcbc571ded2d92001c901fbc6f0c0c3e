WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: fs/unionfs/sioq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: fs/unionfs/sioq.c:33:
+	printk(KERN_ERR "create_workqueue failed %d\n", err);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#107: FILE: fs/unionfs/sioq.c:61:
+				args->u.create.mode, args->u.create.nd);
 				                                    ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/unionfs/sioq.c:61:
+	args->err = vfs_create(args->u.create.parent, args->u.create.dentry,
+				args->u.create.mode, args->u.create.nd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: fs/unionfs/sioq.c:70:
+	args->err = vfs_mkdir(args->u.mkdir.parent, args->u.mkdir.dentry,
+				args->u.mkdir.mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/unionfs/sioq.c:79:
+	args->err = vfs_mknod(args->u.mknod.parent, args->u.mknod.dentry,
+				args->u.mknod.mode, args->u.mknod.dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#128: FILE: fs/unionfs/sioq.c:82:
+}
+void __unionfs_symlink(void *data)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#144: FILE: fs/unionfs/sioq.c:98:
+void __delete_whiteouts(void *data) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: fs/unionfs/sioq.c:112:
+	args->ret = lookup_one_len(UNIONFS_DIR_OPAQUE, args->u.isopaque.dentry,
+				sizeof(UNIONFS_DIR_OPAQUE) - 1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: fs/unionfs/sioq.h:1:
+#ifndef _SIOQ_H

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#182: FILE: fs/unionfs/sioq.h:18:
+	struct nameidata *nd;
 	                  ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: fs/unionfs/sioq.h:46:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#212: FILE: fs/unionfs/sioq.h:48:
+struct sioq_args {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: fs/unionfs/sioq.h:66:
+extern void fin_sioq(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: fs/unionfs/sioq.h:67:
+extern void run_sioq(void (*func)(void *arg), struct sioq_args *args);

WARNING:TYPO_SPELLING: 'privledge' may be misspelled - perhaps 'privilege'?
#233: FILE: fs/unionfs/sioq.h:69:
+/* Extern definitions for our privledge escalation helpers */
                               ^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: fs/unionfs/sioq.h:70:
+extern void __unionfs_create(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: fs/unionfs/sioq.h:71:
+extern void __unionfs_mkdir(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: fs/unionfs/sioq.h:72:
+extern void __unionfs_mknod(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: fs/unionfs/sioq.h:73:
+extern void __unionfs_symlink(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: fs/unionfs/sioq.h:74:
+extern void __unionfs_unlink(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: fs/unionfs/sioq.h:75:
+extern void __delete_whiteouts(void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: fs/unionfs/sioq.h:76:
+extern void __is_opaque_dir(void *data);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42080.commit.4b567c76bcbc571ded2d92001c901fbc6f0c0c3e total: 1 errors, 6 warnings, 16 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42080.commit.4b567c76bcbc571ded2d92001c901fbc6f0c0c3e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
