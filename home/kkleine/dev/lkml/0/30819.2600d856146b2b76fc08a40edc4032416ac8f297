ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: arch/s390/kernel/time.c:89:
+#define s390_do_profile()	do { ; } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#250: FILE: arch/s390/kernel/time.c:89:
+#define s390_do_profile()	do { ; } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#280: FILE: arch/s390/kernel/time.c:222:
+	BUG_ON(!in_interrupt());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: arch/s390/kernel/time.c:291:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#331: FILE: arch/s390/kernel/traps.c:64:
+extern void pfault_interrupt(__u16 error_code);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#412: FILE: drivers/s390/char/ctrlchar.c:23:
+	handle_sysrq(ctrlchar_sysrq_key, (struct tty_struct *) tty);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#520: FILE: drivers/s390/cio/chsc.c:208:
+			if ((sch->schib.pmcw.pim & mask) &&
[...]
 			    new_channel_path(chpid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->schib.pmcw.chpid[j] == chpid->id'
#533: FILE: drivers/s390/cio/chsc.c:229:
+		if ((sch->schib.pmcw.pim & mask) &&
+		    (sch->schib.pmcw.chpid[j] == chpid->id))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#559: FILE: drivers/s390/cio/chsc.c:637:
+	for (i=0; i<8; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#559: FILE: drivers/s390/cio/chsc.c:637:
+	for (i=0; i<8; i++) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->schib.pmcw.chpid[i] == chp->id'
#561: FILE: drivers/s390/cio/chsc.c:639:
+		if ((sch->schib.pmcw.pim & mask) &&
+		    (sch->schib.pmcw.chpid[i] == chp->id)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#666: FILE: include/asm-s390/hardirq.h:35:
+extern void account_ticks(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#670: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#675: FILE: include/asm-s390/irq_regs.h:1:
+#include <asm-generic/irq_regs.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30819.commit.2600d856146b2b76fc08a40edc4032416ac8f297 total: 3 errors, 6 warnings, 5 checks, 489 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30819.commit.2600d856146b2b76fc08a40edc4032416ac8f297 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
