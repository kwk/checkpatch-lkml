ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: kernel/power/atomic_copy.c:80:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: kernel/power/atomic_copy.c:90:
+static unsigned long __suspend_get_next_bit_on(dyn_pageflags_t bitmap,
+		int *zone_num, long counter)

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: kernel/power/atomic_copy.c:94:
+	int reset_ul_ptr = 1;
+	BUG_ON(*zone_num == num_zones);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#57: FILE: kernel/power/atomic_copy.c:94:
+	BUG_ON(*zone_num == num_zones);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: kernel/power/atomic_copy.c:99:
+^I^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: kernel/power/atomic_copy.c:113:
+			while (!zone_nosave[*zone_num].end_pfn &&
+					*zone_num < num_zones)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: kernel/power/atomic_copy.c:115:
+^I^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: kernel/power/atomic_copy.c:120:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: kernel/power/atomic_copy.c:127:
+			ul_ptr = PAGE_UL_PTR(bitmap, *zone_num,
+				(counter - zone_nosave[*zone_num].start_pfn));

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: kernel/power/atomic_copy.c:133:
+	} while(!test_bit(PAGEBIT(counter), ul_ptr));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64327.commit.ece38eb5bb606e4a7f1ef794a46ff081f5a12e49 total: 4 errors, 2 warnings, 4 checks, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64327.commit.ece38eb5bb606e4a7f1ef794a46ff081f5a12e49 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
