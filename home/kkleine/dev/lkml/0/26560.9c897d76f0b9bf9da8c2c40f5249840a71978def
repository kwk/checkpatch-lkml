WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#80: FILE: arch/alpha/mm/fault.c:111:
+	if (!mm || in_atomic())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#93: FILE: arch/arm/mm/fault.c:233:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#106: FILE: arch/arm26/mm/fault.c:218:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#119: FILE: arch/cris/mm/fault.c:235:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#132: FILE: arch/frv/mm/fault.c:81:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#145: FILE: arch/m68k/mm/fault.c:102:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#158: FILE: arch/parisc/mm/fault.c:155:
+	if (in_atomic() || !mm)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#171: FILE: arch/sh64/mm/fault.c:157:
+	if (in_atomic() || !mm)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26560.commit.9c897d76f0b9bf9da8c2c40f5249840a71978def total: 0 errors, 8 warnings, 0 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26560.commit.9c897d76f0b9bf9da8c2c40f5249840a71978def has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
