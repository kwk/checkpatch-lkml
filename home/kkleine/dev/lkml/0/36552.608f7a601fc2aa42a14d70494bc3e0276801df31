WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock*' should also have an identifier name
#73: FILE: net/ipv4/tcp.c:303:
+		void (*original_data_ready)(struct sock*, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#73: FILE: net/ipv4/tcp.c:303:
+		void (*original_data_ready)(struct sock*, int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: net/ipv4/tcp.c:309:
+int __tcp_splice_read(struct sock *sk, loff_t *ppos, struct pipe_inode_info *pipe,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: net/ipv4/tcp.c:311:
+int tcp_splice_data_recv(read_descriptor_t *rd_desc, struct sk_buff *skb,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#83: FILE: net/ipv4/tcp.c:313:
+void tcp_splice_data_ready(struct sock *sk, int flag);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#94: FILE: net/ipv4/tcp.c:525:
+/*
+ *  tcp_splice_read - splice data from TCP socket to a pipe

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#102: FILE: net/ipv4/tcp.c:533:
+ssize_t tcp_splice_read(struct socket *sock, loff_t *ppos, struct pipe_inode_info *pipe, size_t len, unsigned int flags)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: net/ipv4/tcp.c:550:
+	while(tss.len) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: net/ipv4/tcp.c:553:
+		if(ret < 0)

CHECK:BRACES: braces {} should be used on all arms of this statement
#122: FILE: net/ipv4/tcp.c:553:
+		if(ret < 0)
[...]
+		else if (!ret) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#141: FILE: net/ipv4/tcp.c:572:
+int __tcp_splice_read(struct sock *sk, loff_t *ppos, struct pipe_inode_info *pipe, size_t len, unsigned int flags, struct tcp_splice_state *tss)

CHECK:BRACES: braces {} should be used on all arms of this statement
#155: FILE: net/ipv4/tcp.c:586:
+	if (copied != 0) {
[...]
+	else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#156: FILE: net/ipv4/tcp.c:587:
+		if (flags & SPLICE_F_MORE) {
[...]
+		else if(flags & SPLICE_F_NONBLOCK)
[...]
+		else return copied;
[...]

ERROR:SPACING: space required before the open parenthesis '('
#161: FILE: net/ipv4/tcp.c:592:
+		else if(flags & SPLICE_F_NONBLOCK)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#161: FILE: net/ipv4/tcp.c:592:
+		}
+		else if(flags & SPLICE_F_NONBLOCK)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#163: FILE: net/ipv4/tcp.c:594:
+		else return copied;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#165: FILE: net/ipv4/tcp.c:596:
+	}
+	else

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#169: FILE: net/ipv4/tcp.c:600:
+int tcp_splice_data_recv(read_descriptor_t *rd_desc, struct sk_buff *skb, unsigned int offset, size_t len)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#172: FILE: net/ipv4/tcp.c:603:
+	/*
+	 * Restore TCP splice context from read_descriptor_t

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#182: FILE: net/ipv4/tcp.c:613:
+	/*
+	 * Restore splice context/ read_descriptor_t from sk->sk_user_data

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: net/ipv4/tcp.c:626:
+	if(tss->len == 0) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#201: FILE: net/ipv4/tcp.c:632:
+	}
+	else

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.36552.commit.608f7a601fc2aa42a14d70494bc3e0276801df31 total: 8 errors, 12 warnings, 3 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.36552.commit.608f7a601fc2aa42a14d70494bc3e0276801df31 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
