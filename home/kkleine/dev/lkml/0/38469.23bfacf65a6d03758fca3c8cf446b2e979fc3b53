WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
OpenPGP public key:              http://krystal.dyndns.org:8080/key/compudj.gpg

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#51: 
--- a/MAINTAINERS

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#59: FILE: MAINTAINERS:1745:
+P:	Mathieu Desnoyers
+M:	mathieu.desnoyers@polymtl.ca

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#62: FILE: MAINTAINERS:1748:
+W:	http://ltt.polymtl.ca
+S:	Maintained

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: ltt/ltt-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: ltt/ltt-core.c:5:
+ * ^I^IMathieu Desnoyers (mathieu.desnoyers@polymtl.ca)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: ltt/ltt-core.c:29:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#113: FILE: ltt/ltt-core.c:44:
+#include <asm/atomic.h>

WARNING:FUNCTION_ARGUMENTS: arguments for function declarations should follow identifier
#127: FILE: ltt/ltt-core.c:58:
+int ltt_filter_control_default

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: ltt/ltt-core.c:69:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#145: FILE: ltt/ltt-core.c:76:
+struct module *ltt_filter_control_owner = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#150: FILE: ltt/ltt-core.c:81:
+struct module *ltt_run_filter_owner = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: ltt/ltt-core.c:85:
+int (*ltt_statedump_functor)(struct ltt_trace_struct *trace) = $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#156: FILE: ltt/ltt-core.c:87:
+struct module *ltt_statedump_owner = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: ltt/ltt-core.c:88:
+^I^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: ltt/ltt-core.c:92:
+int ltt_module_register(enum ltt_module_function name, void *function,
+		struct module *owner)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: ltt/ltt-core.c:95:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: ltt/ltt-core.c:97:
+	 * active */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: ltt/ltt-core.c:98:
+	if(ltt_traces.num_active_traces) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#172: FILE: ltt/ltt-core.c:103:
+	switch(name) {
+		case LTT_FUNCTION_RUN_FILTER:
[...]
+		case LTT_FUNCTION_FILTER_CONTROL:
[...]
+		case LTT_FUNCTION_STATEDUMP:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: ltt/ltt-core.c:103:
+	switch(name) {

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: ltt/ltt-core.c:105:
+			if(ltt_run_filter_owner != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ltt_run_filter_owner"
#174: FILE: ltt/ltt-core.c:105:
+			if(ltt_run_filter_owner != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: ltt/ltt-core.c:113:
+			if(ltt_filter_control_owner != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ltt_filter_control_owner"
#182: FILE: ltt/ltt-core.c:113:
+			if(ltt_filter_control_owner != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: ltt/ltt-core.c:117:
+^I^I^Iltt_filter_control_functor = $

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: ltt/ltt-core.c:122:
+			if(ltt_statedump_owner != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ltt_statedump_owner"
#191: FILE: ltt/ltt-core.c:122:
+			if(ltt_statedump_owner != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: ltt/ltt-core.c:126:
+^I^I^Iltt_statedump_functor = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: ltt/ltt-core.c:137:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#210: FILE: ltt/ltt-core.c:141:
+	 * incremented when tracing is active. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: ltt/ltt-core.c:142:
+	BUG_ON(ltt_traces.num_active_traces);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#213: FILE: ltt/ltt-core.c:144:
+	switch(name) {
+		case LTT_FUNCTION_RUN_FILTER:
[...]
+		case LTT_FUNCTION_FILTER_CONTROL:
[...]
+		case LTT_FUNCTION_STATEDUMP:

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: ltt/ltt-core.c:144:
+	switch(name) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#227: FILE: ltt/ltt-core.c:158:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#229: FILE: ltt/ltt-core.c:160:
+EXPORT_SYMBOL_GPL(ltt_module_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#230: FILE: ltt/ltt-core.c:161:
+EXPORT_SYMBOL_GPL(ltt_module_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#249: FILE: ltt/ltt-core.c:180:
+EXPORT_SYMBOL_GPL(ltt_transport_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#250: FILE: ltt/ltt-core.c:181:
+EXPORT_SYMBOL_GPL(ltt_transport_unregister);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: ltt/ltt-core.c:183:
+
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#255: FILE: ltt/ltt-core.c:186:
+	switch(mode) {
+		case LTT_TRACE_NORMAL: return 0;
+		case LTT_TRACE_FLIGHT:
[...]
+		case LTT_TRACE_HYBRID:
[...]
+		default: return 0;

ERROR:SPACING: space required before the open parenthesis '('
#255: FILE: ltt/ltt-core.c:186:
+	switch(mode) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#258: FILE: ltt/ltt-core.c:189:
+			switch(chan) {
+				case LTT_CHANNEL_FACILITIES: return 0;
+				default: return 1;

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: ltt/ltt-core.c:189:
+			switch(chan) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#263: FILE: ltt/ltt-core.c:194:
+			switch(chan) {
+				case LTT_CHANNEL_CPU: return 1;
+				default: return 0;

ERROR:SPACING: space required before the open parenthesis '('
#263: FILE: ltt/ltt-core.c:194:
+			switch(chan) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: ltt/ltt-core.c:202:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: ltt/ltt-core.c:204:
+void ltt_write_trace_header(struct ltt_trace_struct *trace,
+		struct ltt_trace_header *header)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#280: FILE: ltt/ltt-core.c:211:
+	header->arch_size = sizeof(void*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#282: FILE: ltt/ltt-core.c:213:
+	switch(trace->mode) {
+		case LTT_TRACE_NORMAL:
[...]
+		case LTT_TRACE_FLIGHT:
[...]
+		case LTT_TRACE_HYBRID:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#282: FILE: ltt/ltt-core.c:213:
+	switch(trace->mode) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: ltt/ltt-core.c:226:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#303: FILE: ltt/ltt-core.c:234:
+	header->has_alignment = sizeof(void*);

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: ltt/ltt-core.c:263:
+	struct ltt_trace_struct *trace;
+	preempt_disable();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#343: FILE: ltt/ltt-core.c:274:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: ltt/ltt-core.c:276:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: ltt/ltt-core.c:280:
+	struct ltt_channel_buf_struct *ltt_buf = private;
+	wake_up_interruptible(&ltt_buf->write_wait);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#353: FILE: ltt/ltt-core.c:284:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#357: FILE: ltt/ltt-core.c:288:
+ * Returns a pointer to the trace structure, NULL if not found. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: ltt/ltt-core.c:292:
+	struct ltt_trace_struct *trace, *found=NULL;
 	                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: ltt/ltt-core.c:293:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: ltt/ltt-core.c:297:
+		if(compare == 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: ltt/ltt-core.c:302:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: ltt/ltt-core.c:308:
+static int _ltt_trace_create(char *trace_name,	enum trace_mode mode,
+				struct ltt_trace_struct *new_trace)

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: ltt/ltt-core.c:312:
+	if(_ltt_trace_find(trace_name) != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "_ltt_trace_find"
#381: FILE: ltt/ltt-core.c:312:
+	if(_ltt_trace_find(trace_name) != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#382: FILE: ltt/ltt-core.c:313:
+		printk(KERN_ERR "LTT : Trace %s already exists\n", trace_name);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#387: FILE: ltt/ltt-core.c:318:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#401: FILE: ltt/ltt-core.c:332:
+	for(i=0;i<NR_CPUS;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#402: FILE: ltt/ltt-core.c:333:
+		if(atomic_read(&ltt_chan->buf[i].events_lost))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: ltt/ltt-core.c:334:
+^I^I^Iprintk(KERN_ALERT $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#403: FILE: ltt/ltt-core.c:334:
+			printk(KERN_ALERT 

WARNING:SPLIT_STRING: quoted string split across lines
#405: FILE: ltt/ltt-core.c:336:
+				"LTT : %s : %d events lost "
+				"in %s channel (cpu %u).\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#409: FILE: ltt/ltt-core.c:340:
+		if(atomic_read(&ltt_chan->buf[i].corrupted_subbuffers))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: ltt/ltt-core.c:341:
+^I^I^Iprintk(KERN_ALERT $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#410: FILE: ltt/ltt-core.c:341:
+			printk(KERN_ALERT 

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: ltt/ltt-core.c:343:
+				"LTT : %s : %d corrupted subbuffers "
+				"in %s channel (cpu %u).\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#414: FILE: ltt/ltt-core.c:345:
+				atomic_read(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#438: FILE: ltt/ltt-core.c:369:
+	 * tracing... be warned. FIXME */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#441: FILE: ltt/ltt-core.c:372:
+	for(i=0;i<NR_CPUS;i++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#450: FILE: ltt/ltt-core.c:381:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: ltt/ltt-core.c:383:
+{^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#454: FILE: ltt/ltt-core.c:385:
+	unsigned int i;
+	for(i=0;i<NR_CPUS;i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#454: FILE: ltt/ltt-core.c:385:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#460: FILE: ltt/ltt-core.c:391:
+static inline int prepare_chan_size_num(unsigned *subbuf_size, unsigned *n_subbufs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#460: FILE: ltt/ltt-core.c:391:
+static inline int prepare_chan_size_num(unsigned *subbuf_size, unsigned *n_subbufs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: ltt/ltt-core.c:392:
+static inline int prepare_chan_size_num(unsigned *subbuf_size, unsigned *n_subbufs,
+	unsigned default_size, unsigned default_n_subbufs)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: ltt/ltt-core.c:392:
+	unsigned default_size, unsigned default_n_subbufs)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: ltt/ltt-core.c:392:
+	unsigned default_size, unsigned default_n_subbufs)

ERROR:SPACING: space required before the open parenthesis '('
#463: FILE: ltt/ltt-core.c:394:
+	if(*subbuf_size == 0) *subbuf_size = default_size;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#463: FILE: ltt/ltt-core.c:394:
+	if(*subbuf_size == 0) *subbuf_size = default_size;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: ltt/ltt-core.c:395:
+	if(*n_subbufs == 0) *n_subbufs = default_n_subbufs;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#464: FILE: ltt/ltt-core.c:395:
+	if(*n_subbufs == 0) *n_subbufs = default_n_subbufs;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#465: FILE: ltt/ltt-core.c:396:
+	*subbuf_size = (*subbuf_size + PAGE_SIZE-1)&PAGE_MASK;
 	                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#465: FILE: ltt/ltt-core.c:396:
+	*subbuf_size = (*subbuf_size + PAGE_SIZE-1)&PAGE_MASK;
 	                                           ^

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#468: FILE: ltt/ltt-core.c:399:
+	if(hweight32(*subbuf_size) != 1) return EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#468: FILE: ltt/ltt-core.c:399:
+	if(hweight32(*subbuf_size) != 1) return EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#468: FILE: ltt/ltt-core.c:399:
+	if(hweight32(*subbuf_size) != 1) return EINVAL;

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#469: FILE: ltt/ltt-core.c:400:
+	if(hweight32(*n_subbufs) != 1) return EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: ltt/ltt-core.c:400:
+	if(hweight32(*n_subbufs) != 1) return EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#469: FILE: ltt/ltt-core.c:400:
+	if(hweight32(*n_subbufs) != 1) return EINVAL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: ltt/ltt-core.c:406:
+static int ltt_trace_create(char *trace_name, char *trace_type,
+		enum trace_mode mode,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#476: FILE: ltt/ltt-core.c:407:
+		unsigned subbuf_size_low, unsigned n_subbufs_low,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#476: FILE: ltt/ltt-core.c:407:
+		unsigned subbuf_size_low, unsigned n_subbufs_low,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#477: FILE: ltt/ltt-core.c:408:
+		unsigned subbuf_size_med, unsigned n_subbufs_med,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#477: FILE: ltt/ltt-core.c:408:
+		unsigned subbuf_size_med, unsigned n_subbufs_med,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#478: FILE: ltt/ltt-core.c:409:
+		unsigned subbuf_size_high, unsigned n_subbufs_high)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#478: FILE: ltt/ltt-core.c:409:
+		unsigned subbuf_size_high, unsigned n_subbufs_high)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: ltt/ltt-core.c:415:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: ltt/ltt-core.c:416:
+	if(prepare_chan_size_num(&subbuf_size_low, &n_subbufs_low,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: ltt/ltt-core.c:417:
+	if(prepare_chan_size_num(&subbuf_size_low, &n_subbufs_low,
+		LTT_DEFAULT_SUBBUF_SIZE_LOW, LTT_DEFAULT_N_SUBBUFS_LOW))

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#487: FILE: ltt/ltt-core.c:418:
+		return EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: ltt/ltt-core.c:420:
+	if(prepare_chan_size_num(&subbuf_size_med, &n_subbufs_med,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: ltt/ltt-core.c:421:
+	if(prepare_chan_size_num(&subbuf_size_med, &n_subbufs_med,
+		LTT_DEFAULT_SUBBUF_SIZE_MED, LTT_DEFAULT_N_SUBBUFS_MED))

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#491: FILE: ltt/ltt-core.c:422:
+		return EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: ltt/ltt-core.c:424:
+	if(prepare_chan_size_num(&subbuf_size_high, &n_subbufs_high,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: ltt/ltt-core.c:425:
+	if(prepare_chan_size_num(&subbuf_size_high, &n_subbufs_high,
+		LTT_DEFAULT_SUBBUF_SIZE_HIGH, LTT_DEFAULT_N_SUBBUFS_HIGH))

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#495: FILE: ltt/ltt-core.c:426:
+		return EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#498: FILE: ltt/ltt-core.c:429:
+	if(!new_trace) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#499: FILE: ltt/ltt-core.c:430:
+		printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#499: FILE: ltt/ltt-core.c:430:
+	if(!new_trace) {
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: ltt/ltt-core.c:455:
+		printk(KERN_ERR	"LTT : Transport %s is not present.\n", trace_type);

ERROR:SPACING: space required before the open parenthesis '('
#528: FILE: ltt/ltt-core.c:459:
+	if(!try_module_get(transport->owner)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#530: FILE: ltt/ltt-core.c:461:
+		printk(KERN_ERR	"LTT : Can't lock transport module.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: ltt/ltt-core.c:477:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#560: FILE: ltt/ltt-core.c:491:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#560: FILE: ltt/ltt-core.c:491:
+	if(err != 0) {
+		goto facilities_error;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#567: FILE: ltt/ltt-core.c:498:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#567: FILE: ltt/ltt-core.c:498:
+	if(err != 0) {
+		goto interrupts_error;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#574: FILE: ltt/ltt-core.c:505:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#574: FILE: ltt/ltt-core.c:505:
+	if(err != 0) {
+		goto processes_error;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: ltt/ltt-core.c:512:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#581: FILE: ltt/ltt-core.c:512:
+	if(err != 0) {
+		goto modules_error;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#588: FILE: ltt/ltt-core.c:519:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#588: FILE: ltt/ltt-core.c:519:
+	if(err != 0) {
+		goto cpu_error;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#595: FILE: ltt/ltt-core.c:526:
+	if(err != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#595: FILE: ltt/ltt-core.c:526:
+	if(err != 0) {
+		goto network_error;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: ltt/ltt-core.c:529:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#611: FILE: ltt/ltt-core.c:542:
+	if(err != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: ltt/ltt-core.c:572:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#642: FILE: ltt/ltt-core.c:573:
+	if(trace == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trace"
#642: FILE: ltt/ltt-core.c:573:
+	if(trace == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: ltt/ltt-core.c:577:
+	if(trace->active) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#647: FILE: ltt/ltt-core.c:578:
+		printk(KERN_ERR

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#655: FILE: ltt/ltt-core.c:586:
+	synchronize_sched();

ERROR:SPACING: space required before the open parenthesis '('
#657: FILE: ltt/ltt-core.c:588:
+	if(list_empty(&ltt_traces.head))

ERROR:SPACING: space required before the open parenthesis '('
#679: FILE: ltt/ltt-core.c:610:
+	if(ltt_traces.num_active_traces == 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#681: FILE: ltt/ltt-core.c:612:
+		 * we must make one last check for reader wakeups pending. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#686: FILE: ltt/ltt-core.c:617:
+	 * the last subbuffers. */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#706: FILE: ltt/ltt-core.c:637:
+	struct ltt_trace_struct* trace;

ERROR:SPACING: space required before the open parenthesis '('
#711: FILE: ltt/ltt-core.c:642:
+	if(err) goto error;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#711: FILE: ltt/ltt-core.c:642:
+	if(err) goto error;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#723: FILE: ltt/ltt-core.c:654:
+static int _ltt_trace_start(struct ltt_trace_struct* trace)

ERROR:SPACING: space required before the open parenthesis '('
#727: FILE: ltt/ltt-core.c:658:
+	if(trace == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trace"
#727: FILE: ltt/ltt-core.c:658:
+	if(trace == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#731: FILE: ltt/ltt-core.c:662:
+	if(trace->active)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#732: FILE: ltt/ltt-core.c:663:
+		printk(KERN_INFO "LTT : Tracing already active for trace %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: ltt/ltt-core.c:664:
+		printk(KERN_INFO "LTT : Tracing already active for trace %s\n",
+				trace->trace_name);

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: ltt/ltt-core.c:665:
+	if(ltt_traces.num_active_traces == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#735: FILE: ltt/ltt-core.c:666:
+		if(!try_module_get(ltt_run_filter_owner)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#737: FILE: ltt/ltt-core.c:668:
+			printk(KERN_ERR "LTT : Can't lock filter module.\n");

ERROR:SPACING: space required before the open parenthesis '('
#740: FILE: ltt/ltt-core.c:671:
+		if(!try_module_get(ltt_statedump_owner)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#742: FILE: ltt/ltt-core.c:673:
+			printk(KERN_ERR

ERROR:SPACING: space required before the open parenthesis '('
#747: FILE: ltt/ltt-core.c:678:
+		if(ltt_heartbeat_trigger(LTT_HEARTBEAT_START)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#749: FILE: ltt/ltt-core.c:680:
+			printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#761: FILE: ltt/ltt-core.c:692:
+					 * protection : be careful */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#779: FILE: ltt/ltt-core.c:710:
+	struct ltt_trace_struct* trace;

ERROR:SPACING: space required before the open parenthesis '('
#784: FILE: ltt/ltt-core.c:715:
+	if(trace == NULL) goto no_trace;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#784: FILE: ltt/ltt-core.c:715:
+	if(trace == NULL) goto no_trace;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trace"
#784: FILE: ltt/ltt-core.c:715:
+	if(trace == NULL) goto no_trace;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: ltt/ltt-core.c:719:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#793: FILE: ltt/ltt-core.c:724:
+	 * directly using this trace handle inside the logging function. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: ltt/ltt-core.c:725:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#801: FILE: ltt/ltt-core.c:732:
+	/* State dump finalize... tells state is coherent */ //FIXME
+	return err;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: ltt/ltt-core.c:740:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#811: FILE: ltt/ltt-core.c:742:
+static int _ltt_trace_stop(struct ltt_trace_struct* trace)

ERROR:SPACING: space required before the open parenthesis '('
#815: FILE: ltt/ltt-core.c:746:
+	if(trace == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trace"
#815: FILE: ltt/ltt-core.c:746:
+	if(trace == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#819: FILE: ltt/ltt-core.c:750:
+	if(!trace->active)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#820: FILE: ltt/ltt-core.c:751:
+		printk(KERN_INFO "LTT : Tracing not active for trace %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#821: FILE: ltt/ltt-core.c:752:
+		printk(KERN_INFO "LTT : Tracing not active for trace %s\n",
+				trace->trace_name);

ERROR:SPACING: space required before the open parenthesis '('
#822: FILE: ltt/ltt-core.c:753:
+	if(trace->active) {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#825: FILE: ltt/ltt-core.c:756:
+		synchronize_sched(); /* Wait for each tracing to be finished */

ERROR:SPACING: space required before the open parenthesis '('
#827: FILE: ltt/ltt-core.c:758:
+	if(ltt_traces.num_active_traces == 0) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#847: FILE: ltt/ltt-core.c:778:
+	struct ltt_trace_struct* trace;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#856: FILE: ltt/ltt-core.c:787:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: ltt/ltt-core.c:794:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#864: FILE: ltt/ltt-core.c:795:
+	printk(KERN_ALERT "ltt_control : trace %s\n", trace_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_control', this function's name, in a string
#864: FILE: ltt/ltt-core.c:795:
+	printk(KERN_ALERT "ltt_control : trace %s\n", trace_name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#865: FILE: ltt/ltt-core.c:796:
+	switch(msg) {
+		case LTT_CONTROL_START:
[...]
+		case LTT_CONTROL_STOP:
[...]
+		case LTT_CONTROL_CREATE_TRACE:
[...]
+		case LTT_CONTROL_DESTROY_TRACE:

ERROR:SPACING: space required before the open parenthesis '('
#865: FILE: ltt/ltt-core.c:796:
+	switch(msg) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#867: FILE: ltt/ltt-core.c:798:
+			printk(KERN_DEBUG "Start tracing %s\n", trace_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#871: FILE: ltt/ltt-core.c:802:
+			printk(KERN_DEBUG "Stop tracing %s\n", trace_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#875: FILE: ltt/ltt-core.c:806:
+			printk(KERN_DEBUG "Creating trace %s\n", trace_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#877: FILE: ltt/ltt-core.c:808:
+			err = ltt_trace_create(trace_name, trace_type,
+				args.new_trace.mode,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#886: FILE: ltt/ltt-core.c:817:
+			printk(KERN_DEBUG "Destroying trace %s\n", trace_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#894: FILE: ltt/ltt-core.c:825:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#900: FILE: ltt/ltt-core.c:831:
+	printk(KERN_DEBUG "ltt_filter_control : trace %s\n", trace_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_filter_control', this function's name, in a string
#900: FILE: ltt/ltt-core.c:831:
+	printk(KERN_DEBUG "ltt_filter_control : trace %s\n", trace_name);

ERROR:SPACING: space required before the open parenthesis '('
#903: FILE: ltt/ltt-core.c:834:
+	if(trace == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trace"
#903: FILE: ltt/ltt-core.c:834:
+	if(trace == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#904: FILE: ltt/ltt-core.c:835:
+		printk(KERN_ALERT

ERROR:SPACING: space required before the open parenthesis '('
#909: FILE: ltt/ltt-core.c:840:
+	if(!try_module_get(ltt_filter_control_owner)) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#913: FILE: ltt/ltt-core.c:844:
+	switch(msg) {
+		case LTT_FILTER_DEFAULT_ACCEPT:
[...]
+		case LTT_FILTER_DEFAULT_REJECT:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#913: FILE: ltt/ltt-core.c:844:
+	switch(msg) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#915: FILE: ltt/ltt-core.c:846:
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#920: FILE: ltt/ltt-core.c:851:
+			printk(KERN_DEBUG

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: ltt/ltt-core.c:859:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#938: FILE: ltt/ltt-core.c:869:
+	printk(KERN_INFO "LTT : ltt-core init as module\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: ltt/ltt-core.c:877:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#947: FILE: ltt/ltt-core.c:878:
+	printk(KERN_INFO "LTT : ltt-core exit\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#988: FILE: kernel/ltt-base.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#992: FILE: kernel/ltt-base.c:5:
+ * ^I^IMathieu Desnoyers (mathieu.desnoyers@polymtl.ca)$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1008: FILE: kernel/ltt-base.c:21:
+#include <asm/atomic.h>

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1016: FILE: kernel/ltt-base.c:29:
+EXPORT_SYMBOL(ltt_traces);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1018: FILE: kernel/ltt-base.c:31:
+volatile unsigned int ltt_nesting[NR_CPUS] = { [ 0 ... NR_CPUS-1 ] = 0 } ;
                                                               ^

WARNING:SPACING: space prohibited before semicolon
#1018: FILE: kernel/ltt-base.c:31:
+volatile unsigned int ltt_nesting[NR_CPUS] = { [ 0 ... NR_CPUS-1 ] = 0 } ;

ERROR:SPACING: space prohibited after that open square bracket '['
#1018: FILE: kernel/ltt-base.c:31:
+volatile unsigned int ltt_nesting[NR_CPUS] = { [ 0 ... NR_CPUS-1 ] = 0 } ;

ERROR:SPACING: space prohibited before that close square bracket ']'
#1018: FILE: kernel/ltt-base.c:31:
+volatile unsigned int ltt_nesting[NR_CPUS] = { [ 0 ... NR_CPUS-1 ] = 0 } ;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1018: FILE: kernel/ltt-base.c:31:
+volatile unsigned int ltt_nesting[NR_CPUS] = { [ 0 ... NR_CPUS-1 ] = 0 } ;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1020: FILE: kernel/ltt-base.c:33:
+EXPORT_SYMBOL(ltt_nesting);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1027: FILE: kernel/ltt-base.c:40:
+	printk(KERN_INFO "LTT : ltt-base init\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1033: FILE: kernel/ltt-heartbeat.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1037: FILE: kernel/ltt-heartbeat.c:5:
+ * ^I^IMathieu Desnoyers (mathieu.desnoyers@polymtl.ca)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1060: FILE: kernel/ltt-heartbeat.c:28:
+#define LTT_PERCPU_TIMER_FREQ  (HZ/10)
                                   ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1063: FILE: kernel/ltt-heartbeat.c:31:
+static unsigned int precalc_heartbeat_expire = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1070: FILE: kernel/ltt-heartbeat.c:38:
+} ____cacheline_aligned synthetic_tsc[NR_CPUS];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	int cpu;
+	for(cpu=0;cpu<NR_CPUS;cpu++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {
 	         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {
 	             ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {
 	                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1076: FILE: kernel/ltt-heartbeat.c:44:
+	for(cpu=0;cpu<NR_CPUS;cpu++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: kernel/ltt-heartbeat.c:45:
+^I^Isynthetic_tsc[cpu].tsc[0][0] = 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: kernel/ltt-heartbeat.c:46:
+^I^Isynthetic_tsc[cpu].tsc[0][1] = 0;^I$

ERROR:SPACING: space required before the open parenthesis '('
#1095: FILE: kernel/ltt-heartbeat.c:63:
+	if(tsc < cpu_synth->tsc[cpu_synth->index][1]) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1100: FILE: kernel/ltt-heartbeat.c:68:
+		 * so the index read/write does not need to be atomic. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1103: FILE: kernel/ltt-heartbeat.c:71:
+			cpu_synth->tsc[cpu_synth->index][0]+1; /* MSB update */
 			                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1107: FILE: kernel/ltt-heartbeat.c:75:
+		 * synthetic TSC as it's an atomic write. */

ERROR:SPACING: space required before the open parenthesis '('
#1126: FILE: kernel/ltt-heartbeat.c:94:
+	if(tsc < cpu_synth->tsc[index][1]) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1128: FILE: kernel/ltt-heartbeat.c:96:
+		ret = ((u64)(cpu_synth->tsc[index][0]+1) << 32) | ((u64)tsc);
 		                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1139: FILE: kernel/ltt-heartbeat.c:107:
+
+

WARNING:TYPO_SPELLING: 'hearbeat' may be misspelled - perhaps 'heartbeat'?
#1166: FILE: kernel/ltt-heartbeat.c:134:
+ * heartbeat_timer : - Timer function generating hearbeat.
                                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: kernel/ltt-heartbeat.c:143:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1179: FILE: kernel/ltt-heartbeat.c:147:
+
+

WARNING:TYPO_SPELLING: 'hearbeat' may be misspelled - perhaps 'heartbeat'?
#1181: FILE: kernel/ltt-heartbeat.c:149:
+ * init_heartbeat_timer: - Start timer generating hearbeat events.
                                                   ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1186: FILE: kernel/ltt-heartbeat.c:154:
+		printk(KERN_DEBUG "LTT : ltt-heartbeat start\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1187: FILE: kernel/ltt-heartbeat.c:155:
+		precalc_heartbeat_expire = ( 0xffffffffUL/(loops_per_jiffy << 1)
 		                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1187: FILE: kernel/ltt-heartbeat.c:155:
+		precalc_heartbeat_expire = ( 0xffffffffUL/(loops_per_jiffy << 1)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1197: FILE: kernel/ltt-heartbeat.c:165:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1198: FILE: kernel/ltt-heartbeat.c:166:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1200: FILE: kernel/ltt-heartbeat.c:168:
+			"LTT: No TSC for heartbeat timer "
+			"- continuing without one \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1200: FILE: kernel/ltt-heartbeat.c:168:
+			"- continuing without one \n");

WARNING:TYPO_SPELLING: 'hearbeat' may be misspelled - perhaps 'heartbeat'?
#1204: FILE: kernel/ltt-heartbeat.c:172:
+ * delete_heartbeat_timer: - Stop timer generating hearbeat events.
                                                    ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1208: FILE: kernel/ltt-heartbeat.c:176:
+ ^Iif (loops_per_jiffy > 0) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1208: FILE: kernel/ltt-heartbeat.c:176:
+ ^Iif (loops_per_jiffy > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: kernel/ltt-heartbeat.c:176:
+ ^Iif (loops_per_jiffy > 0) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1209: FILE: kernel/ltt-heartbeat.c:177:
+		printk(KERN_DEBUG "LTT : ltt-heartbeat stop\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1214: FILE: kernel/ltt-heartbeat.c:182:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1217: FILE: kernel/ltt-heartbeat.c:185:
+	printk(KERN_DEBUG "LTT : ltt-heartbeat trigger\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1218: FILE: kernel/ltt-heartbeat.c:186:
+	switch(msg) {
+		case LTT_HEARTBEAT_START:
[...]
+		case LTT_HEARTBEAT_STOP:

ERROR:SPACING: space required before the open parenthesis '('
#1218: FILE: kernel/ltt-heartbeat.c:186:
+	switch(msg) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1229: FILE: kernel/ltt-heartbeat.c:197:
+EXPORT_SYMBOL_GPL(ltt_heartbeat_trigger);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1233: FILE: kernel/ltt-heartbeat.c:201:
+	printk(KERN_INFO "LTT : ltt-heartbeat init\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#1240: FILE: kernel/ltt-heartbeat.c:208:
+__initcall(ltt_heartbeat_init);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1242: FILE: kernel/ltt-heartbeat.c:210:
+
+

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38469.commit.23bfacf65a6d03758fca3c8cf446b2e979fc3b53 total: 130 errors, 108 warnings, 44 checks, 1176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38469.commit.23bfacf65a6d03758fca3c8cf446b2e979fc3b53 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
