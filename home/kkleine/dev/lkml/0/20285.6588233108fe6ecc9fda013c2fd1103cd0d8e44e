WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: lib/Kconfig.debug:419:
+config FAULT_INJECTION_DEBUG_FS
+	bool "Debugfs entries for fault-injection capabilities"
+	depends on FAULT_INJECTION && SYSFS
+	select DEBUG_FS
+	help
+	  This option enables to configure fault-injection capabilities via
+	  debugfs entries.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: include/linux/fault-inject.h:1:
+#ifndef _LINUX_FAULT_INJECT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#90: FILE: include/linux/fault-inject.h:8:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: include/linux/fault-inject.h:43:
+#define DECLARE_FAULT_ATTR(name) struct fault_attr name = FAULT_ATTR_INITIALIZER^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: include/linux/fault-inject.h:56:
+static inline int init_fault_attr_dentries(struct fault_attr *attr,
+					  const char *name)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: lib/fault-inject.c:1:
+#include <linux/kernel.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: lib/fault-inject.c:19:
+	if (sscanf(str, "%lu,%lu,%d,%d",
+			&interval, &probability, &space, &times) < 4) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#176: FILE: lib/fault-inject.c:20:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#192: FILE: lib/fault-inject.c:36:
+		printk(KERN_NOTICE "FAULT_INJECTION: forcing a failure\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: lib/fault-inject.c:93:
+static struct dentry *debugfs_create_ul(const char *name, mode_t mode,
+				struct dentry *parent, unsigned long *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: lib/fault-inject.c:112:
+static struct dentry *debugfs_create_atomic_t(const char *name, mode_t mode,
+				struct dentry *parent, atomic_t *value)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#299: FILE: lib/fault-inject.c:143:
+	mode_t mode = S_IFREG | S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#325: FILE: lib/fault-inject.c:169:
+	if (!attr->dentries.probability_file || !attr->dentries.interval_file
+	    || !attr->dentries.times_file || !attr->dentries.space_file

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#326: FILE: lib/fault-inject.c:170:
+	    || !attr->dentries.times_file || !attr->dentries.space_file
+	    || !attr->dentries.verbose_file)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.20285.commit.6588233108fe6ecc9fda013c2fd1103cd0d8e44e total: 1 errors, 7 warnings, 6 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.20285.commit.6588233108fe6ecc9fda013c2fd1103cd0d8e44e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
