ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: fs/jbd/journal.c:1634:
+	for (i=0; i<4; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#98: FILE: fs/jbd/journal.c:1634:
+	for (i=0; i<4; i++) {
 	           ^

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#100: FILE: fs/jbd/journal.c:1636:
+		if (jbd_slab[i])
+			kmem_cache_destroy(jbd_slab[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#110: FILE: fs/jbd/journal.c:1646:
+	for (i=0; i<4; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#110: FILE: fs/jbd/journal.c:1646:
+	for (i=0; i<4; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: fs/jbd/journal.c:1648:
+		unsigned long slab_size = 1024 << i;
+		jbd_slab[i] = kmem_cache_create(jbd_slab_names[i],

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: fs/jbd/journal.c:1649:
+		jbd_slab[i] = kmem_cache_create(jbd_slab_names[i],
+					slab_size, slab_size,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#118: FILE: fs/jbd/journal.c:1654:
+			printk(KERN_EMERG "JBD: no memory for jbd_slab cache\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#131: FILE: fs/jbd/journal.c:1667:
+	case 1024:	idx = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#133: FILE: fs/jbd/journal.c:1669:
+	case 2048:	idx = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#135: FILE: fs/jbd/journal.c:1671:
+	case 4096:	idx = 2;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: fs/jbd/journal.c:1673:
+	case 8192:	idx = 3;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: fs/jbd/journal.c:1675:
+	default:	printk("JBD unknown slab size %ld\n", size);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#139: FILE: fs/jbd/journal.c:1675:
+	default:	printk("JBD unknown slab size %ld\n", size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: fs/jbd/journal.c:1676:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: fs/jbd/journal.c:1681:
+void * jbd_slab_alloc(size_t size, gfp_t flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: fs/jbd/transaction.c:671:
+					jbd_slab_alloc(jh2bh(jh)->b_size,
+							 GFP_NOFS);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: include/linux/jbd.h:75:
+extern void * jbd_slab_alloc(size_t size, gfp_t flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: include/linux/jbd.h:75:
+extern void * jbd_slab_alloc(size_t size, gfp_t flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/linux/jbd.h:76:
+extern void jbd_slab_free(void *ptr, size_t size);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44688.commit.b2e46e90aef48f344c50d65752da9eef25bd49d5 total: 11 errors, 5 warnings, 4 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44688.commit.b2e46e90aef48f344c50d65752da9eef25bd49d5 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
