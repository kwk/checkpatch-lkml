WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux.vanilla-2.6.19-rc2-mm1/drivers/char/tty_io.c linux-2.6.19-rc2-mm1/drivers/char/tty_io.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: drivers/char/tty_io.c:1263:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/char/tty_io.c:1263:
+ $

CHECK:SPACING: No space is necessary after a cast
#115: FILE: drivers/char/tty_io.c:1920:
+		tp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#115: FILE: drivers/char/tty_io.c:1920:
+		tp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tp)...) over kmalloc(sizeof(struct ktermios)...)
#115: FILE: drivers/char/tty_io.c:1920:
+		tp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/char/tty_io.c:1928:
+		ltp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#124: FILE: drivers/char/tty_io.c:1928:
+		ltp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ltp)...) over kmalloc(sizeof(struct ktermios)...)
#124: FILE: drivers/char/tty_io.c:1928:
+		ltp = (struct ktermios *) kmalloc(sizeof(struct ktermios),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/char/tty_ioctl.c:144:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/char/tty_ioctl.c:159:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/char/tty_ioctl.c:159:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: drivers/char/tty_ioctl.c:163:
+^I$

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#368: FILE: drivers/char/tty_ioctl.c:167:
+	/* Magic token for arbitary speed via c_ispeed/c_ospeed */
 	                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#383: FILE: drivers/char/tty_ioctl.c:182:
+EXPORT_SYMBOL(tty_termios_baud_rate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/char/tty_ioctl.c:195:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/char/tty_ioctl.c:195:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/char/tty_ioctl.c:199:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/char/tty_ioctl.c:202:
+^I$

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#407: FILE: drivers/char/tty_ioctl.c:206:
+	/* Magic token for arbitary speed via c_ispeed*/
 	                   ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/char/tty_ioctl.c:221:
+#endif^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#425: FILE: drivers/char/tty_ioctl.c:224:
+EXPORT_SYMBOL(tty_termios_input_baud_rate);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/char/tty_ioctl.c:243:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/char/tty_ioctl.c:243:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/char/tty_ioctl.c:248:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/char/tty_ioctl.c:256:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: drivers/char/tty_ioctl.c:269:
+	while(++i < n_baud_table);

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#470: FILE: drivers/char/tty_ioctl.c:269:
+	}
+	while(++i < n_baud_table);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/char/tty_ioctl.c:275:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/char/tty_ioctl.c:275:
+ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#477: FILE: drivers/char/tty_ioctl.c:276:
+EXPORT_SYMBOL_GPL(tty_termios_encode_baud_rate);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: drivers/char/tty_ioctl.c:290:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/char/tty_ioctl.c:290:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#498: FILE: drivers/char/tty_ioctl.c:297:
+			printk(KERN_WARNING "Use of setserial/setrocket to "

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/char/tty_ioctl.c:298:
+			printk(KERN_WARNING "Use of setserial/setrocket to "
+					    "set SPD_* flags is deprecated\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: drivers/char/tty_ioctl.c:303:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#508: FILE: drivers/char/tty_ioctl.c:307:
+EXPORT_SYMBOL(tty_get_baud_rate);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#518: FILE: drivers/char/tty_ioctl.c:321:
+static void change_termios(struct tty_struct * tty, struct ktermios * new_termios)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#518: FILE: drivers/char/tty_ioctl.c:321:
+static void change_termios(struct tty_struct * tty, struct ktermios * new_termios)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: drivers/char/tty_ioctl.c:409:
+#ifdef TCGETS2^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/char/tty_ioctl.c:413:
+		if (user_termios_to_kernel_termios_1(&tmp_termios,
+						(struct termios_v1 __user *)arg))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/char/tty_ioctl.c:415:
+#endif^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#558: FILE: drivers/char/tty_ioctl.c:423:
+	/* If old style Bfoo values are used then load c_ispeed/c_ospeed with the real speed
+	   so its unconditionally usable */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#558: FILE: drivers/char/tty_ioctl.c:423:
+	   so its unconditionally usable */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: drivers/char/tty_ioctl.c:510:
+static void set_sgflags(struct ktermios * termios, int flags)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/char/tty_ioctl.c:565:
+^I/* Try and encode into Bfoo format */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: drivers/char/tty_ioctl.c:566:
+#ifdef BOTHER^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/char/tty_ioctl.c:568:
+#endif^I$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#610: FILE: drivers/char/tty_ioctl.c:700:
+			return set_termios(real_tty, p,  TERMIOS_FLUSH | TERMIOS_WAIT | TERMIOS_OLD);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#623: FILE: drivers/char/tty_ioctl.c:712:
+			if (kernel_termios_to_user_termios_1((struct termios_v1 __user *)arg, real_tty->termios))

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#627: FILE: drivers/char/tty_ioctl.c:716:
+			if (kernel_termios_to_user_termios((struct termios __user *)arg, real_tty->termios))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#638: FILE: drivers/char/tty_ioctl.c:725:
+#endif^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: include/linux/tty_driver.h:135:
+	void (*set_termios)(struct tty_struct *tty, struct ktermios * old);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#688: FILE: include/linux/tty_driver.h:196:
+	void (*set_termios)(struct tty_struct *tty, struct ktermios * old);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#719: FILE: include/linux/tty.h:297:
+extern speed_t tty_get_baud_rate(struct tty_struct *tty);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#720: FILE: include/linux/tty.h:298:
+extern speed_t tty_termios_baud_rate(struct ktermios *termios);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#721: FILE: include/linux/tty.h:299:
+extern speed_t tty_termios_input_baud_rate(struct ktermios *termios);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#742: FILE: include/linux/tty_ldisc.h:121:
+	void	(*set_termios)(struct tty_struct *tty, struct ktermios * old);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26841.commit.e86b20e8a2e51c85c7515114e1a2927eafa3dd5c total: 28 errors, 22 warnings, 8 checks, 656 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26841.commit.e86b20e8a2e51c85c7515114e1a2927eafa3dd5c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
