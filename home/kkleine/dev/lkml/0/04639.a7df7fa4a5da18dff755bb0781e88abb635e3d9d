WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
> Works fine, thanks! Unfortunately the i2c-ixp3xx issue has not advanced in

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: drivers/rtc/rtc-rs5c372.c:24:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#144: FILE: drivers/rtc/rtc-rs5c372.c:51:
+#	define RS5C_CTRL1_AALE		(1 << 7)	/* or WALE */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: drivers/rtc/rtc-rs5c372.c:52:
+#	define RS5C_CTRL1_BALE		(1 << 6)	/* or DALE */

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: drivers/rtc/rtc-rs5c372.c:53:
+#	define RV5C387_CTRL1_24		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: drivers/rtc/rtc-rs5c372.c:54:
+#	define RS5C372A_CTRL1_SL1	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: drivers/rtc/rtc-rs5c372.c:59:
+#	define RS5C372_CTRL2_24		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#153: FILE: drivers/rtc/rtc-rs5c372.c:60:
+#	define RS5C_CTRL2_XSTP		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: drivers/rtc/rtc-rs5c372.c:61:
+#	define RS5C_CTRL2_CTFG		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: drivers/rtc/rtc-rs5c372.c:62:
+#	define RS5C_CTRL2_AAFG		(1 << 1)	/* or WAFG */

CHECK:BIT_MACRO: Prefer using the BIT macro
#156: FILE: drivers/rtc/rtc-rs5c372.c:63:
+#	define RS5C_CTRL2_BAFG		(1 << 0)	/* or DAFG */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: drivers/rtc/rtc-rs5c372.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: drivers/rtc/rtc-rs5c372.c:69:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof rs5c->buf should be sizeof(rs5c->buf)
#213: FILE: drivers/rtc/rtc-rs5c372.c:100:
+		{ client->addr, I2C_M_RD, sizeof rs5c->buf, rs5c->buf },

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: drivers/rtc/rtc-rs5c372.c:117:
+		"%02x %02x %02x (%02x) %02x %02x %02x (%02x), "
+		"%02x %02x %02x, %02x %02x %02x; %02x %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: drivers/rtc/rtc-rs5c372.c:126:
+static unsigned rs5c_reg2hr(struct rs5c372 *rs5c, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: drivers/rtc/rtc-rs5c372.c:126:
+static unsigned rs5c_reg2hr(struct rs5c372 *rs5c, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#249: FILE: drivers/rtc/rtc-rs5c372.c:128:
+	unsigned	hour;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: drivers/rtc/rtc-rs5c372.c:141:
+static unsigned rs5c_hr2reg(struct rs5c372 *rs5c, unsigned hour)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: drivers/rtc/rtc-rs5c372.c:141:
+static unsigned rs5c_hr2reg(struct rs5c372 *rs5c, unsigned hour)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#321: FILE: drivers/rtc/rtc-rs5c372.c:193:
+		__FUNCTION__,

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#337: FILE: drivers/rtc/rtc-rs5c372.c:214:
+#if defined(CONFIG_RTC_INTF_PROC) || defined(CONFIG_RTC_INTF_PROC_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#341: FILE: drivers/rtc/rtc-rs5c372.c:218:
+#if defined(CONFIG_RTC_INTF_SYSFS) || defined(CONFIG_RTC_INTF_SYSFS_MODULE)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#358: FILE: drivers/rtc/rtc-rs5c372.c:232:
+		dev_dbg(&client->dev, "%s: raw trim=%x\n", __FUNCTION__, tmp);

CHECK:BRACES: braces {} should be used on all arms of this statement
#360: FILE: drivers/rtc/rtc-rs5c372.c:234:
+		if (tmp & 0x3e) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#369: FILE: drivers/rtc/rtc-rs5c372.c:243:
+		} else

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#384: FILE: drivers/rtc/rtc-rs5c372.c:262:
+#if defined(CONFIG_RTC_INTF_DEV) || defined(CONFIG_RTC_INTF_DEV_MODULE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#400: FILE: drivers/rtc/rtc-rs5c372.c:278:
+		if (rs5c->type == rtc_rs5c372a
+				&& (buf[1] & RS5C372A_CTRL1_SL1))

CHECK:BRACES: braces {} should be used on all arms of this statement
#434: FILE: drivers/rtc/rtc-rs5c372.c:312:
+	if ((i2c_master_send(client, buf, 2)) != 2) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#435: FILE: drivers/rtc/rtc-rs5c372.c:313:
+		printk(KERN_WARNING "%s: can't update alarm\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/rtc/rtc-rs5c372.c:314:
+		printk(KERN_WARNING "%s: can't update alarm\n",
+			rs5c->rtc->name);

CHECK:BRACES: Unbalanced braces around else statement
#438: FILE: drivers/rtc/rtc-rs5c372.c:316:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#447: FILE: drivers/rtc/rtc-rs5c372.c:325:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: drivers/rtc/rtc-rs5c372.c:372:
+	if (t->time.tm_mday != -1
+			|| t->time.tm_mon != -1

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#495: FILE: drivers/rtc/rtc-rs5c372.c:373:
+			|| t->time.tm_mon != -1
+			|| t->time.tm_year != -1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#529: FILE: drivers/rtc/rtc-rs5c372.c:407:
+			printk(KERN_WARNING "%s: can't enable alarm\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/rtc/rtc-rs5c372.c:408:
+			printk(KERN_WARNING "%s: can't enable alarm\n",
+				rs5c->rtc->name);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#537: FILE: drivers/rtc/rtc-rs5c372.c:415:
+#if defined(CONFIG_RTC_INTF_PROC) || defined(CONFIG_RTC_INTF_PROC_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/rtc/rtc-rs5c372.c:424:
+		seq_printf(seq, "crystal\t\t: %d.%03d KHz\n",
+				osc / 1000, osc % 1000);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#568: FILE: drivers/rtc/rtc-rs5c372.c:444:
+#if defined(CONFIG_RTC_INTF_SYSFS) || defined(CONFIG_RTC_INTF_SYSFS_MODULE)

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#627: FILE: drivers/rtc/rtc-rs5c372.c:515:
+	rs5c372->regs=&rs5c372->buf[1];
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#627: FILE: drivers/rtc/rtc-rs5c372.c:515:
+	rs5c372->regs=&rs5c372->buf[1];
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/rtc/rtc-rs5c372.c:614:
+	dev_info(&client->dev, "%s found, %s, driver version " DRV_VERSION "\n",
+			({ char *s; switch (rs5c372->type) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#730: FILE: drivers/rtc/rtc-rs5c372.c:615:
+			case rtc_rs5c372a:	s = "rs5c372a"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#731: FILE: drivers/rtc/rtc-rs5c372.c:616:
+			case rtc_rs5c372b:	s = "rs5c372b"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#732: FILE: drivers/rtc/rtc-rs5c372.c:617:
+			case rtc_rv5c386:	s = "rv5c386"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#733: FILE: drivers/rtc/rtc-rs5c372.c:618:
+			case rtc_rv5c387a:	s = "rv5c387a"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#734: FILE: drivers/rtc/rtc-rs5c372.c:619:
+			default:		s = "chip"; break;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#735: FILE: drivers/rtc/rtc-rs5c372.c:620:
+			}; s;}),
 			    ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04639.commit.a7df7fa4a5da18dff755bb0781e88abb635e3d9d total: 8 errors, 17 warnings, 24 checks, 694 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04639.commit.a7df7fa4a5da18dff755bb0781e88abb635e3d9d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
