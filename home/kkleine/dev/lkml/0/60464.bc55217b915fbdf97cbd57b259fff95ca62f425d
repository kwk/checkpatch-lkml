WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#92: FILE: drivers/scsi/ahci.c:1328:
+	/* This is protected from races with ata_jmicron by the pci probe
+	   locking */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#92: FILE: drivers/scsi/ahci.c:1328:
+	   locking */

WARNING:TYPO_SPELLING: 'udpate' may be misspelled - perhaps 'update'?
#263: FILE: drivers/scsi/libata-core.c:2215:
+		/* don't udpate suspended devices' xfer mode */
 		         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#470: FILE: drivers/scsi/libata-core.c:5095:
+						"suspend failed, device %d "
+						"still active\n", dev->devno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'parallely' may be misspelled - perhaps 'parallelly'?
#498: FILE: drivers/scsi/libata-core.c:5116:
+ *	Note that all resume operations are performed parallely.
   	                                              ^^^^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#625: FILE: drivers/scsi/libata-core.c:5924:
+EXPORT_SYMBOL_GPL(sata_deb_timing_normal);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#626: FILE: drivers/scsi/libata-core.c:5925:
+EXPORT_SYMBOL_GPL(sata_deb_timing_hotplug);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#627: FILE: drivers/scsi/libata-core.c:5926:
+EXPORT_SYMBOL_GPL(sata_deb_timing_long);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#636: FILE: drivers/scsi/libata-core.c:5999:
+EXPORT_SYMBOL_GPL(ata_host_set_resume);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#645: FILE: drivers/scsi/libata-core.c:6015:
+EXPORT_SYMBOL_GPL(ata_pci_device_do_resume);

WARNING:SPLIT_STRING: quoted string split across lines
#993: FILE: drivers/scsi/libata-eh.c:1711:
+				ata_dev_printk(dev, KERN_ERR, "failed to "
+					       "spin down (err_mask=0x%x)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1087: FILE: drivers/scsi/libata-eh.c:1805:
+				ata_dev_printk(dev, KERN_ERR, "failed to "
+					       "spin up (err_mask=0x%x)\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#1229: FILE: drivers/scsi/libata-eh.c:2161:
+	return;
+}

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1237: FILE: drivers/scsi/libata-eh.c:2169:
+ *	This function also waits upto one second until all devices
   	                         ^^^^

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1242: FILE: drivers/scsi/libata-eh.c:2174:
+ *	together, this may delay port resume upto one second, but such
   	                                     ^^^^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1284: FILE: drivers/scsi/libata-eh.c:2216:
+		msleep(10);

CHECK:BRACES: Unbalanced braces around else statement
#1512: FILE: drivers/scsi/sata_sil.c:585:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1513: FILE: drivers/scsi/sata_sil.c:586:
+		dev_printk(KERN_WARNING, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1525: FILE: drivers/scsi/sata_sil.c:598:
+				dev_printk(KERN_INFO, &pdev->dev,

WARNING:SPLIT_STRING: quoted string split across lines
#1527: FILE: drivers/scsi/sata_sil.c:600:
+					   "Applying R_ERR on DMA activate "
+					   "FIS errata fix\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1698: FILE: drivers/scsi/sata_sil24.c:1026:
+				dev_printk(KERN_ERR, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1699: FILE: drivers/scsi/sata_sil24.c:1027:
+^I^I^I^I           "failed to clear port RST\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: Unnecessary space before function pointer arguments
#1936: FILE: include/linux/libata.h:610:
+	int (*port_suspend) (struct ata_port *ap, pm_message_t mesg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#1937: FILE: include/linux/libata.h:611:
+	int (*port_resume) (struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1968: FILE: include/linux/libata.h:677:
+extern void ata_pci_device_do_suspend(struct pci_dev *pdev, pm_message_t state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1969: FILE: include/linux/libata.h:678:
+extern void ata_pci_device_do_resume(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1979: FILE: include/linux/libata.h:699:
+extern int ata_host_set_suspend(struct ata_host_set *host_set,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1981: FILE: include/linux/libata.h:701:
+extern void ata_host_set_resume(struct ata_host_set *host_set);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60464.commit.bc55217b915fbdf97cbd57b259fff95ca62f425d total: 1 errors, 23 warnings, 5 checks, 1843 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60464.commit.bc55217b915fbdf97cbd57b259fff95ca62f425d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
