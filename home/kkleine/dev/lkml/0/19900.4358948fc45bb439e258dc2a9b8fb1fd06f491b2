WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: include/bc/kmem.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#66: FILE: include/bc/kmem.h:2:
+ * include/bc/kmem.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: include/bc/kmem.h:29:
+static inline int __must_check bc_page_charge(struct page *page, int order,
+		gfp_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: include/bc/kmem.h:39:
+static inline int __must_check bc_slab_charge(kmem_cache_t *cachep, void *obj,
+		gfp_t flags)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#131: FILE: include/linux/gfp.h:59:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE| \
 			                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#131: FILE: include/linux/gfp.h:59:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE| \
 			                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#131: FILE: include/linux/gfp.h:59:
+			__GFP_NOMEMALLOC|__GFP_HARDWALL|__GFP_THISNODE| \
 			                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#132: FILE: include/linux/gfp.h:60:
+			__GFP_BC|__GFP_BC_LIMIT)
 			        ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/vmalloc.h:40:
+extern void *vmalloc_bc(unsigned long size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#199: FILE: kernel/bc/kmem.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#200: FILE: kernel/bc/kmem.c:2:
+ * kernel/bc/kmem.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: kernel/bc/kmem.c:33:
+	if (bc_charge(bc, BC_KMEMSIZE, size,
+			(flags & __GFP_BC_LIMIT ? BC_LIMIT : BC_BARRIER)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: kernel/bc/kmem.c:37:
+	BUG_ON(*slab_bcp != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slab_bcp"
#235: FILE: kernel/bc/kmem.c:37:
+	BUG_ON(*slab_bcp != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slab_bcp"
#246: FILE: kernel/bc/kmem.c:48:
+	if (*slab_bcp == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: kernel/bc/kmem.c:69:
+	if (bc_charge(bc, BC_KMEMSIZE, PAGE_SIZE << order,
+			(flags & __GFP_BC_LIMIT ? BC_LIMIT : BC_BARRIER)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#270: FILE: kernel/bc/kmem.c:72:
+	BUG_ON(page_bc(page) != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_bc"
#270: FILE: kernel/bc/kmem.c:72:
+	BUG_ON(page_bc(page) != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc"
#280: FILE: kernel/bc/kmem.c:82:
+	if (bc == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: kernel/bc/kmem.c:97:
+	bc_init_resource(&bc->bc_parms[BC_KMEMSIZE],
+			BC_KMEMSIZE_BARRIER, BC_KMEMSIZE_LIMIT);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#310: FILE: kernel/bc/kmem.c:112:
+__initcall(bc_kmem_init_resource);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#385: FILE: mm/slab.c:881:
+		if (slab_mgmt_size(flags, nr_objs, align) + nr_objs*buffer_size
 		                                                   ^

CHECK:SPACING: No space is necessary after a cast
#438: FILE: mm/slab.c:2584:
+	return (kmem_bufctl_t *) (slabp + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: mm/slab.c:2589:
+static inline struct beancounter **slab_bc_ptrs(kmem_cache_t *cachep,
+		struct slab *slabp)

CHECK:SPACING: No space is necessary after a cast
#445: FILE: mm/slab.c:2591:
+	return (struct beancounter **) ALIGN((unsigned long)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: mm/slab.c:2641:
+		memset(slab_bc_ptrs(cachep, slabp), 0,
+				cachep->num * BC_EXTRASIZE);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19900.commit.4358948fc45bb439e258dc2a9b8fb1fd06f491b2 total: 0 errors, 16 warnings, 19 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19900.commit.4358948fc45bb439e258dc2a9b8fb1fd06f491b2 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
