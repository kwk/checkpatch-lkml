WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/net/vioc/vioc_receive.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/net/vioc/vioc_receive.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: drivers/net/vioc/vioc_receive.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#86: FILE: drivers/net/vioc/vioc_receive.c:45:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#88: FILE: drivers/net/vioc/vioc_receive.c:47:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#97: FILE: drivers/net/vioc/vioc_receive.c:56:
+/*
+ * Receive one packet.  The VIOC is read-locked.  Since RxDQs are

CHECK:CAMELCASE: Avoid CamelCase: <rxc_pktDesc_Phys_w>
#113: FILE: drivers/net/vioc/vioc_receive.c:72:
+	struct rxc_pktDesc_Phys_w *rxcd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <rx_pktBufDesc_Phys_w>
#114: FILE: drivers/net/vioc/vioc_receive.c:73:
+	struct rx_pktBufDesc_Phys_w *rxd;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: drivers/net/vioc/vioc_receive.c:86:
+	BUG_ON(in_skb == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!in_skb"
#127: FILE: drivers/net/vioc/vioc_receive.c:86:
+	BUG_ON(in_skb == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#131: FILE: drivers/net/vioc/vioc_receive.c:90:
+	/*
+	 * Reset HW FLAG in this RxC Descriptor, marking it as "SW

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#142: FILE: drivers/net/vioc/vioc_receive.c:101:
+	BUG_ON(vnicdev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vnicdev"
#142: FILE: drivers/net/vioc/vioc_receive.c:101:
+	BUG_ON(vnicdev == NULL);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#147: FILE: drivers/net/vioc/vioc_receive.c:106:
+	if (likely(rx_status == VNIC_RXC_STATUS_OK_W)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: drivers/net/vioc/vioc_receive.c:130:
+		else {

WARNING:INDENTED_LABEL: labels should not be indented
#185: FILE: drivers/net/vioc/vioc_receive.c:144:
+	      drop:

WARNING:INDENTED_LABEL: labels should not be indented
#189: FILE: drivers/net/vioc/vioc_receive.c:148:
+      out:

CHECK:SPACING: No space is necessary after a cast
#198: FILE: drivers/net/vioc/vioc_receive.c:157:
+		rxdq->vbuf[rxd_id].dma = (dma_addr_t) NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#213: FILE: drivers/net/vioc/vioc_receive.c:172:
+/*
+ * Refill one batch of VIOC_RXD_BATCH_BITS descriptors with skb's as

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#217: FILE: drivers/net/vioc/vioc_receive.c:176:
+static u32 _vioc_fill_n_xfer(struct rxdq *rxdq, unsigned batch_idx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#219: FILE: drivers/net/vioc/vioc_receive.c:178:
+	unsigned first_idx, idx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: drivers/net/vioc/vioc_receive.c:183:
+	unsigned size;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rxdq->vbuf[idx].skb"
#233: FILE: drivers/net/vioc/vioc_receive.c:192:
+		if (rxdq->vbuf[idx].skb == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#235: FILE: drivers/net/vioc/vioc_receive.c:194:
+			if (skb == NULL) {
+				goto undo_refill;
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#235: FILE: drivers/net/vioc/vioc_receive.c:194:
+			if (skb == NULL) {

CHECK:SPACING: No space is necessary after a cast
#239: FILE: drivers/net/vioc/vioc_receive.c:198:
+			x = (u64) skb->data;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#251: FILE: drivers/net/vioc/vioc_receive.c:210:
+			/*
+			 * Making sure that all writes to the Rx

WARNING:INDENTED_LABEL: labels should not be indented
#265: FILE: drivers/net/vioc/vioc_receive.c:224:
+      undo_refill:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#267: FILE: drivers/net/vioc/vioc_receive.c:226:
+	/*
+	 * Just turn descriptors over to SW.  Leave skb's allocated,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/net/vioc/vioc_receive.c:239:
+       (((idx) + (delta)) % (count))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#281: FILE: drivers/net/vioc/vioc_receive.c:240:
+#define IDX_MINUS_DELTA(idx, count, delta) \
+       (((idx) == 0) ? ((count) - (delta)): ((idx) - (delta)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'delta' - possible side-effects?
#281: FILE: drivers/net/vioc/vioc_receive.c:240:
+#define IDX_MINUS_DELTA(idx, count, delta) \
+       (((idx) == 0) ? ((count) - (delta)): ((idx) - (delta)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/net/vioc/vioc_receive.c:241:
+       (((idx) == 0) ? ((count) - (delta)): ((idx) - (delta)))$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#282: FILE: drivers/net/vioc/vioc_receive.c:241:
+       (((idx) == 0) ? ((count) - (delta)): ((idx) - (delta)))
                                           ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#285: FILE: drivers/net/vioc/vioc_receive.c:244:
+/*
+ * Returns 0 on success, or a negative errno on failure

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#289: FILE: drivers/net/vioc/vioc_receive.c:248:
+	unsigned dmap_idx, dmap_start, dmap_end, dmap_count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#290: FILE: drivers/net/vioc/vioc_receive.c:249:
+	unsigned to_hw = rxdq->to_hw;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#319: FILE: drivers/net/vioc/vioc_receive.c:278:
+	/*
+	 * Now dmap_idx points to the "last" batch, that is

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#326: FILE: drivers/net/vioc/vioc_receive.c:285:
+	/*
+	 * Go back up tp dmap_start (old fence) and refill and

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#342: FILE: drivers/net/vioc/vioc_receive.c:301:
+/*
+ * NAPI poll method. RxC interrupt for this queue is disabled.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#392: FILE: drivers/net/vioc/vioc_receive.c:351:
+	unsigned vioc_idx = VIOC_IRQ_PARAM_VIOC_ID(input_param);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#394: FILE: drivers/net/vioc/vioc_receive.c:353:
+	unsigned rxc_id = VIOC_IRQ_PARAM_PARAM_ID(input_param);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31192.commit.43ae80cfef138539b684205dab60c28c4407801e total: 3 errors, 27 warnings, 12 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31192.commit.43ae80cfef138539b684205dab60c28c4407801e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
