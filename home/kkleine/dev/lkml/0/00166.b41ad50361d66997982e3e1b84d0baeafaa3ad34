ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/scsi/scsi_lib.c:257:
+                          enum dma_data_direction dir)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/scsi/scsi_lib.c:257:
+                          enum dma_data_direction dir)$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#67: FILE: drivers/scsi/scsi_lib.c:260:
+	struct request_io_part* req_io = rq_io(rq, dir);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: drivers/scsi/scsi_lib.c:303:
+	int nsegs, unsigned bufflen, gfp_t gfp, enum dma_data_direction dir)

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#98: FILE: drivers/scsi/scsi_lib.c:341:
+				err = scsi_merge_bio(rq, bio ,dir);
 				                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:WxV)
#98: FILE: drivers/scsi/scsi_lib.c:341:
+				err = scsi_merge_bio(rq, bio ,dir);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: drivers/scsi/scsi_lib.c:356:
+	rq_io(rq,dir)->data_len = data_len;
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: drivers/scsi/scsi_lib.c:360:
+	while ((bio = rq_io(rq,dir)->bio) != NULL) {
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: drivers/scsi/scsi_lib.c:361:
+		rq_io(rq,dir)->bio = bio->bi_next;
 		        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#128: FILE: drivers/scsi/scsi_lib.c:395:
+	return scsi_execute_bidi_async(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#131: FILE: drivers/scsi/scsi_lib.c:398:
+		timeout, retries, privdata, done, gfp );

WARNING:TYPO_SPELLING: 'sence' may be misspelled - perhaps 'sense'?
#149: FILE: drivers/scsi/scsi_lib.c:416:
+ *              signature: void done(void *user_data, char *sence, int errors, int data_bytes_advanced)
                                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#149: FILE: drivers/scsi/scsi_lib.c:416:
+ *              signature: void done(void *user_data, char *sence, int errors, int data_bytes_advanced)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/scsi/scsi_lib.c:420:
+int scsi_execute_bidi_async(struct scsi_device *sdev,
+	unsigned char *cmd, int cmd_len, int data_direction,

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#168: FILE: drivers/scsi/scsi_lib.c:435:
+	WARN_ON( (data_direction==DMA_NONE) && buff->bufflen);
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#168: FILE: drivers/scsi/scsi_lib.c:435:
+	WARN_ON( (data_direction==DMA_NONE) && buff->bufflen);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#169: FILE: drivers/scsi/scsi_lib.c:436:
+	WARN_ON( (data_direction!=DMA_NONE) && !buff->bufflen);
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#169: FILE: drivers/scsi/scsi_lib.c:436:
+	WARN_ON( (data_direction!=DMA_NONE) && !buff->bufflen);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#170: FILE: drivers/scsi/scsi_lib.c:437:
+	WARN_ON( (data_direction==DMA_BIDIRECTIONAL) && !bidi_read_buff);
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#170: FILE: drivers/scsi/scsi_lib.c:437:
+	WARN_ON( (data_direction==DMA_BIDIRECTIONAL) && !bidi_read_buff);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#184: FILE: drivers/scsi/scsi_lib.c:445:
+		err = scsi_req_map_sg(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#188: FILE: drivers/scsi/scsi_lib.c:449:
+		err = blk_rq_map_kern_bidi(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#198: FILE: drivers/scsi/scsi_lib.c:459:
+			err = scsi_req_map_sg(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#202: FILE: drivers/scsi/scsi_lib.c:463:
+			err = blk_rq_map_kern_bidi(

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#206: FILE: drivers/scsi/scsi_lib.c:467:
+			end_that_request_block(req ,0);/* free up the write part */
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#206: FILE: drivers/scsi/scsi_lib.c:467:
+			end_that_request_block(req ,0);/* free up the write part */
 			                           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#223: FILE: drivers/scsi/scsi_lib.c:495:
+	char* sense;

WARNING:SPACING: space prohibited before semicolon
#225: FILE: drivers/scsi/scsi_lib.c:497:
+} ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/scsi/scsi_lib.c:502:
+	struct scsi_execute_bidi_done_t *sebd = user_data;
+	sebd->errors = errors;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#231: FILE: drivers/scsi/scsi_lib.c:503:
+	if (sebd->sense) {
+		memcpy(sebd->sense, sense, SCSI_SENSE_BUFFERSIZE);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/scsi/scsi_lib.c:524:
+int scsi_execute_bidi(struct scsi_device *sdev,
+	unsigned char *cmd, int cmd_len, int data_direction,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#254: FILE: drivers/scsi/scsi_lib.c:526:
+	char* sense, int timeout, int retries)

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: drivers/scsi/scsi_lib.c:531:
+	DECLARE_COMPLETION_ONSTACK(wait);
+	sebd.sense = sense;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: drivers/scsi/scsi_lib.c:534:
+	ret = scsi_execute_bidi_async(sdev,cmd, cmd_len, data_direction,
 	                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/scsi/scsi_lib.c:535:
+	ret = scsi_execute_bidi_async(sdev,cmd, cmd_len, data_direction,
+		buff, bidi_read_buff,timeout, retries,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/scsi/scsi_lib.c:535:
+		buff, bidi_read_buff,timeout, retries,
 		                    ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#281: FILE: drivers/scsi/scsi_lib.c:776:
+		if ( end_io_error(uptodate) && requeue ) {
 		                  ^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#281: FILE: drivers/scsi/scsi_lib.c:776:
+		if ( end_io_error(uptodate) && requeue ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#281: FILE: drivers/scsi/scsi_lib.c:776:
+		if ( end_io_error(uptodate) && requeue ) {

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#286: FILE: drivers/scsi/scsi_lib.c:781:
+		end_that_request_block(req, uptodate);
 		                            ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: drivers/scsi/scsi_lib.c:834:
+	BUG_ON(!sdb->use_sg);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#388: FILE: drivers/scsi/scsi_lib.c:929:
+			scsi_free_sgtable(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#416: FILE: drivers/scsi/scsi_lib.c:1009:
+	SCSI_LOG_HLCOMPLETE(1, printk(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: drivers/scsi/scsi_lib.c:1009:
+	SCSI_LOG_HLCOMPLETE(1, printk(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#426: FILE: drivers/scsi/scsi_lib.c:1024:
+	BUG_ON(is_bidi_cmnd(cmd));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#452: FILE: drivers/scsi/scsi_lib.c:1148:
+static int scsi_init_data_buff(

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#453: FILE: drivers/scsi/scsi_lib.c:1149:
+	struct scsi_data_buffer *sdb, struct request* req,

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/scsi/scsi_lib.c:1172:
+	sdb->request_buffer = (char *) sgpnt;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#505: FILE: drivers/scsi/scsi_lib.c:1189:
+	printk(KERN_ERR "counted %d, received %d\n", count, sdb->use_sg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: drivers/scsi/scsi_lib.c:1190:
+	printk(KERN_ERR "req nr_sec %lu, cur_nr_sec %u\n", req_io->nr_sectors,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/scsi/scsi_lib.c:1191:
+	printk(KERN_ERR "req nr_sec %lu, cur_nr_sec %u\n", req_io->nr_sectors,
+			req_io->current_nr_sectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/scsi/scsi_lib.c:1215:
+	error = scsi_init_data_buff(&uni_sdb, req,
+		is_bidi ? DMA_TO_DEVICE : rq_dma_dir(req) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#534: FILE: drivers/scsi/scsi_lib.c:1215:
+		is_bidi ? DMA_TO_DEVICE : rq_dma_dir(req) );

WARNING:SPACING: space prohibited before semicolon
#550: FILE: drivers/scsi/scsi_lib.c:1231:
+	return 0 ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: drivers/scsi/scsi_lib.c:1310:
+		int ret;
+		BUG_ON(rq_bidi_dir(req) && (!rq_out(req)->bio || !rq_in(req)->bio));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#584: FILE: drivers/scsi/scsi_lib.c:1310:
+		BUG_ON(rq_bidi_dir(req) && (!rq_out(req)->bio || !rq_in(req)->bio));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#647: FILE: include/scsi/scsi_cmnd.h:30:
+	unsigned request_bufflen;    /* Actual request size */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#706: FILE: include/scsi/scsi_device.h:205:
+	unsigned bufflen;   /* Actual request size */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#716: FILE: include/scsi/scsi_device.h:307:
+extern int scsi_execute_bidi_async(struct scsi_device *sdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: include/scsi/scsi_device.h:308:
+extern int scsi_execute_bidi_async(struct scsi_device *sdev,
+	unsigned char *cmd, int cmd_len, int data_direction,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#720: FILE: include/scsi/scsi_device.h:311:
+	void (*done)(void *, char *, int, int), gfp_t gfp);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#720: FILE: include/scsi/scsi_device.h:311:
+	void (*done)(void *, char *, int, int), gfp_t gfp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#720: FILE: include/scsi/scsi_device.h:311:
+	void (*done)(void *, char *, int, int), gfp_t gfp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#720: FILE: include/scsi/scsi_device.h:311:
+	void (*done)(void *, char *, int, int), gfp_t gfp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#721: FILE: include/scsi/scsi_device.h:312:
+extern int scsi_execute_bidi(struct scsi_device *sdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: include/scsi/scsi_device.h:313:
+extern int scsi_execute_bidi(struct scsi_device *sdev,
+	unsigned char *cmd, int cmd_len, int data_direction,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#724: FILE: include/scsi/scsi_device.h:315:
+	char* sense, int timeout, int retries);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00166.commit.b41ad50361d66997982e3e1b84d0baeafaa3ad34 total: 25 errors, 24 warnings, 18 checks, 649 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.00166.commit.b41ad50361d66997982e3e1b84d0baeafaa3ad34 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
