WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: Pavel Emelianov <xemul@sw.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Kirill Korotaev <dev@sw.ru>

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#108: FILE: include/linux/rmap.h:73:
+void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#108: FILE: include/linux/rmap.h:73:
+void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#108: FILE: include/linux/rmap.h:73:
+void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_beancounter *' should also have an identifier name
#108: FILE: include/linux/rmap.h:73:
+void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: include/linux/rmap.h:74:
+void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long,
+		struct page_beancounter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#110: FILE: include/linux/rmap.h:75:
+void page_add_new_anon_rmap(struct page *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#110: FILE: include/linux/rmap.h:75:
+void page_add_new_anon_rmap(struct page *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#110: FILE: include/linux/rmap.h:75:
+void page_add_new_anon_rmap(struct page *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_beancounter *' should also have an identifier name
#110: FILE: include/linux/rmap.h:75:
+void page_add_new_anon_rmap(struct page *, struct vm_area_struct *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: include/linux/rmap.h:76:
+void page_add_new_anon_rmap(struct page *, struct vm_area_struct *,
+		unsigned long, struct page_beancounter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#112: FILE: include/linux/rmap.h:77:
+void page_add_file_rmap(struct page *, struct page_beancounter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page_beancounter *' should also have an identifier name
#112: FILE: include/linux/rmap.h:77:
+void page_add_file_rmap(struct page *, struct page_beancounter *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BRACES: Unbalanced braces around else statement
#214: FILE: mm/memory.c:1611:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#426: FILE: mm/rmap.c:178:
+			0, SLAB_DESTROY_BY_RCU|SLAB_PANIC|SLAB_BC,
 			                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#426: FILE: mm/rmap.c:178:
+			0, SLAB_DESTROY_BY_RCU|SLAB_PANIC|SLAB_BC,
 			                                 ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#445: FILE: mm/rmap.c:536:
+	if (atomic_inc_and_test(&page->_mapcount)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#448: FILE: mm/rmap.c:539:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#484: FILE: mm/rmap.c:572:
+	if (atomic_inc_and_test(&page->_mapcount)) {
[...]
+	} else if (pb)
[...]

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'Thes' may be misspelled - perhaps 'This'?
#584: FILE: mm/vmscan.c:1111:
+ * Thes works like shrink_inactive_list() and shrink_active_list()
    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: mm/vmscan.c:1118:
+static unsigned long bc_shrink_pages_inactive(unsigned long max_scan,
+		struct beancounter *bc, struct scan_control *sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: mm/vmscan.c:1131:
+		nr_taken = bc_isolate_pages(sc->swap_cluster_max, bc,
+				&page_list, 0, &nr_scan);

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: mm/vmscan.c:1154:
+  ^I} while (nr_scanned < max_scan);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: mm/vmscan.c:1154:
+  ^I} while (nr_scanned < max_scan);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: mm/vmscan.c:1154:
+  ^I} while (nr_scanned < max_scan);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: mm/vmscan.c:1160:
+static void bc_shrink_pages_active(unsigned long nr_pages,
+		struct beancounter *bc, struct scan_control *sc)

WARNING:TYPO_SPELLING: 'firts' may be misspelled - perhaps 'first'?
#694: FILE: mm/vmscan.c:1221:
+ * This is a reworked shrink_zone() routine - it scans active pages firts,
                                                                     ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: mm/vmscan.c:1225:
+static unsigned long bc_shrink_pages(int priority, struct beancounter *bc,
+		struct scan_control *sc)

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr_pages, sc->swap_cluster_max)
#709: FILE: mm/vmscan.c:1236:
+		nr_to_scan = min(nr_pages, (unsigned long)sc->swap_cluster_max);

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr_pages, sc->swap_cluster_max)
#719: FILE: mm/vmscan.c:1246:
+		nr_to_scan = min(nr_pages, (unsigned long)sc->swap_cluster_max);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#762: FILE: mm/vmscan.c:1289:
+			congestion_wait(WRITE, HZ/10);
 			                         ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19893.commit.e7038eddebee8c8a7363b7872f135544444bf40a total: 1 errors, 26 warnings, 13 checks, 666 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19893.commit.e7038eddebee8c8a7363b7872f135544444bf40a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
