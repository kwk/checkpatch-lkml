ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#41: FILE: fs/jffs/intrep.c:594:
+	if (!(root = kzalloc(sizeof(struct jffs_file), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#41: FILE: fs/jffs/intrep.c:594:
+	if (!(root = kzalloc(sizeof(struct jffs_file), GFP_KERNEL))) {
 		return -ENOMEM;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*root)...) over kzalloc(sizeof(struct jffs_file)...)
#41: FILE: fs/jffs/intrep.c:594:
+	if (!(root = kzalloc(sizeof(struct jffs_file), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13185.commit.807e45995101384e566d89a50ff69923a8bbb82d total: 1 errors, 1 warnings, 1 checks, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13185.commit.807e45995101384e566d89a50ff69923a8bbb82d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
