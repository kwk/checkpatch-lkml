WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#51: FILE: drivers/block/Kconfig:414:
+config BLK_DEV_INITRAMFS
+       bool "Enable RAM filesystem (initramfs) support"
+       default y
+       help
+         The initial RAM filesystem is a ramfs filesystem which can be
+         linked in the kernel and that is mounted as root before the 

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/block/Kconfig:419:
+         linked in the kernel and that is mounted as root before the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: drivers/block/Kconfig:419:
normal

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/block/Kconfig:420:
+         boot procedure. It is typically used to load modules needed to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/block/Kconfig:421:
+         the "real" root file system, etc. See $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/block/Kconfig:424:
+         Enabling BLK_DEV_RAM and BLK_DEV_INITRD adds 60 kbytes size to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/block/Kconfig:429:
+       bool "Check for Initial RAM disk (initrd/initramfs) on kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/block/Kconfig:432:
+         The initial RAM disk is a ramfs filesystem which is loaded by $

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: init/main.c:716:
+        int mkdir_err = sys_mkdir("/dev", 0755);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: init/main.c:716:
+        int mkdir_err = sys_mkdir("/dev", 0755);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: init/main.c:717:
+        int err = sys_mknod((const char __user *) "/dev/console",$

CHECK:SPACING: No space is necessary after a cast
#133: FILE: init/main.c:717:
+        int err = sys_mknod((const char __user *) "/dev/console",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: init/main.c:717:
+        int err = sys_mknod((const char __user *) "/dev/console",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: init/main.c:718:
+                                S_IFCHR | S_IRUSR | S_IWUSR,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: init/main.c:718:
+                                S_IFCHR | S_IRUSR | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#134: FILE: init/main.c:718:
+                                S_IFCHR | S_IRUSR | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: init/main.c:719:
+                                new_encode_dev(MKDEV(5, 1)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: init/main.c:719:
+                                new_encode_dev(MKDEV(5, 1)));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: init/main.c:720:
+        if (err == -EROFS )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: init/main.c:720:
+        if (err == -EROFS )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#136: FILE: init/main.c:720:
+        if (err == -EROFS )
+               printk( "Warning: Failed to create a rootfs\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#136: FILE: init/main.c:720:
+        if (err == -EROFS )

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: init/main.c:721:
+               printk( "Warning: Failed to create a rootfs\n" );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: init/main.c:721:
+               printk( "Warning: Failed to create a rootfs\n" );$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: init/main.c:721:
+               printk( "Warning: Failed to create a rootfs\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#137: FILE: init/main.c:721:
+               printk( "Warning: Failed to create a rootfs\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#137: FILE: init/main.c:721:
+               printk( "Warning: Failed to create a rootfs\n" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: init/main.c:722:
+        mkdir_err = sys_mkdir("/root", 0700);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: init/main.c:722:
+        mkdir_err = sys_mkdir("/root", 0700);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: init/main.c:776:
+       ramdisk_execute_command = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: init/main.c:777:
+       prepare_namespace();$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11912.commit.a08a37b360e1db30f16d5565d9b487bff76b9190 total: 17 errors, 13 warnings, 1 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11912.commit.a08a37b360e1db30f16d5565d9b487bff76b9190 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
