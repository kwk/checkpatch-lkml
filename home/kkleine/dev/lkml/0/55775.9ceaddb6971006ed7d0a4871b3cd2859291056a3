ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: drivers/base/base.h:20:
+extern void bus_delete_device(struct device * dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: drivers/base/base.h:20:
+extern void bus_delete_device(struct device * dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: drivers/base/bus.c:418:
+void bus_delete_device(struct device * dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#112: FILE: drivers/base/bus.c:429:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <attrError>
#234: FILE: drivers/base/core.c:460:
+		goto attrError;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ueventattrError>
#242: FILE: drivers/base/core.c:467:
+			goto ueventattrError;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#269: FILE: drivers/base/core.c:482:
+	if ((error = device_add_class_symlinks(dev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <SymlinkError>
#270: FILE: drivers/base/core.c:483:
+		goto SymlinkError;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#279: FILE: drivers/base/core.c:493:
+	if ((error = bus_attach_device(dev))) {

CHECK:CAMELCASE: Avoid CamelCase: <attachError>
#281: FILE: drivers/base/core.c:495:
+			goto attachError;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/base/core.c:847:
+			printk(KERN_ERR"%s: sysfs_create_symlink(%s) failed\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#337: FILE: drivers/base/core.c:847:
+			printk(KERN_ERR"%s: sysfs_create_symlink(%s) failed\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#338: FILE: drivers/base/core.c:848:
+			       __FUNCTION__, dev->bus_id);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55775.commit.9ceaddb6971006ed7d0a4871b3cd2859291056a3 total: 4 errors, 2 warnings, 7 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55775.commit.9ceaddb6971006ed7d0a4871b3cd2859291056a3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
