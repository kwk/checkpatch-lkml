WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: fs/nfsd/nfs4proc.c:186:
+		memcpy(&cstate->current_fh.fh_handle.fh_base, rp->rp_openfh,
 				rp->rp_openfh_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: fs/nfsd/nfs4proc.c:295:
+	status = exp_pseudoroot(rqstp->rq_client, &cstate->current_fh,
 			      &rqstp->rq_chandle);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: fs/nfsd/nfs4proc.c:401:
+				     &create->cr_iattr,S_IFCHR, rdev, &resfh);
 				                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#397: FILE: fs/nfsd/nfs4proc.c:514:
+	if ((status = nfs4_preprocess_stateid_op(&cstate->current_fh,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: fs/nfsd/nfs4proc.c:515:
+	if ((status = nfs4_preprocess_stateid_op(&cstate->current_fh,
+				&read->rd_stateid,

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/nfsd/nfs4proc.c:602:
+                  (S_ISDIR(cstate->save_fh.fh_dentry->d_inode->i_mode) &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/nfsd/nfs4proc.c:602:
+                  (S_ISDIR(cstate->save_fh.fh_dentry->d_inode->i_mode) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: fs/nfsd/nfs4proc.c:603:
+                   S_ISDIR(cstate->current_fh.fh_dentry->d_inode->i_mode)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: fs/nfsd/nfs4proc.c:603:
+                   S_ISDIR(cstate->current_fh.fh_dentry->d_inode->i_mode)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: fs/nfsd/nfs4proc.c:624:
+		status = nfs4_preprocess_stateid_op(&cstate->current_fh,
 			&setattr->sa_stateid, CHECK_FH | WR_STATE, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: fs/nfsd/nfs4proc.c:638:
+	status = nfsd_setattr(rqstp, &cstate->current_fh, &setattr->sa_iattr,
 				0, (time_t)0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: fs/nfsd/nfs4proc.c:658:
+	status = nfs4_preprocess_stateid_op(&cstate->current_fh, stateid,
 					CHECK_FH | WR_STATE, &filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#556: FILE: fs/nfsd/nfs4proc.c:674:
+	status =  nfsd_write(rqstp, &cstate->current_fh, filp,
 	                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cstate"
#597: FILE: fs/nfsd/nfs4proc.c:760:
+	if (cstate == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cstate)...) over kmalloc(sizeof(struct nfsd4_compound_state)...)
#608: FILE: fs/nfsd/nfs4proc.c:771:
+	cstate = kmalloc(sizeof(struct nfsd4_compound_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cstate"
#609: FILE: fs/nfsd/nfs4proc.c:772:
+	if (cstate == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cstate"
#637: FILE: fs/nfsd/nfs4proc.c:795:
+	if (cstate == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: fs/nfsd/nfs4proc.c:938:
+			op->status = nfsd4_open_downgrade(rqstp, cstate,
+							 &op->u.open_downgrade,

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#861: FILE: fs/nfsd/nfs4state.c:2263:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: fs/nfsd/nfs4state.c:2264:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,
+					oc->oc_seqid, &oc->oc_req_stateid,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#892: FILE: fs/nfsd/nfs4state.c:2334:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: fs/nfsd/nfs4state.c:2335:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,
+					od->od_seqid,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#917: FILE: fs/nfsd/nfs4state.c:2387:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: fs/nfsd/nfs4state.c:2388:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,
+					close->cl_seqid,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#933: FILE: fs/nfsd/nfs4state.c:2421:
+	if ((status = fh_verify(rqstp, &cstate->current_fh, S_IFREG, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#958: FILE: fs/nfsd/nfs4state.c:2669:
+	if ((status = fh_verify(rqstp, &cstate->current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#969: FILE: fs/nfsd/nfs4state.c:2692:
+		status = nfs4_preprocess_seqid_op(&cstate->current_fh,
 				        lock->lk_new_open_seqid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: fs/nfsd/nfs4state.c:2719:
+		status = nfs4_preprocess_seqid_op(&cstate->current_fh,
 				       lock->lk_old_lock_seqid, 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#996: FILE: fs/nfsd/nfs4state.c:2832:
+	if ((status = fh_verify(rqstp, &cstate->current_fh, S_IFREG, 0))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1033: FILE: fs/nfsd/nfs4state.c:2910:
+	if ((status = nfs4_preprocess_seqid_op(&cstate->current_fh,
 					locku->lu_seqid, 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1060: FILE: include/linux/nfsd/xdr4.h:447:
+extern __be32 nfsd4_close(struct svc_rqst *rqstp,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd4_compound_state *' should also have an identifier name
#1060: FILE: include/linux/nfsd/xdr4.h:447:
+extern __be32 nfsd4_close(struct svc_rqst *rqstp,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: include/linux/nfsd/xdr4.h:448:
+extern __be32 nfsd4_close(struct svc_rqst *rqstp,
+		struct nfsd4_compound_state *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1069: FILE: include/linux/nfsd/xdr4.h:454:
+extern __be32 nfsd4_lock(struct svc_rqst *rqstp, struct nfsd4_compound_state *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd4_compound_state *' should also have an identifier name
#1069: FILE: include/linux/nfsd/xdr4.h:454:
+extern __be32 nfsd4_lock(struct svc_rqst *rqstp, struct nfsd4_compound_state *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: include/linux/nfsd/xdr4.h:455:
+extern __be32 nfsd4_lock(struct svc_rqst *rqstp, struct nfsd4_compound_state *,
 		struct nfsd4_lock *lock,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1073: FILE: include/linux/nfsd/xdr4.h:457:
+extern __be32 nfsd4_lockt(struct svc_rqst *rqstp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd4_compound_state *' should also have an identifier name
#1073: FILE: include/linux/nfsd/xdr4.h:457:
+extern __be32 nfsd4_lockt(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: include/linux/nfsd/xdr4.h:458:
+extern __be32 nfsd4_lockt(struct svc_rqst *rqstp,
+		struct nfsd4_compound_state *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1077: FILE: include/linux/nfsd/xdr4.h:460:
+extern __be32 nfsd4_locku(struct svc_rqst *rqstp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd4_compound_state *' should also have an identifier name
#1077: FILE: include/linux/nfsd/xdr4.h:460:
+extern __be32 nfsd4_locku(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: include/linux/nfsd/xdr4.h:461:
+extern __be32 nfsd4_locku(struct svc_rqst *rqstp,
+		struct nfsd4_compound_state *,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11262.commit.6b47c54a1b2b17389d1b1801cc89361243dc3f4a total: 10 errors, 10 warnings, 25 checks, 986 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11262.commit.6b47c54a1b2b17389d1b1801cc89361243dc3f4a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
