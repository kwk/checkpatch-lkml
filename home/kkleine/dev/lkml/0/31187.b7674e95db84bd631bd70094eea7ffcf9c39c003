WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/net/vioc/vioc_ethtool.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/net/vioc/vioc_ethtool.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: drivers/net/vioc/vioc_ethtool.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#89: FILE: drivers/net/vioc/vioc_ethtool.c:48:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#91: FILE: drivers/net/vioc/vioc_ethtool.c:50:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#104: FILE: drivers/net/vioc/vioc_ethtool.c:63:
+#include <asm/uaccess.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'viocdev' may be better as '(viocdev)' to avoid precedence issues
#114: FILE: drivers/net/vioc/vioc_ethtool.c:73:
+#define VIOC_READ_REG(R, M, V, viocdev) (\
+       readl((viocdev->ba.virt + GETRELADDR(M, V, R))))

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#115: FILE: drivers/net/vioc/vioc_ethtool.c:74:
+       readl((viocdev->ba.virt + GETRELADDR(M, V, R))))
                        ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/net/vioc/vioc_ethtool.c:74:
+       readl((viocdev->ba.virt + GETRELADDR(M, V, R))))$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'viocdev' may be better as '(viocdev)' to avoid precedence issues
#117: FILE: drivers/net/vioc/vioc_ethtool.c:76:
+#define VIOC_WRITE_REG(R, M, V, viocdev, value) (\
+       (writel(value, viocdev->ba.virt + GETRELADDR(M, V, R))))

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#118: FILE: drivers/net/vioc/vioc_ethtool.c:77:
+       (writel(value, viocdev->ba.virt + GETRELADDR(M, V, R))))
                                ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/net/vioc/vioc_ethtool.c:77:
+       (writel(value, viocdev->ba.virt + GETRELADDR(M, V, R))))$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#127: FILE: drivers/net/vioc/vioc_ethtool.c:86:
+#define VNIC_STAT(m) sizeof(((struct vnic_device *)0)->m), \
+                     offsetof(struct vnic_device, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#127: FILE: drivers/net/vioc/vioc_ethtool.c:86:
+#define VNIC_STAT(m) sizeof(((struct vnic_device *)0)->m), \
+                     offsetof(struct vnic_device, m)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#127: FILE: drivers/net/vioc/vioc_ethtool.c:86:
+#define VNIC_STAT(m) sizeof(((struct vnic_device *)0)->m), \
+                     offsetof(struct vnic_device, m)

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/net/vioc/vioc_ethtool.c:87:
+                     offsetof(struct vnic_device, m)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/net/vioc/vioc_ethtool.c:87:
+                     offsetof(struct vnic_device, m)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#172: FILE: drivers/net/vioc/vioc_ethtool.c:131:
+#define VNIC_STATS_LEN \
+       sizeof(vnic_gstrings_stats) / sizeof(struct vnic_stats)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/net/vioc/vioc_ethtool.c:132:
+       sizeof(vnic_gstrings_stats) / sizeof(struct vnic_stats)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#182: FILE: drivers/net/vioc/vioc_ethtool.c:141:
+#define VNIC_TEST_LEN sizeof(vnic_gstrings_test) / ETH_GSTRING_LEN

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#188: FILE: drivers/net/vioc/vioc_ethtool.c:147:
+	ecmd->supported = SUPPORTED_1000baseT_Full;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#229: FILE: drivers/net/vioc/vioc_ethtool.c:188:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#234: FILE: drivers/net/vioc/vioc_ethtool.c:193:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#239: FILE: drivers/net/vioc/vioc_ethtool.c:198:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#244: FILE: drivers/net/vioc/vioc_ethtool.c:203:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#249: FILE: drivers/net/vioc/vioc_ethtool.c:208:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#254: FILE: drivers/net/vioc/vioc_ethtool.c:213:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#259: FILE: drivers/net/vioc/vioc_ethtool.c:218:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#264: FILE: drivers/net/vioc/vioc_ethtool.c:223:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#269: FILE: drivers/net/vioc/vioc_ethtool.c:228:
+	sprintf(regs_buff, "%08Lx = %08x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#275: FILE: drivers/net/vioc/vioc_ethtool.c:234:
+	sprintf(regs_buff, "%08Lx = %08x\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#281: FILE: drivers/net/vioc/vioc_ethtool.c:240:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: drivers/net/vioc/vioc_ethtool.c:265:
+				   struct ethtool_stats *stats, u64 * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: drivers/net/vioc/vioc_ethtool.c:272:
+		char *p = (char *)vnicdev + vnic_gstrings_stats[i].stat_offset;
+		data[i] = (vnic_gstrings_stats[i].sizeof_stat ==

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#314: FILE: drivers/net/vioc/vioc_ethtool.c:273:
+			   sizeof(u64)) ? *(u64 *) p : *(u32 *) p;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: drivers/net/vioc/vioc_ethtool.c:278:
+			     u8 * data)

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#338: FILE: drivers/net/vioc/vioc_ethtool.c:297:
+struct ethtool_ops vioc_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31187.commit.b7674e95db84bd631bd70094eea7ffcf9c39c003 total: 8 errors, 22 warnings, 7 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31187.commit.b7674e95db84bd631bd70094eea7ffcf9c39c003 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
