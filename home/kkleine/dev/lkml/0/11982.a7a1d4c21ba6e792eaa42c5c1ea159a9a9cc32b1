WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#62: FILE: arch/m32r/boot/compressed/m32r_sio.c:20:
+#if defined(CONFIG_PLAT_M32700UT_Alpha) || defined(CONFIG_PLAT_M32700UT) || defined(CONFIG_PLAT_OPSPUT)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_PLAT_M32700UT_Alpha>
#62: FILE: arch/m32r/boot/compressed/m32r_sio.c:20:
+#if defined(CONFIG_PLAT_M32700UT_Alpha) || defined(CONFIG_PLAT_M32700UT) || defined(CONFIG_PLAT_OPSPUT)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: arch/m32r/kernel/io_opsput.c:56:
+^Idefault: ^Ireturn (void *)&dummy_reg;$

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#125: FILE: arch/m32r/kernel/io_opsput.c:122:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#126: FILE: arch/m32r/kernel/io_opsput.c:123:
+		return *(volatile unsigned char *)__port2addr_ata(port);

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#137: FILE: arch/m32r/kernel/io_opsput.c:142:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#137: FILE: arch/m32r/kernel/io_opsput.c:142:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
+		return *(volatile unsigned short *)__port2addr_ata(port);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#138: FILE: arch/m32r/kernel/io_opsput.c:143:
+		return *(volatile unsigned short *)__port2addr_ata(port);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#147: FILE: arch/m32r/kernel/io_opsput.c:197:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#149: FILE: arch/m32r/kernel/io_opsput.c:199:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: arch/m32r/kernel/io_opsput.c:200:
+		*(volatile unsigned char *)__port2addr_ata(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#151: FILE: arch/m32r/kernel/io_opsput.c:201:
+	} else
[...]
 	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#151: FILE: arch/m32r/kernel/io_opsput.c:201:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#159: FILE: arch/m32r/kernel/io_opsput.c:215:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#161: FILE: arch/m32r/kernel/io_opsput.c:217:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#161: FILE: arch/m32r/kernel/io_opsput.c:217:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#162: FILE: arch/m32r/kernel/io_opsput.c:218:
+		*(volatile unsigned short *)__port2addr_ata(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#163: FILE: arch/m32r/kernel/io_opsput.c:219:
+	} else
[...]
 	if(port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#163: FILE: arch/m32r/kernel/io_opsput.c:219:
+	} else

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#173: FILE: arch/m32r/kernel/io_opsput.c:267:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: arch/m32r/kernel/io_opsput.c:270:
+		unsigned char *portp = __port2addr_ata(port);
+		while (count--)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#177: FILE: arch/m32r/kernel/io_opsput.c:271:
+			*buf++ = *(volatile unsigned char *)portp;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#188: FILE: arch/m32r/kernel/io_opsput.c:307:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#191: FILE: arch/m32r/kernel/io_opsput.c:310:
+			*buf++ = *(volatile unsigned short *)portp;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#201: FILE: arch/m32r/kernel/io_opsput.c:339:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#204: FILE: arch/m32r/kernel/io_opsput.c:342:
+			*(volatile unsigned char *)portp = *buf++;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#214: FILE: arch/m32r/kernel/io_opsput.c:370:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#217: FILE: arch/m32r/kernel/io_opsput.c:373:
+			*(volatile unsigned short *)portp = *buf++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#274: FILE: include/asm-m32r/ide.h:36:
+#if defined(CONFIG_PLAT_M32700UT) || defined(CONFIG_PLAT_MAPPI2) \
+	|| defined(CONFIG_PLAT_OPSPUT)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11982.commit.a7a1d4c21ba6e792eaa42c5c1ea159a9a9cc32b1 total: 8 errors, 16 warnings, 5 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11982.commit.a7a1d4c21ba6e792eaa42c5c1ea159a9a9cc32b1 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
