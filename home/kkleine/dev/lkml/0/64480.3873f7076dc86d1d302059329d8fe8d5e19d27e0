WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#44: FILE: kernel/power/pagedir.c:60:
+ * ^I^Icase where it is bigger than pagedir2.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: kernel/power/pagedir.c:61:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#45: FILE: kernel/power/pagedir.c:61:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#46: FILE: kernel/power/pagedir.c:62:
+ * ^I^I^I^I^Iallocate memory.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#47: FILE: kernel/power/pagedir.c:63:
+ * ^I^Iint:^I^I^ISize of pageset 1.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#48: FILE: kernel/power/pagedir.c:64:
+ * ^I^Iint:^I^I^ISize of pageset 2.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: kernel/power/pagedir.c:68:
+int suspend_allocate_extra_pagedir_memory(struct pagedir *p, int pageset_size,
+		int alloc_from)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: kernel/power/pagedir.c:85:
+^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#87: FILE: kernel/power/pagedir.c:103:
+			extras_entry = (struct extras *) kmalloc(sizeof(struct extras), GFP_ATOMIC);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#87: FILE: kernel/power/pagedir.c:103:
+			extras_entry = (struct extras *) kmalloc(sizeof(struct extras), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*extras_entry)...) over kmalloc(sizeof(struct extras)...)
#87: FILE: kernel/power/pagedir.c:103:
+			extras_entry = (struct extras *) kmalloc(sizeof(struct extras), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#108: FILE: kernel/power/pagedir.c:124:
+			num_added+= (1 << order);
 			         ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64480.commit.3873f7076dc86d1d302059329d8fe8d5e19d27e0 total: 3 errors, 6 warnings, 3 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64480.commit.3873f7076dc86d1d302059329d8fe8d5e19d27e0 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
