WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
	- add hook to call pfm_handle_switch_timeout() on timer tick for timeout based

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/x86_64/kernel/apic.c:938:
+ ^Ipfm_handle_switch_timeout();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: arch/x86_64/kernel/apic.c:938:
+ ^Ipfm_handle_switch_timeout();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/x86_64/kernel/apic.c:938:
+ ^Ipfm_handle_switch_timeout();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/x86_64/kernel/i8259.c:594:
+ ^Ipfm_vector_init();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: arch/x86_64/kernel/i8259.c:594:
+ ^Ipfm_vector_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/x86_64/kernel/i8259.c:594:
+ ^Ipfm_vector_init();$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#204: FILE: arch/x86_64/kernel/process.c:541:
+	if (test_tsk_thread_flag(next_p, TIF_PERFMON)
+	    || test_tsk_thread_flag(prev_p, TIF_PERFMON))

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/x86_64/kernel/process.c:631:
+  ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: arch/x86_64/kernel/process.c:631:
+  ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/x86_64/kernel/process.c:631:
+  ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/x86_64/kernel/process.c:632:
+ ^I * Now maybe reload the debug registers and handle I/O bitmaps$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: arch/x86_64/kernel/process.c:632:
+ ^I * Now maybe reload the debug registers and handle I/O bitmaps$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/x86_64/kernel/process.c:633:
+  ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: arch/x86_64/kernel/process.c:633:
+  ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/x86_64/kernel/process.c:634:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: arch/x86_64/kernel/process.c:634:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/x86_64/kernel/process.c:634:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/x86_64/kernel/process.c:635:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: arch/x86_64/kernel/process.c:635:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#224: FILE: arch/x86_64/kernel/process.c:635:
+ 	if (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)
+ 	    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/x86_64/kernel/process.c:635:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/x86_64/kernel/process.c:636:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: arch/x86_64/kernel/process.c:636:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/x86_64/kernel/process.c:636:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#299: FILE: include/asm-x86_64/thread_info.h:127:
+#define _TIF_PERFMON		(1<<TIF_PERFMON)
                     		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: include/asm-x86_64/thread_info.h:127:
+#define _TIF_PERFMON		(1<<TIF_PERFMON)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#308: FILE: include/asm-x86_64/thread_info.h:136:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#308: FILE: include/asm-x86_64/thread_info.h:136:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON)
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: include/asm-x86_64/unistd.h:621:
+ __SYSCALL(__NR_pfm_create_context, sys_pfm_create_context)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#323: FILE: include/asm-x86_64/unistd.h:622:
+#define __NR_pfm_write_pmcs	(__NR_pfm_create_context+1)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: include/asm-x86_64/unistd.h:624:
+#define __NR_pfm_write_pmds	(__NR_pfm_create_context+2)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: include/asm-x86_64/unistd.h:626:
+#define __NR_pfm_read_pmds	(__NR_pfm_create_context+3)
                           	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: include/asm-x86_64/unistd.h:628:
+#define __NR_pfm_load_context	(__NR_pfm_create_context+4)
                              	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#331: FILE: include/asm-x86_64/unistd.h:630:
+#define __NR_pfm_start		(__NR_pfm_create_context+5)
                       		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#333: FILE: include/asm-x86_64/unistd.h:632:
+#define __NR_pfm_stop		(__NR_pfm_create_context+6)
                      		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#335: FILE: include/asm-x86_64/unistd.h:634:
+#define __NR_pfm_restart	(__NR_pfm_create_context+7)
                         	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#337: FILE: include/asm-x86_64/unistd.h:636:
+#define __NR_pfm_create_evtsets	(__NR_pfm_create_context+8)
                                	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#339: FILE: include/asm-x86_64/unistd.h:638:
+#define __NR_pfm_getinfo_evtsets (__NR_pfm_create_context+9)
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: include/asm-x86_64/unistd.h:640:
+#define __NR_pfm_delete_evtsets (__NR_pfm_create_context+10)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: include/asm-x86_64/unistd.h:642:
+#define __NR_pfm_unload_context	(__NR_pfm_create_context+11)
                                	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: include/asm-x86_64/unistd.h:644:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: include/asm-x86_64/unistd.h:644:
+  $

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44977.commit.da81b4950b01c34162edb2a3823fa1547ba9e41f total: 9 errors, 17 warnings, 17 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44977.commit.da81b4950b01c34162edb2a3823fa1547ba9e41f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
