WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
> >   here's a few paragraphs about the power management code I'm working on.

WARNING:TYPO_SPELLING: 'functionaly' may be misspelled - perhaps 'functionally'?
#42: 
> > The OpPoint patch set is a fully functionaly power management solution,
                                     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#71: 
Signed-Off-by: David Singleton <dsingleton@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: kernel/power/main.c:53:
+static int suspend_prepare(struct oppoint * state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#105: FILE: kernel/power/main.c:85:
        if (pm_ops->prepare) {
+               if ((error = pm_ops->prepare(state->type)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))
                        goto Thaw;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#114: FILE: kernel/power/main.c:97:
        if (pm_ops->finish)
+               pm_ops->finish(state->type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: kernel/power/main.c:98:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/power/main.c:98:
+               pm_ops->finish(state->type);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: kernel/power/main.c:108:
+int suspend_enter(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/power/main.c:119:
+       error = pm_ops->enter(state->type);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: kernel/power/main.c:135:
+static void suspend_finish(struct oppoint * state)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#149: FILE: kernel/power/main.c:141:
        if (pm_ops && pm_ops->finish)
+               pm_ops->finish(state->type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/power/main.c:142:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/power/main.c:142:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/power/main.c:149:
+       .name = "default",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/power/main.c:150:
+       .type = PM_SUSPEND_ON,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/power/main.c:154:
+       .name = "standby",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/power/main.c:155:
+       .type = PM_SUSPEND_STANDBY,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#166: FILE: kernel/power/main.c:157:
+};
+struct oppoint *oppoint_standby;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: kernel/power/main.c:160:
+       .name = "mem",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/power/main.c:161:
+       .type = PM_SUSPEND_MEM,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: kernel/power/main.c:162:
+       .frequency = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/power/main.c:163:
+       .voltage = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/power/main.c:164:
+       .latency = 150,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#175: FILE: kernel/power/main.c:166:
+};
+struct oppoint *oppoint_mem;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: kernel/power/main.c:170:
+       .name = "disk",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/power/main.c:171:
+       .type = PM_SUSPEND_DISK,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/power/main.c:180:
+       int error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/power/main.c:182:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#197: FILE: kernel/power/main.c:182:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: kernel/power/main.c:183:
+            state->name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: kernel/power/main.c:183:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,
+            state->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/power/main.c:183:
+            state->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: kernel/power/main.c:185:
+        * compare to current operating point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: kernel/power/main.c:186:
+        * if different change to new operating point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/power/main.c:187:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/power/main.c:188:
+       if (current_state == state)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#203: FILE: kernel/power/main.c:188:
+       if (current_state == state)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/power/main.c:189:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/power/main.c:189:
+               goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/power/main.c:192:
+        * prepare_transition does device constraint checking.  If$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: kernel/power/main.c:193:
+        * a new operating point will put a device in an unsupported$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/power/main.c:194:
+        * state, lcd clock too low, NIC bus too low, etc.  the new state$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/power/main.c:195:
+        * cannot be entered (until the constrainded device is suspended).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/power/main.c:196:
+        * If prepare_transition fails we don't go to the new operating$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: kernel/power/main.c:197:
+        * point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/power/main.c:198:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/power/main.c:199:
+       if ((error = state->prepare_transition(current_state, state)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#214: FILE: kernel/power/main.c:199:
+       if ((error = state->prepare_transition(current_state, state)))
+               goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: kernel/power/main.c:199:
+       if ((error = state->prepare_transition(current_state, state)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: kernel/power/main.c:200:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/power/main.c:200:
+               goto out;$

WARNING:TYPO_SPELLING: 'transistion' may be misspelled - perhaps 'transition'?
#218: FILE: kernel/power/main.c:203:
+        * if the transition fails we call the finish transistion
                                                      ^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: kernel/power/main.c:203:
+        * if the transition fails we call the finish transistion$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: kernel/power/main.c:204:
+        * with the current state as the new state, causing$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: kernel/power/main.c:205:
+        * the finish to return to the current_state.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: kernel/power/main.c:206:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/power/main.c:208:
+       if ((error = state->transition(current_state, state)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#223: FILE: kernel/power/main.c:208:
+       if ((error = state->transition(current_state, state)))
+               state = current_state;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: kernel/power/main.c:208:
+       if ((error = state->transition(current_state, state)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: kernel/power/main.c:209:
+               state = current_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/power/main.c:209:
+               state = current_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: kernel/power/main.c:211:
+       if ((state->finish_transition(current_state, state)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#226: FILE: kernel/power/main.c:211:
+       if ((state->finish_transition(current_state, state)) == 0)
+               current_state = state;

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: kernel/power/main.c:212:
+               current_state = state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: kernel/power/main.c:212:
+               current_state = state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/power/main.c:215:
+       printk("OpPoint: State change returned %d\n", error);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#230: FILE: kernel/power/main.c:215:
+       printk("OpPoint: State change returned %d\n", error);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: kernel/power/main.c:216:
+       return error;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: kernel/power/main.c:219:
+static inline int valid_state(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: kernel/power/main.c:223:
+       if (state->type == PM_SUSPEND_DISK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#239: FILE: kernel/power/main.c:223:
+       if (state->type == PM_SUSPEND_DISK)
                return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/power/main.c:226:
+       if (pm_ops && pm_ops->valid && !pm_ops->valid(state->type))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#243: FILE: kernel/power/main.c:226:
+       if (pm_ops && pm_ops->valid && !pm_ops->valid(state->type))
                return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: kernel/power/main.c:252:
+       if (state->type == PM_SUSPEND_DISK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#270: FILE: kernel/power/main.c:252:
+       if (state->type == PM_SUSPEND_DISK) {
                error = pm_suspend_disk();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: kernel/power/main.c:257:
+       if (state->type == PM_FREQ_CHANGE || state->type == PM_VOLT_CHANGE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#276: FILE: kernel/power/main.c:257:
+       if (state->type == PM_FREQ_CHANGE || state->type == PM_VOLT_CHANGE) {
+               error = pm_change_state(state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: kernel/power/main.c:258:
+               error = pm_change_state(state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: kernel/power/main.c:258:
+               error = pm_change_state(state);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: kernel/power/main.c:259:
+               goto Unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: kernel/power/main.c:259:
+               goto Unlock;$

CHECK:CAMELCASE: Avoid CamelCase: <Unlock>
#278: FILE: kernel/power/main.c:259:
+               goto Unlock;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/power/main.c:260:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: kernel/power/main.c:262:
+       pr_debug("PM: Preparing system for %s sleep\n", state->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/power/main.c:266:
+       pr_debug("PM: Entering %s sleep\n", state->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/power/main.c:282:
+       struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/power/main.c:283:
+       struct list_head *head = &pm_states.list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/power/main.c:284:
+       int error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/power/main.c:286:
+       list_for_each_entry_safe(this, next, head, list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#299: FILE: kernel/power/main.c:286:
+       list_for_each_entry_safe(this, next, head, list) {
+               if (this->type == PM_SUSPEND_DISK)

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: kernel/power/main.c:287:
+               if (this->type == PM_SUSPEND_DISK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/power/main.c:287:
+               if (this->type == PM_SUSPEND_DISK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#300: FILE: kernel/power/main.c:287:
+               if (this->type == PM_SUSPEND_DISK)
+                       error= enter_state(this);

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: kernel/power/main.c:288:
+                       error= enter_state(this);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/power/main.c:288:
+                       error= enter_state(this);$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#301: FILE: kernel/power/main.c:288:
+                       error= enter_state(this);
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: kernel/power/main.c:289:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/power/main.c:290:
+       return error;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#312: FILE: kernel/power/main.c:302:
+int pm_suspend(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: kernel/power/main.c:304:
+       if (state->type > PM_SUSPEND_ON && state->type <= PM_SUSPEND_MAX)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#315: FILE: kernel/power/main.c:304:
+       if (state->type > PM_SUSPEND_ON && state->type <= PM_SUSPEND_MAX)
                return enter_state(state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/power/main.c:329:
+       s += sprintf(s,"%s\n", current_state->name);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: kernel/power/main.c:329:
+       s += sprintf(s,"%s\n", current_state->name);
                      ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#336: FILE: kernel/power/main.c:333:
buf, size_t n)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: kernel/power/main.c:335:
+       struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/power/main.c:336:
+       struct list_head *head = &pm_states.list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/power/main.c:338:
+       int error = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/power/main.c:343:
+       list_for_each_entry_safe(this, next, head, list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#352: FILE: kernel/power/main.c:343:
+       list_for_each_entry_safe(this, next, head, list) {
+               if ((strlen(this->name) == len) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: kernel/power/main.c:344:
+               if ((strlen(this->name) == len) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: kernel/power/main.c:344:
+               if ((strlen(this->name) == len) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#353: FILE: kernel/power/main.c:344:
+               if ((strlen(this->name) == len) &&
[...]
+                       error = enter_state(this);

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: kernel/power/main.c:345:
+                  (!strncmp(this->name, buf, len))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: kernel/power/main.c:345:
+               if ((strlen(this->name) == len) &&
+                  (!strncmp(this->name, buf, len))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/power/main.c:345:
+                  (!strncmp(this->name, buf, len))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: kernel/power/main.c:346:
+                       error = enter_state(this);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: kernel/power/main.c:346:
+                       error = enter_state(this);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: kernel/power/main.c:348:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: kernel/power/main.c:348:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: kernel/power/main.c:365:
+        .kset = &power_subsys.kset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: kernel/power/main.c:365:
+        .kset = &power_subsys.kset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: kernel/power/main.c:369:
+        struct attribute        attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: kernel/power/main.c:369:
+        struct attribute        attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: kernel/power/main.c:370:
+        ssize_t (*show)(struct kobject * kobj, char * buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: kernel/power/main.c:370:
+        ssize_t (*show)(struct kobject * kobj, char * buf);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#376: FILE: kernel/power/main.c:370:
+        ssize_t (*show)(struct kobject * kobj, char * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#376: FILE: kernel/power/main.c:370:
+        ssize_t (*show)(struct kobject * kobj, char * buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: kernel/power/main.c:371:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: kernel/power/main.c:371:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: kernel/power/main.c:371:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: kernel/power/main.c:371:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: kernel/power/main.c:372:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,
+};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: kernel/power/main.c:374:
+#define to_oppoint(obj) container_of(obj,struct oppoint,kobj)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: kernel/power/main.c:374:
+#define to_oppoint(obj) container_of(obj,struct oppoint,kobj)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: kernel/power/main.c:375:
+#define to_oppoint_attr(_attr) container_of(_attr,struct
                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: kernel/power/main.c:380:
+static ssize_t oppoint_voltage_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: kernel/power/main.c:380:
+static ssize_t oppoint_voltage_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: kernel/power/main.c:382:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: kernel/power/main.c:383:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: kernel/power/main.c:385:
+       len = sprintf(buf, "%8d\n", opt->voltage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: kernel/power/main.c:387:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: kernel/power/main.c:390:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: kernel/power/main.c:390:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: kernel/power/main.c:391:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,
+       size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: kernel/power/main.c:391:
+       size_t n)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: kernel/power/main.c:393:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: kernel/power/main.c:393:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#403: FILE: kernel/power/main.c:395:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: kernel/power/main.c:397:
+static ssize_t oppoint_frequency_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: kernel/power/main.c:397:
+static ssize_t oppoint_frequency_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/power/main.c:399:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/power/main.c:400:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: kernel/power/main.c:402:
+       len = sprintf(buf, "%8d\n", opt->frequency);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: kernel/power/main.c:404:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#415: FILE: kernel/power/main.c:407:
+static ssize_t oppoint_frequency_store(struct kobject * kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: kernel/power/main.c:408:
+        const char * buf, size_t n)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: kernel/power/main.c:408:
+static ssize_t oppoint_frequency_store(struct kobject * kobj,
+        const char * buf, size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: kernel/power/main.c:408:
+        const char * buf, size_t n)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#416: FILE: kernel/power/main.c:408:
+        const char * buf, size_t n)

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: kernel/power/main.c:410:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: kernel/power/main.c:410:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#420: FILE: kernel/power/main.c:412:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#422: FILE: kernel/power/main.c:414:
+static ssize_t oppoint_latency_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#422: FILE: kernel/power/main.c:414:
+static ssize_t oppoint_latency_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: kernel/power/main.c:416:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: kernel/power/main.c:417:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/power/main.c:419:
+       len = sprintf(buf, "%8d\n", opt->latency);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/power/main.c:421:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: kernel/power/main.c:424:
+static ssize_t oppoint_latency_store(struct kobject * kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/power/main.c:425:
+        const char * buf, size_t n)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: kernel/power/main.c:425:
+static ssize_t oppoint_latency_store(struct kobject * kobj,
+        const char * buf, size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: kernel/power/main.c:425:
+        const char * buf, size_t n)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: kernel/power/main.c:425:
+        const char * buf, size_t n)

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/power/main.c:427:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/power/main.c:427:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#437: FILE: kernel/power/main.c:429:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: kernel/power/main.c:432:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: kernel/power/main.c:432:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: kernel/power/main.c:433:
+                .name = "frequency",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: kernel/power/main.c:433:
+                .name = "frequency",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: kernel/power/main.c:434:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: kernel/power/main.c:434:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: kernel/power/main.c:435:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: kernel/power/main.c:435:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: kernel/power/main.c:436:
+        .show   = oppoint_frequency_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: kernel/power/main.c:436:
+        .show   = oppoint_frequency_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: kernel/power/main.c:437:
+        .store  = oppoint_frequency_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: kernel/power/main.c:437:
+        .store  = oppoint_frequency_store,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: kernel/power/main.c:441:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: kernel/power/main.c:441:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: kernel/power/main.c:442:
+                .name = "voltage",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: kernel/power/main.c:442:
+                .name = "voltage",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: kernel/power/main.c:443:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: kernel/power/main.c:443:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: kernel/power/main.c:444:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: kernel/power/main.c:444:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: kernel/power/main.c:445:
+        .show   = oppoint_voltage_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: kernel/power/main.c:445:
+        .show   = oppoint_voltage_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: kernel/power/main.c:446:
+        .store  = oppoint_voltage_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: kernel/power/main.c:446:
+        .store  = oppoint_voltage_store,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: kernel/power/main.c:450:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: kernel/power/main.c:450:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: kernel/power/main.c:451:
+                .name = "latency",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/power/main.c:451:
+                .name = "latency",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: kernel/power/main.c:452:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: kernel/power/main.c:452:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: kernel/power/main.c:453:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: kernel/power/main.c:453:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: kernel/power/main.c:454:
+        .show   = oppoint_latency_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: kernel/power/main.c:454:
+        .show   = oppoint_latency_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: kernel/power/main.c:455:
+        .store  = oppoint_latency_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: kernel/power/main.c:455:
+        .store  = oppoint_latency_store,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: kernel/power/main.c:459:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: kernel/power/main.c:459:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: kernel/power/main.c:459:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: kernel/power/main.c:461:
+       struct oppoint_attribute * opt_attr = to_oppoint_attr(attr);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#469: FILE: kernel/power/main.c:461:
+       struct oppoint_attribute * opt_attr = to_oppoint_attr(attr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: kernel/power/main.c:462:
+       ssize_t ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/power/main.c:464:
+       if (opt_attr->show)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#472: FILE: kernel/power/main.c:464:
+       if (opt_attr->show)
+               ret = opt_attr->show(kobj,buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: kernel/power/main.c:465:
+               ret = opt_attr->show(kobj,buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: kernel/power/main.c:465:
+               ret = opt_attr->show(kobj,buf);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#473: FILE: kernel/power/main.c:465:
+               ret = opt_attr->show(kobj,buf);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/power/main.c:466:
+       return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#478: FILE: kernel/power/main.c:470:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#478: FILE: kernel/power/main.c:470:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: kernel/power/main.c:471:
+             const char * buf, size_t count)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: kernel/power/main.c:471:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,
+             const char * buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: kernel/power/main.c:471:
+             const char * buf, size_t count)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#479: FILE: kernel/power/main.c:471:
+             const char * buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: kernel/power/main.c:473:
+       return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: kernel/power/main.c:478:
+       return;$

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#489: FILE: kernel/power/main.c:481:
+static struct sysfs_ops oppoint_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/power/main.c:482:
+       .show   = oppoint_attr_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/power/main.c:483:
+       .store  = oppoint_attr_store,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#494: FILE: kernel/power/main.c:486:
+static struct attribute * oppoint_default_attrs[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/power/main.c:487:
+       &frequency_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/power/main.c:488:
+       &voltage_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/power/main.c:489:
+       &latency_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/power/main.c:490:
+       NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: kernel/power/main.c:494:
+        .release        = oppoint_kobj_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: kernel/power/main.c:494:
+        .release        = oppoint_kobj_release,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: kernel/power/main.c:495:
+        .sysfs_ops      = &oppoint_sysfs_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: kernel/power/main.c:495:
+        .sysfs_ops      = &oppoint_sysfs_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/power/main.c:496:
+        .default_attrs  = oppoint_default_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: kernel/power/main.c:496:
+        .default_attrs  = oppoint_default_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: kernel/power/main.c:501:
+       down(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: kernel/power/main.c:502:
+       list_del_init(&opt->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: kernel/power/main.c:503:
+       sysfs_remove_file(&opt->kobj, &frequency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: kernel/power/main.c:504:
+       sysfs_remove_file(&opt->kobj, &voltage_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: kernel/power/main.c:505:
+       sysfs_remove_file(&opt->kobj, &latency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: kernel/power/main.c:506:
+       up(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: kernel/power/main.c:512:
+       down(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: kernel/power/main.c:513:
+       kobject_set_name(&opt->kobj, opt->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: kernel/power/main.c:514:
+       opt->kobj.kset = &power_subsys.kset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: kernel/power/main.c:515:
+       opt->kobj.parent = &oppoint_kobj;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/power/main.c:516:
+       opt->kobj.ktype = &ktype_operating_point;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/power/main.c:517:
+       kobject_register(&opt->kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/power/main.c:519:
+       sysfs_create_file(&opt->kobj, &frequency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: kernel/power/main.c:520:
+       sysfs_create_file(&opt->kobj, &voltage_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: kernel/power/main.c:521:
+       sysfs_create_file(&opt->kobj, &latency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: kernel/power/main.c:523:
+       list_add_tail(&opt->list, &pm_states.list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/power/main.c:524:
+       up(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/power/main.c:525:
+       return 0;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#539: FILE: kernel/power/main.c:531:
 {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/power/main.c:533:
+       if (!error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#542: FILE: kernel/power/main.c:533:
+       if (!error) {
                error = sysfs_create_group(&power_subsys.kset.kobj,&attr_group);

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: kernel/power/main.c:535:
+               kobject_set_name(&oppoint_kobj, "operating_points");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/power/main.c:535:
+               kobject_set_name(&oppoint_kobj, "operating_points");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: kernel/power/main.c:536:
+               kobject_register(&oppoint_kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/power/main.c:536:
+               kobject_register(&oppoint_kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: kernel/power/main.c:537:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: kernel/power/main.c:539:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/power/main.c:540:
+       INIT_LIST_HEAD(&pm_states.list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: kernel/power/main.c:543:
+       register_operating_point(&disk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: kernel/power/main.c:545:
+       register_operating_point(&mem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/power/main.c:546:
+       register_operating_point(&standby);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/power/main.c:547:
+       current_state = &pm_states;$

CHECK:SPACING: No space is necessary after a cast
#578: FILE: include/linux/pm.h:112:
+#define PM_FREQ_CHANGE         ((__force suspend_state_t) 5)

CHECK:SPACING: No space is necessary after a cast
#579: FILE: include/linux/pm.h:113:
+#define PM_VOLT_CHANGE         ((__force suspend_state_t) 6)

CHECK:SPACING: No space is necessary after a cast
#580: FILE: include/linux/pm.h:114:
+#define PM_SUSPEND_MAX         ((__force suspend_state_t) 7)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: include/linux/pm.h:117:
+       struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: include/linux/pm.h:118:
+       suspend_state_t type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: include/linux/pm.h:119:
+       unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: include/linux/pm.h:120:
+       char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: include/linux/pm.h:121:
+       unsigned int frequency;         /* in KHz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: include/linux/pm.h:122:
+       unsigned int voltage;           /* mV */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: include/linux/pm.h:123:
+       unsigned int latency;           /* transition latency in us */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: include/linux/pm.h:124:
+       int     (*prepare_transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: include/linux/pm.h:125:
+       int     (*transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: include/linux/pm.h:126:
+       int     (*finish_transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: include/linux/pm.h:128:
+       void *md_data;                  /* arch dependent data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: include/linux/pm.h:129:
+       struct kobject kobj;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: include/linux/pm.h:132:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#601: FILE: include/linux/pm.h:135:
+extern unsigned long oppoint_compute_lpj(unsigned long ref, u_int

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#603: FILE: include/linux/pm.h:136:
+extern int register_operating_point(struct oppoint *opt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#604: FILE: include/linux/pm.h:137:
+extern int unregister_operating_point(struct oppoint *opt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#606: FILE: include/linux/pm.h:139:
+extern void oppoint_register_scale(struct notifier_block *nb, int level);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#607: FILE: include/linux/pm.h:140:
+extern void oppoint_unregister_scale(struct notifier_block *nb, int level);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#608: FILE: include/linux/pm.h:141:
+extern int oppoint_driver_scale(int level, struct oppoint *new);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#617: FILE: include/linux/pm.h:161:
+extern int pm_suspend(struct oppoint *state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#630: FILE: kernel/power/power.h:116:
+extern int suspend_enter(struct oppoint * state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#630: FILE: kernel/power/power.h:116:
+extern int suspend_enter(struct oppoint * state);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#658: FILE: drivers/base/power/oppoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'ower' may be misspelled - perhaps 'lower'?
#659: FILE: drivers/base/power/oppoint.c:2:
+ * oppoint.c -- OpPoint ower Management support (hotplug events and device
                         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#681: FILE: drivers/base/power/oppoint.c:24:
+/* This function may be called by the platform frequency scaler before
+   or after a frequency change, in order to let drivers adjust any

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#682: FILE: drivers/base/power/oppoint.c:25:
+   clocks or calculations for the new frequency. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: drivers/base/power/oppoint.c:29:
+        if (down_trylock(&oppoint_scale_sem))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/base/power/oppoint.c:29:
+        if (down_trylock(&oppoint_scale_sem))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: drivers/base/power/oppoint.c:30:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/base/power/oppoint.c:30:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: drivers/base/power/oppoint.c:32:
+        raw_notifier_call_chain(&oppoint_scale_notifier, level, newop);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/base/power/oppoint.c:32:
+        raw_notifier_call_chain(&oppoint_scale_notifier, level, newop);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: drivers/base/power/oppoint.c:33:
+        up(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/base/power/oppoint.c:33:
+        up(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/base/power/oppoint.c:34:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: drivers/base/power/oppoint.c:39:
+        down(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/base/power/oppoint.c:39:
+        down(&oppoint_scale_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: drivers/base/power/oppoint.c:40:
+        raw_notifier_chain_register(&oppoint_scale_notifier, nb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/base/power/oppoint.c:40:
+        raw_notifier_chain_register(&oppoint_scale_notifier, nb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: drivers/base/power/oppoint.c:41:
+        up(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/base/power/oppoint.c:41:
+        up(&oppoint_scale_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: drivers/base/power/oppoint.c:46:
+        down(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/base/power/oppoint.c:46:
+        down(&oppoint_scale_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/base/power/oppoint.c:47:
+        raw_notifier_chain_unregister(&oppoint_scale_notifier, nb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/base/power/oppoint.c:47:
+        raw_notifier_chain_unregister(&oppoint_scale_notifier, nb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: drivers/base/power/oppoint.c:48:
+        up(&oppoint_scale_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/base/power/oppoint.c:48:
+        up(&oppoint_scale_sem);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#708: FILE: drivers/base/power/oppoint.c:51:
+EXPORT_SYMBOL(oppoint_driver_scale);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#709: FILE: drivers/base/power/oppoint.c:52:
+EXPORT_SYMBOL(oppoint_register_scale);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#710: FILE: drivers/base/power/oppoint.c:53:
+EXPORT_SYMBOL(oppoint_unregister_scale);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/base/power/oppoint.c:57:
+       unsigned long new_jiffy_l, new_jiffy_h;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/base/power/oppoint.c:60:
+        * Recalculate loops_per_jiffy.  We do it this way to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: drivers/base/power/oppoint.c:61:
+        * avoid math overflow on 32-bit machines.  Maybe we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: drivers/base/power/oppoint.c:62:
+        * should make this architecture dependent?  If you have$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: drivers/base/power/oppoint.c:63:
+        * a better way of doing this, please replace!$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: drivers/base/power/oppoint.c:64:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: drivers/base/power/oppoint.c:65:
+        *    new = old * mult / div$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: drivers/base/power/oppoint.c:66:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: drivers/base/power/oppoint.c:67:
+        new_jiffy_h = ref / div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: drivers/base/power/oppoint.c:67:
+        new_jiffy_h = ref / div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: drivers/base/power/oppoint.c:68:
+        new_jiffy_l = (ref % div) / 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/base/power/oppoint.c:68:
+        new_jiffy_l = (ref % div) / 100;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: drivers/base/power/oppoint.c:69:
+        new_jiffy_h *= mult;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/base/power/oppoint.c:69:
+        new_jiffy_h *= mult;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: drivers/base/power/oppoint.c:70:
+        new_jiffy_l = new_jiffy_l * mult / div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/base/power/oppoint.c:70:
+        new_jiffy_l = new_jiffy_l * mult / div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: drivers/base/power/oppoint.c:72:
+        return new_jiffy_h + new_jiffy_l * 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/base/power/oppoint.c:72:
+        return new_jiffy_h + new_jiffy_l * 100;$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38279.commit.d98905e7060b10005897ced02681c497119dda1d total: 126 errors, 201 warnings, 27 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38279.commit.d98905e7060b10005897ced02681c497119dda1d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
