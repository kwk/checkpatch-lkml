WARNING:LINE_SPACING: Missing a blank line after declarations
#62: FILE: arch/i386/pci/mmconfig-shared.c:62:
+	u32 win;
+	pci_conf1_read(0, 0, PCI_DEVFN(0,0), 0xce, 2, &win);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: arch/i386/pci/mmconfig-shared.c:62:
+	pci_conf1_read(0, 0, PCI_DEVFN(0,0), 0xce, 2, &win);
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: arch/i386/pci/mmconfig-shared.c:80:
+	pci_conf1_read(0, 0, PCI_DEVFN(0,0), 0x48, 4, &pciexbar);
 	                                ^

WARNING:MISPLACED_INIT: __initdata should be placed after pci_mmcfg_probes[]
#127: FILE: arch/i386/pci/mmconfig-shared.c:127:
+static __initdata struct pci_mmcfg_hostbridge_probe pci_mmcfg_probes[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: arch/i386/pci/mmconfig-shared.c:139:
+	pci_conf1_read(0, 0, PCI_DEVFN(0,0), 0, 4, &l);
 	                                ^

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(pci_mmcfg_probes)
#147: FILE: arch/i386/pci/mmconfig-shared.c:147:
+	for (i = 0; !name && i < sizeof(pci_mmcfg_probes) / sizeof(pci_mmcfg_probes[0]); i++)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#148: FILE: arch/i386/pci/mmconfig-shared.c:148:
+		if ((pci_mmcfg_probes[i].vendor == PCI_ANY_ID || pci_mmcfg_probes[i].vendor == vendor) &&

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#149: FILE: arch/i386/pci/mmconfig-shared.c:149:
+		    (pci_mmcfg_probes[i].device == PCI_ANY_ID || pci_mmcfg_probes[i].device == device))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#154: FILE: arch/i386/pci/mmconfig-shared.c:154:
+			printk(KERN_INFO "PCI: Found %s with MMCONFIG support.\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#156: FILE: arch/i386/pci/mmconfig-shared.c:156:
+			printk(KERN_INFO "PCI: Found %s without MMCONFIG support.\n", name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "name"
#159: FILE: arch/i386/pci/mmconfig-shared.c:159:
+	return name != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: arch/i386/pci/mmconfig-shared.c:181:
+	   assume we run on a Mac and always use MCFG */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11360.commit.a1dce4f50b1e774d5ae9609174f89caa42cf5102 total: 3 errors, 8 warnings, 1 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11360.commit.a1dce4f50b1e774d5ae9609174f89caa42cf5102 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
