WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> bus_remove_device() before device_release_driver() call to save some code, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#61: FILE: drivers/base/base.h:20:
+extern void bus_delete_device(struct device * dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: drivers/base/base.h:20:
+extern void bus_delete_device(struct device * dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: drivers/base/bus.c:434:
+void bus_delete_device(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: drivers/base/bus.c:454:
+void bus_remove_device(struct device * dev)

CHECK:CAMELCASE: Avoid CamelCase: <attachError>
#141: FILE: drivers/base/core.c:484:
+		goto attachError;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30887.commit.8507a500ed1b67dff1ff1c927968dcf723248c8a total: 3 errors, 1 warnings, 2 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30887.commit.8507a500ed1b67dff1ff1c927968dcf723248c8a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
