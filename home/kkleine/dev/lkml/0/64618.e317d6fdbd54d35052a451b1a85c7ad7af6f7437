WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#55: FILE: kernel/power/suspend_swap.c:377:
+		unsigned swapfilenum = swp_type(swap_address);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'last_chain == swapfilenum'
#59: FILE: kernel/power/suspend_swap.c:381:
+		if ((new_sector == extent_max + 1) &&
+		    (last_chain == swapfilenum))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#62: FILE: kernel/power/suspend_swap.c:384:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#65: FILE: kernel/power/suspend_swap.c:387:
+					printk("Adding extent chain %d %d-%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: kernel/power/suspend_swap.c:388:
+					printk("Adding extent chain %d %d-%d.\n",
+						swapfilenum,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: kernel/power/suspend_swap.c:393:
+^I^I^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#72: FILE: kernel/power/suspend_swap.c:394:
+				suspend_add_to_extent_chain(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#76: FILE: kernel/power/suspend_swap.c:398:
+			extent_min = extent_max = new_sector;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#83: FILE: kernel/power/suspend_swap.c:405:
+			printk("Adding extent chain %d %d-%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: kernel/power/suspend_swap.c:406:
+			printk("Adding extent chain %d %d-%d.\n",
+				last_chain,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#89: FILE: kernel/power/suspend_swap.c:411:
+		suspend_add_to_extent_chain(

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64618.commit.e317d6fdbd54d35052a451b1a85c7ad7af6f7437 total: 1 errors, 3 warnings, 7 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64618.commit.e317d6fdbd54d35052a451b1a85c7ad7af6f7437 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
