WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#46: FILE: drivers/net/phy/Kconfig:54:
+config FIXED_PHY
+	tristate "Drivers for PHY emulation on fixed speed/link"
+	depends on PHYLIB
+	---help---
+	  Adds the driver to PHY layer to cover the boards that do not have any PHY bound,
+	  but with the ability to manipulate with speed/link in software. The relavant MII
+	  speed/duplex parameters could be effectively handled in user-specified  fuction.
+	  Currently tested with mpc866ads.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'relavant' may be misspelled - perhaps 'relevant'?
#51: FILE: drivers/net/phy/Kconfig:59:
+	  but with the ability to manipulate with speed/link in software. The relavant MII
 	                                                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#52: FILE: drivers/net/phy/Kconfig:60:
+	  speed/duplex parameters could be effectively handled in user-specified  fuction.
 	                                                                          ^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#55: FILE: drivers/net/phy/Kconfig:63:
+config FIXED_MII_10_FDX
+	bool "Emulation for 10M Fdx fixed PHY behavior"
+	depends on FIXED_PHY
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/net/phy/Kconfig:67:
+config FIXED_MII_100_FDX
+	bool "Emulation for 100M Fdx fixed PHY behavior"
+	depends on FIXED_PHY
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: drivers/net/phy/fixed.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#72: FILE: drivers/net/phy/fixed.c:2:
+ * drivers/net/phy/fixed.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#106: FILE: drivers/net/phy/fixed.c:36:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#108: FILE: drivers/net/phy/fixed.c:38:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#113: FILE: drivers/net/phy/fixed.c:43:
+/*
+    The idea is to emulate normal phy behavior by responding with

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/net/phy/fixed.c:49:
+^Iu8 ^Ilink;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/net/phy/fixed.c:51:
+^Iu8 ^Iduplex;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: drivers/net/phy/fixed.c:56:
+ *-----------------------------------------------------------------------------*/

WARNING:SPACING: missing space after return type
#133: FILE: drivers/net/phy/fixed.c:63:
+	int(*link_update)(struct net_device*, struct fixed_phy_status*);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device*' should also have an identifier name
#133: FILE: drivers/net/phy/fixed.c:63:
+	int(*link_update)(struct net_device*, struct fixed_phy_status*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fixed_phy_status*' should also have an identifier name
#133: FILE: drivers/net/phy/fixed.c:63:
+	int(*link_update)(struct net_device*, struct fixed_phy_status*);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#138: FILE: drivers/net/phy/fixed.c:68:
+/*
+    This is made global to free all the allocations on _exit call.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#147: FILE: drivers/net/phy/fixed.c:77:
+ *-----------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#148: FILE: drivers/net/phy/fixed.c:78:
+int fixed_mdio_set_link_update(struct phy_device* phydev,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/net/phy/fixed.c:79:
+int fixed_mdio_set_link_update(struct phy_device* phydev,
+		int(*link_update)(struct net_device*, struct fixed_phy_status*))

WARNING:SPACING: missing space after return type
#149: FILE: drivers/net/phy/fixed.c:79:
+		int(*link_update)(struct net_device*, struct fixed_phy_status*))

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: drivers/net/phy/fixed.c:83:
+	if(link_update == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!link_update"
#153: FILE: drivers/net/phy/fixed.c:83:
+	if(link_update == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: drivers/net/phy/fixed.c:86:
+	if(phydev) {

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: drivers/net/phy/fixed.c:87:
+		if(phydev->bus)	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: drivers/net/phy/fixed.c:99:
+ *-----------------------------------------------------------------------------*/

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: drivers/net/phy/fixed.c:106:
+	if(!regs) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#177: FILE: drivers/net/phy/fixed.c:107:
+		printk(KERN_ERR "%s: regs not set up", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: drivers/net/phy/fixed.c:107:
+		printk(KERN_ERR "%s: regs not set up", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: drivers/net/phy/fixed.c:111:
+	if(fixed->phy_status.link)

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: drivers/net/phy/fixed.c:114:
+	if(fixed->phy_status.duplex) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#187: FILE: drivers/net/phy/fixed.c:117:
+		switch ( fixed->phy_status.speed ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#187: FILE: drivers/net/phy/fixed.c:117:
+		switch ( fixed->phy_status.speed ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#198: FILE: drivers/net/phy/fixed.c:128:
+		switch ( fixed->phy_status.speed ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#198: FILE: drivers/net/phy/fixed.c:128:
+		switch ( fixed->phy_status.speed ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#216: FILE: drivers/net/phy/fixed.c:146:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: drivers/net/phy/fixed.c:152:
+	if(fixed->phydev)

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: drivers/net/phy/fixed.c:153:
+		if(fixed->phydev->attached_dev) {

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: drivers/net/phy/fixed.c:154:
+			if(fixed->link_update) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: drivers/net/phy/fixed.c:178:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/net/phy/fixed.c:182:
+	/* :TODO:03/13/2006 09:45:37 PM::
+	 The full autoneg funcionality can be emulated,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: drivers/net/phy/fixed.c:188:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/net/phy/fixed.c:193:
+ *-----------------------------------------------------------------------------*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: drivers/net/phy/fixed.c:199:
+^I.driver ^I= { .owner = THIS_MODULE,},$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: drivers/net/phy/fixed.c:202:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#280: FILE: drivers/net/phy/fixed.c:210:
+ *-----------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#288: FILE: drivers/net/phy/fixed.c:218:
+	struct device* dev = kzalloc(sizeof(struct device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#288: FILE: drivers/net/phy/fixed.c:218:
+	struct device* dev = kzalloc(sizeof(struct device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#290: FILE: drivers/net/phy/fixed.c:220:
+	if (NULL == dev)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_bus)...) over kzalloc(sizeof(struct mii_bus)...)
#293: FILE: drivers/net/phy/fixed.c:223:
+	new_bus = kzalloc(sizeof(struct mii_bus), GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#295: FILE: drivers/net/phy/fixed.c:225:
+	if (NULL == new_bus) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#299: FILE: drivers/net/phy/fixed.c:229:
+	fixed = fixed_ptr = kzalloc(sizeof(struct fixed_info), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fixed_ptr)...) over kzalloc(sizeof(struct fixed_info)...)
#299: FILE: drivers/net/phy/fixed.c:229:
+	fixed = fixed_ptr = kzalloc(sizeof(struct fixed_info), GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#301: FILE: drivers/net/phy/fixed.c:231:
+	if (NULL == fixed) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#307: FILE: drivers/net/phy/fixed.c:237:
+	fixed->regs = kzalloc(MII_REGS_NUM*sizeof(int), GFP_KERNEL);
 	                                  ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#309: FILE: drivers/net/phy/fixed.c:239:
+	if (NULL == fixed->regs) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: drivers/net/phy/fixed.c:242:
+		kfree (fixed);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#337: FILE: drivers/net/phy/fixed.c:267:
+	/*
+	 Put the phydev pointer into the fixed pack so that bus read/write code could be able

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: drivers/net/phy/fixed.c:281:
+	if(number)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: drivers/net/phy/fixed.c:283:
+		snprintf(phydev->dev.bus_id, BUS_ID_SIZE,
+				"fixed_%d@%d:%d", number, speed, duplex);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/net/phy/fixed.c:286:
+		snprintf(phydev->dev.bus_id, BUS_ID_SIZE,
+				"fixed@%d:%d", speed, duplex);

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: drivers/net/phy/fixed.c:290:
+	if(err) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: drivers/net/phy/fixed.c:291:
+		printk(KERN_ERR "Phy %s failed to register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/net/phy/fixed.c:292:
+		printk(KERN_ERR "Phy %s failed to register\n",
+				phydev->dev.bus_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#367: FILE: drivers/net/phy/fixed.c:297:
+	/*
+	   the mdio bus has phy_id match... In order not to do it

ERROR:SPACING: space required before the open parenthesis '('
#377: FILE: drivers/net/phy/fixed.c:307:
+	if(err < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: drivers/net/phy/fixed.c:308:
+		printk(KERN_ERR "Phy %s: problems with fixed driver\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/net/phy/fixed.c:309:
+		printk(KERN_ERR "Phy %s: problems with fixed driver\n",
+				phydev->dev.bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/net/phy/fixed.c:321:
+	kfree (fixed);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#397: FILE: drivers/net/phy/fixed.c:327:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#411: FILE: drivers/net/phy/fixed.c:341:
+	/* So let the fun begin...
+	   We will create several mdio devices here, and will bound the upper

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#464: FILE: drivers/net/phy/phy_device.c:49:
+struct phy_device* phy_device_create(struct mii_bus *bus, int addr, int phy_id)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/net/phy/phy_device.c:53:
+	 * default values */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#471: FILE: drivers/net/phy/phy_device.c:56:
+	if (NULL == dev)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#476: FILE: drivers/net/phy/phy_device.c:61:
+	dev->pause = dev->asym_pause = 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#533: FILE: include/linux/phy.h:381:
+struct phy_device* phy_device_create(struct mii_bus *bus, int addr, int phy_id);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67345.commit.d863750ee77c2cf5e32971974eb7d4a99d57989f total: 20 errors, 40 warnings, 17 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67345.commit.d863750ee77c2cf5e32971974eb7d4a99d57989f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
