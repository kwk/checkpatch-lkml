WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
When a task moves between groups (as initiated by an administrator), it has to

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#59: FILE: kernel/sched.c:7272:
+ *  ^I  to which a task belongs.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#60: FILE: kernel/sched.c:7273:
+ * ^I- At any give point during the move operation, the pointer either$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: kernel/sched.c:7274:
+ * ^I  points to the old group or to the new group, but not both!$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: kernel/sched.c:7276:
+ * ^I  task_grp_rq the task is to be removed from/added to.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#68: FILE: kernel/sched.c:7281:
+ * ^I   pointer set to the old group to which the task belonged.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: kernel/sched.c:7282:
+ * ^I   If the task was on a runqueue, sched_pre_move_task() will$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: kernel/sched.c:7283:
+ * ^I   removes it from the runqueue.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: kernel/sched.c:7285:
+ * ^I2. In second step, sched_post_move_task() is called with the group$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: kernel/sched.c:7288:
+ * ^I   if it was on a runqueue in step 1.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: kernel/sched.c:7293:
+int sched_pre_move_task(struct task_struct *tsk, unsigned long *flags,
+			 struct task_grp *tg_old, struct task_grp *tg_new)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#126: FILE: include/linux/sched.h:1621:
+	int (*pre_move_task)(struct task_struct *tsk, unsigned long *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: include/linux/sched.h:1622:
+	int (*pre_move_task)(struct task_struct *tsk, unsigned long *,
+				struct task_grp *old, struct task_grp *new);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#128: FILE: include/linux/sched.h:1623:
+	void (*post_move_task)(struct task_struct *tsk, unsigned long *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#128: FILE: include/linux/sched.h:1623:
+	void (*post_move_task)(struct task_struct *tsk, unsigned long *, int);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33895.commit.0434bceb35f7a236acf97018cba443ee13b5ee9d total: 0 errors, 13 warnings, 2 checks, 80 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33895.commit.0434bceb35f7a236acf97018cba443ee13b5ee9d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
