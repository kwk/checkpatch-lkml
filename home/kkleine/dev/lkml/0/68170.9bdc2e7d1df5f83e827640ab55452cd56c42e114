WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Add sysfs control to the VT layer.  A new sysfs class, 'vtconsole', and class

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/char/vt.c:2896:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: drivers/char/vt.c:2896:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/vt.c:2896:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

CHECK:BRACES: braces {} should be used on all arms of this statement
#166: FILE: drivers/char/vt.c:2918:
+			if (con_driver_map[i] == defcsw) {
[...]
+			} else if (first != -1)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#175: FILE: drivers/char/vt.c:2927:
+		if (first == 0 && last == MAX_NR_CONSOLES -1)
 		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/char/vt.c:2947:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/char/vt.c:2947:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/vt.c:2947:
+ ^Iif (!con->con || !(con->flag & CON_DRIVER_FLAG_MODULE) ||$

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: drivers/char/vt.c:2957:
+			if (con_driver_map[i] == csw) {
[...]
+			} else if (first != -1)
[...]

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#214: FILE: drivers/char/vt.c:2966:
+		if (first == 0 && last == MAX_NR_CONSOLES -1)
 		                                          ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#233: FILE: drivers/char/vt.c:2985:
+	int bind = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#259: FILE: drivers/char/vt.c:3011:
+
+}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#262: FILE: drivers/char/vt.c:3014:
+	__ATTR(bind, S_IRUGO|S_IWUSR, show_bind, store_bind),
 	                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#262: FILE: drivers/char/vt.c:3014:
+	__ATTR(bind, S_IRUGO|S_IWUSR, show_bind, store_bind),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#263: FILE: drivers/char/vt.c:3015:
+	__ATTR(name, S_IRUGO, show_name, NULL),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#313: FILE: drivers/char/vt.c:3128:
+		printk(KERN_WARNING "Unable to create class_device for %s; "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#381: FILE: drivers/char/vt.c:3221:
+		printk(KERN_WARNING "Unable to create vt console class; "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#464: FILE: drivers/char/vt.c:3237:
+				printk(KERN_WARNING "Unable to create "

WARNING:SPLIT_STRING: quoted string split across lines
#465: FILE: drivers/char/vt.c:3238:
+				printk(KERN_WARNING "Unable to create "
+				       "class_device for %s; errno = %ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.68170.commit.9bdc2e7d1df5f83e827640ab55452cd56c42e114 total: 2 errors, 12 warnings, 6 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.68170.commit.9bdc2e7d1df5f83e827640ab55452cd56c42e114 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
