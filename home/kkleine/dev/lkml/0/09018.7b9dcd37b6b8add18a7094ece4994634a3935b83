WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#76: FILE: fs/proc/kmsg.c:22:
+extern unsigned int klog_poll(struct file *, poll_table *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#76: FILE: fs/proc/kmsg.c:22:
+extern unsigned int klog_poll(struct file *, poll_table *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'poll_table *' should also have an identifier name
#76: FILE: fs/proc/kmsg.c:22:
+extern unsigned int klog_poll(struct file *, poll_table *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: fs/proc/kmsg.c:27:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: fs/proc/kmsg.c:41:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: fs/proc/kmsg.c:49:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#130: FILE: include/linux/klog.h:25:
+				    * -- new in 2.6.20 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: kernel/printk.c:195:
+		error = __put_user(c,buf);
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#245: FILE: kernel/printk.c:246:
+		j = limit-1-i;
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#245: FILE: kernel/printk.c:246:
+		j = limit-1-i;
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#250: FILE: kernel/printk.c:251:
+		error = __put_user(c,&buf[count-1-i]);
 		                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#250: FILE: kernel/printk.c:251:
+		error = __put_user(c,&buf[count-1-i]);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: kernel/printk.c:251:
+		error = __put_user(c,&buf[count-1-i]);
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: kernel/printk.c:251:
+		error = __put_user(c,&buf[count-1-i]);
 		                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#259: FILE: kernel/printk.c:260:
+		int offset = count-error;
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#262: FILE: kernel/printk.c:263:
+			if (__get_user(c,&buf[i+offset]) ||
 			                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#262: FILE: kernel/printk.c:263:
+			if (__get_user(c,&buf[i+offset]) ||
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: kernel/printk.c:263:
+			if (__get_user(c,&buf[i+offset]) ||
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#263: FILE: kernel/printk.c:264:
+			    __put_user(c,&buf[i])) {
 			                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#263: FILE: kernel/printk.c:264:
+			    __put_user(c,&buf[i])) {
 			                 ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#273: FILE: kernel/printk.c:274:
+#define security_syslog_or_fail(type) do {	\
+		error = security_syslog(type);	\
+		if (error)			\
+			return error;		\
+	} while (0)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09018.commit.7b9dcd37b6b8add18a7094ece4994634a3935b83 total: 7 errors, 8 warnings, 6 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09018.commit.7b9dcd37b6b8add18a7094ece4994634a3935b83 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
