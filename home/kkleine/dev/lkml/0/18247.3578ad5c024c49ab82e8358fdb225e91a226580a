WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Seeing %gs prefixes used now by i386 port, I recalled seeing strange oprofile 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#include <unistd.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#include <errno.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: include/asm-i386/pda.h:102:
+#define read_pda(field)      boot_pda.field $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: include/asm-i386/pda.h:103:
+#define write_pda(field,val) do { boot_pda.field = (val);} while (0)
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#106: FILE: include/asm-i386/pda.h:103:
+#define write_pda(field,val) do { boot_pda.field = (val);} while (0)
                                                         ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#106: FILE: include/asm-i386/pda.h:103:
+#define write_pda(field,val) do { boot_pda.field = (val);} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: include/asm-i386/pda.h:104:
+#define add_pda(field,val) ) do { boot_pda.field += (val);} while (0)
                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#107: FILE: include/asm-i386/pda.h:104:
+#define add_pda(field,val) ) do { boot_pda.field += (val);} while (0)
                                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#107: FILE: include/asm-i386/pda.h:104:
+#define add_pda(field,val) ) do { boot_pda.field += (val);} while (0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#107: FILE: include/asm-i386/pda.h:104:
+#define add_pda(field,val) ) do { boot_pda.field += (val);} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#107: FILE: include/asm-i386/pda.h:104:
+#define add_pda(field,val) ) do { boot_pda.field += (val);} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: include/asm-i386/pda.h:105:
+#define sub_pda(field,val)   do { boot_pda.field -= (val);} while (0)
                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#108: FILE: include/asm-i386/pda.h:105:
+#define sub_pda(field,val)   do { boot_pda.field -= (val);} while (0)
                                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#108: FILE: include/asm-i386/pda.h:105:
+#define sub_pda(field,val)   do { boot_pda.field -= (val);} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#108: FILE: include/asm-i386/pda.h:105:
+#define sub_pda(field,val)   do { boot_pda.field -= (val);} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: include/asm-i386/pda.h:106:
+#define or_pda(field,val)    do { boot_pda.field |= (val);} while (0)
                     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#109: FILE: include/asm-i386/pda.h:106:
+#define or_pda(field,val)    do { boot_pda.field |= (val);} while (0)
                                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#109: FILE: include/asm-i386/pda.h:106:
+#define or_pda(field,val)    do { boot_pda.field |= (val);} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#109: FILE: include/asm-i386/pda.h:106:
+#define or_pda(field,val)    do { boot_pda.field |= (val);} while (0)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18247.commit.3578ad5c024c49ab82e8358fdb225e91a226580a total: 11 errors, 6 warnings, 3 checks, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18247.commit.3578ad5c024c49ab82e8358fdb225e91a226580a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
