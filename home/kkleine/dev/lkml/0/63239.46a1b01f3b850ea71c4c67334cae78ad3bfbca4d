ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/char/tty_io.c:1100:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/char/tty_io.c:2067:
+^I    ^Iset_controlling_tty(tty);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: drivers/char/tty_io.c:2067:
+^I    ^Iset_controlling_tty(tty);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: include/linux/sched.h:1187:
+extern void clear_controlling_tty(int on_exit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/linux/sched.h:1188:
+extern void clear_session_tty(pid_t session, struct tty_struct *tty,

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#258: FILE: include/linux/sched.h:1188:
pid_t pgrp);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: include/linux/sched.h:1189:
+extern void clear_session_tty(pid_t session, struct tty_struct *tty,
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: include/linux/tty.h:273:
+static inline struct tty_struct * tty_get(struct tty_struct * tty)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: include/linux/tty.h:273:
+static inline struct tty_struct * tty_get(struct tty_struct * tty)

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: include/linux/tty.h:275:
+        if (tty) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: include/linux/tty.h:275:
+        if (tty) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: include/linux/tty.h:276:
+                WARN_ON(!atomic_read(&tty->ref_count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: include/linux/tty.h:276:
+                WARN_ON(!atomic_read(&tty->ref_count));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: include/linux/tty.h:277:
+                atomic_inc(&tty->ref_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: include/linux/tty.h:277:
+                atomic_inc(&tty->ref_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: include/linux/tty.h:278:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: include/linux/tty.h:278:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: include/linux/tty.h:279:
+        return tty;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: include/linux/tty.h:279:
+        return tty;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: include/linux/tty.h:282:
+extern void free_tty_struct(struct tty_struct *tty);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: include/linux/tty.h:283:
+static inline void tty_put(struct tty_struct * tty)

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: include/linux/tty.h:285:
+        if (tty && atomic_dec_and_test(&tty->ref_count))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: include/linux/tty.h:285:
+        if (tty && atomic_dec_and_test(&tty->ref_count))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: include/linux/tty.h:286:
+                free_tty_struct(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: include/linux/tty.h:286:
+                free_tty_struct(tty);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#322: FILE: kernel/exit.c:390:
+EXPORT_SYMBOL(set_controlling_tty);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: kernel/exit.c:395:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#336: FILE: kernel/exit.c:404:
+EXPORT_SYMBOL(reset_session_tty);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#348: FILE: kernel/exit.c:416:
+EXPORT_SYMBOL(reset_controlling_tty);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: kernel/exit.c:423:
+ * ^I(1)  Sends a SIGHUP and SIGCONT to the foreground process group$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#356: FILE: kernel/exit.c:424:
+ * ^I(2)  Clears the tty from being controlling the session$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#357: FILE: kernel/exit.c:425:
+ * ^I(3)  Clears the controlling tty for all processes in the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: kernel/exit.c:426:
+ * ^I^Isession group.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: kernel/exit.c:451:
+^I^Iunlock_kernel();^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#404: FILE: kernel/exit.c:472:
+EXPORT_SYMBOL(clear_controlling_tty);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: kernel/exit.c:477:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#428: FILE: kernel/exit.c:496:
+EXPORT_SYMBOL(clear_session_tty);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63239.commit.46a1b01f3b850ea71c4c67334cae78ad3bfbca4d total: 16 errors, 17 warnings, 4 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63239.commit.46a1b01f3b850ea71c4c67334cae78ad3bfbca4d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
