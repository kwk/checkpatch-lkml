WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: net/ipv4/udp.c:126:
+ * ^I__udp_get_port  -  find an unbound UDP(-Lite) port$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: net/ipv4/udp.c:128:
+ * ^I@sk:         udp_sock$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: net/ipv4/udp.c:129:
+ * ^I@snum:       port number to look up$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: net/ipv4/udp.c:130:
+ * ^I@udptable:   hash list table, must be of UDP_HTABLE_SIZE$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: net/ipv4/udp.c:131:
+ * ^I@port_rover: pointer to record of last unallocated port$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: net/ipv4/udp.c:134:
+int __udp_get_port(struct sock *sk, unsigned short snum,
+		  struct hlist_head udptable[], int *port_rover)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#95: FILE: net/ipv4/udp.c:148:
+		best = result = *port_rover;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#110: FILE: net/ipv4/udp.c:175:
+			if (! __udp_lport_inuse(result, udptable))
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#138: FILE: net/ipv4/udp.c:215:
+static __inline__ int udp_v4_get_port(struct sock *sk, unsigned short snum)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: net/ipv4/udp.c:236:
+ * ^I__udp_lookup  -  find UDP(-Lite) socket$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: net/ipv4/udp.c:238:
+ * ^I@udptable:   hash list table, must be of UDP_HTABLE_SIZE$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: net/ipv4/udp.c:240:
+ * ^IUDP nearly always wildcards out the wazoo, it makes no sense to try$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: net/ipv4/udp.c:241:
+ * ^Iharder than this. -DaveM$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#163: FILE: net/ipv4/udp.c:244:
+			  struct hlist_head udptable[]                        )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: net/ipv4/udp.c:328:
+ * ^I__udp_err  -  generic UDP/-Lite error routine$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: net/ipv4/udp.c:330:
+ * ^I@udptable:   hash list table, must be of UDP_HTABLE_SIZE$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#231: FILE: net/ipv4/udp.c:353:
+			  skb->dev->ifindex, udptable                   );

WARNING:INLINE: plain inline is preferred over __inline__
#239: FILE: net/ipv4/udp.c:407:
+__inline__ void udp_err(struct sk_buff *skb, u32 info)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#256: FILE: net/ipv4/udp.c:427:
+			      int totlen, u32 src, u32 dst         )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#293: FILE: net/ipv4/udp.c:446:
+						       IPPROTO_UDP, 0   );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#303: FILE: net/ipv4/udp.c:450:
+					    skb->csum                        );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: net/ipv4/udp.c:465:
+			skb->csum = csum_partial(skb->h.raw,
 					sizeof(struct udphdr), skb->csum);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#342: FILE: net/ipv4/udp.c:479:
+/*
+ * Push out all pending data as one UDP/-Lite datagram. Socket is locked.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#354: FILE: net/ipv4/udp.c:491:
+	if ((skb = skb_peek(&sk->sk_write_queue)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#358: FILE: net/ipv4/udp.c:495:
+	/*
+	 * Create a UDP header

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#366: FILE: net/ipv4/udp.c:503:
+^I * ^IIf sender has set `partial coverage' socket option on a$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#366: FILE: net/ipv4/udp.c:503:
+	/*
+	 * 	If sender has set `partial coverage' socket option on a

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: net/ipv4/udp.c:504:
+^I * ^IUDP-Lite socket, adjust coverage length accordingly.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#368: FILE: net/ipv4/udp.c:505:
+^I * ^IAll other cases default to traditional UDP checksum mode.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#373: FILE: net/ipv4/udp.c:510:
+			 * partial coverage only if  0 < up->pcslen < up->len */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#374: FILE: net/ipv4/udp.c:511:
+			if (0 < up->pcslen) {
+			       cscov = up->pcslen;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#374: FILE: net/ipv4/udp.c:511:
+			if (0 < up->pcslen) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#374: FILE: net/ipv4/udp.c:511:
+			if (0 < up->pcslen) {
+			       cscov = up->pcslen;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#380: FILE: net/ipv4/udp.c:517:
+		/*
+		 * NOTE: Causes for the error case  `up->pcslen > up->len':

ERROR:SPACING: space required before the open parenthesis '('
#391: FILE: net/ipv4/udp.c:528:
+	if(up->pcflag)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: net/ipv4/udp.c:542:
+ * ^Iudp_sendmsg  -  generic UDP/-Lite send routine$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: net/ipv4/udp.c:544:
+ * ^IThis function is udplite-aware and works for both protocols.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#425: FILE: net/ipv4/udp.c:561:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#444: FILE: net/ipv4/udp.c:712:
+	getfrag  =  is_udplite?  udplite_getfrag : ip_generic_getfrag;
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: net/ipv4/udp.c:714:
+	err = ip_append_data(sk, getfrag, msg->msg_iov, ulen,
+			sizeof(struct udphdr), &ipc, rt,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#475: FILE: net/ipv4/udp.c:751:
+ * ^Iudp_sendpage  -  generic UDP/-Lite sendpage routine$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: net/ipv4/udp.c:753:
+ * ^IThis function is udplite-aware and can be used on both sockets.$

ERROR:SPACING: space required before the open parenthesis '('
#496: FILE: net/ipv4/udp.c:809:
+	switch(cmd)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#519: FILE: net/ipv4/udp.c:845:
+ * ^Iudp_recvmsg  -  generic UDP/-Lite receive processing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: net/ipv4/udp.c:847:
+ * ^IThis routine is udplite-aware and works for both protocols.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#522: FILE: net/ipv4/udp.c:848:
+ * ^IPrinciple: if there is something there we return it, otherwise we block.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: net/ipv4/udp.c:852:
+^I        size_t len, int noblock, int flags, int *addr_len)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: net/ipv4/udp.c:852:
+int udp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+	        size_t len, int noblock, int flags, int *addr_len)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: net/ipv4/udp.c:880:
+^I * ^IDecide whether to checksum and/or copy data.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#547: FILE: net/ipv4/udp.c:880:
+	/*
+	 * 	Decide whether to checksum and/or copy data.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#549: FILE: net/ipv4/udp.c:882:
+^I * ^IUDP:      checksum may have been computed in HW,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: net/ipv4/udp.c:883:
+^I * ^I          (re-)compute it if message is truncated.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: net/ipv4/udp.c:884:
+^I * ^IUDP-Lite: always needs to checksum, no HW support.$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#555: FILE: net/ipv4/udp.c:888:
+	if (is_udplite  ||  (!copy_only  &&  msg->msg_flags&MSG_TRUNC)) {
 	                                                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#567: FILE: net/ipv4/udp.c:896:
+					      msg->msg_iov, copied       );

CHECK:BRACES: Unbalanced braces around else statement
#568: FILE: net/ipv4/udp.c:897:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: net/ipv4/udp.c:899:
+		err = skb_copy_and_csum_datagram_iovec(skb,
+					   sizeof(struct udphdr), msg->msg_iov);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#603: FILE: net/ipv4/udp.c:967:
+ * ^Iudp_encap_rcv  -  handle encapsulated packets$

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#607: FILE: net/ipv4/udp.c:971:
+ * 	1  if the the UDP(-Lite) system should process it

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: net/ipv4/udp.c:971:
+ * ^I1  if the the UDP(-Lite) system should process it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: net/ipv4/udp.c:1059:
+ * ^Iudp_queue_rcv_skb  -  receive queue processing$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: net/ipv4/udp.c:1070:
+int udp_queue_rcv_skb(struct sock * sk, struct sk_buff *skb)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#664: FILE: net/ipv4/udp.c:1106:
+		/* FALLTHROUGH -- it's a UDP/-Lite Packet */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: net/ipv4/udp.c:1110:
+^I * ^IUDP-Lite specific tests, ignored on UDP sockets$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#673: FILE: net/ipv4/udp.c:1110:
+	/*
+	 * 	UDP-Lite specific tests, ignored on UDP sockets

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#676: FILE: net/ipv4/udp.c:1113:
+	if ((up->pcflag & UDPLITE_RECV_CC)  &&  UDP_SKB_CB(skb)->partial_cov) {
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#678: FILE: net/ipv4/udp.c:1115:
+		/*
+		 * MIB statistics other than incrementing the error count are

WARNING:SPLIT_STRING: quoted string split across lines
#691: FILE: net/ipv4/udp.c:1128:
+			LIMIT_NETDEBUG(KERN_WARNING "UDPLITE: partial coverage "
+				"%d while full coverage %d requested\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#728: FILE: net/ipv4/udp.c:1160:
+	/*
+	 * XXX Incrementing this counter when the datagram is later taken off

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#747: FILE: net/ipv4/udp.c:1177:
+ * ^I__udp_mcast_deliver  -   generic multicast delivery$

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: net/ipv4/udp.c:1184:
+^I^I        u32 saddr, u32 daddr, struct hlist_head udptable[])$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: net/ipv4/udp.c:1184:
+int __udp_mcast_deliver(struct sk_buff *skb, struct udphdr *uh,
+		        u32 saddr, u32 daddr, struct hlist_head udptable[])

WARNING:INLINE: plain inline is preferred over __inline__
#775: FILE: net/ipv4/udp.c:1219:
+static __inline__ int udp_v4_mcast_deliver(struct sk_buff *skb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: net/ipv4/udp.c:1220:
+static __inline__ int udp_v4_mcast_deliver(struct sk_buff *skb,
+					struct udphdr *uh, u32 saddr, u32 daddr)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#791: FILE: net/ipv4/udp.c:1235:
 	} else if (skb->ip_summed == CHECKSUM_COMPLETE) {
+	       if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))

WARNING:TABSTOP: Statements should start on a tabstop
#793: FILE: net/ipv4/udp.c:1236:
+	       if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#793: FILE: net/ipv4/udp.c:1236:
+	       if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))
 			skb->ip_summed = CHECKSUM_UNNECESSARY;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#793: FILE: net/ipv4/udp.c:1236:
+	       if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#793: FILE: net/ipv4/udp.c:1236:
+	       if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))
 	                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: net/ipv4/udp.c:1255:
+  ^Istruct udphdr *uh = skb->h.uh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#816: FILE: net/ipv4/udp.c:1255:
+  ^Istruct udphdr *uh = skb->h.uh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: net/ipv4/udp.c:1255:
+  ^Istruct udphdr *uh = skb->h.uh;$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#822: FILE: net/ipv4/udp.c:1261:
+	struct hlist_head *ht = is_udplite? udplite_hash : udp_hash;
 	                                  ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#838: FILE: net/ipv4/udp.c:1271:
+	if (! is_udplite) {
 	    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#854: FILE: net/ipv4/udp.c:1284:
+		if (! udplite_checksum_init(skb, uh, len, saddr, daddr))
 		    ^

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#889: FILE: net/ipv4/udp.c:1324:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDP%s: short packet: From %u.%u.%u.%u:%u %d/%d to %u.%u.%u.%u:%u\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#890: FILE: net/ipv4/udp.c:1325:
+		       is_udplite? "-Lite" : "",
 		                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#908: FILE: net/ipv4/udp.c:1336:
+	/*
+	 * RFC1122: OK.  Discards the bad packet silently (as far as

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#912: FILE: net/ipv4/udp.c:1339:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDP%s: bad checksum. From %d.%d.%d.%d:%d to %d.%d.%d.%d:%d ulen %d\n",

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#913: FILE: net/ipv4/udp.c:1340:
+		       is_udplite? "-Lite" : "",
 		                 ^

WARNING:INLINE: plain inline is preferred over __inline__
#926: FILE: net/ipv4/udp.c:1352:
+__inline__ int udp_rcv(struct sk_buff *skb)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#948: FILE: net/ipv4/udp.c:1407:
+^I * ^IUDP-Lite's partial checksum coverage (RFC 3828).$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#948: FILE: net/ipv4/udp.c:1407:
+	/*
+	 * 	UDP-Lite's partial checksum coverage (RFC 3828).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: net/ipv4/udp.c:1410:
+	 * The case coverage > packet length is handled by send module. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: net/ipv4/udp.c:1420:
+        /* The receiver specifies a minimum checksum coverage value. To make$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: net/ipv4/udp.c:1421:
+         * sense, this should be set to at least 8 (as done below). If zero is$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#963: FILE: net/ipv4/udp.c:1422:
+	 * used, this again means full checksum coverage.                     */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1031: FILE: net/ipv4/udp.c:1502:
+		   char __user *optval, int __user *optlen )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1058: FILE: net/ipv4/udp.c:1520:
+ * ^Iudp_poll  -  wait for a UDP(-Lite) event.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1073: FILE: net/ipv4/udp.c:1538:
+^Iint ^Iis_lite = IS_UDPLITE(sk);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1084: FILE: net/ipv4/udp.c:1552:
+				 * Update count of really received datagrams. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1094: FILE: net/ipv4/udp.c:1597:
+struct proto ^Iudplite_prot = {$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43401.commit.ff5b012cd4d9b8089ea633165bf08d2613a6a5c3 total: 25 errors, 71 warnings, 11 checks, 1064 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43401.commit.ff5b012cd4d9b8089ea633165bf08d2613a6a5c3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
