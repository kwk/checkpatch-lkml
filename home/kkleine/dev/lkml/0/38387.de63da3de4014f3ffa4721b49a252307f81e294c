WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: include/linux/fault-inject.h:1:
+#ifndef _LINUX_FAULT_INJECT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#75: FILE: include/linux/fault-inject.h:7:
+#include <asm/atomic.h>

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#78: FILE: include/linux/fault-inject.h:10:
+struct fault_attr {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: lib/fault-inject.c:1:
+#include <linux/kernel.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: lib/fault-inject.c:19:
+	if (sscanf(str, "%lu,%lu,%d,%d",
+			&interval, &probability, &space, &times) < 4) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#134: FILE: lib/fault-inject.c:20:
+		printk(KERN_WARNING "SHOULD_FAIL: failed to parse arguments\n");

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#146: FILE: lib/fault-inject.c:32:
+#define failure_probability(attr)	(attr)->probability

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#147: FILE: lib/fault-inject.c:33:
+#define failure_interval(attr)		(attr)->interval

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: lib/fault-inject.c:34:
+#define max_failures(attr)		(attr)->times

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#149: FILE: lib/fault-inject.c:35:
+#define current_space(attr)		(attr)->space

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: lib/fault-inject.c:42:
+	rand_seed = rand_seed * 690690L+1;
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38387.commit.de63da3de4014f3ffa4721b49a252307f81e294c total: 4 errors, 4 warnings, 3 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.38387.commit.de63da3de4014f3ffa4721b49a252307f81e294c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
