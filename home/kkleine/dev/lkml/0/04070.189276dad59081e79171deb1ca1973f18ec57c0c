ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#65: 
--- a/arch/i386/kernel/paravirt.c	Thu Jan 04 20:17:02 2007 -0800

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: arch/i386/kernel/paravirt.c:590:
+ ^I.patch = native_patch,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: arch/i386/kernel/paravirt.c:590:
+ ^I.patch = native_patch,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/i386/kernel/paravirt.c:590:
+ ^I.patch = native_patch,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#149: FILE: include/asm-i386/paravirt.h:39:
+	/* All the function pointers here are declared as "fastcall"
+	   so that we get a specific register-based calling

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: include/asm-i386/paravirt.h:41:
+	   assembler replacements. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/asm-i386/paravirt.h:44:
+	void (fastcall *cpuid)(unsigned int *eax, unsigned int *ebx,
+		      unsigned int *ecx, unsigned int *edx);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#158: FILE: include/asm-i386/paravirt.h:48:
+	unsigned long (fastcall *read_cr0)(void);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#161: FILE: include/asm-i386/paravirt.h:51:
+	unsigned long (fastcall *save_fl)(void);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#187: FILE: include/asm-i386/paravirt.h:77:
+struct paravirt_ops
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#291: FILE: include/asm-i386/paravirt.h:238:
 }
+#define wbinvd() paravirt_mod_ops.wbinvd()

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#298: FILE: include/asm-i386/paravirt.h:244:
+	u64 _l = paravirt_mod_ops.read_msr(msr,&_err);		\
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#298: FILE: include/asm-i386/paravirt.h:244:
+	u64 _l = paravirt_mod_ops.read_msr(msr,&_err);		\
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#315: FILE: include/asm-i386/paravirt.h:256:
+	val = paravirt_mod_ops.read_msr((msr),&_err);		\
 	                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#315: FILE: include/asm-i386/paravirt.h:256:
+	val = paravirt_mod_ops.read_msr((msr),&_err);		\
 	                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#316: FILE: include/asm-i386/paravirt.h:257:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: include/asm-i386/paravirt.h:259:
+#define wrmsrl(msr,val) (paravirt_mod_ops.write_msr((msr),(val)))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: include/asm-i386/paravirt.h:259:
+#define wrmsrl(msr,val) (paravirt_mod_ops.write_msr((msr),(val)))
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: include/asm-i386/paravirt.h:262:
+	paravirt_mod_ops.write_msr((msr),_l);			\
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#329: FILE: include/asm-i386/paravirt.h:268:
+	u64 _l = paravirt_mod_ops.read_msr(msr,&_err);		\
 	                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#329: FILE: include/asm-i386/paravirt.h:268:
+	u64 _l = paravirt_mod_ops.read_msr(msr,&_err);		\
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: include/asm-i386/paravirt.h:326:
+	paravirt_mod_ops.apic_write(reg,v);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#385: FILE: include/asm-i386/paravirt.h:331:
+	paravirt_mod_ops.apic_write_atomic(reg,v);
 	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#400: FILE: include/asm-i386/paravirt.h:460:
+			     : "=a"(f): "m"(paravirt_mod_ops.save_fl)
 			              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#469: FILE: include/asm-i386/paravirt.h:547:
+	call *paravirt_mod_ops+PARAVIRT_irq_disable;	\
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#469: FILE: include/asm-i386/paravirt.h:547:
+	call *paravirt_mod_ops+PARAVIRT_irq_disable;	\
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#476: FILE: include/asm-i386/paravirt.h:553:
+	call *%cs:paravirt_mod_ops+PARAVIRT_irq_enable;	\
 	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#476: FILE: include/asm-i386/paravirt.h:553:
+	call *%cs:paravirt_mod_ops+PARAVIRT_irq_enable;	\
 	      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#476: FILE: include/asm-i386/paravirt.h:553:
+	call *%cs:paravirt_mod_ops+PARAVIRT_irq_enable;	\
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#476: FILE: include/asm-i386/paravirt.h:553:
+	call *%cs:paravirt_mod_ops+PARAVIRT_irq_enable;	\
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#485: FILE: include/asm-i386/paravirt.h:561:
+	call *paravirt_mod_ops+PARAVIRT_read_cr0
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#485: FILE: include/asm-i386/paravirt.h:561:
+	call *paravirt_mod_ops+PARAVIRT_read_cr0
 	                      ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04070.commit.189276dad59081e79171deb1ca1973f18ec57c0c total: 16 errors, 6 warnings, 10 checks, 411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.04070.commit.189276dad59081e79171deb1ca1973f18ec57c0c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
