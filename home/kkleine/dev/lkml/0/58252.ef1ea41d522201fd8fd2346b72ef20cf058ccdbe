WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#24: 
From: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Peter Zijlstra <a.p.zijlstra@chello.nl'
#29: 
Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#47: FILE: fs/proc/proc_misc.c:228:
+extern struct seq_operations refault_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: fs/proc/proc_misc.c:236:
+^I^I             size_t count, loff_t *);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: fs/proc/proc_misc.c:236:
+extern ssize_t refault_write(struct file *, const char __user *buf,
+		             size_t count, loff_t *);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#57: FILE: fs/proc/proc_misc.c:238:
+static struct file_operations refault_file_operations = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: fs/proc/proc_misc.c:720:
+	create_seq_entry("refault",S_IRUGO, &refault_file_operations);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#74: FILE: fs/proc/proc_misc.c:720:
+	create_seq_entry("refault",S_IRUGO, &refault_file_operations);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#88: FILE: mm/Kconfig:160:
+config MM_REFAULT
+	bool "Refault histogram"
+	def_bool y
+	depends on MM_NONRESIDENT

Kconfig symbols should have a help text which fully describes
it.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#113: FILE: mm/nonresident.c:103:
+		extern void nonresident_refault(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#113: FILE: mm/nonresident.c:103:
+		extern void nonresident_refault(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: mm/refault.c:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#129: FILE: mm/refault.c:4:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: mm/refault.c:8:
+DEFINE_PER_CPU(unsigned long[BUCKETS+1], refault_histogram);
                                     ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#135: FILE: mm/refault.c:10:
+extern unsigned long nonresident_total(void);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#196: FILE: mm/refault.c:71:
+		seq_printf(m, "     Refault distance          Hits\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#206: FILE: mm/refault.c:81:
+struct seq_operations refault_op = {

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.58252.commit.ef1ea41d522201fd8fd2346b72ef20cf058ccdbe total: 3 errors, 12 warnings, 2 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.58252.commit.ef1ea41d522201fd8fd2346b72ef20cf058ccdbe has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
