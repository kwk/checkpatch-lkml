ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: drivers/s390/cio/qdio.c:484:
+	if (!atomic_xchg(&q->polling,0))
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: drivers/s390/cio/qdio.c:1967:
+		QDIO_HEXDUMP16(WARN,"irb: ",irb);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: drivers/s390/cio/qdio.c:1967:
+		QDIO_HEXDUMP16(WARN,"irb: ",irb);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#66: FILE: drivers/s390/cio/qdio.c:1968:
+		QDIO_HEXDUMP16(WARN,"sense data: ",irb->ecw);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#66: FILE: drivers/s390/cio/qdio.c:1968:
+		QDIO_HEXDUMP16(WARN,"sense data: ",irb->ecw);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: drivers/s390/cio/qdio.c:3428:
+		atomic_xchg(&q->polling,0);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: drivers/s390/cio/qdio.h:239:
+#define QDIO_HEXDUMP16(importance,header,ptr) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: drivers/s390/cio/qdio.h:239:
+#define QDIO_HEXDUMP16(importance,header,ptr) \
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: drivers/s390/cio/qdio.h:239:
+#define QDIO_HEXDUMP16(importance,header,ptr) \
 QDIO_PRINT_##importance(header "%02x %02x %02x %02x  " \
 			"%02x %02x %02x %02x  %02x %02x %02x %02x  " \
 			"%02x %02x %02x %02x\n",*(((char*)ptr)), \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#226: FILE: drivers/s390/net/lcs.c:675:
+	BUG_ON(buffer->state != LCS_BUF_STATE_LOCKED &&

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#240: FILE: drivers/s390/net/lcs.c:700:
+	BUG_ON(buffer->state != LCS_BUF_STATE_READY);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: drivers/s390/net/lcs.c:732:
+	BUG_ON(buffer->state != LCS_BUF_STATE_LOCKED &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel->state != LCS_CH_STATE_INIT'
#282: FILE: drivers/s390/net/lcs.c:1409:
+	if ((channel->state != LCS_CH_STATE_INIT) &&
 	    (irb->scsw.fctl & SCSW_FCTL_START_FUNC)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12692.commit.4896c3a2c8b9c9ea0849b4cee08a8bb1266c59e3 total: 9 errors, 3 warnings, 1 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12692.commit.4896c3a2c8b9c9ea0849b4cee08a8bb1266c59e3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
