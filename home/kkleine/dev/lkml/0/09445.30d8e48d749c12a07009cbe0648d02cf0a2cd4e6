WARNING:TYPO_SPELLING: 'implment' may be misspelled - perhaps 'implement'?
#38: 
 for memory controller modules to implment.
                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implemenation' may be misspelled - perhaps 'implementation'?
#42: 
 - K8 is the first implemenation,
                   ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#74: 
   prefer "% memory bandwidth used" as representation, "bandwith 
                                                        ^^^^^^^^

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#78: 
   If one later wants to scrub cache, the scaling becomes wierd
                                                          ^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#109: 
new features of the the drivers

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/edac/edac_mc.c:931:
+static ssize_t mci_sdram_scrub_rate_store(struct mem_ctl_info *mci,
+					const char *data, size_t count)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#137: FILE: drivers/edac/edac_mc.c:936:
+	if (mci->set_sdram_scrub_rate) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#140: FILE: drivers/edac/edac_mc.c:939:
+		if (!(*mci->set_sdram_scrub_rate)(mci, &bandwidth)) {
+				edac_printk(KERN_DEBUG, EDAC_MC,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/edac/edac_mc.c:941:
+				edac_printk(KERN_DEBUG, EDAC_MC,
+				"Scrub rate set successfully, applied: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/edac/edac_mc.c:946:
+			edac_printk(KERN_DEBUG, EDAC_MC,
+				"Scrub rate set FAILED, could not apply: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/edac/edac_mc.c:953:
+		edac_printk(KERN_WARNING, EDAC_MC,
+			"Memory scrubbing 'set'control is not implemented!\n");

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#160: FILE: drivers/edac/edac_mc.c:958:
char *data)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/edac/edac_mc.c:959:
+static ssize_t mci_sdram_scrub_rate_show(struct mem_ctl_info *mci,
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/edac/edac_mc.c:965:
+			edac_printk(KERN_DEBUG, EDAC_MC,
+				"Scrub rate successfully, fetched: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: drivers/edac/edac_mc.c:970:
+			edac_printk(KERN_DEBUG, EDAC_MC,
+				"Scrub rate fetch FAILED, got: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/edac/edac_mc.c:977:
+		edac_printk(KERN_WARNING, EDAC_MC,
+			"Memory scrubbing 'get' control is not implemented!\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/edac/edac_mc.c:979:
+	return sprintf(data,"%d\n", bandwidth);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: drivers/edac/edac_mc.c:1089:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,mci_sdram_scrub_rate_store);
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#192: FILE: drivers/edac/edac_mc.c:1089:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,mci_sdram_scrub_rate_store);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: drivers/edac/edac_mc.c:1089:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,mci_sdram_scrub_rate_store);
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: drivers/edac/edac_mc.c:1089:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,mci_sdram_scrub_rate_store);
                                                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#192: FILE: drivers/edac/edac_mc.c:1089:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,mci_sdram_scrub_rate_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: drivers/edac/edac_mc.h:319:
+	/* Translates sdram memory scrub rate given in bytes/sec to the
+	   internal representation and configures whatever else needs

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: Unnecessary space before function pointer arguments
#217: FILE: drivers/edac/edac_mc.h:322:
+	int (*set_sdram_scrub_rate) (struct mem_ctl_info *mci, u32 *bw);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#220: FILE: drivers/edac/edac_mc.h:325:
+	/* Get the current sdram memory scrub rate from the internal
+	   representation and converts it to the closest matching

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#221: FILE: drivers/edac/edac_mc.h:326:
+	   bandwith in bytes/sec.
 	   ^^^^^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#223: FILE: drivers/edac/edac_mc.h:328:
+	int (*get_sdram_scrub_rate) (struct mem_ctl_info *mci, u32 *bw);

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#245: FILE: Documentation/drivers/edac/edac.txt:349:
+	rate is set by writing a minimum bandwith in bytes/sec to the
 	                                 ^^^^^^^^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09445.commit.30d8e48d749c12a07009cbe0648d02cf0a2cd4e6 total: 5 errors, 13 warnings, 10 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.09445.commit.30d8e48d749c12a07009cbe0648d02cf0a2cd4e6 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
