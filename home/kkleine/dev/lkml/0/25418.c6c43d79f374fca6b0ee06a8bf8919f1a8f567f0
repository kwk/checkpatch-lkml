ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/ata/sata_nv.c:97:
+^INV_ADMA_SGTBL_LEN^I^I= (1024 - NV_ADMA_CPB_SZ) / $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/ata/sata_nv.c:163:
+^INV_ADMA_STAT_ERR^I^I= NV_ADMA_STAT_CPBERR | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/ata/sata_nv.c:164:
+^I ^I^I^I^I  NV_ADMA_STAT_TIMEOUT,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/ata/sata_nv.c:164:
+^I ^I^I^I^I  NV_ADMA_STAT_TIMEOUT,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: drivers/ata/sata_nv.c:191:
+/* ADMA Command Parameter Block
+   The first 5 SG segments are stored inside the Command Parameter Block itself.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/ata/sata_nv.c:193:
+   memory area indicated by next_aprd. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: drivers/ata/sata_nv.c:209:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#226: FILE: drivers/ata/sata_nv.c:220:
+#define NV_ADMA_CHECK_INTR(GCTL, PORT) ((GCTL) & ( 1 << (19 + (12 * (PORT)))))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: drivers/ata/sata_nv.c:470:
+^I^I.flags^I^I= ATA_FLAG_SATA | ATA_FLAG_NO_LEGACY | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/ata/sata_nv.c:494:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/ata/sata_nv.c:500:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: drivers/ata/sata_nv.c:512:
+		/* Subtract 1 since an extra entry may be needed for padding, see
+		   libata-scsi.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: drivers/ata/sata_nv.c:512:
+		   libata-scsi.c */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#371: FILE: drivers/ata/sata_nv.c:515:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#371: FILE: drivers/ata/sata_nv.c:515:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/ata/sata_nv.c:520:
+^I$

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#380: FILE: drivers/ata/sata_nv.c:524:
+	ata_port_printk(ap, KERN_INFO,
+		"bounce limit 0x%llX, segment boundary 0x%lX, hw segs %hu\n",
+		(unsigned long long)bounce_limit, segment_boundary, sg_tablesize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/ata/sata_nv.c:525:
+	ata_port_printk(ap, KERN_INFO,
+		"bounce limit 0x%llX, segment boundary 0x%lX, hw segs %hu\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#399: FILE: drivers/ata/sata_nv.c:543:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#399: FILE: drivers/ata/sata_nv.c:543:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/ata/sata_nv.c:562:
+^I^I^I^I^I        unsigned int port_no)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/ata/sata_nv.c:562:
+static inline void __iomem *__nv_adma_ctl_block(void __iomem *mmio,
+					        unsigned int port_no)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#466: FILE: drivers/ata/sata_nv.c:610:
+	if(complete || have_global_err)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: drivers/ata/sata_nv.c:610:
+	if(complete || have_global_err)

WARNING:LINE_SPACING: Missing a blank line after declarations
#469: FILE: drivers/ata/sata_nv.c:613:
+		struct ata_queued_cmd *qc = ata_qc_from_tag(ap, cpb_num);
+		if(likely(qc)) {

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: drivers/ata/sata_nv.c:613:
+		if(likely(qc)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#472: FILE: drivers/ata/sata_nv.c:616:
+			/* Only use the ATA port status for non-NCQ commands.
+			   For NCQ commands the current status may have nothing to do with

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: drivers/ata/sata_nv.c:617:
+			   the command just completed. */

ERROR:SPACING: space required before the open parenthesis '('
#474: FILE: drivers/ata/sata_nv.c:618:
+			if(qc->tf.protocol != ATA_PROT_NCQ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#474: FILE: drivers/ata/sata_nv.c:618:
+			if(qc->tf.protocol != ATA_PROT_NCQ) {
+				ata_status = readb(nv_adma_ctl_block(ap) + (ATA_REG_STATUS * 4));
+			}

ERROR:SPACING: space required before the open parenthesis '('
#478: FILE: drivers/ata/sata_nv.c:622:
+			if(have_err || have_global_err || pp->notifier_error & (1 << cpb_num))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: drivers/ata/sata_nv.c:626:
+			DPRINTK("Completing qc from tag %d with err_mask %u\n",cpb_num,
 			                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#509: FILE: drivers/ata/sata_nv.c:653:
+				struct ata_queued_cmd *qc;
+				VPRINTK("in ATA register mode\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#511: FILE: drivers/ata/sata_nv.c:655:
+				if (qc && (!(qc->tf.flags & ATA_TFLAG_POLLING)))
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#513: FILE: drivers/ata/sata_nv.c:657:
+				else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#515: FILE: drivers/ata/sata_nv.c:659:
+					/* No request pending?  Clear interrupt status
+					   anyway, in case there's one pending. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#515: FILE: drivers/ata/sata_nv.c:659:
+					   anyway, in case there's one pending. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: drivers/ata/sata_nv.c:665:
+^I^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#526: FILE: drivers/ata/sata_nv.c:670:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !pp->notifier &&

ERROR:SPACING: space required before the open parenthesis '('
#526: FILE: drivers/ata/sata_nv.c:670:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !pp->notifier &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/ata/sata_nv.c:671:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !pp->notifier &&
+			    !pp->notifier_error)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#534: FILE: drivers/ata/sata_nv.c:678:
+			/* Clear status. Ensure the controller sees the clearing before we start
+			   looking at any of the CPB statuses, so that any CPB completions after

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#535: FILE: drivers/ata/sata_nv.c:679:
+			   this point in the handler will raise another interrupt. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: drivers/ata/sata_nv.c:702:
+^I^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: drivers/ata/sata_nv.c:703:
+				if(ata_tag_valid(ap->active_tag))

CHECK:BRACES: Unbalanced braces around else statement
#562: FILE: drivers/ata/sata_nv.c:706:
+				else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: drivers/ata/sata_nv.c:709:
+					u32 active = ap->sactive;
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#565: FILE: drivers/ata/sata_nv.c:709:
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#565: FILE: drivers/ata/sata_nv.c:709:
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space required before the open parenthesis '('
#565: FILE: drivers/ata/sata_nv.c:709:
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#568: FILE: drivers/ata/sata_nv.c:712:
+						active &= ~(1 << pos );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#578: FILE: drivers/ata/sata_nv.c:722:
+	/* Clear notifiers. Yes, this does appear to have to be done at the very end,
+	   otherwise things grind to a halt quite quickly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#578: FILE: drivers/ata/sata_nv.c:722:
+	   otherwise things grind to a halt quite quickly. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#583: FILE: drivers/ata/sata_nv.c:727:
+			struct nv_adma_port_priv *pp = ap->private_data;
+			writel(pp->notifier | pp->notifier_error,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/ata/sata_nv.c:730:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/ata/sata_nv.c:742:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/ata/sata_nv.c:747:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: drivers/ata/sata_nv.c:748:
+^I/** clear legacy status */^I$

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: drivers/ata/sata_nv.c:758:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE) {

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: drivers/ata/sata_nv.c:772:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE) {

ERROR:SPACING: space required before the open parenthesis '('
#642: FILE: drivers/ata/sata_nv.c:786:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/ata/sata_nv.c:800:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: drivers/ata/sata_nv.c:815:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: drivers/ata/sata_nv.c:861:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#732: FILE: drivers/ata/sata_nv.c:876:
+^Iwritel(mem_dma & 0xFFFFFFFF, ^Immio + NV_ADMA_CPB_BASE_LOW);$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#733: FILE: drivers/ata/sata_nv.c:877:
+	writel((mem_dma >> 16 ) >> 16,	mmio + NV_ADMA_CPB_BASE_HIGH);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: drivers/ata/sata_nv.c:895:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#761: FILE: drivers/ata/sata_nv.c:905:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#761: FILE: drivers/ata/sata_nv.c:905:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#764: FILE: drivers/ata/sata_nv.c:908:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#764: FILE: drivers/ata/sata_nv.c:908:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: drivers/ata/sata_nv.c:909:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#791: FILE: drivers/ata/sata_nv.c:935:
+
+

CHECK:SPACING: No space is necessary after a cast
#801: FILE: drivers/ata/sata_nv.c:945:
+	ioport->cmd_addr	= (unsigned long) mmio;

CHECK:SPACING: No space is necessary after a cast
#802: FILE: drivers/ata/sata_nv.c:946:
+	ioport->data_addr	= (unsigned long) mmio + (ATA_REG_DATA * 4);

CHECK:SPACING: No space is necessary after a cast
#804: FILE: drivers/ata/sata_nv.c:948:
+	ioport->feature_addr	= (unsigned long) mmio + (ATA_REG_ERR * 4);

CHECK:SPACING: No space is necessary after a cast
#805: FILE: drivers/ata/sata_nv.c:949:
+	ioport->nsect_addr	= (unsigned long) mmio + (ATA_REG_NSECT * 4);

CHECK:SPACING: No space is necessary after a cast
#806: FILE: drivers/ata/sata_nv.c:950:
+	ioport->lbal_addr	= (unsigned long) mmio + (ATA_REG_LBAL * 4);

CHECK:SPACING: No space is necessary after a cast
#807: FILE: drivers/ata/sata_nv.c:951:
+	ioport->lbam_addr	= (unsigned long) mmio + (ATA_REG_LBAM * 4);

CHECK:SPACING: No space is necessary after a cast
#808: FILE: drivers/ata/sata_nv.c:952:
+	ioport->lbah_addr	= (unsigned long) mmio + (ATA_REG_LBAH * 4);

CHECK:SPACING: No space is necessary after a cast
#809: FILE: drivers/ata/sata_nv.c:953:
+	ioport->device_addr	= (unsigned long) mmio + (ATA_REG_DEVICE * 4);

CHECK:SPACING: No space is necessary after a cast
#811: FILE: drivers/ata/sata_nv.c:955:
+	ioport->command_addr	= (unsigned long) mmio + (ATA_REG_STATUS * 4);

CHECK:SPACING: No space is necessary after a cast
#813: FILE: drivers/ata/sata_nv.c:957:
+	ioport->ctl_addr	= (unsigned long) mmio + 0x20;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: drivers/ata/sata_nv.c:976:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#882: FILE: drivers/ata/sata_nv.c:1026:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#882: FILE: drivers/ata/sata_nv.c:1026:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];
 		                                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#900: FILE: drivers/ata/sata_nv.c:1044:
+^Iif (!(qc->flags & ATA_QCFLAG_DMAMAP) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: drivers/ata/sata_nv.c:1045:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
+	     qc->tf.protocol == ATA_PROT_ATAPI_DMA) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: drivers/ata/sata_nv.c:1051:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: drivers/ata/sata_nv.c:1063:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#921: FILE: drivers/ata/sata_nv.c:1065:
+	/* Be paranoid and don't let the device see NV_CPB_CTL_CPB_VALID until we are
+	   finished filling in all of the contents */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#921: FILE: drivers/ata/sata_nv.c:1065:
+	   finished filling in all of the contents */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/ata/sata_nv.c:1076:
+^Iif (!(qc->flags & ATA_QCFLAG_DMAMAP) || $

CHECK:BRACES: braces {} should be used on all arms of this statement
#932: FILE: drivers/ata/sata_nv.c:1076:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/ata/sata_nv.c:1077:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
+	     qc->tf.protocol == ATA_PROT_ATAPI_DMA) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#938: FILE: drivers/ata/sata_nv.c:1082:
+		return ata_qc_issue_prot(qc);
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#938: FILE: drivers/ata/sata_nv.c:1082:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#942: FILE: drivers/ata/sata_nv.c:1086:
+	/* write append register, command tag in lower 8 bits
+	   and (number of cpbs to append -1) in top 8 bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#942: FILE: drivers/ata/sata_nv.c:1086:
+	   and (number of cpbs to append -1) in top 8 bits */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: drivers/ata/sata_nv.c:1089:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#946: FILE: drivers/ata/sata_nv.c:1090:
+	DPRINTK("Issued tag %u\n",qc->tag);
 	                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#961: FILE: drivers/ata/sata_nv.c:1287:
+	struct nv_adma_port_priv *pp = ap->private_data;
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:SPACING: space required before the open parenthesis '('
#961: FILE: drivers/ata/sata_nv.c:1287:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/ata/sata_nv.c:1296:
+^I^I$

WARNING:SPLIT_STRING: quoted string split across lines
#972: FILE: drivers/ata/sata_nv.c:1298:
+		ata_port_printk(ap, KERN_ERR, "EH in ADMA mode, notifier 0x%X "
+			"notifier_error 0x%X gen_ctl 0x%X status 0x%X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#975: FILE: drivers/ata/sata_nv.c:1301:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/ata/sata_nv.c:1303:
+			struct nv_adma_cpb *cpb = &pp->cpb[i];
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited after that open parenthesis '('
#977: FILE: drivers/ata/sata_nv.c:1303:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#977: FILE: drivers/ata/sata_nv.c:1303:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space required before the open parenthesis '('
#977: FILE: drivers/ata/sata_nv.c:1303:
+			if( cpb->ctl_flags || cpb->resp_flags )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#979: FILE: drivers/ata/sata_nv.c:1305:
+				ata_port_printk(ap, KERN_ERR,
+					"CPB %d: ctl_flags 0x%x, resp_flags 0x%x\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#989: FILE: drivers/ata/sata_nv.c:1315:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space prohibited after that open parenthesis '('
#998: FILE: drivers/ata/sata_nv.c:1324:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#998: FILE: drivers/ata/sata_nv.c:1324:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1001: FILE: drivers/ata/sata_nv.c:1327:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1001: FILE: drivers/ata/sata_nv.c:1327:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1025: FILE: drivers/ata/sata_nv.c:1353:
+	if (	!printed_version++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/ata/sata_nv.c:1355:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1042: FILE: drivers/ata/sata_nv.c:1366:
+	if(type >= CK804 && adma_enabled) {

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#1043: FILE: drivers/ata/sata_nv.c:1367:
+		dev_printk(KERN_NOTICE, &pdev->dev, "Using ADMA mode\n");

ERROR:SPACING: space required before the open parenthesis '('
#1045: FILE: drivers/ata/sata_nv.c:1369:
+		if(!pci_set_dma_mask(pdev, DMA_64BIT_MASK) &&

ERROR:SPACING: space required before the open parenthesis '('
#1050: FILE: drivers/ata/sata_nv.c:1374:
+	if(!mask_set) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1062: FILE: drivers/ata/sata_nv.c:1385:
+	ppi[0] = ppi[1] = &nv_port_info[type];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.25418.commit.c6c43d79f374fca6b0ee06a8bf8919f1a8f567f0 total: 77 errors, 32 warnings, 27 checks, 1048 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.25418.commit.c6c43d79f374fca6b0ee06a8bf8919f1a8f567f0 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
