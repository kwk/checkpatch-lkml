WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:40:
+static int c2_alloc_mqsp_chunk(struct c2_dev *c2dev, gfp_t gfp_mask, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#100: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:46:
+	new_head = (struct sp_chunk *) __get_free_page(gfp_mask);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_head"
#101: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:47:
+	if (new_head == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:50:
+^Inew_head->dma_addr = dma_map_single(c2dev->ibdev.dma_device, new_head, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:59:
+^I     i < (PAGE_SIZE - sizeof(struct sp_chunk) - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:60:
+^I^I  sizeof(u16)) / sizeof(u16) - 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:71:
+int c2_init_mqsp_pool(struct c2_dev *c2dev, gfp_t gfp_mask, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:83:
+^I^Idma_unmap_single(c2dev->ibdev.dma_device, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:84:
+^I^I^I^I pci_unmap_addr(root, mapping), PAGE_SIZE, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:85:
+^I^I^I         DMA_FROM_DEVICE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:86:
+		__free_page((struct page *) root);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:91:
+u16 *c2_alloc_mqsp(struct c2_dev *c2dev, struct sp_chunk *head, $

CHECK:BRACES: braces {} should be used on all arms of this statement
#152: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:98:
+		if (mqsp != 0xFFFF) {
[...]
+		} else if (head->next == NULL) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head->next"
#155: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:101:
+		} else if (head->next == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#156: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:102:
+			if (c2_alloc_mqsp_chunk(c2dev, gfp_mask, &head->next) ==
[...]
+			} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#162: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:108:
+				break;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#162: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:108:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#164: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:110:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:114:
+^I^I*dma_addr = head->dma_addr + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:115:
+^I^I^I    ((unsigned long) &(head->shared_ptr[mqsp]) - $

CHECK:SPACING: No space is necessary after a cast
#169: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:115:
+			    ((unsigned long) &(head->shared_ptr[mqsp]) - 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around head->shared_ptr[mqsp]
#169: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:115:
+			    ((unsigned long) &(head->shared_ptr[mqsp]) - 

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#170: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:116:
+			     (unsigned long) head);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:117:
+		pr_debug("%s addr %p dma_addr %llx\n", __FUNCTION__,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around head->shared_ptr[mqsp]
#172: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:118:
+			 &(head->shared_ptr[mqsp]), (u64)*dma_addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around head->shared_ptr[mqsp]
#173: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:119:
+		return &(head->shared_ptr[mqsp]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:124:
+void c2_free_mqsp(u16 * mqsp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#184: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:130:
+	head = (struct sp_chunk *) ((unsigned long) mqsp & PAGE_MASK);

CHECK:SPACING: No space is necessary after a cast
#190: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:136:
+	idx = ((unsigned long) mqsp & ~PAGE_MASK) >> 1;

CHECK:SPACING: No space is necessary after a cast
#191: FILE: drivers/infiniband/hw/amso1100/c2_alloc.c:137:
+	idx -= (unsigned long) &(((struct sp_chunk *) 0)->shared_ptr[0]) >> 1;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#205: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:56:
+ ^Iint err, pbl_virt, pbl_index, i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:56:
+ ^Iint err, pbl_virt, pbl_index, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:56:
+ ^Iint err, pbl_virt, pbl_index, i;$

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#271: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:67:
+		return -EINVAL;
+		break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#277: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:73:
+	if (!wr) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:79:
+^I * Only the last PBL message will generate a reply from the verbs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:99:
+^I^I^I * reference the request struct.  dereferenced in the $

CHECK:SPACING: No space is necessary after a cast
#314: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:110:
+			wr->hdr.context = (unsigned long) vq_req;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:114:
+^I^I * If pbl_virt is set then va is a virtual address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:120:
+^I^I * Just fill in the wr with what is in the array.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:126:
+ ^I^I^I^Iwr->paddrs[i] = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:126:
+ ^I^I^I^Iwr->paddrs[i] = $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:126:
+ ^I^I^I^Iwr->paddrs[i] = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:126:
+ ^I^I^I^Iwr->paddrs[i] = $

CHECK:SPACING: No space is necessary after a cast
#338: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:134:
+		err = vq_send_wr(c2dev, (union c2wr *) wr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#340: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:136:
+			if (count <= pbe_count) {
+				vq_req_put(c2dev, vq_req);
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#353: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:149:
+	if (err) {
+		goto bail0;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:154:
+^I * Process reply $

CHECK:SPACING: No space is necessary after a cast
#360: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:156:
+	reply = (struct c2wr_nsmr_pbl_rep *) (unsigned long) vq_req->reply_msg;

WARNING:INDENTED_LABEL: labels should not be indented
#369: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:165:
+      bail0:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:172:
+c2_nsmr_register_phys_kern(struct c2_dev *c2dev, u64 *addr_list, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:173:
+ ^I^I^I   int page_size, int pbl_depth, u32 length, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:173:
+ ^I^I^I   int page_size, int pbl_depth, u32 length, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#377: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:173:
+ ^I^I^I   int page_size, int pbl_depth, u32 length, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:173:
+c2_nsmr_register_phys_kern(struct c2_dev *c2dev, u64 *addr_list, 
+ 			   int page_size, int pbl_depth, u32 length, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:173:
+ ^I^I^I   int page_size, int pbl_depth, u32 length, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:174:
+ ^I^I^I   u32 offset, u64 *va, enum c2_acf acf, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:174:
+ ^I^I^I   u32 offset, u64 *va, enum c2_acf acf, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:174:
+ ^I^I^I   u32 offset, u64 *va, enum c2_acf acf, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:174:
+ ^I^I^I   u32 offset, u64 *va, enum c2_acf acf, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#394: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:190:
+	if (pbl_depth > C2_PBL_MAX_DEPTH) {
+		return -EINTR;
+	}

CHECK:SPACING: No space is necessary after a cast
#415: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:211:
+	wr->hdr.context = (unsigned long) vq_req;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#426: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:222:
+	if (pbl_depth <= pbe_count) {
+		flags |= MEM_PBL_COMPLETE;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#443: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:239:
+	for (i = 0; i < count; i++) {
+		wr->paddrs[i] = cpu_to_be64(addr_list[i]);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:244:
+^I * regerence the request struct $

CHECK:SPACING: No space is necessary after a cast
#455: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:251:
+	err = vq_send_wr(c2dev, (union c2wr *) wr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#465: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:261:
+	if (err) {
+		goto bail1;
+	}

CHECK:SPACING: No space is necessary after a cast
#473: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:269:
+	    (struct c2wr_nsmr_register_rep *) (unsigned long) (vq_req->reply_msg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#478: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:274:
+	if ((err = c2_errno(reply))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#478: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:274:
+	if ((err = c2_errno(reply))) {
+		goto bail2;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#482: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:278:
+	//*p_pb_entries = be32_to_cpu(reply->pbl_depth);
+	mr->ibmr.lkey = mr->ibmr.rkey = be32_to_cpu(reply->stag_index);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#482: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:278:
+	mr->ibmr.lkey = mr->ibmr.rkey = be32_to_cpu(reply->stag_index);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#492: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:288:
+	if (pbl_depth) {
+

CHECK:SPACING: No space is necessary after a cast
#493: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:289:
+		vq_req->reply_msg = (unsigned long) NULL;

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:293:
+					(unsigned long) &addr_list[i],

WARNING:BRACES: braces {} are not necessary for single statement blocks
#499: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:295:
+		if (err) {
+			goto bail1;
+		}

WARNING:INDENTED_LABEL: labels should not be indented
#509: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:305:
+      bail2:

WARNING:INDENTED_LABEL: labels should not be indented
#511: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:307:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#513: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:309:
+      bail0:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#525: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:321:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#530: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:326:
+	if (!vq_req) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:330:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:334:
+	wr.hdr.context = (u64) (unsigned long) vq_req;

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:346:
+	err = vq_send_wr(c2dev, (union c2wr *) & wr);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#550: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:346:
+	err = vq_send_wr(c2dev, (union c2wr *) & wr);
 	                                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#560: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:356:
+	if (err) {
+		goto bail0;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:361:
+^I * Process reply $

CHECK:SPACING: No space is necessary after a cast
#567: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:363:
+	reply = (struct c2wr_stag_dealloc_rep *) (unsigned long) vq_req->reply_msg;

WARNING:INDENTED_LABEL: labels should not be indented
#576: FILE: drivers/infiniband/hw/amso1100/c2_mm.c:372:
+      bail0:

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67226.commit.9801936b887e290e51eb1a2d39b3a248c3fe8103 total: 30 errors, 31 warnings, 31 checks, 519 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67226.commit.9801936b887e290e51eb1a2d39b3a248c3fe8103 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
