WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#33: 
Signed-Off-By: Pavel Emelianov <xemul@sw.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: Kirill Korotaev <dev@sw.ru>

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#59: FILE: fs/binfmt_elf.c:366:
+			int elf_type = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECPRIO;
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#59: FILE: fs/binfmt_elf.c:366:
+			int elf_type = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECPRIO;
 			                                        ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: mm/mlock.c:24:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#262: FILE: mm/mmap.c:279:
+	if (__do_brk(oldbrk, newbrk-oldbrk, BC_BARRIER) != oldbrk)
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: mm/mmap.c:1069:
+	if (bc_memory_charge(mm, len, file, vm_flags,
+				flags & MAP_EXECPRIO ? BC_LIMIT : BC_BARRIER))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: mm/mmap.c:1519:
+	if (bc_memory_charge(mm, grow << PAGE_SHIFT,
+				vma->vm_file, vma->vm_flags, BC_LIMIT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: mm/mmap.c:1898:
+static unsigned long __do_brk(unsigned long addr, unsigned long len,
+		int bc_prio)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: mm/mremap.c:350:
+	if (bc_memory_charge(mm, new_len - old_len,
+				vma->vm_file, vma->vm_flags, BC_BARRIER)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: mm/mremap.c:414:
+		bc_memory_uncharge(mm, new_len - old_len,
+				vma->vm_file, vma->vm_flags);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#628: FILE: mm/shmem.c:377:
+		page = shmem_dir_alloc(mapping_gfp_mask(inode->i_mapping) | \

CHECK:BRACES: Unbalanced braces around else statement
#637: FILE: mm/shmem.c:2531:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: mm/shmem.c:2540:
+			__bc_memory_uncharge(vma->vm_mm,
+					vma->vm_end - vma->vm_start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: mm/shmem.c:2544:
+			if (__bc_memory_charge(vma->vm_mm,
+						vma->vm_end - vma->vm_start,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19896.commit.a085d4215ff09d6cc0c4a4846c866475bdfa9b25 total: 1 errors, 15 warnings, 11 checks, 529 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.19896.commit.a085d4215ff09d6cc0c4a4846c866475bdfa9b25 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
