CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#107: 
Signed-off-by: Sébastien Dugué <sebastien.dugue@bull.net>
                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: fs/aio.c:1028:
+struct lio_event *lio_create(struct sigevent __user *user_event,
+			int mode)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == LIO_NOWAIT'
#156: FILE: fs/aio.c:1033:
+	if (unlikely((mode == LIO_NOWAIT) && !user_event))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == LIO_NOWAIT'
#173: FILE: fs/aio.c:1050:
+	if (user_event && (mode == LIO_NOWAIT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: fs/aio.c:1789:
+static int io_submit_group(struct kioctx *ctx, long nr,
+	struct iocb __user * __user *iocbpp, struct lio_event *lio)

CHECK:BRACES: braces {} should be used on all arms of this statement
#264: FILE: fs/aio.c:1817:
+			if (lio) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#270: FILE: fs/aio.c:1823:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: fs/aio.c:1867:
+asmlinkage long sys_lio_submit(aio_context_t ctx_id, int mode, long nr,
+	struct iocb __user * __user *iocbpp, struct sigevent __user *event)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#326: FILE: fs/aio.c:1876:
+	if (unlikely(!access_ok(VERIFY_READ, iocbpp, (nr*sizeof(*iocbpp)))))
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#344: FILE: fs/aio.c:1894:
+	if (ret < 0 ) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#346: FILE: fs/aio.c:1896:
+		if (lio)
+			kfree(lio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: fs/compat.c:646:
+static int compat_io_submit_group(struct kioctx *ctx, long nr,
+	u32 __user *iocb, struct lio_event *lio)

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: fs/compat.c:691:
+			if (lio) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#476: FILE: fs/compat.c:697:
+			} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#480: FILE: fs/compat.c:701:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#481: FILE: fs/compat.c:702:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: fs/compat.c:730:
+compat_sys_lio_submit(aio_context_t ctx_id, int mode, int nr, u32 __user *iocb,
+		u32 __user *sig_user)

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: fs/compat.c:749:
+		struct sigevent kevent;
+		event = compat_alloc_user_space(sizeof(struct sigevent));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: fs/compat.c:751:
+		if (get_compat_sigevent(&kevent, sig_user) ||
+			copy_to_user(event, &kevent, sizeof(struct sigevent)))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#545: FILE: fs/compat.c:766:
+		if (lio)
+			kfree(lio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: include/linux/syscalls.h:323:
+asmlinkage long sys_lio_submit(aio_context_t, int, long,
+		struct iocb __user * __user *, struct sigevent __user *);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12630.commit.b00ad552d988a874622bfaf86033b03e42a79348 total: 1 errors, 3 warnings, 17 checks, 436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12630.commit.b00ad552d988a874622bfaf86033b03e42a79348 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
