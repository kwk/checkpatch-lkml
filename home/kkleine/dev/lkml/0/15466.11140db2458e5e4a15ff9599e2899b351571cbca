CHECK:BRACES: braces {} should be used on all arms of this statement
#66: FILE: fs/dlm/lock.c:3036:
+			if (error == -EAGAIN)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#68: FILE: fs/dlm/lock.c:3038:
+			else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#105: FILE: fs/dlm/requestqueue.c:52:
+	/* We need to check dlm_locking_stopped() after taking the mutex to
+	   avoid a race where dlm_recoverd enables locking and runs

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: fs/dlm/requestqueue.c:54:
+	   and this addition to the requestqueue. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#111: FILE: fs/dlm/requestqueue.c:57:
+	if (dlm_locking_stopped(ls))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#113: FILE: fs/dlm/requestqueue.c:59:
+	else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dlm_add_requestqueue', this function's name, in a string
#114: FILE: fs/dlm/requestqueue.c:60:
+		log_debug(ls, "dlm_add_requestqueue skip from %d", nodeid);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.15466.commit.11140db2458e5e4a15ff9599e2899b351571cbca total: 0 errors, 3 warnings, 4 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.15466.commit.11140db2458e5e4a15ff9599e2899b351571cbca has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
