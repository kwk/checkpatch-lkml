Use of uninitialized value $typo_fix in ucfirst at /home/kkleine/dev/linux/scripts/checkpatch.pl line 3363.
WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: fs/reiser4/plugin/compress/lzoconf.h:1:
+/* lzoconf.h -- configuration for the LZO real-time data compression library

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#41: FILE: fs/reiser4/plugin/compress/lzoconf.h:2:
+/* lzoconf.h -- configuration for the LZO real-time data compression library
+   adopted for reiser4 compression transform plugin.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: fs/reiser4/plugin/compress/lzoconf.h:28:
+   If not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: fs/reiser4/plugin/compress/lzoconf.h:29:
+   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#93: FILE: fs/reiser4/plugin/compress/lzoconf.h:54:
+/***********************************************************************
+// LZO requires a conforming <limits.h>

CHECK:CAMELCASE: Avoid CamelCase: <LZO_0xffffffffL>
#100: FILE: fs/reiser4/plugin/compress/lzoconf.h:61:
+#define LZO_0xffffffffL         4294967295ul

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: fs/reiser4/plugin/compress/lzoconf.h:64:
+/***********************************************************************
+// architecture defines

CHECK:CAMELCASE: Avoid CamelCase: <_Windows>
#107: FILE: fs/reiser4/plugin/compress/lzoconf.h:68:
+#  if defined(__WINDOWS__) || defined(_WINDOWS) || defined(_Windows)

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#113: FILE: fs/reiser4/plugin/compress/lzoconf.h:74:
+#  elif defined(__DOS__) || defined(__MSDOS__) || defined(MSDOS)
                                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#124: FILE: fs/reiser4/plugin/compress/lzoconf.h:85:
+#if (UINT_MAX < LZO_0xffffffffL)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#136: FILE: fs/reiser4/plugin/compress/lzoconf.h:97:
+	 * everything with -D__LZO_STRICT_16BIT */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#150: FILE: fs/reiser4/plugin/compress/lzoconf.h:111:
+#  if (UINT_MAX < LZO_0xffffffffL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#169: FILE: fs/reiser4/plugin/compress/lzoconf.h:130:
+/***********************************************************************
+// integral and pointer types

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#174: FILE: fs/reiser4/plugin/compress/lzoconf.h:135:
+#  if (UINT_MAX >= LZO_0xffffffffL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#175: FILE: fs/reiser4/plugin/compress/lzoconf.h:136:
+	typedef unsigned int lzo_uint32;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#176: FILE: fs/reiser4/plugin/compress/lzoconf.h:137:
+	typedef int lzo_int32;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#180: FILE: fs/reiser4/plugin/compress/lzoconf.h:141:
+#  elif (ULONG_MAX >= LZO_0xffffffffL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#181: FILE: fs/reiser4/plugin/compress/lzoconf.h:142:
+	typedef unsigned long lzo_uint32;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#182: FILE: fs/reiser4/plugin/compress/lzoconf.h:143:
+	typedef long lzo_int32;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#193: FILE: fs/reiser4/plugin/compress/lzoconf.h:154:
+#  if (UINT_MAX >= LZO_0xffffffffL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#194: FILE: fs/reiser4/plugin/compress/lzoconf.h:155:
+	typedef unsigned int lzo_uint;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#195: FILE: fs/reiser4/plugin/compress/lzoconf.h:156:
+	typedef int lzo_int;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#199: FILE: fs/reiser4/plugin/compress/lzoconf.h:160:
+#  elif (ULONG_MAX >= LZO_0xffffffffL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#200: FILE: fs/reiser4/plugin/compress/lzoconf.h:161:
+	typedef unsigned long lzo_uint;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#201: FILE: fs/reiser4/plugin/compress/lzoconf.h:162:
+	typedef long lzo_int;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#210: FILE: fs/reiser4/plugin/compress/lzoconf.h:171:
+	typedef int lzo_bool;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#213: FILE: fs/reiser4/plugin/compress/lzoconf.h:174:
+/***********************************************************************
+// memory models

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#259: FILE: fs/reiser4/plugin/compress/lzoconf.h:220:
+#define lzo_uint32p             lzo_uint32 __LZO_MMODEL *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#260: FILE: fs/reiser4/plugin/compress/lzoconf.h:221:
+#define lzo_int32p              lzo_int32 __LZO_MMODEL *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#263: FILE: fs/reiser4/plugin/compress/lzoconf.h:224:
+#define lzo_voidpp              lzo_voidp __LZO_MMODEL *

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#264: FILE: fs/reiser4/plugin/compress/lzoconf.h:225:
+#define lzo_bytepp              lzo_bytep __LZO_MMODEL *

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#271: FILE: fs/reiser4/plugin/compress/lzoconf.h:232:
+/***********************************************************************
+// calling conventions and function types

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#286: FILE: fs/reiser4/plugin/compress/lzoconf.h:247:
+#    define __LZO_CDECL         __LZO_CMODEL __cdecl

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#288: FILE: fs/reiser4/plugin/compress/lzoconf.h:249:
+#    define __LZO_CDECL         __LZO_CMODEL __cdecl

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: fs/reiser4/plugin/compress/lzoconf.h:251:
+#    define __LZO_CDECL         __LZO_CMODEL __cdecl

WARNING:NEW_TYPEDEFS: do not add new typedefs
#307: FILE: fs/reiser4/plugin/compress/lzoconf.h:268:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#312: FILE: fs/reiser4/plugin/compress/lzoconf.h:273:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#317: FILE: fs/reiser4/plugin/compress/lzoconf.h:278:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#322: FILE: fs/reiser4/plugin/compress/lzoconf.h:283:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#330: FILE: fs/reiser4/plugin/compress/lzoconf.h:291:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#340: FILE: fs/reiser4/plugin/compress/lzoconf.h:301:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#346: FILE: fs/reiser4/plugin/compress/lzoconf.h:307:
+	typedef int

WARNING:NEW_TYPEDEFS: do not add new typedefs
#353: FILE: fs/reiser4/plugin/compress/lzoconf.h:314:
+	typedef void (__LZO_ENTRY * lzo_progress_callback_t) (lzo_uint,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#357: FILE: fs/reiser4/plugin/compress/lzoconf.h:318:
+/***********************************************************************
+// export information

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#370: FILE: fs/reiser4/plugin/compress/lzoconf.h:331:
+#  define LZO_PUBLIC(_rettype) \
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_ENTRY

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: fs/reiser4/plugin/compress/lzoconf.h:332:
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_ENTRY$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: fs/reiser4/plugin/compress/lzoconf.h:332:
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_ENTRY$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#374: FILE: fs/reiser4/plugin/compress/lzoconf.h:335:
+#  define LZO_EXTERN(_rettype)          __LZO_EXTERN_C LZO_PUBLIC(_rettype)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#377: FILE: fs/reiser4/plugin/compress/lzoconf.h:338:
+#  define LZO_PRIVATE(_rettype)         static _rettype __LZO_ENTRY

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#382: FILE: fs/reiser4/plugin/compress/lzoconf.h:343:
+#  define LZO_PUBLIC_CDECL(_rettype) \
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_CDECL

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: fs/reiser4/plugin/compress/lzoconf.h:344:
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_CDECL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: fs/reiser4/plugin/compress/lzoconf.h:344:
+                __LZO_EXPORT1 _rettype __LZO_EXPORT2 __LZO_CDECL$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#386: FILE: fs/reiser4/plugin/compress/lzoconf.h:347:
+#  define LZO_EXTERN_CDECL(_rettype)    __LZO_EXTERN_C LZO_PUBLIC_CDECL(_rettype)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#390: FILE: fs/reiser4/plugin/compress/lzoconf.h:351:
+ * is fully thread safe) */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#392: FILE: fs/reiser4/plugin/compress/lzoconf.h:353:
+#  define LZO_PUBLIC_VAR(_type) \
+                __LZO_EXPORT1 _type __LZO_EXPORT2 __LZO_DMODEL

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: fs/reiser4/plugin/compress/lzoconf.h:354:
+                __LZO_EXPORT1 _type __LZO_EXPORT2 __LZO_DMODEL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: fs/reiser4/plugin/compress/lzoconf.h:354:
+                __LZO_EXPORT1 _type __LZO_EXPORT2 __LZO_DMODEL$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#396: FILE: fs/reiser4/plugin/compress/lzoconf.h:357:
+#  define LZO_EXTERN_VAR(_type)         extern LZO_PUBLIC_VAR(_type)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#400: FILE: fs/reiser4/plugin/compress/lzoconf.h:361:
+/***********************************************************************
+// error codes and prototypes

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: fs/reiser4/plugin/compress/lzoconf.h:384:
+#define lzo_init() __lzo_init2(LZO_VERSION,(int)sizeof(short),(int)sizeof(int),\
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: fs/reiser4/plugin/compress/lzoconf.h:384:
+#define lzo_init() __lzo_init2(LZO_VERSION,(int)sizeof(short),(int)sizeof(int),\
                                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: fs/reiser4/plugin/compress/lzoconf.h:385:
+    (int)sizeof(long),(int)sizeof(lzo_uint32),(int)sizeof(lzo_uint),\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: fs/reiser4/plugin/compress/lzoconf.h:385:
+    (int)sizeof(long),(int)sizeof(lzo_uint32),(int)sizeof(lzo_uint),\
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: fs/reiser4/plugin/compress/lzoconf.h:385:
+    (int)sizeof(long),(int)sizeof(lzo_uint32),(int)sizeof(lzo_uint),\
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: fs/reiser4/plugin/compress/lzoconf.h:386:
+    (int)lzo_sizeof_dict_t,(int)sizeof(char *),(int)sizeof(lzo_voidp),\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: fs/reiser4/plugin/compress/lzoconf.h:386:
+    (int)lzo_sizeof_dict_t,(int)sizeof(char *),(int)sizeof(lzo_voidp),\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: fs/reiser4/plugin/compress/lzoconf.h:386:
+    (int)lzo_sizeof_dict_t,(int)sizeof(char *),(int)sizeof(lzo_voidp),\
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: fs/reiser4/plugin/compress/lzoconf.h:387:
+    (int)sizeof(lzo_compress_t))$

CHECK:SPACING: No space is necessary after a cast
#427: FILE: fs/reiser4/plugin/compress/lzoconf.h:388:
+	 LZO_EXTERN(int) __lzo_init2(unsigned, int, int, int, int, int, int,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#427: FILE: fs/reiser4/plugin/compress/lzoconf.h:388:
+	 LZO_EXTERN(int) __lzo_init2(unsigned, int, int, int, int, int, int,

WARNING:NEW_TYPEDEFS: do not add new typedefs
#435: FILE: fs/reiser4/plugin/compress/lzoconf.h:396:
+	typedef union {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#439: FILE: fs/reiser4/plugin/compress/lzoconf.h:400:
+	typedef union {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#443: FILE: fs/reiser4/plugin/compress/lzoconf.h:404:
+	typedef union {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: fs/reiser4/plugin/compress/lzoconf.h:411:
+#define LZO_PTR_ALIGN_UP(_ptr,_size) \
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_ptr' - possible side-effects?
#450: FILE: fs/reiser4/plugin/compress/lzoconf.h:411:
+#define LZO_PTR_ALIGN_UP(_ptr,_size) \
+    ((_ptr) + (lzo_uint) __lzo_align_gap((const lzo_voidp)(_ptr),(lzo_uint)(_size)))

CHECK:SPACING: No space is necessary after a cast
#451: FILE: fs/reiser4/plugin/compress/lzoconf.h:412:
+    ((_ptr) + (lzo_uint) __lzo_align_gap((const lzo_voidp)(_ptr),(lzo_uint)(_size)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: fs/reiser4/plugin/compress/lzoconf.h:412:
+    ((_ptr) + (lzo_uint) __lzo_align_gap((const lzo_voidp)(_ptr),(lzo_uint)(_size)))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: fs/reiser4/plugin/compress/lzoconf.h:412:
+    ((_ptr) + (lzo_uint) __lzo_align_gap((const lzo_voidp)(_ptr),(lzo_uint)(_size)))
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: fs/reiser4/plugin/compress/lzoconf.h:415:
+#define LZO_ALIGN(_ptr,_size) LZO_PTR_ALIGN_UP(_ptr,_size)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: fs/reiser4/plugin/compress/lzoconf.h:415:
+#define LZO_ALIGN(_ptr,_size) LZO_PTR_ALIGN_UP(_ptr,_size)
                                                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#463: FILE: fs/reiser4/plugin/compress/minilzo.c:1:
+/* minilzo.c -- mini subset of the LZO real-time data compression library

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#464: FILE: fs/reiser4/plugin/compress/minilzo.c:2:
+/* minilzo.c -- mini subset of the LZO real-time data compression library
+   adopted for reiser4 compression transform plugin.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#490: FILE: fs/reiser4/plugin/compress/minilzo.c:28:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#491: FILE: fs/reiser4/plugin/compress/minilzo.c:29:
+   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#524: FILE: fs/reiser4/plugin/compress/minilzo.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#560: FILE: fs/reiser4/plugin/compress/minilzo.c:98:
+# if 0				/* edward */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#566: FILE: fs/reiser4/plugin/compress/minilzo.c:104:
+	{ typedef int __lzo_compile_time_assert_fail[1 - 2 * !(expr)]; }

WARNING:IF_1: Consider removing the #if 1 and its #endif
#570: FILE: fs/reiser4/plugin/compress/minilzo.c:108:
+#  if 1

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#571: FILE: fs/reiser4/plugin/compress/minilzo.c:109:
+#    define LZO_UNUSED(var)     ((void)&var)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#573: FILE: fs/reiser4/plugin/compress/minilzo.c:111:
+#    define LZO_UNUSED(var)     { typedef int __lzo_unused[sizeof(var) ? 2 : 1]; }

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#575: FILE: fs/reiser4/plugin/compress/minilzo.c:113:
+#    define LZO_UNUSED(parm)    (parm = parm)
                        ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#575: FILE: fs/reiser4/plugin/compress/minilzo.c:113:
+#    define LZO_UNUSED(parm)    (parm = parm)
                                  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#575: FILE: fs/reiser4/plugin/compress/minilzo.c:113:
+#    define LZO_UNUSED(parm)    (parm = parm)
                                         ^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parm' - possible side-effects?
#575: FILE: fs/reiser4/plugin/compress/minilzo.c:113:
+#    define LZO_UNUSED(parm)    (parm = parm)

WARNING:INLINE: plain inline is preferred over __inline__
#579: FILE: fs/reiser4/plugin/compress/minilzo.c:117:
+#if !defined(__inline__) && !defined(__GNUC__)

WARNING:INLINE: plain inline is preferred over __inline__
#581: FILE: fs/reiser4/plugin/compress/minilzo.c:119:
+#    define __inline__      inline

WARNING:INLINE: plain inline is preferred over __inline__
#583: FILE: fs/reiser4/plugin/compress/minilzo.c:121:
+#    define __inline__

CHECK:SPACING: No space is necessary after a cast
#596: FILE: fs/reiser4/plugin/compress/minilzo.c:134:
+#  define LZO_BYTE(x)       ((unsigned char) ((x) & 0xff))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: fs/reiser4/plugin/compress/minilzo.c:136:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#598: FILE: fs/reiser4/plugin/compress/minilzo.c:136:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#598: FILE: fs/reiser4/plugin/compress/minilzo.c:136:
+#define LZO_MAX(a,b)        ((a) >= (b) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#599: FILE: fs/reiser4/plugin/compress/minilzo.c:137:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#599: FILE: fs/reiser4/plugin/compress/minilzo.c:137:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#599: FILE: fs/reiser4/plugin/compress/minilzo.c:137:
+#define LZO_MIN(a,b)        ((a) <= (b) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#600: FILE: fs/reiser4/plugin/compress/minilzo.c:138:
+#define LZO_MAX3(a,b,c)     ((a) >= (b) ? LZO_MAX(a,c) : LZO_MAX(b,c))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#601: FILE: fs/reiser4/plugin/compress/minilzo.c:139:
+#define LZO_MIN3(a,b,c)     ((a) <= (b) ? LZO_MIN(a,c) : LZO_MIN(b,c))

CHECK:SPACING: No space is necessary after a cast
#603: FILE: fs/reiser4/plugin/compress/minilzo.c:141:
+#define lzo_sizeof(type)    ((lzo_uint) (sizeof(type)))

CHECK:SPACING: No space is necessary after a cast
#605: FILE: fs/reiser4/plugin/compress/minilzo.c:143:
+#define LZO_HIGH(array)     ((lzo_uint) (sizeof(array)/sizeof(*(array))))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#605: FILE: fs/reiser4/plugin/compress/minilzo.c:143:
+#define LZO_HIGH(array)     ((lzo_uint) (sizeof(array)/sizeof(*(array))))
                                                       ^

CHECK:SPACING: No space is necessary after a cast
#613: FILE: fs/reiser4/plugin/compress/minilzo.c:151:
+#define LZO_USIZE(bits)     ((lzo_uint) 1 << (bits))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#616: FILE: fs/reiser4/plugin/compress/minilzo.c:154:
+#define LZO_STYPE_MAX(b)    (((1l  << (8*(b)-2)) - 1l)  + (1l  << (8*(b)-2)))
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#616: FILE: fs/reiser4/plugin/compress/minilzo.c:154:
+#define LZO_STYPE_MAX(b)    (((1l  << (8*(b)-2)) - 1l)  + (1l  << (8*(b)-2)))
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#616: FILE: fs/reiser4/plugin/compress/minilzo.c:154:
+#define LZO_STYPE_MAX(b)    (((1l  << (8*(b)-2)) - 1l)  + (1l  << (8*(b)-2)))
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#616: FILE: fs/reiser4/plugin/compress/minilzo.c:154:
+#define LZO_STYPE_MAX(b)    (((1l  << (8*(b)-2)) - 1l)  + (1l  << (8*(b)-2)))
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#616: FILE: fs/reiser4/plugin/compress/minilzo.c:154:
+#define LZO_STYPE_MAX(b)    (((1l  << (8*(b)-2)) - 1l)  + (1l  << (8*(b)-2)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#617: FILE: fs/reiser4/plugin/compress/minilzo.c:155:
+#define LZO_UTYPE_MAX(b)    (((1ul << (8*(b)-1)) - 1ul) + (1ul << (8*(b)-1)))
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#617: FILE: fs/reiser4/plugin/compress/minilzo.c:155:
+#define LZO_UTYPE_MAX(b)    (((1ul << (8*(b)-1)) - 1ul) + (1ul << (8*(b)-1)))
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#617: FILE: fs/reiser4/plugin/compress/minilzo.c:155:
+#define LZO_UTYPE_MAX(b)    (((1ul << (8*(b)-1)) - 1ul) + (1ul << (8*(b)-1)))
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#617: FILE: fs/reiser4/plugin/compress/minilzo.c:155:
+#define LZO_UTYPE_MAX(b)    (((1ul << (8*(b)-1)) - 1ul) + (1ul << (8*(b)-1)))
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#617: FILE: fs/reiser4/plugin/compress/minilzo.c:155:
+#define LZO_UTYPE_MAX(b)    (((1ul << (8*(b)-1)) - 1ul) + (1ul << (8*(b)-1)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#622: FILE: fs/reiser4/plugin/compress/minilzo.c:160:
+#  elif (UINT_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#624: FILE: fs/reiser4/plugin/compress/minilzo.c:162:
+#  elif (UINT_MAX >= LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#632: FILE: fs/reiser4/plugin/compress/minilzo.c:170:
+#  if (ULONG_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#634: FILE: fs/reiser4/plugin/compress/minilzo.c:172:
+#  elif (ULONG_MAX >= LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#648: FILE: fs/reiser4/plugin/compress/minilzo.c:186:
+#if 1 && defined(__LZO_i386) && (UINT_MAX == LZO_0xffffffffL)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#648: FILE: fs/reiser4/plugin/compress/minilzo.c:186:
+#if 1 && defined(__LZO_i386) && (UINT_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#652: FILE: fs/reiser4/plugin/compress/minilzo.c:190:
+#  if !defined(LZO_UNALIGNED_OK_4) && (LZO_UINT32_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#672: FILE: fs/reiser4/plugin/compress/minilzo.c:210:
+#if defined(LZO_UNALIGNED_OK_4) && (LZO_UINT32_MAX != LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#680: FILE: fs/reiser4/plugin/compress/minilzo.c:218:
+#if defined(LZO_ALIGNED_OK_4) && (LZO_UINT32_MAX != LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: fs/reiser4/plugin/compress/minilzo.c:240:
+      (LZO_BYTE_ORDER != LZO_BIG_ENDIAN)$

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#714: FILE: fs/reiser4/plugin/compress/minilzo.c:252:
+#  if defined(__GNUC__) && defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#726: FILE: fs/reiser4/plugin/compress/minilzo.c:264:
+#define _LZO_CONCAT2(a,b)           a ## b
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: fs/reiser4/plugin/compress/minilzo.c:265:
+#define _LZO_CONCAT3(a,b,c)         a ## b ## c
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: fs/reiser4/plugin/compress/minilzo.c:265:
+#define _LZO_CONCAT3(a,b,c)         a ## b ## c
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#728: FILE: fs/reiser4/plugin/compress/minilzo.c:266:
+#define _LZO_CONCAT4(a,b,c,d)       a ## b ## c ## d
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#728: FILE: fs/reiser4/plugin/compress/minilzo.c:266:
+#define _LZO_CONCAT4(a,b,c,d)       a ## b ## c ## d
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#728: FILE: fs/reiser4/plugin/compress/minilzo.c:266:
+#define _LZO_CONCAT4(a,b,c,d)       a ## b ## c ## d
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/reiser4/plugin/compress/minilzo.c:267:
+#define _LZO_CONCAT5(a,b,c,d,e)     a ## b ## c ## d ## e
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/reiser4/plugin/compress/minilzo.c:267:
+#define _LZO_CONCAT5(a,b,c,d,e)     a ## b ## c ## d ## e
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/reiser4/plugin/compress/minilzo.c:267:
+#define _LZO_CONCAT5(a,b,c,d,e)     a ## b ## c ## d ## e
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/reiser4/plugin/compress/minilzo.c:267:
+#define _LZO_CONCAT5(a,b,c,d,e)     a ## b ## c ## d ## e
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: fs/reiser4/plugin/compress/minilzo.c:269:
+#define _LZO_ECONCAT2(a,b)          _LZO_CONCAT2(a,b)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: fs/reiser4/plugin/compress/minilzo.c:269:
+#define _LZO_ECONCAT2(a,b)          _LZO_CONCAT2(a,b)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: fs/reiser4/plugin/compress/minilzo.c:270:
+#define _LZO_ECONCAT3(a,b,c)        _LZO_CONCAT3(a,b,c)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: fs/reiser4/plugin/compress/minilzo.c:270:
+#define _LZO_ECONCAT3(a,b,c)        _LZO_CONCAT3(a,b,c)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: fs/reiser4/plugin/compress/minilzo.c:270:
+#define _LZO_ECONCAT3(a,b,c)        _LZO_CONCAT3(a,b,c)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: fs/reiser4/plugin/compress/minilzo.c:270:
+#define _LZO_ECONCAT3(a,b,c)        _LZO_CONCAT3(a,b,c)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: fs/reiser4/plugin/compress/minilzo.c:271:
+#define _LZO_ECONCAT4(a,b,c,d)      _LZO_CONCAT4(a,b,c,d)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: fs/reiser4/plugin/compress/minilzo.c:272:
+#define _LZO_ECONCAT5(a,b,c,d,e)    _LZO_CONCAT5(a,b,c,d,e)
                                                         ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#740: FILE: fs/reiser4/plugin/compress/minilzo.c:278:
+extern "C" {

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:IF_1: Consider removing the #if 1 and its #endif
#745: FILE: fs/reiser4/plugin/compress/minilzo.c:283:
+#  if 1 && defined(__WATCOMC__)

CHECK:CAMELCASE: Avoid CamelCase: <_HShift>
#747: FILE: fs/reiser4/plugin/compress/minilzo.c:285:
+	__LZO_EXTERN_C unsigned char _HShift;

CHECK:CAMELCASE: Avoid CamelCase: <__LZO_HShift>
#748: FILE: fs/reiser4/plugin/compress/minilzo.c:286:
+#    define __LZO_HShift    _HShift

CHECK:SPACING: No space is necessary after a cast
#751: FILE: fs/reiser4/plugin/compress/minilzo.c:289:
+#    define __LZO_HShift    ((unsigned) &_AHSHIFT)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#751: FILE: fs/reiser4/plugin/compress/minilzo.c:289:
+#    define __LZO_HShift    ((unsigned) &_AHSHIFT)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#766: FILE: fs/reiser4/plugin/compress/minilzo.c:304:
+#  if (UINT_MAX >= LZO_0xffffffffL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#767: FILE: fs/reiser4/plugin/compress/minilzo.c:305:
+	typedef ptrdiff_t lzo_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#769: FILE: fs/reiser4/plugin/compress/minilzo.c:307:
+	typedef long lzo_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#781: FILE: fs/reiser4/plugin/compress/minilzo.c:319:
+	typedef unsigned long lzo_ptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#782: FILE: fs/reiser4/plugin/compress/minilzo.c:320:
+	typedef long lzo_sptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#790: FILE: fs/reiser4/plugin/compress/minilzo.c:328:
+	typedef unsigned int lzo_ptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#791: FILE: fs/reiser4/plugin/compress/minilzo.c:329:
+	typedef int lzo_sptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#799: FILE: fs/reiser4/plugin/compress/minilzo.c:337:
+	typedef unsigned short lzo_ptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#800: FILE: fs/reiser4/plugin/compress/minilzo.c:338:
+	typedef short lzo_sptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#809: FILE: fs/reiser4/plugin/compress/minilzo.c:347:
+	typedef unsigned long lzo_ptr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#810: FILE: fs/reiser4/plugin/compress/minilzo.c:348:
+	typedef long lzo_sptr_t;

CHECK:SPACING: No space is necessary after a cast
#816: FILE: fs/reiser4/plugin/compress/minilzo.c:354:
+#define PTR(a)              ((lzo_bytep) (a))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: fs/reiser4/plugin/compress/minilzo.c:356:
+#define PTR_ALIGNED2_4(a,b) (((_FP_OFF(a) | _FP_OFF(b)) & 3) == 0)
                         ^

CHECK:SPACING: No space is necessary after a cast
#820: FILE: fs/reiser4/plugin/compress/minilzo.c:358:
+#define PTR(a)              ((lzo_ptr_t) (a))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#824: FILE: fs/reiser4/plugin/compress/minilzo.c:362:
+#define PTR_ALIGNED2_4(a,b) (((PTR_LINEAR(a) | PTR_LINEAR(b)) & 3) == 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#825: FILE: fs/reiser4/plugin/compress/minilzo.c:363:
+#define PTR_ALIGNED2_8(a,b) (((PTR_LINEAR(a) | PTR_LINEAR(b)) & 7) == 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#828: FILE: fs/reiser4/plugin/compress/minilzo.c:366:
+#define PTR_LT(a,b)         (PTR(a) < PTR(b))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#829: FILE: fs/reiser4/plugin/compress/minilzo.c:367:
+#define PTR_GE(a,b)         (PTR(a) >= PTR(b))
                 ^

CHECK:SPACING: No space is necessary after a cast
#830: FILE: fs/reiser4/plugin/compress/minilzo.c:368:
+#define PTR_DIFF(a,b)       ((lzo_ptrdiff_t) (PTR(a) - PTR(b)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#830: FILE: fs/reiser4/plugin/compress/minilzo.c:368:
+#define PTR_DIFF(a,b)       ((lzo_ptrdiff_t) (PTR(a) - PTR(b)))
                   ^

CHECK:SPACING: No space is necessary after a cast
#831: FILE: fs/reiser4/plugin/compress/minilzo.c:369:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: fs/reiser4/plugin/compress/minilzo.c:369:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))
             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#831: FILE: fs/reiser4/plugin/compress/minilzo.c:369:
+#define pd(a,b)             ((lzo_uint) ((a)-(b)))
                                             ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#833: FILE: fs/reiser4/plugin/compress/minilzo.c:371:
+	typedef union {

CHECK:SPACING: No space is necessary after a cast
#886: FILE: fs/reiser4/plugin/compress/minilzo.c:424:
+	p = (((lzo_ptr_t) (_FP_SEG(ptr))) << (16 - __LZO_HShift)) +

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#895: FILE: fs/reiser4/plugin/compress/minilzo.c:433:
+static unsigned __lzo_align_gap(const lzo_voidp ptr, lzo_uint size)

CHECK:SPACING: No space is necessary after a cast
#902: FILE: fs/reiser4/plugin/compress/minilzo.c:440:
+	s = (lzo_ptr_t) (size - 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#908: FILE: fs/reiser4/plugin/compress/minilzo.c:446:
+	return (unsigned)n;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#918: FILE: fs/reiser4/plugin/compress/minilzo.c:456:
+extern "C" {

WARNING:IF_1: Consider removing the #if 1 and its #endif
#921: FILE: fs/reiser4/plugin/compress/minilzo.c:459:
+#if 1 && defined(HAVE_MEMCPY)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
                            ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
+    memcpy(dest,src,len); \
+    dest += len; \
+    src += len

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
+    memcpy(dest,src,len); \
+    dest += len; \
+    src += len

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'src' - possible side-effects?
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
+    memcpy(dest,src,len); \
+    dest += len; \
+    src += len

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#924: FILE: fs/reiser4/plugin/compress/minilzo.c:462:
+#define MEMCPY8_DS(dest,src,len) \
+    memcpy(dest,src,len); \
+    dest += len; \
+    src += len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: fs/reiser4/plugin/compress/minilzo.c:463:
+    memcpy(dest,src,len); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#925: FILE: fs/reiser4/plugin/compress/minilzo.c:463:
+    memcpy(dest,src,len); \
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#925: FILE: fs/reiser4/plugin/compress/minilzo.c:463:
+    memcpy(dest,src,len); \
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: fs/reiser4/plugin/compress/minilzo.c:464:
+    dest += len; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: fs/reiser4/plugin/compress/minilzo.c:465:
+    src += len$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
+    { register lzo_uint __l = (len) / 8; \
+    do { \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+    } while (--__l > 0); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dest' may be better as '(dest)' to avoid precedence issues
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
+    { register lzo_uint __l = (len) / 8; \
+    do { \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+    } while (--__l > 0); }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'src' - possible side-effects?
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
+    { register lzo_uint __l = (len) / 8; \
+    do { \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+    } while (--__l > 0); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src' may be better as '(src)' to avoid precedence issues
#934: FILE: fs/reiser4/plugin/compress/minilzo.c:472:
+#define MEMCPY8_DS(dest,src,len) \
+    { register lzo_uint __l = (len) / 8; \
+    do { \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+	*dest++ = *src++; \
+    } while (--__l > 0); }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: fs/reiser4/plugin/compress/minilzo.c:473:
+    { register lzo_uint __l = (len) / 8; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: fs/reiser4/plugin/compress/minilzo.c:474:
+    do { \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: fs/reiser4/plugin/compress/minilzo.c:483:
+    } while (--__l > 0); }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
                           ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dest' may be better as '(dest)' to avoid precedence issues
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src' may be better as '(src)' to avoid precedence issues
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'len' may be better as '(len)' to avoid precedence issues
#949: FILE: fs/reiser4/plugin/compress/minilzo.c:487:
+#define MEMCPY_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: fs/reiser4/plugin/compress/minilzo.c:488:
+    do *dest++ = *src++; \$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#950: FILE: fs/reiser4/plugin/compress/minilzo.c:488:
+    do *dest++ = *src++; \
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: fs/reiser4/plugin/compress/minilzo.c:489:
+    while (--len > 0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
                            ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dest' may be better as '(dest)' to avoid precedence issues
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src' may be better as '(src)' to avoid precedence issues
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'len' may be better as '(len)' to avoid precedence issues
#953: FILE: fs/reiser4/plugin/compress/minilzo.c:491:
+#define MEMMOVE_DS(dest,src,len) \
+    do *dest++ = *src++; \
+    while (--len > 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: fs/reiser4/plugin/compress/minilzo.c:492:
+    do *dest++ = *src++; \$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#954: FILE: fs/reiser4/plugin/compress/minilzo.c:492:
+    do *dest++ = *src++; \
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: fs/reiser4/plugin/compress/minilzo.c:493:
+    while (--len > 0)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: fs/reiser4/plugin/compress/minilzo.c:495:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/reiser4/plugin/compress/minilzo.c:498:
+#define BZERO8_PTR(s,l,n)   memset((s),0,(lzo_uint)(l)*(n))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/reiser4/plugin/compress/minilzo.c:498:
+#define BZERO8_PTR(s,l,n)   memset((s),0,(lzo_uint)(l)*(n))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/reiser4/plugin/compress/minilzo.c:498:
+#define BZERO8_PTR(s,l,n)   memset((s),0,(lzo_uint)(l)*(n))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/reiser4/plugin/compress/minilzo.c:498:
+#define BZERO8_PTR(s,l,n)   memset((s),0,(lzo_uint)(l)*(n))
                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#960: FILE: fs/reiser4/plugin/compress/minilzo.c:498:
+#define BZERO8_PTR(s,l,n)   memset((s),0,(lzo_uint)(l)*(n))
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#964: FILE: fs/reiser4/plugin/compress/minilzo.c:502:
+#define BZERO8_PTR(s,l,n) \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#964: FILE: fs/reiser4/plugin/compress/minilzo.c:502:
+#define BZERO8_PTR(s,l,n) \
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: fs/reiser4/plugin/compress/minilzo.c:503:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#965: FILE: fs/reiser4/plugin/compress/minilzo.c:503:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#965: FILE: fs/reiser4/plugin/compress/minilzo.c:503:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#965: FILE: fs/reiser4/plugin/compress/minilzo.c:503:
+    lzo_memset((lzo_voidp)(s),0,(lzo_uint)(l)*(n))
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: fs/reiser4/plugin/compress/minilzo.c:519:
+    LZO_VERSION_STRING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: fs/reiser4/plugin/compress/minilzo.c:521:
+    "\n\n\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: fs/reiser4/plugin/compress/minilzo.c:522:
+    "LZO real-time data compression library.\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: fs/reiser4/plugin/compress/minilzo.c:523:
+    "Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002 Markus Franz Xaver Johannes Oberhumer\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: fs/reiser4/plugin/compress/minilzo.c:524:
+    "<markus.oberhumer@jk.uni-linz.ac.at>\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: fs/reiser4/plugin/compress/minilzo.c:525:
+    "http://www.oberhumer.com/opensource/lzo/\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: fs/reiser4/plugin/compress/minilzo.c:526:
+    "\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: fs/reiser4/plugin/compress/minilzo.c:527:
+    "LZO version: v" LZO_VERSION_STRING ", " LZO_VERSION_DATE "\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: fs/reiser4/plugin/compress/minilzo.c:528:
+    "LZO build date: " __DATE__ " " __TIME__ "\n\n"$

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#990: FILE: fs/reiser4/plugin/compress/minilzo.c:528:
+    "LZO build date: " __DATE__ " " __TIME__ "\n\n"

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#990: FILE: fs/reiser4/plugin/compress/minilzo.c:528:
+    "LZO build date: " __DATE__ " " __TIME__ "\n\n"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: fs/reiser4/plugin/compress/minilzo.c:529:
+    "LZO special compilation options:\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: fs/reiser4/plugin/compress/minilzo.c:531:
+    " __cplusplus\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: fs/reiser4/plugin/compress/minilzo.c:534:
+    " __PIC__\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: fs/reiser4/plugin/compress/minilzo.c:536:
+    " __pic__\n"$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1000: FILE: fs/reiser4/plugin/compress/minilzo.c:538:
+#if (UINT_MAX < LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: fs/reiser4/plugin/compress/minilzo.c:539:
+    " 16BIT\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: fs/reiser4/plugin/compress/minilzo.c:542:
+    " __LZO_STRICT_16BIT\n"$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1006: FILE: fs/reiser4/plugin/compress/minilzo.c:544:
+#if (UINT_MAX > LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: fs/reiser4/plugin/compress/minilzo.c:545:
+    " UINT_MAX=" _LZO_MEXPAND(UINT_MAX) "\n"$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1009: FILE: fs/reiser4/plugin/compress/minilzo.c:547:
+#if (ULONG_MAX > LZO_0xffffffffL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: fs/reiser4/plugin/compress/minilzo.c:548:
+    " ULONG_MAX=" _LZO_MEXPAND(ULONG_MAX) "\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: fs/reiser4/plugin/compress/minilzo.c:551:
+    " LZO_BYTE_ORDER=" _LZO_MEXPAND(LZO_BYTE_ORDER) "\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: fs/reiser4/plugin/compress/minilzo.c:554:
+    " LZO_UNALIGNED_OK_2\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: fs/reiser4/plugin/compress/minilzo.c:557:
+    " LZO_UNALIGNED_OK_4\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: fs/reiser4/plugin/compress/minilzo.c:560:
+    " LZO_ALIGNED_OK_4\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: fs/reiser4/plugin/compress/minilzo.c:563:
+    " LZO_DICT_USE_PTR\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: fs/reiser4/plugin/compress/minilzo.c:566:
+    " __LZO_QUERY_COMPRESS\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: fs/reiser4/plugin/compress/minilzo.c:569:
+    " __LZO_QUERY_DECOMPRESS\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: fs/reiser4/plugin/compress/minilzo.c:572:
+    " __LZO_IN_MINILZO\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: fs/reiser4/plugin/compress/minilzo.c:574:
+    "\n\n" "$Id: LZO " LZO_VERSION_STRING " built " __DATE__ " " __TIME__$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1036: FILE: fs/reiser4/plugin/compress/minilzo.c:574:
+    "\n\n" "$Id: LZO " LZO_VERSION_STRING " built " __DATE__ " " __TIME__

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#1036: FILE: fs/reiser4/plugin/compress/minilzo.c:574:
+    "\n\n" "$Id: LZO " LZO_VERSION_STRING " built " __DATE__ " " __TIME__

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1036: FILE: fs/reiser4/plugin/compress/minilzo.c:574:
+    "\n\n" "$Id: LZO " LZO_VERSION_STRING " built " __DATE__ " " __TIME__

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#1036: FILE: fs/reiser4/plugin/compress/minilzo.c:574:
+    "\n\n" "$Id: LZO " LZO_VERSION_STRING " built " __DATE__ " " __TIME__

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: fs/reiser4/plugin/compress/minilzo.c:576:
+    " by gcc " __VERSION__$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: fs/reiser4/plugin/compress/minilzo.c:578:
+    " by Borland C " _LZO_MEXPAND(__BORLANDC__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: fs/reiser4/plugin/compress/minilzo.c:580:
+    " by Microsoft C " _LZO_MEXPAND(_MSC_VER)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: fs/reiser4/plugin/compress/minilzo.c:582:
+    " by Pure C " _LZO_MEXPAND(__PUREC__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: fs/reiser4/plugin/compress/minilzo.c:584:
+    " by Symantec C " _LZO_MEXPAND(__SC__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: fs/reiser4/plugin/compress/minilzo.c:586:
+    " by Turbo C " _LZO_MEXPAND(__TURBOC__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: fs/reiser4/plugin/compress/minilzo.c:588:
+    " by Watcom C " _LZO_MEXPAND(__WATCOMC__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: fs/reiser4/plugin/compress/minilzo.c:590:
+    " $\n"$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1053: FILE: fs/reiser4/plugin/compress/minilzo.c:591:
+    "$Copyright: LZO (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002 Markus Franz Xaver Johannes Oberhumer $\n";

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: fs/reiser4/plugin/compress/minilzo.c:591:
+    "$Copyright: LZO (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002 Markus Franz Xaver Johannes Oberhumer $\n";$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: fs/reiser4/plugin/compress/minilzo.c:597:
+#define LZO_DO1(buf,i)  {s1 += buf[i]; s2 += s1;}
                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1059: FILE: fs/reiser4/plugin/compress/minilzo.c:597:
+#define LZO_DO1(buf,i)  {s1 += buf[i]; s2 += s1;}
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);
                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);
                                                      ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1060: FILE: fs/reiser4/plugin/compress/minilzo.c:598:
+#define LZO_DO2(buf,i)  LZO_DO1(buf,i); LZO_DO1(buf,i+1);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);
                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);
                                                      ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1061: FILE: fs/reiser4/plugin/compress/minilzo.c:599:
+#define LZO_DO4(buf,i)  LZO_DO2(buf,i); LZO_DO2(buf,i+2);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);
                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);
                                                      ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1062: FILE: fs/reiser4/plugin/compress/minilzo.c:600:
+#define LZO_DO8(buf,i)  LZO_DO4(buf,i); LZO_DO4(buf,i+4);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);
                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);
                                                      ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1063: FILE: fs/reiser4/plugin/compress/minilzo.c:601:
+#define LZO_DO16(buf,i) LZO_DO8(buf,i); LZO_DO8(buf,i+8);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1068: FILE: fs/reiser4/plugin/compress/minilzo.c:606:
+#define IS_POWER_OF_2(x)        (((x) & ((x) - 1)) == 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1094: FILE: fs/reiser4/plugin/compress/minilzo.c:632:
+	COMPILE_TIME_ASSERT(sizeof(lzo_uint32) >= sizeof(unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1099: FILE: fs/reiser4/plugin/compress/minilzo.c:637:
+	COMPILE_TIME_ASSERT(sizeof(lzo_uint) >= sizeof(unsigned));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1104: FILE: fs/reiser4/plugin/compress/minilzo.c:642:
+#elif (USHRT_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1106: FILE: fs/reiser4/plugin/compress/minilzo.c:644:
+#elif (USHRT_MAX >= LZO_0xffffffffL)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1109: FILE: fs/reiser4/plugin/compress/minilzo.c:647:
+#if 0				/* to make gcc happy -edward */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1112: FILE: fs/reiser4/plugin/compress/minilzo.c:650:
+#elif (UINT_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1114: FILE: fs/reiser4/plugin/compress/minilzo.c:652:
+#elif (UINT_MAX >= LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1119: FILE: fs/reiser4/plugin/compress/minilzo.c:657:
+#elif (ULONG_MAX == LZO_0xffffffffL)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1121: FILE: fs/reiser4/plugin/compress/minilzo.c:659:
+#elif (ULONG_MAX >= LZO_0xffffffffL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1125: FILE: fs/reiser4/plugin/compress/minilzo.c:663:
+	COMPILE_TIME_ASSERT(SIZEOF_UNSIGNED == sizeof(unsigned));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1125: FILE: fs/reiser4/plugin/compress/minilzo.c:663:
+	COMPILE_TIME_ASSERT(SIZEOF_UNSIGNED == sizeof(unsigned));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1128: FILE: fs/reiser4/plugin/compress/minilzo.c:666:
+	COMPILE_TIME_ASSERT(SIZEOF_UNSIGNED_LONG == sizeof(unsigned long));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1131: FILE: fs/reiser4/plugin/compress/minilzo.c:669:
+	COMPILE_TIME_ASSERT(SIZEOF_UNSIGNED_SHORT == sizeof(unsigned short));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1135: FILE: fs/reiser4/plugin/compress/minilzo.c:673:
+	COMPILE_TIME_ASSERT(SIZEOF_SIZE_T == sizeof(size_t));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1142: FILE: fs/reiser4/plugin/compress/minilzo.c:680:
+	COMPILE_TIME_ASSERT(IS_UNSIGNED(unsigned));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1153: FILE: fs/reiser4/plugin/compress/minilzo.c:691:
+	COMPILE_TIME_ASSERT(INT_MAX == LZO_STYPE_MAX(sizeof(int)));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1154: FILE: fs/reiser4/plugin/compress/minilzo.c:692:
+	COMPILE_TIME_ASSERT(UINT_MAX == LZO_UTYPE_MAX(sizeof(unsigned)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1154: FILE: fs/reiser4/plugin/compress/minilzo.c:692:
+	COMPILE_TIME_ASSERT(UINT_MAX == LZO_UTYPE_MAX(sizeof(unsigned)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1155: FILE: fs/reiser4/plugin/compress/minilzo.c:693:
+	COMPILE_TIME_ASSERT(LONG_MAX == LZO_STYPE_MAX(sizeof(long)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1156: FILE: fs/reiser4/plugin/compress/minilzo.c:694:
+	COMPILE_TIME_ASSERT(ULONG_MAX == LZO_UTYPE_MAX(sizeof(unsigned long)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1158: FILE: fs/reiser4/plugin/compress/minilzo.c:696:
+	COMPILE_TIME_ASSERT(USHRT_MAX == LZO_UTYPE_MAX(sizeof(unsigned short)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1161: FILE: fs/reiser4/plugin/compress/minilzo.c:699:
+	COMPILE_TIME_ASSERT(LZO_UINT_MAX == LZO_UTYPE_MAX(sizeof(lzo_uint)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1163: FILE: fs/reiser4/plugin/compress/minilzo.c:701:
+	COMPILE_TIME_ASSERT(SIZE_T_MAX == LZO_UTYPE_MAX(sizeof(size_t)));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1194: FILE: fs/reiser4/plugin/compress/minilzo.c:732:
+	COMPILE_TIME_ASSERT(SIZEOF_CHAR_P == sizeof(char *));

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1197: FILE: fs/reiser4/plugin/compress/minilzo.c:735:
+	COMPILE_TIME_ASSERT(SIZEOF_PTRDIFF_T == sizeof(ptrdiff_t));

CHECK:SPACING: No space is necessary after a cast
#1226: FILE: fs/reiser4/plugin/compress/minilzo.c:764:
+	    LZO_PTR_ALIGN_UP((lzo_byte *) _wrkmem, sizeof(lzo_full_align_t));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!a.a_lzo_voidp"
#1236: FILE: fs/reiser4/plugin/compress/minilzo.c:774:
+	r &= __lzo_assert(a.a_lzo_voidp == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!a.a_char_p"
#1255: FILE: fs/reiser4/plugin/compress/minilzo.c:793:
+	r &= __lzo_assert(a.a_char_p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!a.a_lzo_bytep"
#1256: FILE: fs/reiser4/plugin/compress/minilzo.c:794:
+	r &= __lzo_assert(a.a_lzo_bytep == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dict[i]"
#1264: FILE: fs/reiser4/plugin/compress/minilzo.c:802:
+			r &= __lzo_assert(dict[i] == NULL);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1269: FILE: fs/reiser4/plugin/compress/minilzo.c:807:
+		unsigned k = 1;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1270: FILE: fs/reiser4/plugin/compress/minilzo.c:808:
+		const unsigned n = (unsigned)sizeof(lzo_uint32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1270: FILE: fs/reiser4/plugin/compress/minilzo.c:808:
+		const unsigned n = (unsigned)sizeof(lzo_uint32);

CHECK:SPACING: No space is necessary after a cast
#1275: FILE: fs/reiser4/plugin/compress/minilzo.c:813:
+		p0 = (lzo_bytep) & x[k];

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1275: FILE: fs/reiser4/plugin/compress/minilzo.c:813:
+		p0 = (lzo_bytep) & x[k];
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#1284: FILE: fs/reiser4/plugin/compress/minilzo.c:822:
+		p1 = (lzo_bytep) & x[1];

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1284: FILE: fs/reiser4/plugin/compress/minilzo.c:822:
+		p1 = (lzo_bytep) & x[1];
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#1288: FILE: fs/reiser4/plugin/compress/minilzo.c:826:
+		p1 = (lzo_bytep) & x[1 + n];

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1288: FILE: fs/reiser4/plugin/compress/minilzo.c:826:
+		p1 = (lzo_bytep) & x[1 + n];
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#1336: FILE: fs/reiser4/plugin/compress/minilzo.c:874:
+		lzo_uint32 a = (lzo_uint32) (u.a & LZO_0xffffffffL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1338: FILE: fs/reiser4/plugin/compress/minilzo.c:876:
+		unsigned short b = (unsigned short)(u.b & 0xffff);
+		r &= __lzo_assert(a == 0x03020100L);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1343: FILE: fs/reiser4/plugin/compress/minilzo.c:881:
+		unsigned short b = u.b >> (8 * sizeof(u.b) - 16);
+		r &= __lzo_assert(a == 0x00010203L);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1401: FILE: fs/reiser4/plugin/compress/minilzo.c:939:
+	if (r == 1) {
+		r &= __lzo_assert(!schedule_insns_bug());
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1407: FILE: fs/reiser4/plugin/compress/minilzo.c:945:
+		static unsigned xn = 3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1408: FILE: fs/reiser4/plugin/compress/minilzo.c:946:
+		static unsigned xn = 3;
+		register unsigned j;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1415: FILE: fs/reiser4/plugin/compress/minilzo.c:953:
+	if (r == 1) {
+		r &= ptr_check();
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1429: FILE: fs/reiser4/plugin/compress/minilzo.c:967:
+	const int *q;
+	q = clone;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: fs/reiser4/plugin/compress/minilzo.c:980:
+    __lzo_init2(unsigned v, int s1, int s2, int s3, int s4, int s5,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1442: FILE: fs/reiser4/plugin/compress/minilzo.c:980:
+    __lzo_init2(unsigned v, int s1, int s2, int s3, int s4, int s5,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: fs/reiser4/plugin/compress/minilzo.c:981:
+    __lzo_init2(unsigned v, int s1, int s2, int s3, int s4, int s5,
+	    int s6, int s7, int s8, int s9)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: fs/reiser4/plugin/compress/minilzo.c:1010:
+    __lzo_init(unsigned v, int s1, int s2, int s3, int s4, int s5, int s6, int s7);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1472: FILE: fs/reiser4/plugin/compress/minilzo.c:1010:
+    __lzo_init(unsigned v, int s1, int s2, int s3, int s4, int s5, int s6, int s7);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1475: FILE: fs/reiser4/plugin/compress/minilzo.c:1013:
+__lzo_init(unsigned v, int s1, int s2, int s3, int s4, int s5, int s6, int s7)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)
                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)
                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1488: FILE: fs/reiser4/plugin/compress/minilzo.c:1026:
+#define D_INDEX1(d,p)       d = DM((0x21*DX3(p,5,5,6)) >> 5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1489: FILE: fs/reiser4/plugin/compress/minilzo.c:1027:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)
                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1489: FILE: fs/reiser4/plugin/compress/minilzo.c:1027:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1489: FILE: fs/reiser4/plugin/compress/minilzo.c:1027:
+#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1545: FILE: fs/reiser4/plugin/compress/minilzo.c:1083:
+extern "C" {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1580: FILE: fs/reiser4/plugin/compress/minilzo.c:1118:
+#if (D_BITS != DL_BITS + DD_BITS)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1610: FILE: fs/reiser4/plugin/compress/minilzo.c:1148:
+#  define _DV2_A(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1610: FILE: fs/reiser4/plugin/compress/minilzo.c:1148:
+#  define _DV2_A(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1610: FILE: fs/reiser4/plugin/compress/minilzo.c:1148:
+#  define _DV2_A(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#1610: FILE: fs/reiser4/plugin/compress/minilzo.c:1148:
+#  define _DV2_A(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift2' may be better as '(shift2)' to avoid precedence issues
#1610: FILE: fs/reiser4/plugin/compress/minilzo.c:1148:
+#  define _DV2_A(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

ERROR:SPACING: space prohibited after that open parenthesis '('
#1611: FILE: fs/reiser4/plugin/compress/minilzo.c:1149:
+	(((( (lzo_uint32)((p)[0]) << shift1) ^ (p)[1]) << shift2) ^ (p)[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1612: FILE: fs/reiser4/plugin/compress/minilzo.c:1150:
+#  define _DV2_B(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1612: FILE: fs/reiser4/plugin/compress/minilzo.c:1150:
+#  define _DV2_B(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1612: FILE: fs/reiser4/plugin/compress/minilzo.c:1150:
+#  define _DV2_B(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#1612: FILE: fs/reiser4/plugin/compress/minilzo.c:1150:
+#  define _DV2_B(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift2' may be better as '(shift2)' to avoid precedence issues
#1612: FILE: fs/reiser4/plugin/compress/minilzo.c:1150:
+#  define _DV2_B(p,shift1,shift2) \
+	(((( (lzo_uint32)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

ERROR:SPACING: space prohibited after that open parenthesis '('
#1613: FILE: fs/reiser4/plugin/compress/minilzo.c:1151:
+	(((( (lzo_uint32)((p)[2]) << shift1) ^ (p)[1]) << shift2) ^ (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1614: FILE: fs/reiser4/plugin/compress/minilzo.c:1152:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1614: FILE: fs/reiser4/plugin/compress/minilzo.c:1152:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1614: FILE: fs/reiser4/plugin/compress/minilzo.c:1152:
+#  define _DV3_B(p,shift1,shift2,shift3) \
                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1614: FILE: fs/reiser4/plugin/compress/minilzo.c:1152:
+#  define _DV3_B(p,shift1,shift2,shift3) \
+	((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1615: FILE: fs/reiser4/plugin/compress/minilzo.c:1153:
+	((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1615: FILE: fs/reiser4/plugin/compress/minilzo.c:1153:
+	((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1615: FILE: fs/reiser4/plugin/compress/minilzo.c:1153:
+	((_DV2_B((p)+1,shift1,shift2) << (shift3)) ^ (p)[0])
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1617: FILE: fs/reiser4/plugin/compress/minilzo.c:1155:
+#  define _DV2_A(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1617: FILE: fs/reiser4/plugin/compress/minilzo.c:1155:
+#  define _DV2_A(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1617: FILE: fs/reiser4/plugin/compress/minilzo.c:1155:
+#  define _DV2_A(p,shift1,shift2) \
+	(( (lzo_uint32)(p[0]) << shift1) ^ p[1])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#1617: FILE: fs/reiser4/plugin/compress/minilzo.c:1155:
+#  define _DV2_A(p,shift1,shift2) \
+	(( (lzo_uint32)(p[0]) << shift1) ^ p[1])

ERROR:SPACING: space prohibited after that open parenthesis '('
#1618: FILE: fs/reiser4/plugin/compress/minilzo.c:1156:
+	(( (lzo_uint32)(p[0]) << shift1) ^ p[1])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1619: FILE: fs/reiser4/plugin/compress/minilzo.c:1157:
+#  define _DV2_B(p,shift1,shift2) \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1619: FILE: fs/reiser4/plugin/compress/minilzo.c:1157:
+#  define _DV2_B(p,shift1,shift2) \
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1619: FILE: fs/reiser4/plugin/compress/minilzo.c:1157:
+#  define _DV2_B(p,shift1,shift2) \
+	(( (lzo_uint32)(p[1]) << shift1) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift1' may be better as '(shift1)' to avoid precedence issues
#1619: FILE: fs/reiser4/plugin/compress/minilzo.c:1157:
+#  define _DV2_B(p,shift1,shift2) \
+	(( (lzo_uint32)(p[1]) << shift1) ^ p[2])

ERROR:SPACING: space prohibited after that open parenthesis '('
#1620: FILE: fs/reiser4/plugin/compress/minilzo.c:1158:
+	(( (lzo_uint32)(p[1]) << shift1) ^ p[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1624: FILE: fs/reiser4/plugin/compress/minilzo.c:1162:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1624: FILE: fs/reiser4/plugin/compress/minilzo.c:1162:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1624: FILE: fs/reiser4/plugin/compress/minilzo.c:1162:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#1624: FILE: fs/reiser4/plugin/compress/minilzo.c:1162:
+#define _DV_A(p,shift)      _DV2_A(p,shift,shift)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: fs/reiser4/plugin/compress/minilzo.c:1163:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: fs/reiser4/plugin/compress/minilzo.c:1163:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: fs/reiser4/plugin/compress/minilzo.c:1163:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'shift' - possible side-effects?
#1625: FILE: fs/reiser4/plugin/compress/minilzo.c:1163:
+#define _DV_B(p,shift)      _DV2_B(p,shift,shift)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1626: FILE: fs/reiser4/plugin/compress/minilzo.c:1164:
+#define DA2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1626: FILE: fs/reiser4/plugin/compress/minilzo.c:1164:
+#define DA2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1626: FILE: fs/reiser4/plugin/compress/minilzo.c:1164:
+#define DA2(p,s1,s2) \
+	(((((lzo_uint32)((p)[2]) << (s2)) + (p)[1]) << (s1)) + (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1628: FILE: fs/reiser4/plugin/compress/minilzo.c:1166:
+#define DS2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1628: FILE: fs/reiser4/plugin/compress/minilzo.c:1166:
+#define DS2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1628: FILE: fs/reiser4/plugin/compress/minilzo.c:1166:
+#define DS2(p,s1,s2) \
+	(((((lzo_uint32)((p)[2]) << (s2)) - (p)[1]) << (s1)) - (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1630: FILE: fs/reiser4/plugin/compress/minilzo.c:1168:
+#define DX2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1630: FILE: fs/reiser4/plugin/compress/minilzo.c:1168:
+#define DX2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1630: FILE: fs/reiser4/plugin/compress/minilzo.c:1168:
+#define DX2(p,s1,s2) \
+	(((((lzo_uint32)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1632: FILE: fs/reiser4/plugin/compress/minilzo.c:1170:
+#define DA3(p,s1,s2,s3) ((DA2((p)+1,s2,s3) << (s1)) + (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1633: FILE: fs/reiser4/plugin/compress/minilzo.c:1171:
+#define DS3(p,s1,s2,s3) ((DS2((p)+1,s2,s3) << (s1)) - (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1634: FILE: fs/reiser4/plugin/compress/minilzo.c:1172:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])

CHECK:SPACING: No space is necessary after a cast
#1635: FILE: fs/reiser4/plugin/compress/minilzo.c:1173:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1635: FILE: fs/reiser4/plugin/compress/minilzo.c:1173:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1635: FILE: fs/reiser4/plugin/compress/minilzo.c:1173:
+#define DMS(v,s)        ((lzo_uint) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1636: FILE: fs/reiser4/plugin/compress/minilzo.c:1174:
+#define DM(v)           DMS(v,0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1639: FILE: fs/reiser4/plugin/compress/minilzo.c:1177:
+#  define _DINDEX(dv,p)     (_DV_A((p),DL_SHIFT))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1639: FILE: fs/reiser4/plugin/compress/minilzo.c:1177:
+#  define _DINDEX(dv,p)     (_DV_A((p),DL_SHIFT))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: fs/reiser4/plugin/compress/minilzo.c:1181:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: fs/reiser4/plugin/compress/minilzo.c:1181:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1643: FILE: fs/reiser4/plugin/compress/minilzo.c:1181:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),DL_SHIFT)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1644: FILE: fs/reiser4/plugin/compress/minilzo.c:1182:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1644: FILE: fs/reiser4/plugin/compress/minilzo.c:1182:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#1644: FILE: fs/reiser4/plugin/compress/minilzo.c:1182:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#1644: FILE: fs/reiser4/plugin/compress/minilzo.c:1182:
+#  define DVAL_NEXT(dv,p)   dv = (((dv) << DL_SHIFT) ^ p[2])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1645: FILE: fs/reiser4/plugin/compress/minilzo.c:1183:
+#  define _DINDEX(dv,p)     (dv)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1650: FILE: fs/reiser4/plugin/compress/minilzo.c:1188:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1650: FILE: fs/reiser4/plugin/compress/minilzo.c:1188:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1650: FILE: fs/reiser4/plugin/compress/minilzo.c:1188:
+#  define DVAL_FIRST(dv,p)  dv = _DV_A((p),5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1651: FILE: fs/reiser4/plugin/compress/minilzo.c:1189:
+#  define DVAL_NEXT(dv,p) \
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1651: FILE: fs/reiser4/plugin/compress/minilzo.c:1189:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= (lzo_uint32)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#1651: FILE: fs/reiser4/plugin/compress/minilzo.c:1189:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= (lzo_uint32)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dv' may be better as '(dv)' to avoid precedence issues
#1651: FILE: fs/reiser4/plugin/compress/minilzo.c:1189:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= (lzo_uint32)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1651: FILE: fs/reiser4/plugin/compress/minilzo.c:1189:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= (lzo_uint32)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1652: FILE: fs/reiser4/plugin/compress/minilzo.c:1190:
+		dv ^= (lzo_uint32)(p[-1]) << (2*5); dv = (((dv) << 5) ^ p[2])
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1653: FILE: fs/reiser4/plugin/compress/minilzo.c:1191:
+#  define _DINDEX(dv,p)     ((0x9f5f * (dv)) >> 5)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1658: FILE: fs/reiser4/plugin/compress/minilzo.c:1196:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1658: FILE: fs/reiser4/plugin/compress/minilzo.c:1196:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)
                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1658: FILE: fs/reiser4/plugin/compress/minilzo.c:1196:
+#  define DVAL_FIRST(dv,p)  dv = _DV_B((p),5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: fs/reiser4/plugin/compress/minilzo.c:1197:
+#  define DVAL_NEXT(dv,p) \
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1659: FILE: fs/reiser4/plugin/compress/minilzo.c:1197:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_uint32)(p[2]) << (2*5)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dv' - possible side-effects?
#1659: FILE: fs/reiser4/plugin/compress/minilzo.c:1197:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_uint32)(p[2]) << (2*5)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dv' may be better as '(dv)' to avoid precedence issues
#1659: FILE: fs/reiser4/plugin/compress/minilzo.c:1197:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_uint32)(p[2]) << (2*5)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1659: FILE: fs/reiser4/plugin/compress/minilzo.c:1197:
+#  define DVAL_NEXT(dv,p) \
+		dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_uint32)(p[2]) << (2*5)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1660: FILE: fs/reiser4/plugin/compress/minilzo.c:1198:
+		dv ^= p[-1]; dv = (((dv) >> 5) ^ ((lzo_uint32)(p[2]) << (2*5)))
 		                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1661: FILE: fs/reiser4/plugin/compress/minilzo.c:1199:
+#  define _DINDEX(dv,p)     ((0x9f5f * (dv)) >> 5)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1669: FILE: fs/reiser4/plugin/compress/minilzo.c:1207:
+#define DINDEX(dv,p)        ((lzo_uint)((_DINDEX(dv,p)) & DL_MASK) << DD_BITS)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1669: FILE: fs/reiser4/plugin/compress/minilzo.c:1207:
+#define DINDEX(dv,p)        ((lzo_uint)((_DINDEX(dv,p)) & DL_MASK) << DD_BITS)
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#1679: FILE: fs/reiser4/plugin/compress/minilzo.c:1217:
+#  define DVAL_FIRST(dv,p)  ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1679: FILE: fs/reiser4/plugin/compress/minilzo.c:1217:
+#  define DVAL_FIRST(dv,p)  ((void) 0)
                        ^

CHECK:SPACING: No space is necessary after a cast
#1680: FILE: fs/reiser4/plugin/compress/minilzo.c:1218:
+#  define DVAL_NEXT(dv,p)   ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1680: FILE: fs/reiser4/plugin/compress/minilzo.c:1218:
+#  define DVAL_NEXT(dv,p)   ((void) 0)
                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1686: FILE: fs/reiser4/plugin/compress/minilzo.c:1224:
+	static void DVAL_ASSERT(lzo_uint32 dv, const lzo_byte * p) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1686: FILE: fs/reiser4/plugin/compress/minilzo.c:1224:
+	static void DVAL_ASSERT(lzo_uint32 dv, const lzo_byte * p) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#1692: FILE: fs/reiser4/plugin/compress/minilzo.c:1230:
+#  define DVAL_ASSERT(dv,p) ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1692: FILE: fs/reiser4/plugin/compress/minilzo.c:1230:
+#  define DVAL_ASSERT(dv,p) ((void) 0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1697: FILE: fs/reiser4/plugin/compress/minilzo.c:1235:
+#  define DENTRY(p,in)                          (p)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1698: FILE: fs/reiser4/plugin/compress/minilzo.c:1236:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1698: FILE: fs/reiser4/plugin/compress/minilzo.c:1236:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1698: FILE: fs/reiser4/plugin/compress/minilzo.c:1236:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1698: FILE: fs/reiser4/plugin/compress/minilzo.c:1236:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1698: FILE: fs/reiser4/plugin/compress/minilzo.c:1236:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_pos = dict[dindex]

CHECK:SPACING: No space is necessary after a cast
#1700: FILE: fs/reiser4/plugin/compress/minilzo.c:1238:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1700: FILE: fs/reiser4/plugin/compress/minilzo.c:1238:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))
                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1700: FILE: fs/reiser4/plugin/compress/minilzo.c:1238:
+#  define DENTRY(p,in)                          ((lzo_uint) ((p)-(in)))
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1701: FILE: fs/reiser4/plugin/compress/minilzo.c:1239:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1701: FILE: fs/reiser4/plugin/compress/minilzo.c:1239:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1701: FILE: fs/reiser4/plugin/compress/minilzo.c:1239:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1701: FILE: fs/reiser4/plugin/compress/minilzo.c:1239:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1701: FILE: fs/reiser4/plugin/compress/minilzo.c:1239:
+#  define GINDEX(m_pos,m_off,dict,dindex,in)    m_off = dict[dindex]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)
                                                                            ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:SPACING: space prohibited before that close square bracket ']'
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1706: FILE: fs/reiser4/plugin/compress/minilzo.c:1244:
+#  define UPDATE_D(dict,drun,dv,p,in)       dict[ DINDEX(dv,p) ] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)
                                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1707: FILE: fs/reiser4/plugin/compress/minilzo.c:1245:
+#  define UPDATE_I(dict,drun,index,p,in)    dict[index] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1708: FILE: fs/reiser4/plugin/compress/minilzo.c:1246:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1708: FILE: fs/reiser4/plugin/compress/minilzo.c:1246:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1708: FILE: fs/reiser4/plugin/compress/minilzo.c:1246:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1708: FILE: fs/reiser4/plugin/compress/minilzo.c:1246:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)
                                                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1708: FILE: fs/reiser4/plugin/compress/minilzo.c:1246:
+#  define UPDATE_P(ptr,drun,p,in)           (ptr)[0] = DENTRY(p,in)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
                                  ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1712: FILE: fs/reiser4/plugin/compress/minilzo.c:1250:
+#  define UPDATE_D(dict,drun,dv,p,in)   \
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1713: FILE: fs/reiser4/plugin/compress/minilzo.c:1251:
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1713: FILE: fs/reiser4/plugin/compress/minilzo.c:1251:
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
 	                                        ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1713: FILE: fs/reiser4/plugin/compress/minilzo.c:1251:
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#1713: FILE: fs/reiser4/plugin/compress/minilzo.c:1251:
+	dict[ DINDEX(dv,p) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
                                     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#1714: FILE: fs/reiser4/plugin/compress/minilzo.c:1252:
+#  define UPDATE_I(dict,drun,index,p,in)    \
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1715: FILE: fs/reiser4/plugin/compress/minilzo.c:1253:
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK
 	                                   ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1715: FILE: fs/reiser4/plugin/compress/minilzo.c:1253:
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#1715: FILE: fs/reiser4/plugin/compress/minilzo.c:1253:
+	dict[ (index) + drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drun' - possible side-effects?
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'drun' may be better as '(drun)' to avoid precedence issues
#1716: FILE: fs/reiser4/plugin/compress/minilzo.c:1254:
+#  define UPDATE_P(ptr,drun,p,in)   \
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1717: FILE: fs/reiser4/plugin/compress/minilzo.c:1255:
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1717: FILE: fs/reiser4/plugin/compress/minilzo.c:1255:
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK
 	                           ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1717: FILE: fs/reiser4/plugin/compress/minilzo.c:1255:
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space prohibited before that close square bracket ']'
#1717: FILE: fs/reiser4/plugin/compress/minilzo.c:1255:
+	(ptr) [ drun++ ] = DENTRY(p,in); drun &= DD_MASK

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ip' may be better as '(ip)' to avoid precedence issues
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#1723: FILE: fs/reiser4/plugin/compress/minilzo.c:1261:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

CHECK:SPACING: No space is necessary after a cast
#1724: FILE: fs/reiser4/plugin/compress/minilzo.c:1262:
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m_pos"
#1724: FILE: fs/reiser4/plugin/compress/minilzo.c:1262:
+	(m_pos == NULL || (m_off = (lzo_moff_t) (ip - m_pos)) > max_offset)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR( \
+	(PTR_LT(m_pos,in) || \
+	 (m_off = (lzo_moff_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	  m_off > max_offset) ))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR( \
+	(PTR_LT(m_pos,in) || \
+	 (m_off = (lzo_moff_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	  m_off > max_offset) ))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#1726: FILE: fs/reiser4/plugin/compress/minilzo.c:1264:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+    (BOUNDS_CHECKING_OFF_IN_EXPR( \
+	(PTR_LT(m_pos,in) || \
+	 (m_off = (lzo_moff_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	  m_off > max_offset) ))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: fs/reiser4/plugin/compress/minilzo.c:1265:
+    (BOUNDS_CHECKING_OFF_IN_EXPR( \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1728: FILE: fs/reiser4/plugin/compress/minilzo.c:1266:
+	(PTR_LT(m_pos,in) || \
 	             ^

CHECK:SPACING: No space is necessary after a cast
#1729: FILE: fs/reiser4/plugin/compress/minilzo.c:1267:
+	 (m_off = (lzo_moff_t) PTR_DIFF(ip,m_pos)) <= 0 || \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1729: FILE: fs/reiser4/plugin/compress/minilzo.c:1267:
+	 (m_off = (lzo_moff_t) PTR_DIFF(ip,m_pos)) <= 0 || \
 	                                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1730: FILE: fs/reiser4/plugin/compress/minilzo.c:1268:
+	  m_off > max_offset) ))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_off == 0 || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_off' may be better as '(m_off)' to avoid precedence issues
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_off == 0 || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_off == 0 || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#1734: FILE: fs/reiser4/plugin/compress/minilzo.c:1272:
+#define LZO_CHECK_MPOS_DET(m_pos,m_off,in,ip,max_offset) \
+	(m_off == 0 || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:SPACING: No space is necessary after a cast
#1736: FILE: fs/reiser4/plugin/compress/minilzo.c:1274:
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1736: FILE: fs/reiser4/plugin/compress/minilzo.c:1274:
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1737: FILE: fs/reiser4/plugin/compress/minilzo.c:1275:
+	 (m_pos = (ip) - (m_off), 0) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_off' may be better as '(m_off)' to avoid precedence issues
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'in' - possible side-effects?
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#1739: FILE: fs/reiser4/plugin/compress/minilzo.c:1277:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
+	 (m_pos = (ip) - (m_off), 0) )

CHECK:SPACING: No space is necessary after a cast
#1740: FILE: fs/reiser4/plugin/compress/minilzo.c:1278:
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1740: FILE: fs/reiser4/plugin/compress/minilzo.c:1278:
+	((lzo_moff_t) ((ip)-(in)) <= m_off || \
 	                   ^

CHECK:SPACING: No space is necessary after a cast
#1741: FILE: fs/reiser4/plugin/compress/minilzo.c:1279:
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1741: FILE: fs/reiser4/plugin/compress/minilzo.c:1279:
+	 ((m_off = (lzo_moff_t) ((ip)-(in)) - m_off) > max_offset) || \
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1742: FILE: fs/reiser4/plugin/compress/minilzo.c:1280:
+	 (m_pos = (ip) - (m_off), 0) )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1760: FILE: fs/reiser4/plugin/compress/minilzo.c:1298:
+lzo_uint do_compress(const lzo_byte * in, lzo_uint in_len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1761: FILE: fs/reiser4/plugin/compress/minilzo.c:1299:
+		     lzo_byte * out, lzo_uintp out_len, lzo_voidp wrkmem)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1786: FILE: fs/reiser4/plugin/compress/minilzo.c:1324:
+#if 1

WARNING:INDENTED_LABEL: labels should not be indented
#1798: FILE: fs/reiser4/plugin/compress/minilzo.c:1336:
+	      try_match:

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1799: FILE: fs/reiser4/plugin/compress/minilzo.c:1337:
+#if 1 && defined(LZO_UNALIGNED_OK_2)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1806: FILE: fs/reiser4/plugin/compress/minilzo.c:1344:
+			if (m_pos[2] == ip[2]) {
[...]
+			} else {
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#1813: FILE: fs/reiser4/plugin/compress/minilzo.c:1351:
+	      literal:

WARNING:INDENTED_LABEL: labels should not be indented
#1820: FILE: fs/reiser4/plugin/compress/minilzo.c:1358:
+	      match:

CHECK:BRACES: braces {} should be used on all arms of this statement
#1825: FILE: fs/reiser4/plugin/compress/minilzo.c:1363:
+			if (t <= 3) {
[...]
+			} else if (t <= 18)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1830: FILE: fs/reiser4/plugin/compress/minilzo.c:1368:
+			else {

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1842: FILE: fs/reiser4/plugin/compress/minilzo.c:1380:
+				*op++ = *ii++;
 				^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1849: FILE: fs/reiser4/plugin/compress/minilzo.c:1387:
+		if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++
+		    || m_pos[6] != *ip++ || m_pos[7] != *ip++

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1850: FILE: fs/reiser4/plugin/compress/minilzo.c:1388:
+		    || m_pos[6] != *ip++ || m_pos[7] != *ip++
+		    || m_pos[8] != *ip++

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1852: FILE: fs/reiser4/plugin/compress/minilzo.c:1390:
+#ifdef LZO1Y
+		    || m_pos[9] != *ip++ || m_pos[10] != *ip++

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1853: FILE: fs/reiser4/plugin/compress/minilzo.c:1391:
+		    || m_pos[9] != *ip++ || m_pos[10] != *ip++
+		    || m_pos[11] != *ip++ || m_pos[12] != *ip++

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1854: FILE: fs/reiser4/plugin/compress/minilzo.c:1392:
+		    || m_pos[11] != *ip++ || m_pos[12] != *ip++
+		    || m_pos[13] != *ip++ || m_pos[14] != *ip++

CHECK:BRACES: Unbalanced braces around else statement
#1879: FILE: fs/reiser4/plugin/compress/minilzo.c:1417:
+			} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1897: FILE: fs/reiser4/plugin/compress/minilzo.c:1435:
+				const lzo_byte *m = m_pos + M2_MAX_LEN + 1;
+				while (ip < end && *m == *ip)

CHECK:BRACES: Unbalanced braces around else statement
#1908: FILE: fs/reiser4/plugin/compress/minilzo.c:1446:
+				else {

WARNING:INDENTED_LABEL: labels should not be indented
#1915: FILE: fs/reiser4/plugin/compress/minilzo.c:1453:
+			      m4_match:

CHECK:BRACES: Unbalanced braces around else statement
#1924: FILE: fs/reiser4/plugin/compress/minilzo.c:1462:
+				else {

WARNING:INDENTED_LABEL: labels should not be indented
#1929: FILE: fs/reiser4/plugin/compress/minilzo.c:1467:
+				      m3_m4_len:

WARNING:INDENTED_LABEL: labels should not be indented
#1939: FILE: fs/reiser4/plugin/compress/minilzo.c:1477:
+		      m3_m4_offset:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1954: FILE: fs/reiser4/plugin/compress/minilzo.c:1492:
+    DO_COMPRESS(const lzo_byte * in, lzo_uint in_len,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1954: FILE: fs/reiser4/plugin/compress/minilzo.c:1492:
+    DO_COMPRESS(const lzo_byte * in, lzo_uint in_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1955: FILE: fs/reiser4/plugin/compress/minilzo.c:1493:
+    DO_COMPRESS(const lzo_byte * in, lzo_uint in_len,
+	    lzo_byte * out, lzo_uintp out_len, lzo_voidp wrkmem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1955: FILE: fs/reiser4/plugin/compress/minilzo.c:1493:
+	    lzo_byte * out, lzo_uintp out_len, lzo_voidp wrkmem)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1966: FILE: fs/reiser4/plugin/compress/minilzo.c:1504:
+	if (in_len <= M2_MAX_LEN + 5)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1968: FILE: fs/reiser4/plugin/compress/minilzo.c:1506:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1976: FILE: fs/reiser4/plugin/compress/minilzo.c:1514:
+		if (op == out && t <= 238)
[...]
+		else if (t <= 3)
[...]
+		else if (t <= 18)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1982: FILE: fs/reiser4/plugin/compress/minilzo.c:1520:
+		else {

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1994: FILE: fs/reiser4/plugin/compress/minilzo.c:1532:
+			*op++ = *ii++;
 			^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2046: FILE: fs/reiser4/plugin/compress/minilzo.c:1584:
+#    define NEED_IP(x) \
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2046: FILE: fs/reiser4/plugin/compress/minilzo.c:1584:
+#    define NEED_IP(x) \
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

WARNING:TABSTOP: Statements should start on a tabstop
#2047: FILE: fs/reiser4/plugin/compress/minilzo.c:1585:
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2047: FILE: fs/reiser4/plugin/compress/minilzo.c:1585:
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2057: FILE: fs/reiser4/plugin/compress/minilzo.c:1595:
+#    define NEED_OP(x) \
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2057: FILE: fs/reiser4/plugin/compress/minilzo.c:1595:
+#    define NEED_OP(x) \
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

WARNING:TABSTOP: Statements should start on a tabstop
#2058: FILE: fs/reiser4/plugin/compress/minilzo.c:1596:
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2058: FILE: fs/reiser4/plugin/compress/minilzo.c:1596:
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2063: FILE: fs/reiser4/plugin/compress/minilzo.c:1601:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun
                                ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2063: FILE: fs/reiser4/plugin/compress/minilzo.c:1601:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#2063: FILE: fs/reiser4/plugin/compress/minilzo.c:1601:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'out' may be better as '(out)' to avoid precedence issues
#2063: FILE: fs/reiser4/plugin/compress/minilzo.c:1601:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2063: FILE: fs/reiser4/plugin/compress/minilzo.c:1601:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:SPACING: No space is necessary after a cast
#2065: FILE: fs/reiser4/plugin/compress/minilzo.c:1603:
+#  define TEST_LOOKBEHIND(m_pos,op)     ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2065: FILE: fs/reiser4/plugin/compress/minilzo.c:1603:
+#  define TEST_LOOKBEHIND(m_pos,op)     ((void) 0)
                                ^

CHECK:SPACING: No space is necessary after a cast
#2086: FILE: fs/reiser4/plugin/compress/minilzo.c:1624:
+#  define NEED_IP(x)            ((void) 0)

CHECK:SPACING: No space is necessary after a cast
#2091: FILE: fs/reiser4/plugin/compress/minilzo.c:1629:
+#  define NEED_OP(x)            ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2102: FILE: fs/reiser4/plugin/compress/minilzo.c:1640:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)
                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2102: FILE: fs/reiser4/plugin/compress/minilzo.c:1640:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2106: FILE: fs/reiser4/plugin/compress/minilzo.c:1644:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2106: FILE: fs/reiser4/plugin/compress/minilzo.c:1644:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2108: FILE: fs/reiser4/plugin/compress/minilzo.c:1646:
+#  define COPY4(dst,src)    __COPY4((lzo_ptr_t)(dst),(lzo_ptr_t)(src))
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2108: FILE: fs/reiser4/plugin/compress/minilzo.c:1646:
+#  define COPY4(dst,src)    __COPY4((lzo_ptr_t)(dst),(lzo_ptr_t)(src))
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2113: FILE: fs/reiser4/plugin/compress/minilzo.c:1651:
+    DO_DECOMPRESS(const lzo_byte * in, lzo_uint in_len,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2113: FILE: fs/reiser4/plugin/compress/minilzo.c:1651:
+    DO_DECOMPRESS(const lzo_byte * in, lzo_uint in_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2114: FILE: fs/reiser4/plugin/compress/minilzo.c:1652:
+    DO_DECOMPRESS(const lzo_byte * in, lzo_uint in_len,
+	      lzo_byte * out, lzo_uintp out_len, lzo_voidp wrkmem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2114: FILE: fs/reiser4/plugin/compress/minilzo.c:1652:
+	      lzo_byte * out, lzo_uintp out_len, lzo_voidp wrkmem)

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2169: FILE: fs/reiser4/plugin/compress/minilzo.c:1707:
+			*op++ = *ip++;
 			^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2206: FILE: fs/reiser4/plugin/compress/minilzo.c:1744:
+						do

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2207: FILE: fs/reiser4/plugin/compress/minilzo.c:1745:
+							*op++ = *ip++;
 							^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2208: FILE: fs/reiser4/plugin/compress/minilzo.c:1746:
+						while (--t > 0);

CHECK:BRACES: Unbalanced braces around else statement
#2209: FILE: fs/reiser4/plugin/compress/minilzo.c:1747:
+				} else

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2211: FILE: fs/reiser4/plugin/compress/minilzo.c:1749:
+						*op++ = *ip++;
 						^

CHECK:BRACES: Unbalanced braces around else statement
#2215: FILE: fs/reiser4/plugin/compress/minilzo.c:1753:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2224: FILE: fs/reiser4/plugin/compress/minilzo.c:1762:
+				*op++ = *ip++;
 				^

WARNING:INDENTED_LABEL: labels should not be indented
#2229: FILE: fs/reiser4/plugin/compress/minilzo.c:1767:
+	      first_literal_run:

WARNING:INDENTED_LABEL: labels should not be indented
#2263: FILE: fs/reiser4/plugin/compress/minilzo.c:1801:
+		      match:

CHECK:BRACES: braces {} should be used on all arms of this statement
#2274: FILE: fs/reiser4/plugin/compress/minilzo.c:1812:
+				if (m_off >= 0x1c)
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2276: FILE: fs/reiser4/plugin/compress/minilzo.c:1814:
+				else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2296: FILE: fs/reiser4/plugin/compress/minilzo.c:1834:
+					lzo_uint off = t & 0x1f;
+					m_pos = op;

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2454: FILE: fs/reiser4/plugin/compress/minilzo.c:1992:
+						*op++ = *m_pos++;
 						^

CHECK:BRACES: Unbalanced braces around else statement
#2456: FILE: fs/reiser4/plugin/compress/minilzo.c:1994:
+			} else

WARNING:INDENTED_LABEL: labels should not be indented
#2459: FILE: fs/reiser4/plugin/compress/minilzo.c:1997:
+			      copy_match:

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2463: FILE: fs/reiser4/plugin/compress/minilzo.c:2001:
+					*op++ = *m_pos++;
 					^

WARNING:INDENTED_LABEL: labels should not be indented
#2469: FILE: fs/reiser4/plugin/compress/minilzo.c:2007:
+		      match_done:

WARNING:INDENTED_LABEL: labels should not be indented
#2478: FILE: fs/reiser4/plugin/compress/minilzo.c:2016:
+		      match_next:

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2483: FILE: fs/reiser4/plugin/compress/minilzo.c:2021:
+				*op++ = *ip++;
 				^

WARNING:INDENTED_LABEL: labels should not be indented
#2494: FILE: fs/reiser4/plugin/compress/minilzo.c:2032:
+      eof_found:

WARNING:INDENTED_LABEL: labels should not be indented
#2501: FILE: fs/reiser4/plugin/compress/minilzo.c:2039:
+      input_overrun:

WARNING:INDENTED_LABEL: labels should not be indented
#2507: FILE: fs/reiser4/plugin/compress/minilzo.c:2045:
+      output_overrun:

WARNING:INDENTED_LABEL: labels should not be indented
#2513: FILE: fs/reiser4/plugin/compress/minilzo.c:2051:
+      lookbehind_overrun:

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2552: FILE: fs/reiser4/plugin/compress/minilzo.c:2090:
+#    define NEED_IP(x) \
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2552: FILE: fs/reiser4/plugin/compress/minilzo.c:2090:
+#    define NEED_IP(x) \
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

WARNING:TABSTOP: Statements should start on a tabstop
#2553: FILE: fs/reiser4/plugin/compress/minilzo.c:2091:
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2553: FILE: fs/reiser4/plugin/compress/minilzo.c:2091:
+	    if ((lzo_uint)(ip_end - ip) < (lzo_uint)(x))  goto input_overrun

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2563: FILE: fs/reiser4/plugin/compress/minilzo.c:2101:
+#    define NEED_OP(x) \
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2563: FILE: fs/reiser4/plugin/compress/minilzo.c:2101:
+#    define NEED_OP(x) \
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

WARNING:TABSTOP: Statements should start on a tabstop
#2564: FILE: fs/reiser4/plugin/compress/minilzo.c:2102:
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2564: FILE: fs/reiser4/plugin/compress/minilzo.c:2102:
+	    if ((lzo_uint)(op_end - op) < (lzo_uint)(x))  goto output_overrun

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2569: FILE: fs/reiser4/plugin/compress/minilzo.c:2107:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun
                                ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2569: FILE: fs/reiser4/plugin/compress/minilzo.c:2107:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm_pos' may be better as '(m_pos)' to avoid precedence issues
#2569: FILE: fs/reiser4/plugin/compress/minilzo.c:2107:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'out' may be better as '(out)' to avoid precedence issues
#2569: FILE: fs/reiser4/plugin/compress/minilzo.c:2107:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2569: FILE: fs/reiser4/plugin/compress/minilzo.c:2107:
+#  define TEST_LOOKBEHIND(m_pos,out)    if (m_pos < out) goto lookbehind_overrun

CHECK:SPACING: No space is necessary after a cast
#2571: FILE: fs/reiser4/plugin/compress/minilzo.c:2109:
+#  define TEST_LOOKBEHIND(m_pos,op)     ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2571: FILE: fs/reiser4/plugin/compress/minilzo.c:2109:
+#  define TEST_LOOKBEHIND(m_pos,op)     ((void) 0)
                                ^

CHECK:SPACING: No space is necessary after a cast
#2592: FILE: fs/reiser4/plugin/compress/minilzo.c:2130:
+#  define NEED_IP(x)            ((void) 0)

CHECK:SPACING: No space is necessary after a cast
#2597: FILE: fs/reiser4/plugin/compress/minilzo.c:2135:
+#  define NEED_OP(x)            ((void) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2608: FILE: fs/reiser4/plugin/compress/minilzo.c:2146:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)
                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2608: FILE: fs/reiser4/plugin/compress/minilzo.c:2146:
+#define __COPY4(dst,src)    * (lzo_uint32p)(dst) = * (const lzo_uint32p)(src)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2612: FILE: fs/reiser4/plugin/compress/minilzo.c:2150:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2612: FILE: fs/reiser4/plugin/compress/minilzo.c:2150:
+#  define COPY4(dst,src)    __COPY4(dst,src)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2614: FILE: fs/reiser4/plugin/compress/minilzo.c:2152:
+#  define COPY4(dst,src)    __COPY4((lzo_ptr_t)(dst),(lzo_ptr_t)(src))
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2614: FILE: fs/reiser4/plugin/compress/minilzo.c:2152:
+#  define COPY4(dst,src)    __COPY4((lzo_ptr_t)(dst),(lzo_ptr_t)(src))
                                                     ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43718.commit.ee4214d68535e019471c426d0aa9a08c77a25c38 total: 314 errors, 220 warnings, 200 checks, 2575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43718.commit.ee4214d68535e019471c426d0aa9a08c77a25c38 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
