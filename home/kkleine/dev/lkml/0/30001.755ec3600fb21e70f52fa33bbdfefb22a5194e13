WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
The mapping from the logical PMU view exposed by the interface (as PMC and PMD

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: perfmon/perfmon_pmu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: perfmon/perfmon_pmu.c:22:
+ * ^Ihttp://perfmon2.sf.net$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: perfmon/perfmon_pmu.c:34:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: perfmon/perfmon_pmu.c:35:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#96: FILE: perfmon/perfmon_pmu.c:37:
+ * 02111-1307 USA
+  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#114: FILE: perfmon/perfmon_pmu.c:55:
+ * perfmon core must acces PMU information ONLY through pfm_pmu_conf
                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#120: FILE: perfmon/perfmon_pmu.c:61:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#134: FILE: perfmon/perfmon_pmu.c:75:
+	memset(&_pfm_pmu_conf, 0 , sizeof(_pfm_pmu_conf));
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#143: FILE: perfmon/perfmon_pmu.c:84:
+	max1 = max2 = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#145: FILE: perfmon/perfmon_pmu.c:86:
+	for (i = 0; i < cfg->num_pmc_entries;  i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#169: FILE: perfmon/perfmon_pmu.c:110:
+	n = n_counters = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#170: FILE: perfmon/perfmon_pmu.c:111:
+	max1 = max2 = max3 = first_cnt = first_i = -1;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#172: FILE: perfmon/perfmon_pmu.c:113:
+	for (i = 0; i < cfg->num_pmd_entries;  i++) {
+

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#230: FILE: perfmon/perfmon_pmu.c:171:
+	_pfm_pmu_conf.ovfl_mask = (PFM_ONE_64 << cfg->counter_width) -1;
 	                                                             ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#250: FILE: perfmon/perfmon_pmu.c:191:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#253: FILE: perfmon/perfmon_pmu.c:194:
+	nspec = nspec_ro = num_pmds = num_pmcs = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg"
#256: FILE: perfmon/perfmon_pmu.c:197:
+	if (cfg == NULL || cfg->pmu_name == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->pmu_name"
#256: FILE: perfmon/perfmon_pmu.c:197:
+	if (cfg == NULL || cfg->pmu_name == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->probe_pmu"
#262: FILE: perfmon/perfmon_pmu.c:203:
+	if (cfg->probe_pmu == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->owner"
#276: FILE: perfmon/perfmon_pmu.c:217:
+	if (!(cfg->flags & PFM_PMUFL_IS_BUILTIN) && cfg->owner == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#300: FILE: perfmon/perfmon_pmu.c:241:
+	for (i = 0; i < cfg->num_pmc_entries;  i++) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: perfmon/perfmon_pmu.c:252:
+			PFM_INFO("PFM_REG_V is not supported on "
+				 "PMCs (PMC%d)", i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: perfmon/perfmon_pmu.c:257:
+			PFM_INFO("PFM_REG_RO meaningless on "
+				 "PMCs (PMC%u)", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->pmc_write_check"
#321: FILE: perfmon/perfmon_pmu.c:262:
+	if (num_wc && cfg->pmc_write_check == NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#329: FILE: perfmon/perfmon_pmu.c:270:
+	num_wc= 0;
 	      ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#331: FILE: perfmon/perfmon_pmu.c:272:
+	for (i = 0; i < cfg->num_pmd_entries;  i++) {
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#343: FILE: perfmon/perfmon_pmu.c:284:
+		if ((type & (PFM_REG_V|PFM_REG_RO)) == (PFM_REG_V|PFM_REG_RO))
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#343: FILE: perfmon/perfmon_pmu.c:284:
+		if ((type & (PFM_REG_V|PFM_REG_RO)) == (PFM_REG_V|PFM_REG_RO))
 		                                                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->pmd_write_check"
#347: FILE: perfmon/perfmon_pmu.c:288:
+	if (num_wc && cfg->pmd_write_check == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->pmd_sread"
#352: FILE: perfmon/perfmon_pmu.c:293:
+	if (nspec_ro && cfg->pmd_sread == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->pmd_swrite"
#358: FILE: perfmon/perfmon_pmu.c:299:
+	if (nspec && cfg->pmd_swrite == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: perfmon/perfmon_pmu.c:334:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg"
#414: FILE: perfmon/perfmon_pmu.c:355:
+	if (cfg == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: perfmon/perfmon_pmu.c:360:
+	BUG_ON(module_refcount(pfm_pmu_conf->owner));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mod_name"
#436: FILE: perfmon/perfmon_pmu.c:377:
+	if (mod_name == NULL)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#437: FILE: perfmon/perfmon_pmu.c:378:
+		return -ENOSYS;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: perfmon/perfmon_pmu.c:388:
+ * ^I0     : do not try to autoload the PMU description module$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: perfmon/perfmon_pmu.c:389:
+ * ^Inot 0 : try to autoload the PMU description module$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#457: FILE: perfmon/perfmon_pmu.c:398:
+		ret = -ENOSYS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: perfmon/perfmon_pmu.c:401:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pfm_pmu_conf"
#461: FILE: perfmon/perfmon_pmu.c:402:
+	if (autoload && pfm_pmu_conf == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#462: FILE: perfmon/perfmon_pmu.c:403:
+	if (autoload && pfm_pmu_conf == NULL) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: perfmon/perfmon_pmu.c:419:
+^I} $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#480: FILE: perfmon/perfmon_pmu.c:421:
+	ret = pfm_pmu_conf == NULL ? -ENOSYS : 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pfm_pmu_conf"
#480: FILE: perfmon/perfmon_pmu.c:421:
+	ret = pfm_pmu_conf == NULL ? -ENOSYS : 0;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#482: FILE: perfmon/perfmon_pmu.c:423:
+	if (!ret && pmu_is_module(pfm_pmu_conf)
+	    && !try_module_get(pfm_pmu_conf->owner))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#483: FILE: perfmon/perfmon_pmu.c:424:
+		ret = -ENOSYS;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pfm_pmu_conf"
#492: FILE: perfmon/perfmon_pmu.c:433:
+	if (pfm_pmu_conf == NULL || !pmu_is_module(pfm_pmu_conf))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: include/linux/perfmon_pmu.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#518: FILE: include/linux/perfmon_pmu.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#519: FILE: include/linux/perfmon_pmu.h:18:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#521: FILE: include/linux/perfmon_pmu.h:20:
+ * 02111-1307 USA
+  */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#539: FILE: include/linux/perfmon_pmu.h:38:
+};
+#define to_reg(n) container_of(n, struct pfm_reg_desc, kobj)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/linux/perfmon_pmu.h:43:
+#define PMC_D(t,d,v,r,n, h)   \
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/linux/perfmon_pmu.h:43:
+#define PMC_D(t,d,v,r,n, h)   \
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/linux/perfmon_pmu.h:43:
+#define PMC_D(t,d,v,r,n, h)   \
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/linux/perfmon_pmu.h:43:
+#define PMC_D(t,d,v,r,n, h)   \
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: include/linux/perfmon_pmu.h:50:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: include/linux/perfmon_pmu.h:50:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: include/linux/perfmon_pmu.h:52:
+#define PMD_D(t,d, h)     \
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: include/linux/perfmon_pmu.h:57:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: include/linux/perfmon_pmu.h:57:
+        }$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#577: FILE: include/linux/perfmon_pmu.h:76:
+#define PFM_REG_W	(PFM_REG_WC|PFM_REG_I)
                  	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#578: FILE: include/linux/perfmon_pmu.h:77:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#578: FILE: include/linux/perfmon_pmu.h:77:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#579: FILE: include/linux/perfmon_pmu.h:78:
+#define PFM_REG_C	(PFM_REG_C64|PFM_REG_I)
                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#580: FILE: include/linux/perfmon_pmu.h:79:
+#define PFM_REG_I64	(PFM_REG_NO64|PFM_REG_I)
                    	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#590: FILE: include/linux/perfmon_pmu.h:89:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#622: FILE: include/linux/perfmon_pmu.h:121:
+	struct pfm_reg_desc	pmc_desc[PFM_MAX_PMCS+1];/* PMC register descriptions */
 	                   	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#623: FILE: include/linux/perfmon_pmu.h:122:
+	struct pfm_reg_desc	pmd_desc[PFM_MAX_PMDS+1];/* PMD register descriptions */
 	                   	                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#636: FILE: include/linux/perfmon_pmu.h:135:
+};
+#define to_pmu(n) container_of(n, struct _pfm_pmu_config, kobj)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: include/linux/perfmon_pmu.h:141:
+ * ^I- 1 means recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: include/linux/perfmon_pmu.h:142:
+ * ^I- 0 means not recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#661: FILE: include/linux/perfmon_pmu.h:160:
+^Iint             ^I(*probe_pmu)(void);/* probe PMU routine */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_pmu_config *' should also have an identifier name
#687: FILE: include/linux/perfmon_pmu.h:186:
+int  pfm_pmu_register(struct pfm_pmu_config *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_pmu_config *' should also have an identifier name
#688: FILE: include/linux/perfmon_pmu.h:187:
+void pfm_pmu_unregister(struct pfm_pmu_config *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#690: FILE: include/linux/perfmon_pmu.h:189:
+u64 pfm_pmu_sread(struct pfm_context *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#690: FILE: include/linux/perfmon_pmu.h:189:
+u64 pfm_pmu_sread(struct pfm_context *, unsigned int);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30001.commit.755ec3600fb21e70f52fa33bbdfefb22a5194e13 total: 16 errors, 26 warnings, 37 checks, 630 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30001.commit.755ec3600fb21e70f52fa33bbdfefb22a5194e13 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
