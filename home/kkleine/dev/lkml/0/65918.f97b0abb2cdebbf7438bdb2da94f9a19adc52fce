WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
--- linux-2.6.17.1.orig/include/linux/perfmon.h	1969-12-31 16:00:00.000000000 -0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: include/linux/perfmon.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#51: FILE: include/linux/perfmon.h:23:
+#define PFM_MAX_PMCS	(PFM_MAX_HW_PMCS+PFM_MAX_XTRA_PMCS)
                     	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#52: FILE: include/linux/perfmon.h:24:
+#define PFM_MAX_PMDS	(PFM_MAX_HW_PMDS+PFM_MAX_XTRA_PMDS)
                     	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#58: FILE: include/linux/perfmon.h:30:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#58: FILE: include/linux/perfmon.h:30:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#58: FILE: include/linux/perfmon.h:30:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#58: FILE: include/linux/perfmon.h:30:
+#define PFM_BVSIZE(x)	(((x)+(sizeof(u64)<<3)-1) / (sizeof(u64)<<3))
                      	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#102: FILE: include/linux/perfmon.h:74:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* implemented but not available */
                               	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#102: FILE: include/linux/perfmon.h:74:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* implemented but not available */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#103: FILE: include/linux/perfmon.h:75:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#103: FILE: include/linux/perfmon.h:75:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#104: FILE: include/linux/perfmon.h:76:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: include/linux/perfmon.h:76:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#105: FILE: include/linux/perfmon.h:77:
+#define PFM_REG_RETFL_MASK	(PFM_REG_RETFL_NOTAVAIL|\
                           	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#106: FILE: include/linux/perfmon.h:78:
+				 PFM_REG_RETFL_EINVAL|\
 				                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#122: FILE: include/linux/perfmon.h:94:
+};
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: include/linux/perfmon.h:98:
+#define PFM_FL_NOTIFY_BLOCK    ^I 0x01^I/* block task on user notifications */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#131: FILE: include/linux/perfmon.h:103:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: include/linux/perfmon.h:119:
+^I__u16 reg_num;^I   ^I/* which register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: include/linux/perfmon.h:120:
+^I__u16 reg_set;^I   ^I/* event set for this register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: include/linux/perfmon.h:121:
+^Ipfm_flags_t reg_flags; ^I/* input: flags, return: reg error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: include/linux/perfmon.h:130:
+^I__u64 reg_random_mask; ^I/* bitmask used to limit random value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: include/linux/perfmon.h:163:
+^Ipfm_flags_t set_flags; ^I  /* input: flags, return: err flag  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: include/linux/perfmon.h:177:
+^I__u64 ^Iset_ovfl_pmds[PFM_PMD_BV]; /* out: last ovfl PMDs */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#233: FILE: include/linux/perfmon.h:205:
+	volatile unsigned long	set_seq;   /* sequence number of updates */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: include/linux/perfmon.h:214:
+^I__u32 ^I^Imsg_type;^I/* generic message header */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: include/linux/perfmon.h:217:
+^I__u16 ^I^Imsg_active_set;^I/* active set at overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: include/linux/perfmon.h:218:
+^I__u16 ^I^Imsg_ovfl_cpu;^I/* cpu of PMU interrupt */$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#264: FILE: include/linux/perfmon.h:236:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#264: FILE: include/linux/perfmon.h:236:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#264: FILE: include/linux/perfmon.h:236:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#266: FILE: include/linux/perfmon.h:238:
+#define PFM_VERSION_MAJOR(x)	 (((x)>>16) & 0xffff)
                             	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: include/linux/perfmon.h:241:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'g' - possible side-effects?
#293: FILE: include/linux/perfmon.h:265:
+#define PFM_CTXQ_EMPTY(g)	((g)->msgq_head == (g)->msgq_tail)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: include/linux/perfmon.h:299:
+#define PFM_ERR(f, x...)  printk(KERN_ERR     "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#328: FILE: include/linux/perfmon.h:300:
+#define PFM_WARN(f, x...) printk(KERN_WARNING "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#329: FILE: include/linux/perfmon.h:301:
+#define PFM_LOG(f, x...)  printk(KERN_NOTICE  "perfmon: " f "\n", ## x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#330: FILE: include/linux/perfmon.h:302:
+#define PFM_INFO(f, x...) printk(KERN_INFO    "perfmon: " f "\n", ## x)

ERROR:SPACING: exactly one space required after that #ifdef
#336: FILE: include/linux/perfmon.h:308:
+#ifdef  PFM_DEBUGGING

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#339: FILE: include/linux/perfmon.h:311:
+		if (unlikely(pfm_controls.debug >0)) { \
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#340: FILE: include/linux/perfmon.h:312:
+			printk("perfmon: %s.%d: CPU%d [%d]: " f "\n", \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#341: FILE: include/linux/perfmon.h:313:
+			       __FUNCTION__, __LINE__, \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#342: FILE: include/linux/perfmon.h:314:
+			       smp_processor_id(), current->pid , ## x); \
 			                                        ^

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#348: FILE: include/linux/perfmon.h:320:
+		if (unlikely(pfm_controls.debug_ovfl >0)) { \
 		                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: include/linux/perfmon.h:321:
+			printk("perfmon: %s.%d: CPU%d [%d]: " f "\n", \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#350: FILE: include/linux/perfmon.h:322:
+			       __FUNCTION__, __LINE__, \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#351: FILE: include/linux/perfmon.h:323:
+			       smp_processor_id(), current->pid , ## x); \
 			                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: include/linux/perfmon.h:327:
+#define PFM_DBG(f, x...)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: include/linux/perfmon.h:328:
+#define PFM_DBG_ovfl(f, x...)	do {} while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: include/linux/perfmon.h:350:
+^Iu64 short_reset;    ^I/* reset value on overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: include/linux/perfmon.h:357:
+^Iu64 eventid;^I ^I /* overflow event identifier */$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#479: FILE: include/linux/perfmon.h:451:
+	struct file		*filp;	/* filp */
 	           		 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#479: FILE: include/linux/perfmon.h:451:
+	struct file		*filp;	/* filp */
 	           		      	   ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#483: FILE: include/linux/perfmon.h:455:
+^Istruct task_struct ^I*task;^I/* attached task */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#488: FILE: include/linux/perfmon.h:460:
+^Iu64 ^I^I^Ilast_act;^I/* last activation */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: include/linux/perfmon.h:461:
+^Iu32^I^I^Ilast_cpu;   ^I/* last CPU used (SMP only) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: include/linux/perfmon.h:467:
+^Iwait_queue_head_t ^Imsgq_wait;^I/* used when flags.kapi=0 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: include/linux/perfmon.h:482:
+^Istruct pfm_ovfl_arg ^Iovfl_arg;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#514: FILE: include/linux/perfmon.h:486:
+#define pfm_ctx_arch(c)	((struct pfm_arch_context *)((c)+1))
                        	                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#519: FILE: include/linux/perfmon.h:491:
+	BUG_ON(task && task->pid == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#529: FILE: include/linux/perfmon.h:501:
+}
+static inline void pfm_set_activation(struct pfm_context *ctx)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#533: FILE: include/linux/perfmon.h:505:
+}
+static inline void pfm_set_last_cpu(struct pfm_context *ctx, int cpu)

ERROR:SPACING: space required before the open parenthesis '('
#538: FILE: include/linux/perfmon.h:510:
+#define pfm_inc_activation() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#539: FILE: include/linux/perfmon.h:511:
+#define pfm_set_activation(c) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: include/linux/perfmon.h:512:
+#define pfm_set_last_cpu(c, p) do { } while(0)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#562: FILE: include/linux/perfmon.h:534:
+int  pfm_get_args(void __user *, size_t, size_t, void *, void **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#562: FILE: include/linux/perfmon.h:534:
+int  pfm_get_args(void __user *, size_t, size_t, void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#562: FILE: include/linux/perfmon.h:534:
+int  pfm_get_args(void __user *, size_t, size_t, void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#562: FILE: include/linux/perfmon.h:534:
+int  pfm_get_args(void __user *, size_t, size_t, void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#562: FILE: include/linux/perfmon.h:534:
+int  pfm_get_args(void __user *, size_t, size_t, void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfm_uuid_t' should also have an identifier name
#563: FILE: include/linux/perfmon.h:535:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#563: FILE: include/linux/perfmon.h:535:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#563: FILE: include/linux/perfmon.h:535:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#563: FILE: include/linux/perfmon.h:535:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt **' should also have an identifier name
#563: FILE: include/linux/perfmon.h:535:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: include/linux/perfmon.h:536:
+int  pfm_get_smpl_arg(pfm_uuid_t, void __user *, size_t,
+		     void **, struct pfm_smpl_fmt **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#566: FILE: include/linux/perfmon.h:538:
+void pfm_undo_create_context_fd(int, struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#566: FILE: include/linux/perfmon.h:538:
+void pfm_undo_create_context_fd(int, struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file **' should also have an identifier name
#567: FILE: include/linux/perfmon.h:539:
+int  pfm_alloc_fd(struct file **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#568: FILE: include/linux/perfmon.h:540:
+void pfm_syswide_cleanup_other_cpu(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#570: FILE: include/linux/perfmon.h:542:
+int  __pfm_write_pmcs(struct pfm_context *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmc *' should also have an identifier name
#570: FILE: include/linux/perfmon.h:542:
+int  __pfm_write_pmcs(struct pfm_context *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#570: FILE: include/linux/perfmon.h:542:
+int  __pfm_write_pmcs(struct pfm_context *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#571: FILE: include/linux/perfmon.h:543:
+int  __pfm_write_pmds(struct pfm_context *, struct pfarg_pmd *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmd *' should also have an identifier name
#571: FILE: include/linux/perfmon.h:543:
+int  __pfm_write_pmds(struct pfm_context *, struct pfarg_pmd *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#571: FILE: include/linux/perfmon.h:543:
+int  __pfm_write_pmds(struct pfm_context *, struct pfarg_pmd *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#571: FILE: include/linux/perfmon.h:543:
+int  __pfm_write_pmds(struct pfm_context *, struct pfarg_pmd *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#572: FILE: include/linux/perfmon.h:544:
+int  __pfm_read_pmds(struct pfm_context *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmd *' should also have an identifier name
#572: FILE: include/linux/perfmon.h:544:
+int  __pfm_read_pmds(struct pfm_context *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#572: FILE: include/linux/perfmon.h:544:
+int  __pfm_read_pmds(struct pfm_context *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#574: FILE: include/linux/perfmon.h:546:
+int  __pfm_load_context(struct pfm_context *, struct pfarg_load *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_load *' should also have an identifier name
#574: FILE: include/linux/perfmon.h:546:
+int  __pfm_load_context(struct pfm_context *, struct pfarg_load *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#575: FILE: include/linux/perfmon.h:547:
+int  __pfm_unload_context(struct pfm_context *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#575: FILE: include/linux/perfmon.h:547:
+int  __pfm_unload_context(struct pfm_context *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#576: FILE: include/linux/perfmon.h:548:
+int  __pfm_stop(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#577: FILE: include/linux/perfmon.h:549:
+int  __pfm_restart(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#578: FILE: include/linux/perfmon.h:550:
+int  __pfm_start(struct pfm_context *, struct pfarg_start *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_start *' should also have an identifier name
#578: FILE: include/linux/perfmon.h:550:
+int  __pfm_start(struct pfm_context *, struct pfarg_start *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#579: FILE: include/linux/perfmon.h:551:
+int  __pfm_delete_evtsets(struct pfm_context *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#579: FILE: include/linux/perfmon.h:551:
+int  __pfm_delete_evtsets(struct pfm_context *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#579: FILE: include/linux/perfmon.h:551:
+int  __pfm_delete_evtsets(struct pfm_context *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#580: FILE: include/linux/perfmon.h:552:
+int  __pfm_getinfo_evtsets(struct pfm_context *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_setinfo *' should also have an identifier name
#580: FILE: include/linux/perfmon.h:552:
+int  __pfm_getinfo_evtsets(struct pfm_context *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#580: FILE: include/linux/perfmon.h:552:
+int  __pfm_getinfo_evtsets(struct pfm_context *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#581: FILE: include/linux/perfmon.h:553:
+int __pfm_create_evtsets(struct pfm_context *, struct pfarg_setdesc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_setdesc *' should also have an identifier name
#581: FILE: include/linux/perfmon.h:553:
+int __pfm_create_evtsets(struct pfm_context *, struct pfarg_setdesc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#581: FILE: include/linux/perfmon.h:553:
+int __pfm_create_evtsets(struct pfm_context *, struct pfarg_setdesc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_ctx *' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt *' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct completion *' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context **' should also have an identifier name
#582: FILE: include/linux/perfmon.h:554:
+int  __pfm_create_context(struct pfarg_ctx *, struct pfm_smpl_fmt *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#587: FILE: include/linux/perfmon.h:559:
+int  pfm_check_task_state(struct pfm_context *, int, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#587: FILE: include/linux/perfmon.h:559:
+int  pfm_check_task_state(struct pfm_context *, int, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#587: FILE: include/linux/perfmon.h:559:
+int  pfm_check_task_state(struct pfm_context *, int, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#589: FILE: include/linux/perfmon.h:561:
+struct pfm_event_set *pfm_find_set(struct pfm_context *, u16, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#589: FILE: include/linux/perfmon.h:561:
+struct pfm_event_set *pfm_find_set(struct pfm_context *, u16, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#589: FILE: include/linux/perfmon.h:561:
+struct pfm_event_set *pfm_find_set(struct pfm_context *, u16, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: include/linux/perfmon.h:562:
+struct pfm_context * pfm_get_ctx(int);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#590: FILE: include/linux/perfmon.h:562:
+struct pfm_context * pfm_get_ctx(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#592: FILE: include/linux/perfmon.h:564:
+void pfm_context_free(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#594: FILE: include/linux/perfmon.h:566:
+int  pfm_pmu_conf_get(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#597: FILE: include/linux/perfmon.h:569:
+int pfm_reserve_session(struct pfm_context *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#597: FILE: include/linux/perfmon.h:569:
+int pfm_reserve_session(struct pfm_context *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#598: FILE: include/linux/perfmon.h:570:
+int pfm_release_session(struct pfm_context *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#598: FILE: include/linux/perfmon.h:570:
+int pfm_release_session(struct pfm_context *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#600: FILE: include/linux/perfmon.h:572:
+int  pfm_smpl_buffer_alloc(struct pfm_context *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#600: FILE: include/linux/perfmon.h:572:
+int  pfm_smpl_buffer_alloc(struct pfm_context *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#601: FILE: include/linux/perfmon.h:573:
+int pfm_reserve_buf_space(size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#602: FILE: include/linux/perfmon.h:574:
+void pfm_release_buf_space(size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfm_uuid_t' should also have an identifier name
#604: FILE: include/linux/perfmon.h:576:
+struct pfm_smpl_fmt *pfm_smpl_fmt_get(pfm_uuid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt *' should also have an identifier name
#605: FILE: include/linux/perfmon.h:577:
+void pfm_smpl_fmt_put(struct pfm_smpl_fmt *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfm_uuid_t' should also have an identifier name
#606: FILE: include/linux/perfmon.h:578:
+int pfm_use_smpl_fmt(pfm_uuid_t);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#609: FILE: include/linux/perfmon.h:581:
+ssize_t pfm_sysfs_session_show(char *, size_t , int);
                                               ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#609: FILE: include/linux/perfmon.h:581:
+ssize_t pfm_sysfs_session_show(char *, size_t , int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#609: FILE: include/linux/perfmon.h:581:
+ssize_t pfm_sysfs_session_show(char *, size_t , int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#609: FILE: include/linux/perfmon.h:581:
+ssize_t pfm_sysfs_session_show(char *, size_t , int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct _pfm_pmu_config *' should also have an identifier name
#610: FILE: include/linux/perfmon.h:582:
+int pfm_sysfs_remove_pmu(struct _pfm_pmu_config *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct _pfm_pmu_config *' should also have an identifier name
#611: FILE: include/linux/perfmon.h:583:
+int pfm_sysfs_add_pmu(struct _pfm_pmu_config *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt *' should also have an identifier name
#613: FILE: include/linux/perfmon.h:585:
+int pfm_sysfs_remove_fmt(struct pfm_smpl_fmt *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt *' should also have an identifier name
#614: FILE: include/linux/perfmon.h:586:
+int pfm_sysfs_add_fmt(struct pfm_smpl_fmt *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#616: FILE: include/linux/perfmon.h:588:
+irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#616: FILE: include/linux/perfmon.h:588:
+irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#616: FILE: include/linux/perfmon.h:588:
+irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#617: FILE: include/linux/perfmon.h:589:
+void pfm_save_pmds_release(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#619: FILE: include/linux/perfmon.h:591:
+void pfm_reset_pmds(struct pfm_context *, struct pfm_event_set *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_event_set *' should also have an identifier name
#619: FILE: include/linux/perfmon.h:591:
+void pfm_reset_pmds(struct pfm_context *, struct pfm_event_set *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#619: FILE: include/linux/perfmon.h:591:
+void pfm_reset_pmds(struct pfm_context *, struct pfm_event_set *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#622: FILE: include/linux/perfmon.h:594:
+int pfm_prepare_sets(struct pfm_context *, struct pfm_event_set *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_event_set *' should also have an identifier name
#622: FILE: include/linux/perfmon.h:594:
+int pfm_prepare_sets(struct pfm_context *, struct pfm_event_set *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#624: FILE: include/linux/perfmon.h:596:
+int pfm_mmap_set(struct pfm_context *, struct vm_area_struct *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#624: FILE: include/linux/perfmon.h:596:
+int pfm_mmap_set(struct pfm_context *, struct vm_area_struct *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#624: FILE: include/linux/perfmon.h:596:
+int pfm_mmap_set(struct pfm_context *, struct vm_area_struct *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#625: FILE: include/linux/perfmon.h:597:
+void pfm_free_sets(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_event_set *' should also have an identifier name
#626: FILE: include/linux/perfmon.h:598:
+void pfm_init_evtset(struct pfm_event_set *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#627: FILE: include/linux/perfmon.h:599:
+void pfm_switch_sets(struct pfm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_event_set *' should also have an identifier name
#627: FILE: include/linux/perfmon.h:599:
+void pfm_switch_sets(struct pfm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#627: FILE: include/linux/perfmon.h:599:
+void pfm_switch_sets(struct pfm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#627: FILE: include/linux/perfmon.h:599:
+void pfm_switch_sets(struct pfm_context *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: include/linux/perfmon.h:600:
+^I    ^I    struct pfm_event_set *,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: include/linux/perfmon.h:600:
+^I    ^I    struct pfm_event_set *,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: include/linux/perfmon.h:600:
+void pfm_switch_sets(struct pfm_context *,
+	    	    struct pfm_event_set *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: include/linux/perfmon.h:601:
+^I            int,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: include/linux/perfmon.h:602:
+^I            int);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#632: FILE: include/linux/perfmon.h:604:
+void pfm_mask_monitoring(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#633: FILE: include/linux/perfmon.h:605:
+int pfm_ovfl_notify_user(struct pfm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_event_set *' should also have an identifier name
#633: FILE: include/linux/perfmon.h:605:
+int pfm_ovfl_notify_user(struct pfm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#633: FILE: include/linux/perfmon.h:605:
+int pfm_ovfl_notify_user(struct pfm_context *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: include/linux/perfmon.h:606:
+int pfm_ovfl_notify_user(struct pfm_context *,
+				struct pfm_event_set *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#638: FILE: include/linux/perfmon.h:610:
+int  pfm_is_fd(struct file *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: include/linux/perfmon.h:612:
+u64 carta_random32 (u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#640: FILE: include/linux/perfmon.h:612:
+u64 carta_random32 (u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#642: FILE: include/linux/perfmon.h:614:
+void pfm_resume_after_ovfl(struct pfm_context *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#644: FILE: include/linux/perfmon.h:616:
+int __pfm_close(struct pfm_context *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#644: FILE: include/linux/perfmon.h:616:
+int __pfm_close(struct pfm_context *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#645: FILE: include/linux/perfmon.h:617:
+ssize_t __pfmk_read(struct pfm_context *, union pfm_msg *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union pfm_msg *' should also have an identifier name
#645: FILE: include/linux/perfmon.h:617:
+ssize_t __pfmk_read(struct pfm_context *, union pfm_msg *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#645: FILE: include/linux/perfmon.h:617:
+ssize_t __pfmk_read(struct pfm_context *, union pfm_msg *, int);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#649: FILE: include/linux/perfmon.h:621:
+	fput(ctx->filp);
 	          ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#655: FILE: include/linux/perfmon.h:627:
+#define PFM_SET_REMAP_BASE		(PFM_SET_REMAP_OFFS*PAGE_SIZE)
                           		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#656: FILE: include/linux/perfmon.h:628:
+#define PFM_SET_REMAP_OFFS_MAX		(PFM_SET_REMAP_OFFS+\
                               		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#657: FILE: include/linux/perfmon.h:629:
+					 PFM_MAX_NUM_SETS*PFM_SET_REMAP_SCALAR)
 					                 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#664: FILE: include/linux/perfmon.h:636:
+^Iu64 pfm_ovfl_intr_all_count; ^I/* total ovfl interrupts */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#676: FILE: include/linux/perfmon.h:648:
+};
+#define to_stats(n) container_of(n, struct pfm_stats, kobj)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#678: FILE: include/linux/perfmon.h:650:
+
+

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#707: FILE: include/linux/perfmon.h:679:
+	bv[rnum>>PFM_LBPL] |= PFM_ONE_64 << (rnum&(PFM_BPL-1));
 	       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#707: FILE: include/linux/perfmon.h:679:
+	bv[rnum>>PFM_LBPL] |= PFM_ONE_64 << (rnum&(PFM_BPL-1));
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#707: FILE: include/linux/perfmon.h:679:
+	bv[rnum>>PFM_LBPL] |= PFM_ONE_64 << (rnum&(PFM_BPL-1));
 	                                                  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#712: FILE: include/linux/perfmon.h:684:
+	return bv[rnum>>PFM_LBPL] & (PFM_ONE_64 <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#712: FILE: include/linux/perfmon.h:684:
+	return bv[rnum>>PFM_LBPL] & (PFM_ONE_64 <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#712: FILE: include/linux/perfmon.h:684:
+	return bv[rnum>>PFM_LBPL] & (PFM_ONE_64 <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#712: FILE: include/linux/perfmon.h:684:
+	return bv[rnum>>PFM_LBPL] & (PFM_ONE_64 <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#717: FILE: include/linux/perfmon.h:689:
+	bv[rnum>>PFM_LBPL] &= ~(PFM_ONE_64 << (rnum&(PFM_BPL-1)));
 	       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#717: FILE: include/linux/perfmon.h:689:
+	bv[rnum>>PFM_LBPL] &= ~(PFM_ONE_64 << (rnum&(PFM_BPL-1)));
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#717: FILE: include/linux/perfmon.h:689:
+	bv[rnum>>PFM_LBPL] &= ~(PFM_ONE_64 << (rnum&(PFM_BPL-1)));
 	                                                    ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_ctx *' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct completion *' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#757: FILE: include/linux/perfmon.h:729:
+int pfmk_create_context(struct pfarg_ctx *, void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#762: FILE: include/linux/perfmon.h:734:
+int pfmk_write_pmcs(void *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmc *' should also have an identifier name
#762: FILE: include/linux/perfmon.h:734:
+int pfmk_write_pmcs(void *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#762: FILE: include/linux/perfmon.h:734:
+int pfmk_write_pmcs(void *, struct pfarg_pmc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#763: FILE: include/linux/perfmon.h:735:
+int pfmk_write_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmd *' should also have an identifier name
#763: FILE: include/linux/perfmon.h:735:
+int pfmk_write_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#763: FILE: include/linux/perfmon.h:735:
+int pfmk_write_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#764: FILE: include/linux/perfmon.h:736:
+int pfmk_read_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_pmd *' should also have an identifier name
#764: FILE: include/linux/perfmon.h:736:
+int pfmk_read_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#764: FILE: include/linux/perfmon.h:736:
+int pfmk_read_pmds(void *, struct pfarg_pmd *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#765: FILE: include/linux/perfmon.h:737:
+int pfmk_restart(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#766: FILE: include/linux/perfmon.h:738:
+int pfmk_stop(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#767: FILE: include/linux/perfmon.h:739:
+int pfmk_start(void *, struct pfarg_start *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_start *' should also have an identifier name
#767: FILE: include/linux/perfmon.h:739:
+int pfmk_start(void *, struct pfarg_start *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#768: FILE: include/linux/perfmon.h:740:
+int pfmk_load_context(void *, struct pfarg_load *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_load *' should also have an identifier name
#768: FILE: include/linux/perfmon.h:740:
+int pfmk_load_context(void *, struct pfarg_load *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#769: FILE: include/linux/perfmon.h:741:
+int pfmk_unload_context(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#770: FILE: include/linux/perfmon.h:742:
+int pfmk_delete_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_setinfo *' should also have an identifier name
#770: FILE: include/linux/perfmon.h:742:
+int pfmk_delete_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#770: FILE: include/linux/perfmon.h:742:
+int pfmk_delete_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#771: FILE: include/linux/perfmon.h:743:
+int pfmk_create_evtsets(void *, struct pfarg_setdesc  *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_setdesc  *' should also have an identifier name
#771: FILE: include/linux/perfmon.h:743:
+int pfmk_create_evtsets(void *, struct pfarg_setdesc  *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#771: FILE: include/linux/perfmon.h:743:
+int pfmk_create_evtsets(void *, struct pfarg_setdesc  *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#772: FILE: include/linux/perfmon.h:744:
+int pfmk_getinfo_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfarg_setinfo *' should also have an identifier name
#772: FILE: include/linux/perfmon.h:744:
+int pfmk_getinfo_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#772: FILE: include/linux/perfmon.h:744:
+int pfmk_getinfo_evtsets(void *, struct pfarg_setinfo *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#773: FILE: include/linux/perfmon.h:745:
+int pfmk_close(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#774: FILE: include/linux/perfmon.h:746:
+ssize_t pfmk_read(void *, union pfm_msg *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union pfm_msg *' should also have an identifier name
#774: FILE: include/linux/perfmon.h:746:
+ssize_t pfmk_read(void *, union pfm_msg *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#774: FILE: include/linux/perfmon.h:746:
+ssize_t pfmk_read(void *, union pfm_msg *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#774: FILE: include/linux/perfmon.h:746:
+ssize_t pfmk_read(void *, union pfm_msg *, size_t, int);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#784: FILE: include/linux/perfmon_dfl_smpl.h:1:
+/*

WARNING:TYPO_SPELLING: 'timetamp' may be misspelled - perhaps 'timestamp'?
#840: FILE: include/linux/perfmon_dfl_smpl.h:57:
+	__u64	tstamp;		/* overflow timetamp */
 	     	       		            ^^^^^^^^

WARNING:TYPO_SPELLING: 'overfow' may be misspelled - perhaps 'overflow'?
#841: FILE: include/linux/perfmon_dfl_smpl.h:58:
+	__u16	cpu;		/* cpu on which the overfow occurred */
 	     	    		                    ^^^^^^^

WARNING:TYPO_SPELLING: 'ocurred' may be misspelled - perhaps 'occurred'?
#842: FILE: include/linux/perfmon_dfl_smpl.h:59:
+	__u16	set;		/* event set active when overflow ocurred   */
 	     	    		                                  ^^^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#848: FILE: include/linux/perfmon_dfl_smpl.h:65:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#848: FILE: include/linux/perfmon_dfl_smpl.h:65:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#848: FILE: include/linux/perfmon_dfl_smpl.h:65:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#855: FILE: include/linux/perfmon_fmt.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: include/linux/perfmon_fmt.h:17:
+^Iu64 smpl_pmds_values[PFM_MAX_PMDS]; ^I/* values of other PMDs */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#883: FILE: include/linux/perfmon_fmt.h:29:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#884: FILE: include/linux/perfmon_fmt.h:30:
+typedef int (*fmt_validate_t )(u32 flags, u16 npmds, void *arg);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#911: FILE: include/linux/perfmon_fmt.h:57:
+};
+#define to_smpl_fmt(n) container_of(n, struct pfm_smpl_fmt, kobj)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#932: FILE: include/linux/perfmon_kernel.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#953: FILE: include/linux/perfmon_kernel.h:22:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#997: FILE: include/linux/perfmon_kernel.h:66:
+	unsigned long info;
+	info = __get_cpu_var(pfm_syst_info);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1004: FILE: include/linux/perfmon_kernel.h:73:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1005: FILE: include/linux/perfmon_kernel.h:74:
+#define pfm_exit_thread(_t)  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1006: FILE: include/linux/perfmon_kernel.h:75:
+#define pfm_handle_work()    ^I^Ido { } while (0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1007: FILE: include/linux/perfmon_kernel.h:76:
+#define pfm_copy_thread(_t,_r)		do { } while (0)
                           ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1008: FILE: include/linux/perfmon_kernel.h:77:
+#define pfm_ctxswin(_t)      ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1009: FILE: include/linux/perfmon_kernel.h:78:
+#define pfm_ctxswout(_t)     ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1010: FILE: include/linux/perfmon_kernel.h:79:
+#define pfm_handle_switch_timeout()  ^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1011: FILE: include/linux/perfmon_kernel.h:80:
+#define pfm_vector_init()  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1012: FILE: include/linux/perfmon_kernel.h:81:
+#define pfm_release_dbregs(_t) ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1013: FILE: include/linux/perfmon_kernel.h:82:
+#define pfm_use_dbregs(_t)     ^I^I(0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1023: FILE: include/linux/perfmon_pmu.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: include/linux/perfmon_pmu.h:25:
+#define PMC_D(t,d,v,r,n)      \
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: include/linux/perfmon_pmu.h:25:
+#define PMC_D(t,d,v,r,n)      \
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: include/linux/perfmon_pmu.h:25:
+#define PMC_D(t,d,v,r,n)      \
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: include/linux/perfmon_pmu.h:25:
+#define PMC_D(t,d,v,r,n)      \
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: include/linux/perfmon_pmu.h:31:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: include/linux/perfmon_pmu.h:31:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: include/linux/perfmon_pmu.h:33:
+#define PMD_D(t,d)        \
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: include/linux/perfmon_pmu.h:37:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: include/linux/perfmon_pmu.h:37:
+        }$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1075: FILE: include/linux/perfmon_pmu.h:53:
+#define PFM_REG_W	(PFM_REG_WC|PFM_REG_I)
                  	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1076: FILE: include/linux/perfmon_pmu.h:54:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1076: FILE: include/linux/perfmon_pmu.h:54:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1077: FILE: include/linux/perfmon_pmu.h:55:
+#define PFM_REG_C	(PFM_REG_C64|PFM_REG_I)
                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1078: FILE: include/linux/perfmon_pmu.h:56:
+#define PFM_REG_I64	(PFM_REG_NO64|PFM_REG_I)
                    	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1088: FILE: include/linux/perfmon_pmu.h:66:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1120: FILE: include/linux/perfmon_pmu.h:98:
+	struct pfm_reg_desc	pmc_desc[PFM_MAX_PMCS+1];/* PMC register descriptions */
 	                   	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1121: FILE: include/linux/perfmon_pmu.h:99:
+	struct pfm_reg_desc	pmd_desc[PFM_MAX_PMDS+1];/* PMD register descriptions */
 	                   	                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1135: FILE: include/linux/perfmon_pmu.h:113:
+};
+#define to_pmu(n) container_of(n, struct _pfm_pmu_config, kobj)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1141: FILE: include/linux/perfmon_pmu.h:119:
+ * ^I- 1 means recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1142: FILE: include/linux/perfmon_pmu.h:120:
+ * ^I- 0 means not recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1160: FILE: include/linux/perfmon_pmu.h:138:
+^Iint             ^I(*probe_pmu)(void);/* probe PMU routine */$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.65918.commit.f97b0abb2cdebbf7438bdb2da94f9a19adc52fce total: 24 errors, 197 warnings, 59 checks, 1150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.65918.commit.f97b0abb2cdebbf7438bdb2da94f9a19adc52fce has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
