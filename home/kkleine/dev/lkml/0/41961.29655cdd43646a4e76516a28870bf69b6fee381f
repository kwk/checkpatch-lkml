WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: fs/lockd/host.c:62:
+nlm_lookup_host(int server, const struct sockaddr_in *sin,
 					int proto, int version)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#81: FILE: fs/lockd/host.c:274:
+	if ((argp->proto & 1)==0) {
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#83: FILE: fs/lockd/host.c:276:
+		if ((host = nlmclnt_lookup_host(sin, argp->proto >> 1, argp->vers)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#88: FILE: fs/lockd/host.c:281:
+		if ((host = nlm_lookup_host(1, sin, argp->proto >> 1, argp->vers)) == NULL)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/lockd/lockd.h:164:
+struct nlm_host * nlmclnt_lookup_host(const struct sockaddr_in *, int, int);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct sockaddr_in *' should also have an identifier name
#183: FILE: include/linux/lockd/lockd.h:164:
+struct nlm_host * nlmclnt_lookup_host(const struct sockaddr_in *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#183: FILE: include/linux/lockd/lockd.h:164:
+struct nlm_host * nlmclnt_lookup_host(const struct sockaddr_in *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#183: FILE: include/linux/lockd/lockd.h:164:
+struct nlm_host * nlmclnt_lookup_host(const struct sockaddr_in *, int, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: include/linux/lockd/lockd.h:166:
+struct nlm_host * nlm_lookup_host(int server, const struct sockaddr_in *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct sockaddr_in *' should also have an identifier name
#186: FILE: include/linux/lockd/lockd.h:166:
+struct nlm_host * nlm_lookup_host(int server, const struct sockaddr_in *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#186: FILE: include/linux/lockd/lockd.h:166:
+struct nlm_host * nlm_lookup_host(int server, const struct sockaddr_in *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#186: FILE: include/linux/lockd/lockd.h:166:
+struct nlm_host * nlm_lookup_host(int server, const struct sockaddr_in *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/lockd/lockd.h:173:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const struct nlm_reboot *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct sockaddr_in *' should also have an identifier name
#193: FILE: include/linux/lockd/lockd.h:173:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const struct nlm_reboot *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct nlm_reboot *' should also have an identifier name
#193: FILE: include/linux/lockd/lockd.h:173:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const struct nlm_reboot *);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.41961.commit.29655cdd43646a4e76516a28870bf69b6fee381f total: 5 errors, 12 warnings, 2 checks, 129 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.41961.commit.29655cdd43646a4e76516a28870bf69b6fee381f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
