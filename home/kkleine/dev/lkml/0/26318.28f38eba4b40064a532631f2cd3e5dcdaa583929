CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#65: FILE: drivers/char/isicom.c:568:
+	outw(0x8000, base+0x04);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ClearInterrupt>
#66: FILE: drivers/char/isicom.c:569:
+	ClearInterrupt(base);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#78: FILE: drivers/char/isicom.c:579:
+		outw(0x0000, base+0x04); /* enable interrupts */
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: drivers/char/isicom.c:585:
+		outw(0x0000, base+0x04); /* enable interrupts */
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#100: FILE: drivers/char/isicom.c:598:
+		outw(0x0000, base+0x04); /* enable interrupts */
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#112: FILE: drivers/char/isicom.c:699:
+	outw(0x0000, base+0x04); /* enable interrupts */
 	                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 0'
#143: FILE: drivers/char/isicom.c:1549:
+	if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+			(portcount != 4) && (portcount != 8))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 4'
#143: FILE: drivers/char/isicom.c:1549:
+	if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+			(portcount != 4) && (portcount != 8))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 8'
#143: FILE: drivers/char/isicom.c:1549:
+	if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+			(portcount != 4) && (portcount != 8))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/char/isicom.c:1550:
+	if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+			(portcount != 4) && (portcount != 8))) {

WARNING:SPLIT_STRING: quoted string split across lines
#148: FILE: drivers/char/isicom.c:1554:
+		dev_err(&pdev->dev, "ISILoad:PCI Card%d reset failure "
+			"(Possible bad I/O Port Address 0x%lx).\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#172: FILE: drivers/char/isicom.c:1760:
 static int __devinit isicom_probe(struct pci_dev *pdev,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26318.commit.28f38eba4b40064a532631f2cd3e5dcdaa583929 total: 0 errors, 2 warnings, 10 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.26318.commit.28f38eba4b40064a532631f2cd3e5dcdaa583929 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
