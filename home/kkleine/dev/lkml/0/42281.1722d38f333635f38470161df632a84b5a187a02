WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: fs/gfs2/sys.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#63: FILE: fs/gfs2/sys.c:18:
+#include <asm/uaccess.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#76: FILE: fs/gfs2/sys.c:31:
+spinlock_t gfs2_sys_margs_lock;

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#103: FILE: fs/gfs2/sys.c:58:
+	int n = simple_strtol(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: fs/gfs2/sys.c:83:
+	unsigned int b = test_bit(SDF_SHUTDOWN, &sdp->sd_flags);
+	return sprintf(buf, "%u\n", b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#136: FILE: fs/gfs2/sys.c:91:
+	if (simple_strtol(buf, NULL, 0) != 1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: fs/gfs2/sys.c:95:
+	gfs2_lm_withdraw(sdp,
+		"GFS2: fsid=%s: withdrawing from cluster at user's request\n",

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#151: FILE: fs/gfs2/sys.c:106:
+	if (simple_strtol(buf, NULL, 0) != 1)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#163: FILE: fs/gfs2/sys.c:118:
+	if (simple_strtol(buf, NULL, 0) != 1)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#176: FILE: fs/gfs2/sys.c:131:
+	if (simple_strtol(buf, NULL, 0) != 1)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#186: FILE: fs/gfs2/sys.c:141:
+	uint32_t id;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#191: FILE: fs/gfs2/sys.c:146:
+	id = simple_strtoul(buf, NULL, 0);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#200: FILE: fs/gfs2/sys.c:155:
+	uint32_t id;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#205: FILE: fs/gfs2/sys.c:160:
+	id = simple_strtoul(buf, NULL, 0);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#213: FILE: fs/gfs2/sys.c:168:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#213: FILE: fs/gfs2/sys.c:168:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#214: FILE: fs/gfs2/sys.c:169:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#214: FILE: fs/gfs2/sys.c:169:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#214: FILE: fs/gfs2/sys.c:169:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: fs/gfs2/sys.c:203:
+	struct gfs2_attr *a = container_of(attr, struct gfs2_attr, attr);
+	return a->show ? a->show(sdp, buf) : 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: fs/gfs2/sys.c:211:
+	struct gfs2_attr *a = container_of(attr, struct gfs2_attr, attr);
+	return a->store ? a->store(sdp, buf, len) : len;

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#259: FILE: fs/gfs2/sys.c:214:
+static struct sysfs_ops gfs2_attr_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#281: FILE: fs/gfs2/sys.c:236:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#281: FILE: fs/gfs2/sys.c:236:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#310: FILE: fs/gfs2/sys.c:265:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#310: FILE: fs/gfs2/sys.c:265:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#340: FILE: fs/gfs2/sys.c:295:
+}
+static struct args_attr args_attr_noatime = __ATTR_RO(noatime);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#367: FILE: fs/gfs2/sys.c:322:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#367: FILE: fs/gfs2/sys.c:322:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#428: FILE: fs/gfs2/sys.c:383:
+	x = simple_strtoul(buf, NULL, 0);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#441: FILE: fs/gfs2/sys.c:396:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#441: FILE: fs/gfs2/sys.c:396:
+	ssize_t (*show)(struct gfs2_sbd *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gfs2_sbd *' should also have an identifier name
#442: FILE: fs/gfs2/sys.c:397:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#442: FILE: fs/gfs2/sys.c:397:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#442: FILE: fs/gfs2/sys.c:397:
+	ssize_t (*store)(struct gfs2_sbd *, const char *, size_t);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#628: FILE: fs/gfs2/sys.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#655: FILE: fs/gfs2/mount.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#709: FILE: fs/gfs2/mount.c:55:
+	/* Split the options into tokens with the "," character and
+	   process them */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#709: FILE: fs/gfs2/mount.c:55:
+	   process them */

CHECK:BRACES: braces {} should be used on all arms of this statement
#719: FILE: fs/gfs2/mount.c:65:
+		if (!strcmp(o, "lockproto")) {
[...]
+		else if (!strcmp(o, "locktable")) {
[...]
+		else if (!strcmp(o, "hostdata")) {
[...]
+		else if (!strcmp(o, "spectator")) {
[...]
+		else if (!strcmp(o, "ignore_local_fs")) {
[...]
+		else if (!strcmp(o, "localflocks")) {
[...]
+		else if (!strcmp(o, "localcaching")) {
[...]
+		else if (!strcmp(o, "debug"))
[...]
+		else if (!strcmp(o, "nodebug"))
[...]
+		else if (!strcmp(o, "upgrade")) {
[...]
+		else if (!strcmp(o, "num_glockd")) {
[...]
+		else if (!strcmp(o, "acl")) {
[...]
+		else if (!strcmp(o, "noacl")) {
[...]
+		else if (!strcmp(o, "quota")) {
[...]
+		else if (!strcmp(o, "suiddir"))
[...]
+		else if (!strcmp(o, "nosuiddir"))
[...]
+		else if (!strcmp(o, "data")) {
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: fs/gfs2/mount.c:131:
+			unsigned int x;
+			if (!v)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#787: FILE: fs/gfs2/mount.c:133:
+			sscanf(v, "%u", &x);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#787: FILE: fs/gfs2/mount.c:133:
+			sscanf(v, "%u", &x);

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: fs/gfs2/mount.c:138:
+^I^I^I^I        GFS2_GLOCKD_MAX, x);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: braces {} should be used on all arms of this statement
#812: FILE: fs/gfs2/mount.c:158:
+			if (!strcmp(v, "off"))
[...]
+			else if (!strcmp(v, "account"))
[...]
+			else if (!strcmp(v, "on"))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#818: FILE: fs/gfs2/mount.c:164:
+			else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#834: FILE: fs/gfs2/mount.c:180:
+			if (!strcmp(v, "writeback"))
[...]
+			else if (!strcmp(v, "ordered"))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#838: FILE: fs/gfs2/mount.c:184:
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#845: FILE: fs/gfs2/mount.c:191:
+		else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#872: FILE: fs/gfs2/mount.h:1:
+/*

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42281.commit.1722d38f333635f38470161df632a84b5a187a02 total: 1 errors, 38 warnings, 11 checks, 832 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42281.commit.1722d38f333635f38470161df632a84b5a187a02 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
