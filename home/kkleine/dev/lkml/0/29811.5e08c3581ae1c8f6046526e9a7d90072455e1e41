WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: fs/nfsd/nfs4state.c:724:
+^I__be32 ^I^I^Istatus;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#545: FILE: fs/nfsd/nfs4state.c:1636:
+		int err = get_write_access(inode);
+		if (err)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: fs/nfsd/nfs4state.c:2001:
+        __be32 status = nfserr_openmode;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: fs/nfsd/nfs4state.c:2001:
+        __be32 status = nfserr_openmode;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: fs/nfsd/nfs4xdr.c:1238:
+static __be32 nfsd4_encode_components(char sep, char *components,
 				   __be32 **pp, int *buflen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: fs/nfsd/nfs4xdr.c:1275:
+static __be32 nfsd4_encode_fs_location4(struct nfsd4_fs_location *location,
 				    __be32 **pp, int *buflen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: fs/nfsd/nfs4xdr.c:1322:
+static __be32 nfsd4_encode_fs_locations(struct svc_rqst *rqstp,
 				     struct svc_export *exp,

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1293: FILE: fs/nfsd/nfs4xdr.c:2177:
+nfsd4_encode_open_confirm(struct nfsd4_compoundres *resp, __be32 nfserr, struct nfsd4_open_confirm *oc)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1302: FILE: fs/nfsd/nfs4xdr.c:2192:
+nfsd4_encode_open_downgrade(struct nfsd4_compoundres *resp, __be32 nfserr, struct nfsd4_open_downgrade *od)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1324: FILE: fs/nfsd/nfs4xdr.c:2272:
+nfsd4_encode_readlink(struct nfsd4_compoundres *resp, __be32 nfserr, struct nfsd4_readlink *readlink)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1371: FILE: fs/nfsd/nfs4xdr.c:2447:
+nfsd4_encode_setclientid(struct nfsd4_compoundres *resp, __be32 nfserr, struct nfsd4_setclientid *scd)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1412: FILE: include/linux/nfsd/state.h:276:
+extern __be32 nfsd4_renew(clientid_t *clid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1413: FILE: include/linux/nfsd/state.h:277:
+extern __be32 nfs4_preprocess_stateid_op(struct svc_fh *current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: include/linux/nfsd/state.h:278:
+extern __be32 nfs4_preprocess_stateid_op(struct svc_fh *current_fh,
 		stateid_t *stateid, int flags, struct file **filp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1419: FILE: include/linux/nfsd/state.h:282:
+extern __be32 nfs4_check_open_reclaim(clientid_t *clid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1426: FILE: include/linux/nfsd/state.h:288:
+extern __be32 nfs4_make_rec_clidname(char *clidname, struct xdr_netobj *clname);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#1449: FILE: include/linux/nfsd/xdr4.h:429:
+__be32 nfsd4_encode_fattr(struct svc_fh *fhp, struct svc_export *exp,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1450: FILE: include/linux/nfsd/xdr4.h:430:
+__be32 nfsd4_encode_fattr(struct svc_fh *fhp, struct svc_export *exp,
+		       struct dentry *dentry, __be32 *buffer, int *countp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1453: FILE: include/linux/nfsd/xdr4.h:432:
+extern __be32 nfsd4_setclientid(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1454: FILE: include/linux/nfsd/xdr4.h:433:
+extern __be32 nfsd4_setclientid(struct svc_rqst *rqstp,
 		struct nfsd4_setclientid *setclid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1456: FILE: include/linux/nfsd/xdr4.h:434:
+extern __be32 nfsd4_setclientid_confirm(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1457: FILE: include/linux/nfsd/xdr4.h:435:
+extern __be32 nfsd4_setclientid_confirm(struct svc_rqst *rqstp,
 		struct nfsd4_setclientid_confirm *setclientid_confirm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1460: FILE: include/linux/nfsd/xdr4.h:436:
+extern __be32 nfsd4_process_open1(struct nfsd4_open *open);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1461: FILE: include/linux/nfsd/xdr4.h:437:
+extern __be32 nfsd4_process_open2(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1462: FILE: include/linux/nfsd/xdr4.h:438:
+extern __be32 nfsd4_process_open2(struct svc_rqst *rqstp,
 		struct svc_fh *current_fh, struct nfsd4_open *open);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1464: FILE: include/linux/nfsd/xdr4.h:439:
+extern __be32 nfsd4_open_confirm(struct svc_rqst *rqstp,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs4_stateowner **' should also have an identifier name
#1464: FILE: include/linux/nfsd/xdr4.h:439:
+extern __be32 nfsd4_open_confirm(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: include/linux/nfsd/xdr4.h:440:
+extern __be32 nfsd4_open_confirm(struct svc_rqst *rqstp,
 		struct svc_fh *current_fh, struct nfsd4_open_confirm *oc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1468: FILE: include/linux/nfsd/xdr4.h:442:
+extern __be32 nfsd4_close(struct svc_rqst *rqstp, struct svc_fh *current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: include/linux/nfsd/xdr4.h:443:
+extern __be32 nfsd4_close(struct svc_rqst *rqstp, struct svc_fh *current_fh,
 		struct nfsd4_close *close,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1472: FILE: include/linux/nfsd/xdr4.h:445:
+extern __be32 nfsd4_open_downgrade(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: include/linux/nfsd/xdr4.h:446:
+extern __be32 nfsd4_open_downgrade(struct svc_rqst *rqstp,
 		struct svc_fh *current_fh, struct nfsd4_open_downgrade *od,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1476: FILE: include/linux/nfsd/xdr4.h:448:
+extern __be32 nfsd4_lock(struct svc_rqst *rqstp, struct svc_fh *current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: include/linux/nfsd/xdr4.h:449:
+extern __be32 nfsd4_lock(struct svc_rqst *rqstp, struct svc_fh *current_fh,
 		struct nfsd4_lock *lock,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1480: FILE: include/linux/nfsd/xdr4.h:451:
+extern __be32 nfsd4_lockt(struct svc_rqst *rqstp, struct svc_fh *current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1481: FILE: include/linux/nfsd/xdr4.h:452:
+extern __be32 nfsd4_lockt(struct svc_rqst *rqstp, struct svc_fh *current_fh,
 		struct nfsd4_lockt *lockt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1483: FILE: include/linux/nfsd/xdr4.h:453:
+extern __be32 nfsd4_locku(struct svc_rqst *rqstp, struct svc_fh *current_fh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1484: FILE: include/linux/nfsd/xdr4.h:454:
+extern __be32 nfsd4_locku(struct svc_rqst *rqstp, struct svc_fh *current_fh,
 		struct nfsd4_locku *locku,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1492: FILE: include/linux/nfsd/xdr4.h:460:
+extern __be32 nfsd4_delegreturn(struct svc_rqst *rqstp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1493: FILE: include/linux/nfsd/xdr4.h:461:
+extern __be32 nfsd4_delegreturn(struct svc_rqst *rqstp,
 		struct svc_fh *current_fh, struct nfsd4_delegreturn *dr);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29811.commit.5e08c3581ae1c8f6046526e9a7d90072455e1e41 total: 1 errors, 10 warnings, 30 checks, 1315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29811.commit.5e08c3581ae1c8f6046526e9a7d90072455e1e41 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
