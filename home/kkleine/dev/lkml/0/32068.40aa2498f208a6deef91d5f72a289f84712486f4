WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
	rsync://rsync.kernel.org/pub/scm/linux/kernel/git/wim/linux-2.6-watchdog.git

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#50: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#62: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Duplicate signature
#62: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#72: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Duplicate signature
#72: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#86: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Duplicate signature
#86: 
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#105: FILE: drivers/char/watchdog/Kconfig:319:
+config ITCO_WDT
+	tristate "Intel TCO Timer/Watchdog (EXPERIMENTAL)"
+	depends on WATCHDOG && (X86 || IA64) && PCI && EXPERIMENTAL
+	---help---
+	  Hardware driver for the intel TCO timer based watchdog devices.
+	  These drivers are included in the Intel 82801 I/O Controller
+	  Hub family 'from ICH0 up to ICH7) and in the Intel 6300ESB
+	  controller hub.
+
+	  The TCO (Total Cost of Ownership) timer is a watchdog timer
+	  that will reboot the machine after its second expiration. The
+	  expiration time can be configured with the "heartbeat" parameter.
+
+	  On some motherboards the driver may fail to reset the chipset's
+	  NO_REBOOT flag which prevents the watchdog from rebooting the
+	  machine. If this is the case you will get a kernel message like
+	  "failed to reset NO_REBOOT flag, reboot disabled by hardware".
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called iTCO_wdt.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#142: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: drivers/char/watchdog/iTCO_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#213: FILE: drivers/char/watchdog/iTCO_wdt.c:67:
+#include <asm/uaccess.h>		/* For copy_to_user/put_user/... */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#214: FILE: drivers/char/watchdog/iTCO_wdt.c:68:
+#include <asm/io.h>			/* For inb/outb/... */

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_chipsets>
#217: FILE: drivers/char/watchdog/iTCO_wdt.c:71:
+enum iTCO_chipsets {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_version>
#239: FILE: drivers/char/watchdog/iTCO_wdt.c:93:
+	unsigned int iTCO_version;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#240: FILE: drivers/char/watchdog/iTCO_wdt.c:94:
+} iTCO_chipset_info[] __devinitdata = {

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_chipset_info>
#240: FILE: drivers/char/watchdog/iTCO_wdt.c:94:
+} iTCO_chipset_info[] __devinitdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#258: FILE: drivers/char/watchdog/iTCO_wdt.c:112:
+	{NULL,0}
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_pci_tbl>
#267: FILE: drivers/char/watchdog/iTCO_wdt.c:121:
+static struct pci_device_id iTCO_wdt_pci_tbl[] = {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#268: FILE: drivers/char/watchdog/iTCO_wdt.c:122:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801AA_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH     },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#269: FILE: drivers/char/watchdog/iTCO_wdt.c:123:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801AB_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH0    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#270: FILE: drivers/char/watchdog/iTCO_wdt.c:124:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801BA_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH2    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#271: FILE: drivers/char/watchdog/iTCO_wdt.c:125:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801BA_10,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH2M   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#272: FILE: drivers/char/watchdog/iTCO_wdt.c:126:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801CA_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH3    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#273: FILE: drivers/char/watchdog/iTCO_wdt.c:127:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801CA_12,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH3M   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#274: FILE: drivers/char/watchdog/iTCO_wdt.c:128:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801DB_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH4    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#275: FILE: drivers/char/watchdog/iTCO_wdt.c:129:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801DB_12,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH4M   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#276: FILE: drivers/char/watchdog/iTCO_wdt.c:130:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801E_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_CICH    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#277: FILE: drivers/char/watchdog/iTCO_wdt.c:131:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801EB_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH5    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#278: FILE: drivers/char/watchdog/iTCO_wdt.c:132:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ESB_1,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_6300ESB },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#279: FILE: drivers/char/watchdog/iTCO_wdt.c:133:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH6_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH6    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#280: FILE: drivers/char/watchdog/iTCO_wdt.c:134:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH6_1,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH6M   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#281: FILE: drivers/char/watchdog/iTCO_wdt.c:135:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH6_2,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH6W   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#282: FILE: drivers/char/watchdog/iTCO_wdt.c:136:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH7_0,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH7    },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#283: FILE: drivers/char/watchdog/iTCO_wdt.c:137:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH7_1,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH7M   },

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#284: FILE: drivers/char/watchdog/iTCO_wdt.c:138:
+	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_ICH7_31,	PCI_ANY_ID, PCI_ANY_ID, 0, 0, TCO_ICH7MDH },

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: drivers/char/watchdog/iTCO_wdt.c:141:
+MODULE_DEVICE_TABLE (pci, iTCO_wdt_pci_tbl);

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#290: FILE: drivers/char/watchdog/iTCO_wdt.c:144:
+#define	TCOBASE		iTCO_wdt_private.ACPIBASE + 0x60	/* TCO base address                */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_private>
#290: FILE: drivers/char/watchdog/iTCO_wdt.c:144:
+#define	TCOBASE		iTCO_wdt_private.ACPIBASE + 0x60	/* TCO base address                */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: drivers/char/watchdog/iTCO_wdt.c:144:
+#define	TCOBASE		iTCO_wdt_private.ACPIBASE + 0x60	/* TCO base address                */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#291: FILE: drivers/char/watchdog/iTCO_wdt.c:145:
+#define	SMI_EN		iTCO_wdt_private.ACPIBASE + 0x30	/* SMI Control and Enable Register */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#291: FILE: drivers/char/watchdog/iTCO_wdt.c:145:
+#define	SMI_EN		iTCO_wdt_private.ACPIBASE + 0x30	/* SMI Control and Enable Register */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#293: FILE: drivers/char/watchdog/iTCO_wdt.c:147:
+#define TCO_RLD		TCOBASE + 0x00	/* TCO Timer Reload and Current Value */

CHECK:CAMELCASE: Avoid CamelCase: <TCOv1_TMR>
#294: FILE: drivers/char/watchdog/iTCO_wdt.c:148:
+#define TCOv1_TMR	TCOBASE + 0x01	/* TCOv1 Timer Initial Value	*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#294: FILE: drivers/char/watchdog/iTCO_wdt.c:148:
+#define TCOv1_TMR	TCOBASE + 0x01	/* TCOv1 Timer Initial Value	*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#295: FILE: drivers/char/watchdog/iTCO_wdt.c:149:
+#define	TCO_DAT_IN	TCOBASE + 0x02	/* TCO Data In Register		*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#296: FILE: drivers/char/watchdog/iTCO_wdt.c:150:
+#define	TCO_DAT_OUT	TCOBASE + 0x03	/* TCO Data Out Register	*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#297: FILE: drivers/char/watchdog/iTCO_wdt.c:151:
+#define	TCO1_STS	TCOBASE + 0x04	/* TCO1 Status Register		*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#298: FILE: drivers/char/watchdog/iTCO_wdt.c:152:
+#define	TCO2_STS	TCOBASE + 0x06	/* TCO2 Status Register		*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#299: FILE: drivers/char/watchdog/iTCO_wdt.c:153:
+#define TCO1_CNT	TCOBASE + 0x08	/* TCO1 Control Register	*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#300: FILE: drivers/char/watchdog/iTCO_wdt.c:154:
+#define TCO2_CNT	TCOBASE + 0x0a	/* TCO2 Control Register	*/

CHECK:CAMELCASE: Avoid CamelCase: <TCOv2_TMR>
#301: FILE: drivers/char/watchdog/iTCO_wdt.c:155:
+#define TCOv2_TMR	TCOBASE + 0x12	/* TCOv2 Timer Initial Value	*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#301: FILE: drivers/char/watchdog/iTCO_wdt.c:155:
+#define TCOv2_TMR	TCOBASE + 0x12	/* TCOv2 Timer Initial Value	*/

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#309: FILE: drivers/char/watchdog/iTCO_wdt.c:163:
+	unsigned long __iomem *gcs;	/* NO_REBOOT flag is Memory-Mapped GCS register bit 5 (TCO version 2) */

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_platform_device>
#314: FILE: drivers/char/watchdog/iTCO_wdt.c:168:
+static struct platform_device *iTCO_wdt_platform_device;	/* the watchdog platform device */

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#320: FILE: drivers/char/watchdog/iTCO_wdt.c:174:
+MODULE_PARM_DESC(heartbeat, "Watchdog heartbeat in seconds. (2<heartbeat<39 (TCO v1) or 613 (TCO v2), default=" __MODULE_STRING(WATCHDOG_HEARTBEAT) ")");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#333: FILE: drivers/char/watchdog/iTCO_wdt.c:187:
+	 * every 0.6 seconds */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_set_NO_REBOOT_bit>
#337: FILE: drivers/char/watchdog/iTCO_wdt.c:191:
+static void iTCO_wdt_set_NO_REBOOT_bit(void)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_unset_NO_REBOOT_bit>
#353: FILE: drivers/char/watchdog/iTCO_wdt.c:207:
+static int iTCO_wdt_unset_NO_REBOOT_bit(void)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_start>
#380: FILE: drivers/char/watchdog/iTCO_wdt.c:234:
+static int iTCO_wdt_start(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#388: FILE: drivers/char/watchdog/iTCO_wdt.c:242:
+		printk(KERN_ERR PFX "failed to reset NO_REBOOT flag, reboot disabled by hardware\n");

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_stop>
#404: FILE: drivers/char/watchdog/iTCO_wdt.c:258:
+static int iTCO_wdt_stop(void)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_keepalive>
#426: FILE: drivers/char/watchdog/iTCO_wdt.c:280:
+static int iTCO_wdt_keepalive(void)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#431: FILE: drivers/char/watchdog/iTCO_wdt.c:285:
+	if (iTCO_wdt_private.iTCO_version == 2) {
[...]
+	} else if (iTCO_wdt_private.iTCO_version == 1) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_set_heartbeat>
#441: FILE: drivers/char/watchdog/iTCO_wdt.c:295:
+static int iTCO_wdt_set_heartbeat(int t)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iTCO_wdt_private.iTCO_version == 2'
#452: FILE: drivers/char/watchdog/iTCO_wdt.c:306:
+	if (((iTCO_wdt_private.iTCO_version == 2) && (tmrval > 0x3ff)) ||
+	    ((iTCO_wdt_private.iTCO_version == 1) && (tmrval > 0x03f)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmrval > 0x3ff'
#452: FILE: drivers/char/watchdog/iTCO_wdt.c:306:
+	if (((iTCO_wdt_private.iTCO_version == 2) && (tmrval > 0x3ff)) ||
+	    ((iTCO_wdt_private.iTCO_version == 1) && (tmrval > 0x03f)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iTCO_wdt_private.iTCO_version == 1'
#452: FILE: drivers/char/watchdog/iTCO_wdt.c:306:
+	if (((iTCO_wdt_private.iTCO_version == 2) && (tmrval > 0x3ff)) ||
+	    ((iTCO_wdt_private.iTCO_version == 1) && (tmrval > 0x03f)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmrval > 0x03f'
#452: FILE: drivers/char/watchdog/iTCO_wdt.c:306:
+	if (((iTCO_wdt_private.iTCO_version == 2) && (tmrval > 0x3ff)) ||
+	    ((iTCO_wdt_private.iTCO_version == 1) && (tmrval > 0x03f)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: drivers/char/watchdog/iTCO_wdt.c:339:
+static int iTCO_wdt_get_timeleft (int *time_left)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_get_timeleft>
#485: FILE: drivers/char/watchdog/iTCO_wdt.c:339:
+static int iTCO_wdt_get_timeleft (int *time_left)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#513: FILE: drivers/char/watchdog/iTCO_wdt.c:367:
+static int iTCO_wdt_open (struct inode *inode, struct file *file)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_open>
#513: FILE: drivers/char/watchdog/iTCO_wdt.c:367:
+static int iTCO_wdt_open (struct inode *inode, struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: drivers/char/watchdog/iTCO_wdt.c:381:
+static int iTCO_wdt_release (struct inode *inode, struct file *file)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_release>
#527: FILE: drivers/char/watchdog/iTCO_wdt.c:381:
+static int iTCO_wdt_release (struct inode *inode, struct file *file)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#535: FILE: drivers/char/watchdog/iTCO_wdt.c:389:
+		printk(KERN_CRIT PFX "Unexpected close, not stopping watchdog!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: drivers/char/watchdog/iTCO_wdt.c:397:
+static ssize_t iTCO_wdt_write (struct file *file, const char __user *data,

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_write>
#543: FILE: drivers/char/watchdog/iTCO_wdt.c:397:
+static ssize_t iTCO_wdt_write (struct file *file, const char __user *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: drivers/char/watchdog/iTCO_wdt.c:398:
+static ssize_t iTCO_wdt_write (struct file *file, const char __user *data,
+			      size_t len, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#544: FILE: drivers/char/watchdog/iTCO_wdt.c:398:
+			      size_t len, loff_t * ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#552: FILE: drivers/char/watchdog/iTCO_wdt.c:406:
+			 * five months ago... */

WARNING:LINE_SPACING: Missing a blank line after declarations
#558: FILE: drivers/char/watchdog/iTCO_wdt.c:412:
+				char c;
+				if (get_user(c, data+i))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#558: FILE: drivers/char/watchdog/iTCO_wdt.c:412:
+				if (get_user(c, data+i))
 				                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: drivers/char/watchdog/iTCO_wdt.c:425:
+static int iTCO_wdt_ioctl (struct inode *inode, struct file *file,

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_ioctl>
#571: FILE: drivers/char/watchdog/iTCO_wdt.c:425:
+static int iTCO_wdt_ioctl (struct inode *inode, struct file *file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/char/watchdog/iTCO_wdt.c:426:
+static int iTCO_wdt_ioctl (struct inode *inode, struct file *file,
+			  unsigned int cmd, unsigned long arg)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#587: FILE: drivers/char/watchdog/iTCO_wdt.c:441:
+	switch (cmd) {
+		case WDIOC_GETSUPPORT:
[...]
+		case WDIOC_GETSTATUS:
+		case WDIOC_GETBOOTSTATUS:
[...]
+		case WDIOC_KEEPALIVE:
[...]
+		case WDIOC_SETOPTIONS:
[...]
+		case WDIOC_SETTIMEOUT:
[...]
+		case WDIOC_GETTIMEOUT:
[...]
+		case WDIOC_GETTIMELEFT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: drivers/char/watchdog/iTCO_wdt.c:444:
+				sizeof (ident)) ? -EFAULT : 0;

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_fops>
#651: FILE: drivers/char/watchdog/iTCO_wdt.c:505:
+static struct file_operations iTCO_wdt_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#651: FILE: drivers/char/watchdog/iTCO_wdt.c:505:
+static struct file_operations iTCO_wdt_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_miscdev>
#660: FILE: drivers/char/watchdog/iTCO_wdt.c:514:
+static struct miscdevice iTCO_wdt_miscdev = {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#670: FILE: drivers/char/watchdog/iTCO_wdt.c:524:
+static int iTCO_wdt_init(struct pci_dev *pdev, const struct pci_device_id *ent, struct platform_device *dev)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_init>
#670: FILE: drivers/char/watchdog/iTCO_wdt.c:524:
+static int iTCO_wdt_init(struct pci_dev *pdev, const struct pci_device_id *ent, struct platform_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#686: FILE: drivers/char/watchdog/iTCO_wdt.c:540:
+		printk(KERN_ERR PFX "failed to get TCOBASE address\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#696: FILE: drivers/char/watchdog/iTCO_wdt.c:550:
+	/* To get access to it you have to read RCBA from PCI Config space 0xf0
+	   and use it as base. GCS = RCBA + ICH6_GCS(0x3410). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#696: FILE: drivers/char/watchdog/iTCO_wdt.c:550:
+	   and use it as base. GCS = RCBA + ICH6_GCS(0x3410). */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#700: FILE: drivers/char/watchdog/iTCO_wdt.c:554:
+		iTCO_wdt_private.gcs = ioremap((RCBA + 0x3410),4);
 		                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#705: FILE: drivers/char/watchdog/iTCO_wdt.c:559:
+		printk(KERN_ERR PFX "failed to reset NO_REBOOT flag, reboot disabled by hardware\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#715: FILE: drivers/char/watchdog/iTCO_wdt.c:569:
+		printk(KERN_ERR PFX "I/O address 0x%04lx already in use\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: drivers/char/watchdog/iTCO_wdt.c:570:
+		printk(KERN_ERR PFX "I/O address 0x%04lx already in use\n",
+			SMI_EN );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#716: FILE: drivers/char/watchdog/iTCO_wdt.c:570:
+			SMI_EN );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: drivers/char/watchdog/iTCO_wdt.c:580:
+	if (!request_region (TCOBASE, 0x20, "iTCO_wdt")) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#727: FILE: drivers/char/watchdog/iTCO_wdt.c:581:
+		printk (KERN_ERR PFX "I/O address 0x%04lx already in use\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#727: FILE: drivers/char/watchdog/iTCO_wdt.c:581:
+		printk (KERN_ERR PFX "I/O address 0x%04lx already in use\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#733: FILE: drivers/char/watchdog/iTCO_wdt.c:587:
+	printk(KERN_INFO PFX "Found a %s TCO device (Version=%d, TCOBASE=0x%04lx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: drivers/char/watchdog/iTCO_wdt.c:588:
+	printk(KERN_INFO PFX "Found a %s TCO device (Version=%d, TCOBASE=0x%04lx)\n",
+		iTCO_chipset_info[ent->driver_data].name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#748: FILE: drivers/char/watchdog/iTCO_wdt.c:602:
+		printk(KERN_INFO PFX "heartbeat value must be 2<heartbeat<39 (TCO v1) or 613 (TCO v2), using %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: drivers/char/watchdog/iTCO_wdt.c:603:
+		printk(KERN_INFO PFX "heartbeat value must be 2<heartbeat<39 (TCO v1) or 613 (TCO v2), using %d\n",
+			heartbeat);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#754: FILE: drivers/char/watchdog/iTCO_wdt.c:608:
+		printk(KERN_ERR PFX "cannot register miscdev on minor=%d (err=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: drivers/char/watchdog/iTCO_wdt.c:609:
+		printk(KERN_ERR PFX "cannot register miscdev on minor=%d (err=%d)\n",
+			WATCHDOG_MINOR, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#759: FILE: drivers/char/watchdog/iTCO_wdt.c:613:
+	printk (KERN_INFO PFX "initialized. heartbeat=%d sec (nowayout=%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: drivers/char/watchdog/iTCO_wdt.c:613:
+	printk (KERN_INFO PFX "initialized. heartbeat=%d sec (nowayout=%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#765: FILE: drivers/char/watchdog/iTCO_wdt.c:619:
+	release_region (TCOBASE, 0x20);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_cleanup>
#774: FILE: drivers/char/watchdog/iTCO_wdt.c:628:
+static void iTCO_wdt_cleanup(void)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_probe>
#789: FILE: drivers/char/watchdog/iTCO_wdt.c:643:
+static int iTCO_wdt_probe(struct platform_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#808: FILE: drivers/char/watchdog/iTCO_wdt.c:662:
+		printk(KERN_INFO PFX "No card detected\n");

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_remove>
#815: FILE: drivers/char/watchdog/iTCO_wdt.c:669:
+static int iTCO_wdt_remove(struct platform_device *dev)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_shutdown>
#823: FILE: drivers/char/watchdog/iTCO_wdt.c:677:
+static void iTCO_wdt_shutdown(struct platform_device *dev)

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_suspend>
#828: FILE: drivers/char/watchdog/iTCO_wdt.c:682:
+#define iTCO_wdt_suspend NULL

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_resume>
#829: FILE: drivers/char/watchdog/iTCO_wdt.c:683:
+#define iTCO_wdt_resume  NULL

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_driver>
#831: FILE: drivers/char/watchdog/iTCO_wdt.c:685:
+static struct platform_driver iTCO_wdt_driver = {

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_init_module>
#843: FILE: drivers/char/watchdog/iTCO_wdt.c:697:
+static int __init iTCO_wdt_init_module(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#847: FILE: drivers/char/watchdog/iTCO_wdt.c:701:
+	printk(KERN_INFO PFX "Intel TCO WatchDog Timer Driver v%s (%s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/char/watchdog/iTCO_wdt.c:702:
+	printk(KERN_INFO PFX "Intel TCO WatchDog Timer Driver v%s (%s)\n",
+		DRV_VERSION, DRV_RELDATE);

CHECK:CAMELCASE: Avoid CamelCase: <iTCO_wdt_cleanup_module>
#867: FILE: drivers/char/watchdog/iTCO_wdt.c:721:
+static void __exit iTCO_wdt_cleanup_module(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#871: FILE: drivers/char/watchdog/iTCO_wdt.c:725:
+	printk(KERN_INFO PFX "Watchdog Module Unloaded.\n");

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.32068.commit.40aa2498f208a6deef91d5f72a289f84712486f4 total: 16 errors, 67 warnings, 43 checks, 769 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.32068.commit.40aa2498f208a6deef91d5f72a289f84712486f4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
