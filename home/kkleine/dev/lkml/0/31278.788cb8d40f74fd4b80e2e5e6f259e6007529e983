WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#102: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1438: FILE: drivers/char/apm-emulation.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1541: FILE: drivers/char/apm-emulation.c:104:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1544: FILE: drivers/char/apm-emulation.c:107:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1558: FILE: drivers/char/apm-emulation.c:121:
+EXPORT_SYMBOL(apm_get_power_status);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1560: FILE: drivers/char/apm-emulation.c:123:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1581: FILE: drivers/char/apm-emulation.c:144:
+		if (notified++ == 0)
+		    printk(KERN_ERR "apm: an event queue overflowed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1582: FILE: drivers/char/apm-emulation.c:145:
+		    printk(KERN_ERR "apm: an event queue overflowed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1680: FILE: drivers/char/apm-emulation.c:243:
+static unsigned int apm_poll(struct file *fp, poll_table * wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1699: FILE: drivers/char/apm-emulation.c:262:
+apm_ioctl(struct inode * inode, struct file *filp, u_int cmd, u_long arg)
                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1699: FILE: drivers/char/apm-emulation.c:262:
+apm_ioctl(struct inode * inode, struct file *filp, u_int cmd, u_long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1753: FILE: drivers/char/apm-emulation.c:316:
+			wait_event(apm_suspend_waitqueue,
+					 as->suspend_state == SUSPEND_DONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1756: FILE: drivers/char/apm-emulation.c:319:
+			wait_event_interruptible(apm_suspend_waitqueue,
+					 as->suspend_state == SUSPEND_DONE);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1767: FILE: drivers/char/apm-emulation.c:330:
+static int apm_release(struct inode * inode, struct file * filp)
                                                            ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1767: FILE: drivers/char/apm-emulation.c:330:
+static int apm_release(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1767: FILE: drivers/char/apm-emulation.c:330:
+static int apm_release(struct inode * inode, struct file * filp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1770: FILE: drivers/char/apm-emulation.c:333:
+	struct apm_user *as = filp->private_data;
+	filp->private_data = NULL;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1792: FILE: drivers/char/apm-emulation.c:355:
+static int apm_open(struct inode * inode, struct file * filp)
                                                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1792: FILE: drivers/char/apm-emulation.c:355:
+static int apm_open(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1792: FILE: drivers/char/apm-emulation.c:355:
+static int apm_open(struct inode * inode, struct file * filp)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1796: FILE: drivers/char/apm-emulation.c:359:
+	as = (struct apm_user *)kzalloc(sizeof(*as), GFP_KERNEL);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1819: FILE: drivers/char/apm-emulation.c:382:
+static struct file_operations apm_bios_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1834: FILE: drivers/char/apm-emulation.c:397:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1891: FILE: drivers/char/apm-emulation.c:454:
+	default:	units = "?";	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1892: FILE: drivers/char/apm-emulation.c:455:
+^Icase 0: ^Iunits = "min";^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1892: FILE: drivers/char/apm-emulation.c:455:
+	case 0: 	units = "min";	break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1893: FILE: drivers/char/apm-emulation.c:456:
+^Icase 1: ^Iunits = "sec";^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1893: FILE: drivers/char/apm-emulation.c:456:
+	case 1: 	units = "sec";	break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1897: FILE: drivers/char/apm-emulation.c:460:
+	ret = sprintf(buf, "%s 1.2 0x%02x 0x%02x 0x%02x 0x%02x %d%% %d %s\n",
+		     driver_version, APM_32_BIT_SUPPORT,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1902: FILE: drivers/char/apm-emulation.c:465:
+ ^Ireturn ret;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1902: FILE: drivers/char/apm-emulation.c:465:
+ ^Ireturn ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1902: FILE: drivers/char/apm-emulation.c:465:
+ ^Ireturn ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1912: FILE: drivers/char/apm-emulation.c:475:
+		wait_event_interruptible(kapmd_wait,
+				!queue_empty(&kapmd_queue) || kthread_should_stop());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1953: FILE: drivers/char/apm-emulation.c:516:
+		printk(KERN_NOTICE "apm: disabled on user request.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "str"
#1997: FILE: drivers/char/apm-emulation.c:560:
+	while ((str != NULL) && (*str != '\0')) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "str"
#2003: FILE: drivers/char/apm-emulation.c:566:
+		if (str != NULL)

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2009: FILE: drivers/char/apm-emulation.c:572:
+__setup("apm=", apm_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2181: FILE: include/linux/apm-emulation.h:1:
+/* -*- linux-c -*-

CHECK:BIT_MACRO: Prefer using the BIT macro
#2218: FILE: include/linux/apm-emulation.h:38:
+#define APM_BATTERY_FLAG_HIGH		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2219: FILE: include/linux/apm-emulation.h:39:
+#define APM_BATTERY_FLAG_LOW		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2220: FILE: include/linux/apm-emulation.h:40:
+#define APM_BATTERY_FLAG_CRITICAL	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2221: FILE: include/linux/apm-emulation.h:41:
+#define APM_BATTERY_FLAG_CHARGING	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2222: FILE: include/linux/apm-emulation.h:42:
+#define APM_BATTERY_FLAG_NOT_PRESENT	(1 << 7)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct apm_power_info *' should also have an identifier name
#2237: FILE: include/linux/apm-emulation.h:57:
+extern void (*apm_get_power_status)(struct apm_power_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#2254: FILE: kernel/power/Kconfig:134:
+config APM_EMULATION
+	tristate "Advanced Power Management Emulation"
+	depends on SYS_SUPPORTS_APM_EMULATION
+	---help---
+	  APM is a BIOS specification for saving power using several different
+	  techniques. This is mostly useful for battery powered laptops with
+	  APM compliant BIOSes. If you say Y here, the system time will be
+	  reset after a RESUME operation, the /proc/apm device will provide
+	  battery status information, and user-space programs will receive
+	  notification of APM "events" (e.g. battery status change).
+
+	  In order to use APM, you will need supporting software. For location
+	  and more information, read <file:Documentation/pm.txt> and the
+	  Battery Powered Linux mini-HOWTO, available from
+	  <http://www.tldp.org/docs.html#howto>.
+
+	  This driver does not spin down disk drives (see the hdparm(8)
+	  manpage ("man 8 hdparm") for that), and it doesn't turn off
+	  VESA-compliant "green" monitors.
+
+	  Generally, if you don't have a battery in your machine, there isn't
+	  much point in using this driver and you should say N. If you get
+	  random kernel OOPSes or reboots that don't seem to be related to
+	  anything, try disabling/enabling this option (or disabling/enabling
+	  APM in your BIOS).
+

Kconfig symbols should have a help text which fully describes
it.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31278.commit.788cb8d40f74fd4b80e2e5e6f259e6007529e983 total: 10 errors, 19 warnings, 16 checks, 833 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31278.commit.788cb8d40f74fd4b80e2e5e6f259e6007529e983 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
