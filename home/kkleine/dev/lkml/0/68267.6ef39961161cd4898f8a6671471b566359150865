CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/sched.h:105:
+extern unsigned long weighted_cpuload(const int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#147: FILE: kernel/sched.c:698:
+	if (rt_task(p)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: kernel/sched.c:710:
+	} else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: kernel/sched.c:1035:
+	return min(rq->cpu_load[type-1], rq->raw_weighted_load);
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: kernel/sched.c:1049:
+	return max(rq->cpu_load[type-1], rq->raw_weighted_load);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#311: FILE: kernel/sched.c:1324:
+				100*(tl + p->load_weight) <= imbalance*load) {
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#311: FILE: kernel/sched.c:1324:
+				100*(tl + p->load_weight) <= imbalance*load) {
 				                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#340: FILE: kernel/sched.c:1941:
+#define rq_best_prio(rq) min((rq)->curr->prio, (rq)->best_expired_prio)

WARNING:TYPO_SPELLING: 'accross' may be misspelled - perhaps 'across'?
#392: FILE: kernel/sched.c:2017:
+	 * To help distribute high priority tasks accross CPUs we don't
 	                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#441: FILE: kernel/sched.c:2084:
+	busiest_load_per_task = busiest_nr_running = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#442: FILE: kernel/sched.c:2085:
+	this_load_per_task = this_nr_running = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#457: FILE: kernel/sched.c:2103:
+		sum_weighted_load = sum_nr_running = avg_load = 0;

WARNING:TYPO_SPELLING: 'gaurantee' may be misspelled - perhaps 'guarantee'?
#536: FILE: kernel/sched.c:2189:
+	 * there is no gaurantee that any tasks will be moved so we'll have
 	               ^^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#548: FILE: kernel/sched.c:2199:
+		pwr_move = pwr_now = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#550: FILE: kernel/sched.c:2201:
+		if (this_nr_running) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#554: FILE: kernel/sched.c:2205:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#576: FILE: kernel/sched.c:2226:
+		tmp = busiest_load_per_task*SCHED_LOAD_SCALE/busiest->cpu_power;
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#576: FILE: kernel/sched.c:2226:
+		tmp = busiest_load_per_task*SCHED_LOAD_SCALE/busiest->cpu_power;
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#586: FILE: kernel/sched.c:2233:
+				busiest_load_per_task*SCHED_LOAD_SCALE)
 				                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: kernel/sched.c:2236:
+			tmp = busiest_load_per_task*SCHED_LOAD_SCALE/this->cpu_power;
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#591: FILE: kernel/sched.c:2236:
+			tmp = busiest_load_per_task*SCHED_LOAD_SCALE/this->cpu_power;
 			                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#592: FILE: kernel/sched.c:2237:
+		pwr_move += this->cpu_power*min(this_load_per_task, this_load + tmp);
 		                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#642: FILE: kernel/sched.c:2286:
+#define minus_1_or_zero(n) ((n) > 0 ? (n) - 1 : 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: kernel/sched.c:2535:
+	if (move_tasks(target_rq, target_cpu, busiest_rq, 1,
+			RTPRIO_TO_LOAD_WEIGHT(100), sd, SCHED_IDLE, NULL))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.68267.commit.6ef39961161cd4898f8a6671471b566359150865 total: 0 errors, 2 warnings, 22 checks, 648 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.68267.commit.6ef39961161cd4898f8a6671471b566359150865 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
