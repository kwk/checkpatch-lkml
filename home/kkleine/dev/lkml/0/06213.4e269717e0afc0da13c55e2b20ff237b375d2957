WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
>>> * dmesg is truncated, please post the content of file /var/log/boot.msg.

WARNING:SPLIT_STRING: quoted string split across lines
#100: FILE: drivers/ata/libata-eh.c:1152:
+				       "CDB: %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x "
+				       "%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x p=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#152: FILE: drivers/ata/libata-scsi.c:977:
+	if (cdb[1] & 0x1) {
 		;	/* ignore IMMED bit, violates sat-r05 */
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#345: FILE: drivers/ata/libata-scsi.c:1167:
+	if (cdb[0] == VERIFY) {
[...]
+	} else if (cdb[0] == VERIFY_16) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#353: FILE: drivers/ata/libata-scsi.c:1175:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scmd->sc_data_direction != DMA_TO_DEVICE'
#525: FILE: drivers/ata/libata-scsi.c:2517:
+		if (atapi_dmadir && (scmd->sc_data_direction != DMA_TO_DEVICE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#557: FILE: drivers/ata/libata-scsi.c:2655:
+	if ((tf->protocol = ata_scsi_map_proto(cdb[1])) == ATA_PROT_UNKNOWN)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#586: FILE: drivers/ata/libata-scsi.c:2676:
+		if (cdb[1] & 0x01) {
[...]
 		} else
[...]

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06213.commit.4e269717e0afc0da13c55e2b20ff237b375d2957 total: 1 errors, 3 warnings, 4 checks, 575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06213.commit.4e269717e0afc0da13c55e2b20ff237b375d2957 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
