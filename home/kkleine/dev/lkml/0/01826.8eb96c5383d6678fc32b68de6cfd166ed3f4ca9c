WARNING:TYPO_SPELLING: 'peformed' may be misspelled - perhaps 'performed'?
#78: 
be peformed with as little hypervisor interaction as possible.
   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/kernel/entry.S:1008:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/i386/kernel/entry.S:1018:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: arch/i386/kernel/entry.S:1052:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: arch/i386/kernel/entry.S:1074:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: arch/i386/kernel/entry.S:1076:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/i386/kernel/head.S:536:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#435: FILE: arch/i386/kernel/paravirt.c:320:
+fastcall void native_store_gdt(struct Xgt_desc_struct *dtr)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#503: FILE: arch/i386/mm/pgtable.c:270:
+			memset(pgd, 0, USER_PTRS_PER_PGD*sizeof(pgd_t));
 			                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#517: FILE: arch/i386/paravirt-xen/enlighten.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#535: FILE: arch/i386/paravirt-xen/enlighten.c:19:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#538: FILE: arch/i386/paravirt-xen/enlighten.c:22:
+#include <asm/pgtable.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#546: FILE: arch/i386/paravirt-xen/enlighten.c:30:
+extern struct i386_pda boot_pda;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#547: FILE: arch/i386/paravirt-xen/enlighten.c:31:
+extern unsigned long init_pg_tables_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#549: FILE: arch/i386/paravirt-xen/enlighten.c:33:
+static DEFINE_PER_CPU(unsigned, lazy_mode);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#552: FILE: arch/i386/paravirt-xen/enlighten.c:36:
+extern const char xen_sti_sysexit[];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#556: FILE: arch/i386/paravirt-xen/enlighten.c:40:
+static unsigned xen_patch(u8 type, u16 clobber, void *firstinsn, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#556: FILE: arch/i386/paravirt-xen/enlighten.c:40:
+static unsigned xen_patch(u8 type, u16 clobber, void *firstinsn, unsigned len)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#559: FILE: arch/i386/paravirt-xen/enlighten.c:43:
+	/* Xen will require relocations to patch calls and jmps, and
+	   perhaps chunks of inline code */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#559: FILE: arch/i386/paravirt-xen/enlighten.c:43:
+	   perhaps chunks of inline code */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#565: FILE: arch/i386/paravirt-xen/enlighten.c:49:
+	printk(KERN_INFO "Booting paravirtualized kernel on %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#567: FILE: arch/i386/paravirt-xen/enlighten.c:51:
+	printk(KERN_INFO "Hypervisor signature: %s\n", xen_start_info->magic);

WARNING:REPEATED_WORD: Possible repeated word: 'then'
#573: FILE: arch/i386/paravirt-xen/enlighten.c:57:
+	   and then then cpu_init tries to do it again. If so, just

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#573: FILE: arch/i386/paravirt-xen/enlighten.c:57:
+	/* Don't re-init boot CPU; we do it once very early in boot,
+	   and then then cpu_init tries to do it again. If so, just

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: arch/i386/paravirt-xen/enlighten.c:58:
+	   reuse the stuff we already set up. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#576: FILE: arch/i386/paravirt-xen/enlighten.c:60:
+		BUG_ON(boot_pda.xen.vcpu == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!boot_pda.xen.vcpu"
#576: FILE: arch/i386/paravirt-xen/enlighten.c:60:
+		BUG_ON(boot_pda.xen.vcpu == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#588: FILE: arch/i386/paravirt-xen/enlighten.c:72:
+	unsigned maskedx = ~0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#589: FILE: arch/i386/paravirt-xen/enlighten.c:73:
+	unsigned maskedx = ~0;
+	if (*eax == 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: arch/i386/paravirt-xen/enlighten.c:106:
+^I/* convert to IF type flag $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#623: FILE: arch/i386/paravirt-xen/enlighten.c:107:
+	/* convert to IF type flag 
+	   -0 -> 0x00000000

CHECK:BRACES: braces {} should be used on all arms of this statement
#639: FILE: arch/i386/paravirt-xen/enlighten.c:123:
+	if (flags == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#644: FILE: arch/i386/paravirt-xen/enlighten.c:128:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#651: FILE: arch/i386/paravirt-xen/enlighten.c:135:
+	struct vcpu_info *vcpu;
+	preempt_disable();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#675: FILE: arch/i386/paravirt-xen/enlighten.c:159:
+		BUG();

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#681: FILE: arch/i386/paravirt-xen/enlighten.c:165:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#689: FILE: arch/i386/paravirt-xen/enlighten.c:173:
+	unsigned *lazy = &get_cpu_var(lazy_mode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#692: FILE: arch/i386/paravirt-xen/enlighten.c:176:
+		BUG();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#699: FILE: arch/i386/paravirt-xen/enlighten.c:183:
+static unsigned xen_get_lazy_mode(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#701: FILE: arch/i386/paravirt-xen/enlighten.c:185:
+	unsigned ret = get_cpu_var(lazy_mode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#702: FILE: arch/i386/paravirt-xen/enlighten.c:186:
+	unsigned ret = get_cpu_var(lazy_mode);
+	put_cpu_var(lazy_mode);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#717: FILE: arch/i386/paravirt-xen/enlighten.c:201:
+static fastcall void xen_set_ldt(const void *addr, unsigned entries)

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: arch/i386/paravirt-xen/enlighten.c:222:
+        unsigned long va;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: arch/i386/paravirt-xen/enlighten.c:222:
+        unsigned long va;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: arch/i386/paravirt-xen/enlighten.c:223:
+        int f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: arch/i386/paravirt-xen/enlighten.c:223:
+        int f;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#740: FILE: arch/i386/paravirt-xen/enlighten.c:224:
+	unsigned size = dtr->size + 1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#743: FILE: arch/i386/paravirt-xen/enlighten.c:227:
+	BUG_ON(size > 16*PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#743: FILE: arch/i386/paravirt-xen/enlighten.c:227:
+	BUG_ON(size > 16*PAGE_SIZE);
 	                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: arch/i386/paravirt-xen/enlighten.c:229:
+        for (va = dtr->address, f = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/i386/paravirt-xen/enlighten.c:229:
+        for (va = dtr->address, f = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: arch/i386/paravirt-xen/enlighten.c:230:
+             va < dtr->address + size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: arch/i386/paravirt-xen/enlighten.c:230:
+             va < dtr->address + size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: arch/i386/paravirt-xen/enlighten.c:231:
+             va += PAGE_SIZE, f++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: arch/i386/paravirt-xen/enlighten.c:231:
+             va += PAGE_SIZE, f++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: arch/i386/paravirt-xen/enlighten.c:232:
+                frames[f] = virt_to_mfn(va);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: arch/i386/paravirt-xen/enlighten.c:232:
+                frames[f] = virt_to_mfn(va);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: arch/i386/paravirt-xen/enlighten.c:234:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: arch/i386/paravirt-xen/enlighten.c:234:
+        }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#753: FILE: arch/i386/paravirt-xen/enlighten.c:237:
+	/* This is used very early, so we can't rely on per-cpu data
+	   being set up, so no multicalls */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#753: FILE: arch/i386/paravirt-xen/enlighten.c:237:
+	   being set up, so no multicalls */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#754: FILE: arch/i386/paravirt-xen/enlighten.c:238:
+	if (HYPERVISOR_set_gdt(frames, size/8))
 	                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#755: FILE: arch/i386/paravirt-xen/enlighten.c:239:
+		BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#761: FILE: arch/i386/paravirt-xen/enlighten.c:245:
+	xmaddr_t maddr = virt_to_machine(&get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN+i]);
 	                                                                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#774: FILE: arch/i386/paravirt-xen/enlighten.c:258:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: arch/i386/paravirt-xen/enlighten.c:263:
+        unsigned long lp = (unsigned long)dt + entrynum * 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: arch/i386/paravirt-xen/enlighten.c:263:
+        unsigned long lp = (unsigned long)dt + entrynum * 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: arch/i386/paravirt-xen/enlighten.c:264:
+        xmaddr_t mach_lp = virt_to_machine(lp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: arch/i386/paravirt-xen/enlighten.c:264:
+        xmaddr_t mach_lp = virt_to_machine(lp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: arch/i386/paravirt-xen/enlighten.c:268:
+        if (HYPERVISOR_update_descriptor(mach_lp.maddr, entry))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: arch/i386/paravirt-xen/enlighten.c:268:
+        if (HYPERVISOR_update_descriptor(mach_lp.maddr, entry))$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#785: FILE: arch/i386/paravirt-xen/enlighten.c:269:
+		BUG();

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#809: FILE: arch/i386/paravirt-xen/enlighten.c:293:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#825: FILE: arch/i386/paravirt-xen/enlighten.c:309:
+/* Set an IDT entry.  If the entry is part of the current IDT, then
+   also update Xen. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#825: FILE: arch/i386/paravirt-xen/enlighten.c:309:
+   also update Xen. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#828: FILE: arch/i386/paravirt-xen/enlighten.c:312:
+{
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#845: FILE: arch/i386/paravirt-xen/enlighten.c:329:
+				BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#850: FILE: arch/i386/paravirt-xen/enlighten.c:334:
+/* Load a new IDT into Xen.  In principle this can be per-CPU, so we
+   hold a spinlock to protect the static traps[] array (static because

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#851: FILE: arch/i386/paravirt-xen/enlighten.c:335:
+   it avoids allocation, and saves stack space). */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#858: FILE: arch/i386/paravirt-xen/enlighten.c:342:
+	unsigned in, out, count;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: arch/i386/paravirt-xen/enlighten.c:345:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#863: FILE: arch/i386/paravirt-xen/enlighten.c:347:
+	BUG_ON(count > 256);

ERROR:SPACING: space required before the open parenthesis '('
#866: FILE: arch/i386/paravirt-xen/enlighten.c:350:
+	for(in = out = 0; in < count; in++) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#876: FILE: arch/i386/paravirt-xen/enlighten.c:360:
+		BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#882: FILE: arch/i386/paravirt-xen/enlighten.c:366:
+/* Write a GDT descriptor entry.  Ignore LDT descriptors, since
+   they're handled differently. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#882: FILE: arch/i386/paravirt-xen/enlighten.c:366:
+   they're handled differently. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#893: FILE: arch/i386/paravirt-xen/enlighten.c:377:
+		if (HYPERVISOR_update_descriptor(virt_to_machine(dt + entry*8).maddr,
 		                                                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#895: FILE: arch/i386/paravirt-xen/enlighten.c:379:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#904: FILE: arch/i386/paravirt-xen/enlighten.c:388:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#907: FILE: arch/i386/paravirt-xen/enlighten.c:391:
+		struct multicall_space mcs = xen_mc_entry(0);
+		MULTI_stack_switch(mcs.mc, __KERNEL_DS, thread->esp0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#911: FILE: arch/i386/paravirt-xen/enlighten.c:395:
+static fastcall void xen_set_iopl_mask(unsigned mask)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#913: FILE: arch/i386/paravirt-xen/enlighten.c:397:
+#if 0

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#951: FILE: arch/i386/paravirt-xen/enlighten.c:435:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#964: FILE: arch/i386/paravirt-xen/enlighten.c:448:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#978: FILE: arch/i386/paravirt-xen/enlighten.c:462:
+		BUG();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#997: FILE: arch/i386/paravirt-xen/enlighten.c:481:
+#define xen_pfn_to_cr3(pfn) (((unsigned)(pfn) << 12) | ((unsigned)(pfn) >> 20))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#997: FILE: arch/i386/paravirt-xen/enlighten.c:481:
+#define xen_pfn_to_cr3(pfn) (((unsigned)(pfn) << 12) | ((unsigned)(pfn) >> 20))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pfn' - possible side-effects?
#997: FILE: arch/i386/paravirt-xen/enlighten.c:481:
+#define xen_pfn_to_cr3(pfn) (((unsigned)(pfn) << 12) | ((unsigned)(pfn) >> 20))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#998: FILE: arch/i386/paravirt-xen/enlighten.c:482:
+#define xen_cr3_to_pfn(cr3) (((unsigned)(cr3) >> 12) | ((unsigned)(cr3) << 20))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#998: FILE: arch/i386/paravirt-xen/enlighten.c:482:
+#define xen_cr3_to_pfn(cr3) (((unsigned)(cr3) >> 12) | ((unsigned)(cr3) << 20))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cr3' - possible side-effects?
#998: FILE: arch/i386/paravirt-xen/enlighten.c:482:
+#define xen_cr3_to_pfn(cr3) (((unsigned)(cr3) >> 12) | ((unsigned)(cr3) << 20))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1015: FILE: arch/i386/paravirt-xen/enlighten.c:499:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1028: FILE: arch/i386/paravirt-xen/enlighten.c:512:
+			BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1047: FILE: arch/i386/paravirt-xen/enlighten.c:531:
+	/* make sure next person to allocate this page gets a clean
+	   pmd */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1047: FILE: arch/i386/paravirt-xen/enlighten.c:531:
+	   pmd */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1069: FILE: arch/i386/paravirt-xen/enlighten.c:553:
+	/* copy top-level of Xen-supplied pagetable into place.  For
+	   !PAE we can use this as-is, but for PAE it is a stand-in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1070: FILE: arch/i386/paravirt-xen/enlighten.c:554:
+	   while we copy the pmd pages. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1077: FILE: arch/i386/paravirt-xen/enlighten.c:561:
+		/* For PAE, need to allocate new pmds, rather than
+		   share Xen's, since Xen doesn't like pmd's being

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1079: FILE: arch/i386/paravirt-xen/enlighten.c:563:
+		   case they're effectively the same address space. */

ERROR:SPACING: space required before the open parenthesis '('
#1080: FILE: arch/i386/paravirt-xen/enlighten.c:564:
+		for(i = 0; i < PTRS_PER_PGD; i++) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1081: FILE: arch/i386/paravirt-xen/enlighten.c:565:
+			if (pgd_val_ma(xen_pgd[i]) & _PAGE_PRESENT) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1090: FILE: arch/i386/paravirt-xen/enlighten.c:574:
+			} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1096: FILE: arch/i386/paravirt-xen/enlighten.c:580:
+	/* make sure the zero_page is mapped RO so we
+	   can use it in pagetables */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1096: FILE: arch/i386/paravirt-xen/enlighten.c:580:
+	   can use it in pagetables */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1101: FILE: arch/i386/paravirt-xen/enlighten.c:585:
+	/* Switch to new pagetable.  This is done before
+	   pagetable_init has done anything so that the new pages

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1102: FILE: arch/i386/paravirt-xen/enlighten.c:586:
+	   added to the table can be prepared properly for Xen.  */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1103: FILE: arch/i386/paravirt-xen/enlighten.c:587:
+	printk("about to switch to new pagetable %p...\n", base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1105: FILE: arch/i386/paravirt-xen/enlighten.c:589:
+	printk("done\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1111: FILE: arch/i386/paravirt-xen/enlighten.c:595:
+	/* init_mm has a new pagetable set up - make sure the GDT page
+	   is still read-only in the new pagetable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1111: FILE: arch/i386/paravirt-xen/enlighten.c:595:
+	   is still read-only in the new pagetable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1116: FILE: arch/i386/paravirt-xen/enlighten.c:600:
+		/* Create a mapping for the shared info page.
+		   Should be set_fixmap(), but shared_info is a machine

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: arch/i386/paravirt-xen/enlighten.c:601:
+		   address with no corresponding pseudo-phys address. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1121: FILE: arch/i386/paravirt-xen/enlighten.c:605:
+^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#1124: FILE: arch/i386/paravirt-xen/enlighten.c:608:
+	} else

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#1133: FILE: arch/i386/paravirt-xen/enlighten.c:617:
+static const struct paravirt_ops xen_paravirt_ops __initdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1266: FILE: arch/i386/paravirt-xen/enlighten.c:750:
+	BUG_ON(memcmp(xen_start_info->magic, "xen-3.0", 7) != 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1279: FILE: arch/i386/paravirt-xen/enlighten.c:763:
+	init_pg_tables_end = __pa(pgd) + xen_start_info->nr_pt_frames*PAGE_SIZE;
 	                                                             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1287: FILE: arch/i386/paravirt-xen/enlighten.c:771:
+	pack_descriptor(&low, &high, (unsigned)&boot_pda, sizeof(boot_pda)-1,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1287: FILE: arch/i386/paravirt-xen/enlighten.c:771:
+	pack_descriptor(&low, &high, (unsigned)&boot_pda, sizeof(boot_pda)-1,
 	                                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1291: FILE: arch/i386/paravirt-xen/enlighten.c:775:
+	 * be used until batched multicalls work. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1295: FILE: arch/i386/paravirt-xen/enlighten.c:779:
+		BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1326: FILE: arch/i386/paravirt-xen/events.c:1:
+#include <linux/linkage.h>

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1350: FILE: arch/i386/paravirt-xen/events.c:25:
+DEFINE_PER_CPU(int, virq_to_irq[NR_VIRQS]) = {[0 ... NR_VIRQS-1] = -1};
                                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1362: FILE: arch/i386/paravirt-xen/events.c:37:
+	[0 ... NR_EVENT_CHANNELS-1] = -1
 	                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1364: FILE: arch/i386/paravirt-xen/events.c:39:
+};
+static unsigned long cpu_evtchn_mask[NR_CPUS][NR_EVENT_CHANNELS/BITS_PER_LONG];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1364: FILE: arch/i386/paravirt-xen/events.c:39:
+static unsigned long cpu_evtchn_mask[NR_CPUS][NR_EVENT_CHANNELS/BITS_PER_LONG];
                                                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1423: FILE: arch/i386/paravirt-xen/events.c:98:
+	BUG_ON(irq == -1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1452: FILE: arch/i386/paravirt-xen/events.c:127:
+	struct shared_info *s = HYPERVISOR_shared_info;
+	sync_clear_bit(port, &s->evtchn_pending[0]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1458: FILE: arch/i386/paravirt-xen/events.c:133:
+	struct shared_info *s = HYPERVISOR_shared_info;
+	sync_set_bit(port, &s->evtchn_pending[0]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1461: FILE: arch/i386/paravirt-xen/events.c:136:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1482: FILE: arch/i386/paravirt-xen/events.c:157:
+	struct shared_info *s = HYPERVISOR_shared_info;
+	sync_set_bit(port, &s->evtchn_mask[0]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1492: FILE: arch/i386/paravirt-xen/events.c:167:
+	BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1569: FILE: arch/i386/paravirt-xen/events.c:244:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1602: FILE: arch/i386/paravirt-xen/events.c:277:
+			BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1669: FILE: arch/i386/paravirt-xen/events.c:344:
+/*
+  Search the CPUs pending events bitmasks.  For each one found, map

WARNING:LINE_SPACING: Missing a blank line after declarations
#1691: FILE: arch/i386/paravirt-xen/events.c:366:
+		int word_idx = __ffs(pending_words);
+		pending_words &= ~(1UL << word_idx);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1707: FILE: arch/i386/paravirt-xen/events.c:382:
+static void rebind_irq_to_cpu(unsigned irq, unsigned tcpu)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1707: FILE: arch/i386/paravirt-xen/events.c:382:
+static void rebind_irq_to_cpu(unsigned irq, unsigned tcpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1720: FILE: arch/i386/paravirt-xen/events.c:395:
+^I * If this fails, it usually just indicates that we're dealing with a $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1728: FILE: arch/i386/paravirt-xen/events.c:403:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1729: FILE: arch/i386/paravirt-xen/events.c:404:
+static void set_affinity_irq(unsigned irq, cpumask_t dest)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1731: FILE: arch/i386/paravirt-xen/events.c:406:
+	unsigned tcpu = first_cpu(dest);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1732: FILE: arch/i386/paravirt-xen/events.c:407:
+	unsigned tcpu = first_cpu(dest);
+	rebind_irq_to_cpu(irq, tcpu);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1803: FILE: arch/i386/paravirt-xen/events.h:1:
+#ifndef _XEN_EVENTS_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1829: FILE: arch/i386/paravirt-xen/events.h:27:
+extern void notify_remote_via_irq(int irq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1835: FILE: arch/i386/paravirt-xen/features.c:1:
+/******************************************************************************

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1860: FILE: arch/i386/paravirt-xen/features.c:26:
+		for (j=0; j<32; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1860: FILE: arch/i386/paravirt-xen/features.c:26:
+		for (j=0; j<32; j++)
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1861: FILE: arch/i386/paravirt-xen/features.c:27:
+			xen_features[i*32+j] = !!(fi.submap & 1<<j);
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1861: FILE: arch/i386/paravirt-xen/features.c:27:
+			xen_features[i*32+j] = !!(fi.submap & 1<<j);
 			                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1861: FILE: arch/i386/paravirt-xen/features.c:27:
+			xen_features[i*32+j] = !!(fi.submap & 1<<j);
 			                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1868: FILE: arch/i386/paravirt-xen/memory.c:1:
+#include <asm/desc.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1871: FILE: arch/i386/paravirt-xen/memory.c:4:
+#include <asm/pgtable.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1878: FILE: arch/i386/paravirt-xen/memory.c:11:
+	unsigned offset = address & PAGE_MASK;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1880: FILE: arch/i386/paravirt-xen/memory.c:13:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#1880: FILE: arch/i386/paravirt-xen/memory.c:13:
+	BUG_ON(pte == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1891: FILE: arch/i386/paravirt-xen/memory.c:24:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#1891: FILE: arch/i386/paravirt-xen/memory.c:24:
+	BUG_ON(pte == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#1898: FILE: arch/i386/paravirt-xen/memory.c:31:
+		if(HYPERVISOR_update_va_mapping(address, ptev, 0))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1899: FILE: arch/i386/paravirt-xen/memory.c:32:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1908: FILE: arch/i386/paravirt-xen/memory.c:41:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#1908: FILE: arch/i386/paravirt-xen/memory.c:41:
+	BUG_ON(pte == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#1915: FILE: arch/i386/paravirt-xen/memory.c:48:
+		if(HYPERVISOR_update_va_mapping(address, ptev, 0))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1916: FILE: arch/i386/paravirt-xen/memory.c:49:
+			BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1922: FILE: arch/i386/paravirt-xen/mmu.c:1:
+//#include <linux/bug.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bug.h> instead of <asm/bug.h>
#1923: FILE: arch/i386/paravirt-xen/mmu.c:2:
+#include <asm/bug.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1925: FILE: arch/i386/paravirt-xen/mmu.c:4:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#1927: FILE: arch/i386/paravirt-xen/mmu.c:6:
+#include <asm/mmu_context.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1938: FILE: arch/i386/paravirt-xen/mmu.c:17:
+#if 1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1944: FILE: arch/i386/paravirt-xen/mmu.c:23:
+		BUG();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1947: FILE: arch/i386/paravirt-xen/mmu.c:26:
+	smp_wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1959: FILE: arch/i386/paravirt-xen/mmu.c:38:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1970: FILE: arch/i386/paravirt-xen/mmu.c:49:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1975: FILE: arch/i386/paravirt-xen/mmu.c:54:
+ * Associate a virtual page frame with a given physical page frame $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1977: FILE: arch/i386/paravirt-xen/mmu.c:56:
+ */ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1987: FILE: arch/i386/paravirt-xen/mmu.c:66:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1992: FILE: arch/i386/paravirt-xen/mmu.c:71:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1997: FILE: arch/i386/paravirt-xen/mmu.c:76:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2033: FILE: arch/i386/paravirt-xen/mmu.c:112:
+void fastcall xen_pte_clear(struct mm_struct *mm, u32 addr,pte_t *ptep)
                                                           ^

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2035: FILE: arch/i386/paravirt-xen/mmu.c:114:
+#if 1

WARNING:MEMORY_BARRIER: memory barrier without comment
#2037: FILE: arch/i386/paravirt-xen/mmu.c:116:
+	smp_wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2038: FILE: arch/i386/paravirt-xen/mmu.c:117:
+^Iptep->pte_high = 0;^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2064: FILE: arch/i386/paravirt-xen/mmu.c:143:
+	unsigned long long ret = pmd.pmd;
+	if (ret)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2072: FILE: arch/i386/paravirt-xen/mmu.c:151:
+	unsigned long long ret = pgd.pgd;
+	if (ret)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2125: FILE: arch/i386/paravirt-xen/mmu.c:204:
+	BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#2132: FILE: arch/i386/paravirt-xen/mmu.c:211:
+	unsigned long ret = pgd.pgd;
+	if (ret)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2147: FILE: arch/i386/paravirt-xen/mmu.c:226:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2165: FILE: arch/i386/paravirt-xen/mmu.c:244:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2173: FILE: arch/i386/paravirt-xen/mmu.c:252:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2193: FILE: arch/i386/paravirt-xen/mmu.c:272:
+			pgd_walk_set_prot(pud,flags);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2201: FILE: arch/i386/paravirt-xen/mmu.c:280:
+				pgd_walk_set_prot(pmd,flags);
 				                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2208: FILE: arch/i386/paravirt-xen/mmu.c:287:
+				/* This can get called before mem_map
+				   is set up, so we assume nothing is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2209: FILE: arch/i386/paravirt-xen/mmu.c:288:
+				   highmem at that point. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem_map"
#2210: FILE: arch/i386/paravirt-xen/mmu.c:289:
+				if (mem_map == NULL ||

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2212: FILE: arch/i386/paravirt-xen/mmu.c:291:
+					pte = pte_offset_kernel(pmd,0);
 					                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2213: FILE: arch/i386/paravirt-xen/mmu.c:292:
+					pgd_walk_set_prot(pte,flags);
 					                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2223: FILE: arch/i386/paravirt-xen/mmu.c:302:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2226: FILE: arch/i386/paravirt-xen/mmu.c:305:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2228: FILE: arch/i386/paravirt-xen/mmu.c:307:
+/* This is called just after a mm has been duplicated from its parent,
+   but it has not been used yet.  We need to make sure that its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2231: FILE: arch/i386/paravirt-xen/mmu.c:310:
+   with respect to any other pagetable. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2245: FILE: arch/i386/paravirt-xen/mmu.c:324:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2257: FILE: arch/i386/paravirt-xen/mmu.c:336:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2262: FILE: arch/i386/paravirt-xen/mmu.c:341:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2270: FILE: arch/i386/paravirt-xen/mmu.c:349:
+^Ixen_pgd_pin(mm->pgd);^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2290: FILE: arch/i386/paravirt-xen/mmu.c:369:
+		BUG_ON(atomic_read(&mm->mm_count) == 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2301: FILE: arch/i386/paravirt-xen/mmu.h:1:
+#ifndef _XEN_MMU_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#2326: FILE: arch/i386/paravirt-xen/mmu.h:26:
+fastcall unsigned long long xen_pmd_val(pmd_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#2327: FILE: arch/i386/paravirt-xen/mmu.h:27:
+fastcall unsigned long long xen_pgd_val(pgd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#2329: FILE: arch/i386/paravirt-xen/mmu.h:29:
+fastcall pte_t xen_make_pte(unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#2330: FILE: arch/i386/paravirt-xen/mmu.h:30:
+fastcall pmd_t xen_make_pmd(unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#2331: FILE: arch/i386/paravirt-xen/mmu.h:31:
+fastcall pgd_t xen_make_pgd(unsigned long long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2337: FILE: arch/i386/paravirt-xen/mmu.h:37:
+fastcall void xen_pte_clear(struct mm_struct *mm, u32 addr,pte_t *ptep);
                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2340: FILE: arch/i386/paravirt-xen/mmu.h:40:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t' should also have an identifier name
#2343: FILE: arch/i386/paravirt-xen/mmu.h:43:
+fastcall unsigned long xen_pmd_val(pmd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t' should also have an identifier name
#2344: FILE: arch/i386/paravirt-xen/mmu.h:44:
+fastcall unsigned long xen_pgd_val(pgd_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2346: FILE: arch/i386/paravirt-xen/mmu.h:46:
+fastcall pte_t xen_make_pte(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2347: FILE: arch/i386/paravirt-xen/mmu.h:47:
+fastcall pmd_t xen_make_pmd(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2348: FILE: arch/i386/paravirt-xen/mmu.h:48:
+fastcall pgd_t xen_make_pgd(unsigned long);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2356: FILE: arch/i386/paravirt-xen/multicalls.c:1:
+#include <linux/percpu.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2368: FILE: arch/i386/paravirt-xen/multicalls.c:13:
+	unsigned mcidx, argidx;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2378: FILE: arch/i386/paravirt-xen/multicalls.c:23:
+	if (b->mcidx) {
[...]
+	} else
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2382: FILE: arch/i386/paravirt-xen/multicalls.c:27:
+			BUG();

ERROR:SPACING: space required before the open parenthesis '('
#2383: FILE: arch/i386/paravirt-xen/multicalls.c:28:
+		for(i = 0; i < b->mcidx; i++)

CHECK:BRACES: Unbalanced braces around else statement
#2388: FILE: arch/i386/paravirt-xen/multicalls.c:33:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2389: FILE: arch/i386/paravirt-xen/multicalls.c:34:
+		BUG_ON(b->argidx != 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2400: FILE: arch/i386/paravirt-xen/multicalls.c:45:
+	unsigned argspace = (args + sizeof(u64) - 1) / sizeof(u64);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2402: FILE: arch/i386/paravirt-xen/multicalls.c:47:
+	BUG_ON(argspace > MC_ARGS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2407: FILE: arch/i386/paravirt-xen/multicalls.c:52:
+			BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2422: FILE: arch/i386/paravirt-xen/multicalls.h:1:
+#ifndef _XEN_MULTICALLS_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2426: FILE: arch/i386/paravirt-xen/multicalls.h:5:
+struct multicall_space
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2439: FILE: arch/i386/paravirt-xen/setup.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2457: FILE: arch/i386/paravirt-xen/setup.c:19:
+extern const char xen_failsafe_callback[];

WARNING:MISPLACED_INIT: __initdata should be placed after init_shared
#2459: FILE: arch/i386/paravirt-xen/setup.c:21:
+static __initdata struct shared_info init_shared;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2470: FILE: arch/i386/paravirt-xen/setup.c:32:
+EXPORT_SYMBOL(phys_to_machine_mapping);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:BRACES: braces {} should be used on all arms of this statement
#2490: FILE: arch/i386/paravirt-xen/setup.c:52:
+	if (need_resched())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2492: FILE: arch/i386/paravirt-xen/setup.c:54:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2517: FILE: arch/i386/paravirt-xen/setup.c:79:
+		printk(KERN_INFO "physdev_op failed %d\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2521: FILE: arch/i386/paravirt-xen/setup.c:83:
+		printk(KERN_INFO "ACPI in unprivileged domain disabled\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2528: FILE: arch/i386/paravirt-xen/setup.c:90:
+	       MAX_GUEST_CMDLINE > COMMAND_LINE_SIZE ?

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2539: FILE: arch/i386/paravirt-xen/time.c:1:
+#include <linux/kernel.h>

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2559: FILE: arch/i386/paravirt-xen/time.c:21:
+	permitted_clock_jitter = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2562: FILE: arch/i386/paravirt-xen/time.c:24:
+__setup("permitted_clock_jitter=", __permitted_clock_jitter);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2564: FILE: arch/i386/paravirt-xen/time.c:26:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2588: FILE: arch/i386/paravirt-xen/time.c:50:
+#define NS_PER_TICK (1000000000LL/HZ)
                                  ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#2604: FILE: arch/i386/paravirt-xen/time.c:66:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#2609: FILE: arch/i386/paravirt-xen/time.c:71:
+		rmb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2618: FILE: arch/i386/paravirt-xen/time.c:80:
+	unsigned dstversion;

WARNING:MEMORY_BARRIER: memory barrier without comment
#2624: FILE: arch/i386/paravirt-xen/time.c:86:
+	rmb();

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#2635: FILE: arch/i386/paravirt-xen/time.c:97:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#2644: FILE: arch/i386/paravirt-xen/time.c:106:
+#ifdef __i386__

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2645: FILE: arch/i386/paravirt-xen/time.c:107:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2654: FILE: arch/i386/paravirt-xen/time.c:116:
+		: "a" ((u32)delta), "1" ((u32)(delta >> 32)), "2" (mul_frac) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2656: FILE: arch/i386/paravirt-xen/time.c:118:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2658: FILE: arch/i386/paravirt-xen/time.c:120:
+		: "=a" (product) : "0" (delta), "d" ((u64)mul_frac) );

WARNING:LINE_SPACING: Missing a blank line after declarations
#2669: FILE: arch/i386/paravirt-xen/time.c:131:
+	u64 now, delta;
+	rdtscll(now);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2674: FILE: arch/i386/paravirt-xen/time.c:136:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2688: FILE: arch/i386/paravirt-xen/time.c:150:
+		delta = delta_cpu =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2691: FILE: arch/i386/paravirt-xen/time.c:153:
+			printk("tsc_timestamp=%llu system_timestamp=%llu tsc_to_nsec=%u tsc_shift=%d, version=%u, delta=%lld processed_system_time=%lld\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2717: FILE: arch/i386/paravirt-xen/time.c:179:
+	     unlikely(delta_cpu < -(s64)permitted_clock_jitter))
+	    && printk_ratelimit()) {

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#2717: FILE: arch/i386/paravirt-xen/time.c:179:
+	    && printk_ratelimit()) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2718: FILE: arch/i386/paravirt-xen/time.c:180:
+		printk("Timer ISR/%d: Time went backwards: "

WARNING:SPLIT_STRING: quoted string split across lines
#2719: FILE: arch/i386/paravirt-xen/time.c:181:
+		printk("Timer ISR/%d: Time went backwards: "
+		       "delta=%lld delta_cpu=%lld shadow=%lld "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#2720: FILE: arch/i386/paravirt-xen/time.c:182:
+		       "delta=%lld delta_cpu=%lld shadow=%lld "
+		       "off=%lld processed=%lld cpu_processed=%lld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2726: FILE: arch/i386/paravirt-xen/time.c:188:
+			printk(" %d: %lld\n", i,

ERROR:SPACING: space required before the open parenthesis '('
#2732: FILE: arch/i386/paravirt-xen/time.c:194:
+	while(delta > NS_PER_TICK) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stolen > 0'
#2744: FILE: arch/i386/paravirt-xen/time.c:206:
+	if ((stolen > 0) && (delta_cpu > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#2744: FILE: arch/i386/paravirt-xen/time.c:206:
+	if ((stolen > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'blocked > 0'
#2759: FILE: arch/i386/paravirt-xen/time.c:221:
+	if ((blocked > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#2759: FILE: arch/i386/paravirt-xen/time.c:221:
+	if ((blocked > 0) && (delta_cpu > 0)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#2796: FILE: arch/i386/paravirt-xen/time.c:258:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#2799: FILE: arch/i386/paravirt-xen/time.c:261:
+		rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#2830: FILE: arch/i386/paravirt-xen/time.c:292:
+	struct vcpu_time_info *info;
+	info = &HYPERVISOR_shared_info->vcpu_info[0].time;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2843: FILE: arch/i386/paravirt-xen/time.c:305:
+	.mult = 1<<XEN_SHIFT,		/* time directly in nanoseconds */
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2885: FILE: arch/i386/paravirt-xen/time.c:347:
+	printk(KERN_DEBUG "installing Xen timer for CPU 0\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2887: FILE: arch/i386/paravirt-xen/time.c:349:
+	bind_virq_to_irqhandler(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2904: FILE: arch/i386/paravirt-xen/time.c:366:
+	printk(KERN_INFO "Xen reported: %u.%03u MHz processor.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2933: FILE: arch/i386/paravirt-xen/time.c:395:
+			 * we just end up with a shorter timeout. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2935: FILE: arch/i386/paravirt-xen/time.c:397:
+		} else if (((unsigned long)delta >> (BITS_PER_LONG-3)) != 0) {
 		                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2937: FILE: arch/i386/paravirt-xen/time.c:399:
+			 * We indicate this to Xen by passing zero timeout. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2958: FILE: arch/i386/paravirt-xen/time.c:420:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2959: FILE: arch/i386/paravirt-xen/time.c:421:
+^I * See matching smp_mb in rcu_start_batch in rcupdate.c.  These mbs $

WARNING:MEMORY_BARRIER: memory barrier without comment
#2967: FILE: arch/i386/paravirt-xen/time.c:429:
+	smp_mb();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2970: FILE: arch/i386/paravirt-xen/time.c:432:
+	if (rcu_needs_cpu(cpu) || local_softirq_pending() ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2977: FILE: arch/i386/paravirt-xen/time.c:439:
+		BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2989: FILE: arch/i386/paravirt-xen/xen-head.S:1:
+/* Xen-specific pieces of head.S, intended to be included in the right

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2999: FILE: arch/i386/paravirt-xen/xen-head.S:11:
+^I$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#3011: FILE: arch/i386/paravirt-xen/xen-head.S:23:
+	ELFNOTE(Xen, XEN_ELFNOTE_FEATURES,       .asciz, "!writable_page_tables|pae_pgdir_above_4gb")

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3022: FILE: arch/i386/paravirt-xen/xen-ops.h:1:
+#ifndef XEN_OPS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3046: FILE: arch/i386/paravirt-xen/xen-page.h:1:
+#ifndef __XEN_PAGE_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#3051: FILE: arch/i386/paravirt-xen/xen-page.h:6:
+#include <asm/uaccess.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3057: FILE: arch/i386/paravirt-xen/xen-page.h:12:
+typedef struct xmaddr {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3062: FILE: arch/i386/paravirt-xen/xen-page.h:17:
+typedef struct xpaddr {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3067: FILE: arch/i386/paravirt-xen/xen-page.h:22:
+typedef struct xmaddr {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3072: FILE: arch/i386/paravirt-xen/xen-page.h:27:
+typedef struct xpaddr {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3082: FILE: arch/i386/paravirt-xen/xen-page.h:37:
+#define FOREIGN_FRAME_BIT	(1UL<<31)
                          	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3082: FILE: arch/i386/paravirt-xen/xen-page.h:37:
+#define FOREIGN_FRAME_BIT	(1UL<<31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3111: FILE: arch/i386/paravirt-xen/xen-page.h:66:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3129: FILE: arch/i386/paravirt-xen/xen-page.h:84:
+	unsigned offset = phys.paddr & ~PAGE_MASK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3130: FILE: arch/i386/paravirt-xen/xen-page.h:85:
+	unsigned offset = phys.paddr & ~PAGE_MASK;
+	return XMADDR(PFN_PHYS(pfn_to_mfn(PFN_DOWN(phys.paddr))) | offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3135: FILE: arch/i386/paravirt-xen/xen-page.h:90:
+	unsigned offset = machine.maddr & ~PAGE_MASK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3136: FILE: arch/i386/paravirt-xen/xen-page.h:91:
+	unsigned offset = machine.maddr & ~PAGE_MASK;
+	return XPADDR(PFN_PHYS(mfn_to_pfn(PFN_DOWN(machine.maddr))) | offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3163: FILE: arch/i386/paravirt-xen/xen-page.h:118:
+	unsigned long pfn = mfn_to_pfn(mfn);
+	if ((pfn < max_mapnr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pfn < max_mapnr'
#3163: FILE: arch/i386/paravirt-xen/xen-page.h:118:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_to_machine_mapping[pfn] != mfn'
#3163: FILE: arch/i386/paravirt-xen/xen-page.h:118:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3164: FILE: arch/i386/paravirt-xen/xen-page.h:119:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3165: FILE: arch/i386/paravirt-xen/xen-page.h:120:
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3173: FILE: arch/i386/paravirt-xen/xen-page.h:128:
+		BUG_ON(pfn != mfn && mfn != INVALID_P2M_ENTRY);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_pte' - possible side-effects?
#3185: FILE: arch/i386/paravirt-xen/xen-page.h:140:
+#define pte_mfn(_pte) (((_pte).pte_low >> PAGE_SHIFT) |\
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#3186: FILE: arch/i386/paravirt-xen/xen-page.h:141:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3186: FILE: arch/i386/paravirt-xen/xen-page.h:141:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3186: FILE: arch/i386/paravirt-xen/xen-page.h:141:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))
                                                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3204: FILE: arch/i386/paravirt-xen/xen-page.h:159:
+}
+#define pmd_val_ma(v) ((v).pmd)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3214: FILE: arch/i386/paravirt-xen/xen-page.h:169:
+#define __pte_ma(x)	((pte_t) { (x) } )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3248: FILE: include/asm-i386/hypercall.h:423:
+MULTI_stack_switch(struct multicall_entry *mcl, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i386_pda *' should also have an identifier name
#3283: FILE: include/asm-i386/paravirt.h:57:
+	void (*init_pda)(struct i386_pda *, int cpu);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3292: FILE: include/asm-i386/paravirt.h:206:
+/* Non-paravirtualized implementations of various operations for
+   back-ends which don't need their own version. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3292: FILE: include/asm-i386/paravirt.h:206:
+   back-ends which don't need their own version. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3372: FILE: include/xen/features.h:1:
+/******************************************************************************

ERROR:SPACING: space required before the open parenthesis '('
#3391: FILE: include/xen/features.h:20:
+	switch(flag) {

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.01826.commit.8eb96c5383d6678fc32b68de6cfd166ed3f4ca9c total: 50 errors, 206 warnings, 73 checks, 3122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.01826.commit.8eb96c5383d6678fc32b68de6cfd166ed3f4ca9c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
