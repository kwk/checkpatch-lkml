WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
- mmio instructions are intercepted as page faults, with no information about

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/kvm/x86_emulate.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#69: FILE: drivers/kvm/x86_emulate.c:23:
+#define DPRINTF(_f, _a ...) printf( _f , ## _a )
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#69: FILE: drivers/kvm/x86_emulate.c:23:
+#define DPRINTF(_f, _a ...) printf( _f , ## _a )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#69: FILE: drivers/kvm/x86_emulate.c:23:
+#define DPRINTF(_f, _a ...) printf( _f , ## _a )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#86: FILE: drivers/kvm/x86_emulate.c:40:
+#define ByteOp      (1<<0)	/* 8-bit operands. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <ByteOp>
#86: FILE: drivers/kvm/x86_emulate.c:40:
+#define ByteOp      (1<<0)	/* 8-bit operands. */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BIT_MACRO: Prefer using the BIT macro
#86: FILE: drivers/kvm/x86_emulate.c:40:
+#define ByteOp      (1<<0)	/* 8-bit operands. */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#88: FILE: drivers/kvm/x86_emulate.c:42:
+#define ImplicitOps (1<<1)	/* Implicit in opcode. No generic decode. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <ImplicitOps>
#88: FILE: drivers/kvm/x86_emulate.c:42:
+#define ImplicitOps (1<<1)	/* Implicit in opcode. No generic decode. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#88: FILE: drivers/kvm/x86_emulate.c:42:
+#define ImplicitOps (1<<1)	/* Implicit in opcode. No generic decode. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: drivers/kvm/x86_emulate.c:43:
+#define DstReg      (2<<1)	/* Register operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <DstReg>
#89: FILE: drivers/kvm/x86_emulate.c:43:
+#define DstReg      (2<<1)	/* Register operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: drivers/kvm/x86_emulate.c:44:
+#define DstMem      (3<<1)	/* Memory operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <DstMem>
#90: FILE: drivers/kvm/x86_emulate.c:44:
+#define DstMem      (3<<1)	/* Memory operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#91: FILE: drivers/kvm/x86_emulate.c:45:
+#define DstMask     (3<<1)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <DstMask>
#91: FILE: drivers/kvm/x86_emulate.c:45:
+#define DstMask     (3<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#93: FILE: drivers/kvm/x86_emulate.c:47:
+#define SrcNone     (0<<3)	/* No source operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcNone>
#93: FILE: drivers/kvm/x86_emulate.c:47:
+#define SrcNone     (0<<3)	/* No source operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#94: FILE: drivers/kvm/x86_emulate.c:48:
+#define SrcImplicit (0<<3)	/* Source operand is implicit in the opcode. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcImplicit>
#94: FILE: drivers/kvm/x86_emulate.c:48:
+#define SrcImplicit (0<<3)	/* Source operand is implicit in the opcode. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: drivers/kvm/x86_emulate.c:49:
+#define SrcReg      (1<<3)	/* Register operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcReg>
#95: FILE: drivers/kvm/x86_emulate.c:49:
+#define SrcReg      (1<<3)	/* Register operand. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: drivers/kvm/x86_emulate.c:49:
+#define SrcReg      (1<<3)	/* Register operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#96: FILE: drivers/kvm/x86_emulate.c:50:
+#define SrcMem      (2<<3)	/* Memory operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcMem>
#96: FILE: drivers/kvm/x86_emulate.c:50:
+#define SrcMem      (2<<3)	/* Memory operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#97: FILE: drivers/kvm/x86_emulate.c:51:
+#define SrcMem16    (3<<3)	/* Memory operand (16-bit). */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcMem16>
#97: FILE: drivers/kvm/x86_emulate.c:51:
+#define SrcMem16    (3<<3)	/* Memory operand (16-bit). */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#98: FILE: drivers/kvm/x86_emulate.c:52:
+#define SrcMem32    (4<<3)	/* Memory operand (32-bit). */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcMem32>
#98: FILE: drivers/kvm/x86_emulate.c:52:
+#define SrcMem32    (4<<3)	/* Memory operand (32-bit). */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#99: FILE: drivers/kvm/x86_emulate.c:53:
+#define SrcImm      (5<<3)	/* Immediate operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcImm>
#99: FILE: drivers/kvm/x86_emulate.c:53:
+#define SrcImm      (5<<3)	/* Immediate operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#100: FILE: drivers/kvm/x86_emulate.c:54:
+#define SrcImmByte  (6<<3)	/* 8-bit sign-extended immediate operand. */
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcImmByte>
#100: FILE: drivers/kvm/x86_emulate.c:54:
+#define SrcImmByte  (6<<3)	/* 8-bit sign-extended immediate operand. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#101: FILE: drivers/kvm/x86_emulate.c:55:
+#define SrcMask     (7<<3)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SrcMask>
#101: FILE: drivers/kvm/x86_emulate.c:55:
+#define SrcMask     (7<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#103: FILE: drivers/kvm/x86_emulate.c:57:
+#define ModRM       (1<<6)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#103: FILE: drivers/kvm/x86_emulate.c:57:
+#define ModRM       (1<<6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#103: FILE: drivers/kvm/x86_emulate.c:57:
+#define ModRM       (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#105: FILE: drivers/kvm/x86_emulate.c:59:
+#define Mov         (1<<7)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Mov>
#105: FILE: drivers/kvm/x86_emulate.c:59:
+#define Mov         (1<<7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#105: FILE: drivers/kvm/x86_emulate.c:59:
+#define Mov         (1<<7)

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#145: FILE: drivers/kvm/x86_emulate.c:99:
+	0, 0, 0, DstReg | SrcMem32 | ModRM | Mov /* movsxd (x86/64) */ ,
 	                                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#254: FILE: drivers/kvm/x86_emulate.c:208:
+#define EFLG_OF (1<<11)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#254: FILE: drivers/kvm/x86_emulate.c:208:
+#define EFLG_OF (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#255: FILE: drivers/kvm/x86_emulate.c:209:
+#define EFLG_DF (1<<10)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#255: FILE: drivers/kvm/x86_emulate.c:209:
+#define EFLG_DF (1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#256: FILE: drivers/kvm/x86_emulate.c:210:
+#define EFLG_SF (1<<7)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#256: FILE: drivers/kvm/x86_emulate.c:210:
+#define EFLG_SF (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#257: FILE: drivers/kvm/x86_emulate.c:211:
+#define EFLG_ZF (1<<6)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#257: FILE: drivers/kvm/x86_emulate.c:211:
+#define EFLG_ZF (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#258: FILE: drivers/kvm/x86_emulate.c:212:
+#define EFLG_AF (1<<4)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#258: FILE: drivers/kvm/x86_emulate.c:212:
+#define EFLG_AF (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#259: FILE: drivers/kvm/x86_emulate.c:213:
+#define EFLG_PF (1<<2)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#259: FILE: drivers/kvm/x86_emulate.c:213:
+#define EFLG_PF (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#260: FILE: drivers/kvm/x86_emulate.c:214:
+#define EFLG_CF (1<<0)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: drivers/kvm/x86_emulate.c:214:
+#define EFLG_CF (1<<0)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/kvm/x86_emulate.c:235:
+#define EFLAGS_MASK (EFLG_OF|EFLG_SF|EFLG_ZF|EFLG_AF|EFLG_PF|EFLG_CF)
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/kvm/x86_emulate.c:235:
+#define EFLAGS_MASK (EFLG_OF|EFLG_SF|EFLG_ZF|EFLG_AF|EFLG_PF|EFLG_CF)
                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/kvm/x86_emulate.c:235:
+#define EFLAGS_MASK (EFLG_OF|EFLG_SF|EFLG_ZF|EFLG_AF|EFLG_PF|EFLG_CF)
                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/kvm/x86_emulate.c:235:
+#define EFLAGS_MASK (EFLG_OF|EFLG_SF|EFLG_ZF|EFLG_AF|EFLG_PF|EFLG_CF)
                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#281: FILE: drivers/kvm/x86_emulate.c:235:
+#define EFLAGS_MASK (EFLG_OF|EFLG_SF|EFLG_ZF|EFLG_AF|EFLG_PF|EFLG_CF)
                                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_sav' - possible side-effects?
#284: FILE: drivers/kvm/x86_emulate.c:238:
+#define _PRE_EFLAGS(_sav, _msk, _tmp) \
+	/* EFLAGS = (_sav & _msk) | (EFLAGS & ~_msk); */	\
+	"push %"_sav"; "					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pushf; "						\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pop  %"_tmp"; "					\
+	"orl  %"_LO32 _tmp",("_STK"); "				\
+	"popf; "						\
+	/* _sav &= ~msk; */					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",%"_sav"; "

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_msk' - possible side-effects?
#284: FILE: drivers/kvm/x86_emulate.c:238:
+#define _PRE_EFLAGS(_sav, _msk, _tmp) \
+	/* EFLAGS = (_sav & _msk) | (EFLAGS & ~_msk); */	\
+	"push %"_sav"; "					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pushf; "						\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pop  %"_tmp"; "					\
+	"orl  %"_LO32 _tmp",("_STK"); "				\
+	"popf; "						\
+	/* _sav &= ~msk; */					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",%"_sav"; "

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_tmp' - possible side-effects?
#284: FILE: drivers/kvm/x86_emulate.c:238:
+#define _PRE_EFLAGS(_sav, _msk, _tmp) \
+	/* EFLAGS = (_sav & _msk) | (EFLAGS & ~_msk); */	\
+	"push %"_sav"; "					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pushf; "						\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",("_STK"); "				\
+	"pop  %"_tmp"; "					\
+	"orl  %"_LO32 _tmp",("_STK"); "				\
+	"popf; "						\
+	/* _sav &= ~msk; */					\
+	"movl %"_msk",%"_LO32 _tmp"; "				\
+	"notl %"_LO32 _tmp"; "					\
+	"andl %"_LO32 _tmp",%"_sav"; "

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#286: FILE: drivers/kvm/x86_emulate.c:240:
+	"push %"_sav"; "					\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#287: FILE: drivers/kvm/x86_emulate.c:241:
+	"movl %"_msk",%"_LO32 _tmp"; "				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#288: FILE: drivers/kvm/x86_emulate.c:242:
+	"andl %"_LO32 _tmp",("_STK"); "				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#290: FILE: drivers/kvm/x86_emulate.c:244:
+	"notl %"_LO32 _tmp"; "					\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#291: FILE: drivers/kvm/x86_emulate.c:245:
+	"andl %"_LO32 _tmp",("_STK"); "				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#292: FILE: drivers/kvm/x86_emulate.c:246:
+	"pop  %"_tmp"; "					\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#293: FILE: drivers/kvm/x86_emulate.c:247:
+	"orl  %"_LO32 _tmp",("_STK"); "				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#296: FILE: drivers/kvm/x86_emulate.c:250:
+	"movl %"_msk",%"_LO32 _tmp"; "				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#297: FILE: drivers/kvm/x86_emulate.c:251:
+	"notl %"_LO32 _tmp"; "					\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#298: FILE: drivers/kvm/x86_emulate.c:252:
+	"andl %"_LO32 _tmp",%"_sav"; "

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_tmp' - possible side-effects?
#301: FILE: drivers/kvm/x86_emulate.c:255:
+#define _POST_EFLAGS(_sav, _msk, _tmp) \
+	/* _sav |= EFLAGS & _msk; */		\
+	"pushf; "				\
+	"pop  %"_tmp"; "			\
+	"andl %"_msk",%"_LO32 _tmp"; "		\
+	"orl  %"_LO32 _tmp",%"_sav"; "

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#304: FILE: drivers/kvm/x86_emulate.c:258:
+	"pop  %"_tmp"; "			\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#305: FILE: drivers/kvm/x86_emulate.c:259:
+	"andl %"_msk",%"_LO32 _tmp"; "		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#306: FILE: drivers/kvm/x86_emulate.c:260:
+	"orl  %"_LO32 _tmp",%"_sav"; "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_op' - possible side-effects?
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do { 								    \
+		unsigned long _tmp;					    \
+									    \
+		switch ((_dst).bytes) {					    \
+		case 2:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"w %"_wx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),        \
+				  "=&r" (_tmp)				    \
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 4:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"l %"_lx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),	    \
+				  "=&r" (_tmp)				    \
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 8:							    \
+			__emulate_2op_8byte(_op, _src, _dst,		    \
+					    _eflags, _qx, _qy);		    \
+			break;						    \
+		}							    \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_src' - possible side-effects?
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do { 								    \
+		unsigned long _tmp;					    \
+									    \
+		switch ((_dst).bytes) {					    \
+		case 2:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"w %"_wx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),        \
+				  "=&r" (_tmp)				    \
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 4:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"l %"_lx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),	    \
+				  "=&r" (_tmp)				    \
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 8:							    \
+			__emulate_2op_8byte(_op, _src, _dst,		    \
+					    _eflags, _qx, _qy);		    \
+			break;						    \
+		}							    \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dst' - possible side-effects?
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do { 								    \
+		unsigned long _tmp;					    \
+									    \
+		switch ((_dst).bytes) {					    \
+		case 2:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"w %"_wx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),        \
+				  "=&r" (_tmp)				    \
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 4:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"l %"_lx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),	    \
+				  "=&r" (_tmp)				    \
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 8:							    \
+			__emulate_2op_8byte(_op, _src, _dst,		    \
+					    _eflags, _qx, _qy);		    \
+			break;						    \
+		}							    \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_eflags' - possible side-effects?
#309: FILE: drivers/kvm/x86_emulate.c:263:
+#define __emulate_2op_nobyte(_op,_src,_dst,_eflags,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do { 								    \
+		unsigned long _tmp;					    \
+									    \
+		switch ((_dst).bytes) {					    \
+		case 2:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"w %"_wx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),        \
+				  "=&r" (_tmp)				    \
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 4:							    \
+			__asm__ __volatile__ (				    \
+				_PRE_EFLAGS("0","4","2")		    \
+				_op"l %"_lx"3,%1; "			    \
+				_POST_EFLAGS("0","4","2")		    \
+				: "=m" (_eflags), "=m" ((_dst).val),	    \
+				  "=&r" (_tmp)				    \
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \
+			break;						    \
+		case 8:							    \
+			__emulate_2op_8byte(_op, _src, _dst,		    \
+					    _eflags, _qx, _qy);		    \
+			break;						    \
+		}							    \
+	} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: drivers/kvm/x86_emulate.c:264:
+^Ido { ^I^I^I^I^I^I^I^I    \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: drivers/kvm/x86_emulate.c:270:
+				_PRE_EFLAGS("0","4","2")		    \
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: drivers/kvm/x86_emulate.c:270:
+				_PRE_EFLAGS("0","4","2")		    \
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#317: FILE: drivers/kvm/x86_emulate.c:271:
+				_op"w %"_wx"3,%1; "			    \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/kvm/x86_emulate.c:272:
+				_POST_EFLAGS("0","4","2")		    \
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/kvm/x86_emulate.c:272:
+				_POST_EFLAGS("0","4","2")		    \
 				                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: drivers/kvm/x86_emulate.c:275:
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#321: FILE: drivers/kvm/x86_emulate.c:275:
+				: _wy ((_src).val), "i" (EFLAGS_MASK) );    \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: drivers/kvm/x86_emulate.c:279:
+				_PRE_EFLAGS("0","4","2")		    \
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: drivers/kvm/x86_emulate.c:279:
+				_PRE_EFLAGS("0","4","2")		    \
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#326: FILE: drivers/kvm/x86_emulate.c:280:
+				_op"l %"_lx"3,%1; "			    \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: drivers/kvm/x86_emulate.c:281:
+				_POST_EFLAGS("0","4","2")		    \
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: drivers/kvm/x86_emulate.c:281:
+				_POST_EFLAGS("0","4","2")		    \
 				                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: drivers/kvm/x86_emulate.c:284:
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#330: FILE: drivers/kvm/x86_emulate.c:284:
+				: _ly ((_src).val), "i" (EFLAGS_MASK) );    \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
                                                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_op' - possible side-effects?
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do {								     \
+		unsigned long _tmp;					     \
+		switch ( (_dst).bytes )					     \
+		{							     \
+		case 1:							     \
+			__asm__ __volatile__ (				     \
+				_PRE_EFLAGS("0","4","2")		     \
+				_op"b %"_bx"3,%1; "			     \
+				_POST_EFLAGS("0","4","2")		     \
+				: "=m" (_eflags), "=m" ((_dst).val),	     \
+				  "=&r" (_tmp)				     \
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \
+			break;						     \
+		default:						     \
+			__emulate_2op_nobyte(_op, _src, _dst, _eflags,	     \
+					     _wx, _wy, _lx, _ly, _qx, _qy);  \
+			break;						     \
+		}							     \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_src' - possible side-effects?
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do {								     \
+		unsigned long _tmp;					     \
+		switch ( (_dst).bytes )					     \
+		{							     \
+		case 1:							     \
+			__asm__ __volatile__ (				     \
+				_PRE_EFLAGS("0","4","2")		     \
+				_op"b %"_bx"3,%1; "			     \
+				_POST_EFLAGS("0","4","2")		     \
+				: "=m" (_eflags), "=m" ((_dst).val),	     \
+				  "=&r" (_tmp)				     \
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \
+			break;						     \
+		default:						     \
+			__emulate_2op_nobyte(_op, _src, _dst, _eflags,	     \
+					     _wx, _wy, _lx, _ly, _qx, _qy);  \
+			break;						     \
+		}							     \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dst' - possible side-effects?
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do {								     \
+		unsigned long _tmp;					     \
+		switch ( (_dst).bytes )					     \
+		{							     \
+		case 1:							     \
+			__asm__ __volatile__ (				     \
+				_PRE_EFLAGS("0","4","2")		     \
+				_op"b %"_bx"3,%1; "			     \
+				_POST_EFLAGS("0","4","2")		     \
+				: "=m" (_eflags), "=m" ((_dst).val),	     \
+				  "=&r" (_tmp)				     \
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \
+			break;						     \
+		default:						     \
+			__emulate_2op_nobyte(_op, _src, _dst, _eflags,	     \
+					     _wx, _wy, _lx, _ly, _qx, _qy);  \
+			break;						     \
+		}							     \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_eflags' - possible side-effects?
#339: FILE: drivers/kvm/x86_emulate.c:293:
+#define __emulate_2op(_op,_src,_dst,_eflags,_bx,_by,_wx,_wy,_lx,_ly,_qx,_qy) \
+	do {								     \
+		unsigned long _tmp;					     \
+		switch ( (_dst).bytes )					     \
+		{							     \
+		case 1:							     \
+			__asm__ __volatile__ (				     \
+				_PRE_EFLAGS("0","4","2")		     \
+				_op"b %"_bx"3,%1; "			     \
+				_POST_EFLAGS("0","4","2")		     \
+				: "=m" (_eflags), "=m" ((_dst).val),	     \
+				  "=&r" (_tmp)				     \
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \
+			break;						     \
+		default:						     \
+			__emulate_2op_nobyte(_op, _src, _dst, _eflags,	     \
+					     _wx, _wy, _lx, _ly, _qx, _qy);  \
+			break;						     \
+		}							     \
+	} while (0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#342: FILE: drivers/kvm/x86_emulate.c:296:
+		switch ( (_dst).bytes )					     \
+		{							     \

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#342: FILE: drivers/kvm/x86_emulate.c:296:
+		switch ( (_dst).bytes )					     \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#342: FILE: drivers/kvm/x86_emulate.c:296:
+		switch ( (_dst).bytes )					     \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/kvm/x86_emulate.c:300:
+				_PRE_EFLAGS("0","4","2")		     \
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/kvm/x86_emulate.c:300:
+				_PRE_EFLAGS("0","4","2")		     \
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#347: FILE: drivers/kvm/x86_emulate.c:301:
+				_op"b %"_bx"3,%1; "			     \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/kvm/x86_emulate.c:302:
+				_POST_EFLAGS("0","4","2")		     \
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/kvm/x86_emulate.c:302:
+				_POST_EFLAGS("0","4","2")		     \
 				                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: drivers/kvm/x86_emulate.c:305:
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#351: FILE: drivers/kvm/x86_emulate.c:305:
+				: _by ((_src).val), "i" (EFLAGS_MASK) );     \

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcB>
#361: FILE: drivers/kvm/x86_emulate.c:315:
+#define emulate_2op_SrcB(_op, _src, _dst, _eflags)                      \

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcV>
#366: FILE: drivers/kvm/x86_emulate.c:320:
+#define emulate_2op_SrcV(_op, _src, _dst, _eflags)                      \

CHECK:CAMELCASE: Avoid CamelCase: <emulate_2op_SrcV_nobyte>
#371: FILE: drivers/kvm/x86_emulate.c:325:
+#define emulate_2op_SrcV_nobyte(_op, _src, _dst, _eflags)               \

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_op' - possible side-effects?
#376: FILE: drivers/kvm/x86_emulate.c:330:
+#define emulate_1op(_op, _dst, _eflags)                                    \
+	do {								\
+		unsigned long _tmp;					\
+									\
+		switch ( (_dst).bytes )					\
+		{							\
+		case 1:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"b %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 2:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"w %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 4:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"l %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 8:							\
+			__emulate_1op_8byte(_op, _dst, _eflags);	\
+			break;						\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dst' - possible side-effects?
#376: FILE: drivers/kvm/x86_emulate.c:330:
+#define emulate_1op(_op, _dst, _eflags)                                    \
+	do {								\
+		unsigned long _tmp;					\
+									\
+		switch ( (_dst).bytes )					\
+		{							\
+		case 1:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"b %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 2:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"w %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 4:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"l %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 8:							\
+			__emulate_1op_8byte(_op, _dst, _eflags);	\
+			break;						\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_eflags' - possible side-effects?
#376: FILE: drivers/kvm/x86_emulate.c:330:
+#define emulate_1op(_op, _dst, _eflags)                                    \
+	do {								\
+		unsigned long _tmp;					\
+									\
+		switch ( (_dst).bytes )					\
+		{							\
+		case 1:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"b %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 2:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"w %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 4:							\
+			__asm__ __volatile__ (				\
+				_PRE_EFLAGS("0","3","2")		\
+				_op"l %1; "				\
+				_POST_EFLAGS("0","3","2")		\
+				: "=m" (_eflags), "=m" ((_dst).val),	\
+				  "=&r" (_tmp)				\
+				: "i" (EFLAGS_MASK) );			\
+			break;						\
+		case 8:							\
+			__emulate_1op_8byte(_op, _dst, _eflags);	\
+			break;						\
+		}							\
+	} while (0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#380: FILE: drivers/kvm/x86_emulate.c:334:
+		switch ( (_dst).bytes )					\
+		{							\

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: drivers/kvm/x86_emulate.c:334:
+		switch ( (_dst).bytes )					\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: drivers/kvm/x86_emulate.c:334:
+		switch ( (_dst).bytes )					\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: drivers/kvm/x86_emulate.c:338:
+				_PRE_EFLAGS("0","3","2")		\
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: drivers/kvm/x86_emulate.c:338:
+				_PRE_EFLAGS("0","3","2")		\
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#385: FILE: drivers/kvm/x86_emulate.c:339:
+				_op"b %1; "				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: drivers/kvm/x86_emulate.c:340:
+				_POST_EFLAGS("0","3","2")		\
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: drivers/kvm/x86_emulate.c:340:
+				_POST_EFLAGS("0","3","2")		\
 				                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#389: FILE: drivers/kvm/x86_emulate.c:343:
+				: "i" (EFLAGS_MASK) );			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: drivers/kvm/x86_emulate.c:347:
+				_PRE_EFLAGS("0","3","2")		\
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: drivers/kvm/x86_emulate.c:347:
+				_PRE_EFLAGS("0","3","2")		\
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#394: FILE: drivers/kvm/x86_emulate.c:348:
+				_op"w %1; "				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: drivers/kvm/x86_emulate.c:349:
+				_POST_EFLAGS("0","3","2")		\
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: drivers/kvm/x86_emulate.c:349:
+				_POST_EFLAGS("0","3","2")		\
 				                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#398: FILE: drivers/kvm/x86_emulate.c:352:
+				: "i" (EFLAGS_MASK) );			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: drivers/kvm/x86_emulate.c:356:
+				_PRE_EFLAGS("0","3","2")		\
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: drivers/kvm/x86_emulate.c:356:
+				_PRE_EFLAGS("0","3","2")		\
 				                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#403: FILE: drivers/kvm/x86_emulate.c:357:
+				_op"l %1; "				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: drivers/kvm/x86_emulate.c:358:
+				_POST_EFLAGS("0","3","2")		\
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: drivers/kvm/x86_emulate.c:358:
+				_POST_EFLAGS("0","3","2")		\
 				                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#407: FILE: drivers/kvm/x86_emulate.c:361:
+				: "i" (EFLAGS_MASK) );			\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#417: FILE: drivers/kvm/x86_emulate.c:371:
+#define __emulate_2op_8byte(_op, _src, _dst, _eflags, _qx, _qy)           \
+	do {								  \
+		__asm__ __volatile__ (					  \
+			_PRE_EFLAGS("0","4","2")			  \
+			_op"q %"_qx"3,%1; "				  \
+			_POST_EFLAGS("0","4","2")			  \
+			: "=m" (_eflags), "=m" ((_dst).val), "=&r" (_tmp) \
+			: _qy ((_src).val), "i" (EFLAGS_MASK) );	  \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#420: FILE: drivers/kvm/x86_emulate.c:374:
+			_PRE_EFLAGS("0","4","2")			  \
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#420: FILE: drivers/kvm/x86_emulate.c:374:
+			_PRE_EFLAGS("0","4","2")			  \
 			                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#421: FILE: drivers/kvm/x86_emulate.c:375:
+			_op"q %"_qx"3,%1; "				  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#422: FILE: drivers/kvm/x86_emulate.c:376:
+			_POST_EFLAGS("0","4","2")			  \
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#422: FILE: drivers/kvm/x86_emulate.c:376:
+			_POST_EFLAGS("0","4","2")			  \
 			                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: drivers/kvm/x86_emulate.c:378:
+			: _qy ((_src).val), "i" (EFLAGS_MASK) );	  \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#424: FILE: drivers/kvm/x86_emulate.c:378:
+			: _qy ((_src).val), "i" (EFLAGS_MASK) );	  \

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#427: FILE: drivers/kvm/x86_emulate.c:381:
+#define __emulate_1op_8byte(_op, _dst, _eflags)                           \
+	do {								  \
+		__asm__ __volatile__ (					  \
+			_PRE_EFLAGS("0","3","2")			  \
+			_op"q %1; "					  \
+			_POST_EFLAGS("0","3","2")			  \
+			: "=m" (_eflags), "=m" ((_dst).val), "=&r" (_tmp) \
+			: "i" (EFLAGS_MASK) );				  \
+	} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: drivers/kvm/x86_emulate.c:384:
+			_PRE_EFLAGS("0","3","2")			  \
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: drivers/kvm/x86_emulate.c:384:
+			_PRE_EFLAGS("0","3","2")			  \
 			                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#431: FILE: drivers/kvm/x86_emulate.c:385:
+			_op"q %1; "					  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#432: FILE: drivers/kvm/x86_emulate.c:386:
+			_POST_EFLAGS("0","3","2")			  \
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#432: FILE: drivers/kvm/x86_emulate.c:386:
+			_POST_EFLAGS("0","3","2")			  \
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#434: FILE: drivers/kvm/x86_emulate.c:388:
+			: "i" (EFLAGS_MASK) );				  \

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_size' - possible side-effects?
#443: FILE: drivers/kvm/x86_emulate.c:397:
+#define insn_fetch(_type, _size, _eip)                                  \
+({	unsigned long _x;						\
+	rc = ops->read_std((unsigned long)(_eip) + ctxt->cs_base, &_x,	\
+                                                  (_size), ctxt);       \
+	if ( rc != 0 )							\
+		goto done;						\
+	(_eip) += (_size);						\
+	(_type)_x;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_eip' - possible side-effects?
#443: FILE: drivers/kvm/x86_emulate.c:397:
+#define insn_fetch(_type, _size, _eip)                                  \
+({	unsigned long _x;						\
+	rc = ops->read_std((unsigned long)(_eip) + ctxt->cs_base, &_x,	\
+                                                  (_size), ctxt);       \
+	if ( rc != 0 )							\
+		goto done;						\
+	(_eip) += (_size);						\
+	(_type)_x;							\
+})

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#443: FILE: drivers/kvm/x86_emulate.c:397:
+#define insn_fetch(_type, _size, _eip)                                  \
+({	unsigned long _x;						\
+	rc = ops->read_std((unsigned long)(_eip) + ctxt->cs_base, &_x,	\
+                                                  (_size), ctxt);       \
+	if ( rc != 0 )							\
+		goto done;						\
+	(_eip) += (_size);						\
+	(_type)_x;							\
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: drivers/kvm/x86_emulate.c:400:
+                                                  (_size), ctxt);       \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/kvm/x86_emulate.c:400:
+                                                  (_size), ctxt);       \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#447: FILE: drivers/kvm/x86_emulate.c:401:
+	if ( rc != 0 )							\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#447: FILE: drivers/kvm/x86_emulate.c:401:
+	if ( rc != 0 )							\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#454: FILE: drivers/kvm/x86_emulate.c:408:
+#define register_address(base, reg)                                     \
+	((base) + ((ad_bytes == sizeof(unsigned long)) ? (reg) :	\
+		   ((reg) & ((1UL << (ad_bytes << 3)) - 1))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#458: FILE: drivers/kvm/x86_emulate.c:412:
+#define register_address_increment(reg, inc)                            \
+	do {								\
+		/* signed type ensures sign extension to long */        \
+		int _inc = (inc);					\
+		if ( ad_bytes == sizeof(unsigned long) )		\
+			(reg) += _inc;					\
+		else							\
+			(reg) = ((reg) & ~((1UL << (ad_bytes << 3)) - 1)) | \
+			   (((reg) + _inc) & ((1UL << (ad_bytes << 3)) - 1)); \
+	} while (0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#462: FILE: drivers/kvm/x86_emulate.c:416:
+		if ( ad_bytes == sizeof(unsigned long) )		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#462: FILE: drivers/kvm/x86_emulate.c:416:
+		if ( ad_bytes == sizeof(unsigned long) )		\

WARNING:SIZEOF_PARENTHESIS: sizeof _regs should be sizeof(_regs)
#516: FILE: drivers/kvm/x86_emulate.c:470:
+	memcpy(_regs, ctxt->vcpu->regs, sizeof _regs);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#521: FILE: drivers/kvm/x86_emulate.c:475:
+		op_bytes = ad_bytes = 2;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#524: FILE: drivers/kvm/x86_emulate.c:478:
+		op_bytes = ad_bytes = 4;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == X86EMUL_MODE_PROT64'
#582: FILE: drivers/kvm/x86_emulate.c:536:
+	if ((mode == X86EMUL_MODE_PROT64) && ((b & 0xf0) == 0x40)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#588: FILE: drivers/kvm/x86_emulate.c:542:
+		modrm_rm = base_reg = (b & 1) << 3; /* REG.B */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#623: FILE: drivers/kvm/x86_emulate.c:577:
+			unsigned bx = _regs[VCPU_REGS_RBX];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#624: FILE: drivers/kvm/x86_emulate.c:578:
+			unsigned bp = _regs[VCPU_REGS_RBP];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#625: FILE: drivers/kvm/x86_emulate.c:579:
+			unsigned si = _regs[VCPU_REGS_RSI];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#626: FILE: drivers/kvm/x86_emulate.c:580:
+			unsigned di = _regs[VCPU_REGS_RDI];

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#699: FILE: drivers/kvm/x86_emulate.c:653:
+
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#753: FILE: drivers/kvm/x86_emulate.c:707:
+	modrm_done:

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#765: FILE: drivers/kvm/x86_emulate.c:719:
+		if ((d & ByteOp)
+		    && !(twobyte_table && (b == 0xb6 || b == 0xb7))) {

CHECK:SPACING: No space is necessary after a cast
#768: FILE: drivers/kvm/x86_emulate.c:722:
+			dst.val = *(u8 *) dst.ptr;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#789: FILE: drivers/kvm/x86_emulate.c:743:
+		if (!(d & Mov) && /* optimisation - avoid slow emulated read */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#809: FILE: drivers/kvm/x86_emulate.c:763:
+			src.val = src.orig_val = *(u8 *) src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#809: FILE: drivers/kvm/x86_emulate.c:763:
+			src.val = src.orig_val = *(u8 *) src.ptr;

CHECK:SPACING: No space is necessary after a cast
#815: FILE: drivers/kvm/x86_emulate.c:769:
+				src.val = src.orig_val = *(u16 *) src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#815: FILE: drivers/kvm/x86_emulate.c:769:
+				src.val = src.orig_val = *(u16 *) src.ptr;

CHECK:SPACING: No space is necessary after a cast
#818: FILE: drivers/kvm/x86_emulate.c:772:
+				src.val = src.orig_val = *(u32 *) src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#818: FILE: drivers/kvm/x86_emulate.c:772:
+				src.val = src.orig_val = *(u32 *) src.ptr;

CHECK:SPACING: No space is necessary after a cast
#821: FILE: drivers/kvm/x86_emulate.c:775:
+				src.val = src.orig_val = *(u64 *) src.ptr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#821: FILE: drivers/kvm/x86_emulate.c:775:
+				src.val = src.orig_val = *(u64 *) src.ptr;

WARNING:INDENTED_LABEL: labels should not be indented
#834: FILE: drivers/kvm/x86_emulate.c:788:
+	      srcmem_common:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#837: FILE: drivers/kvm/x86_emulate.c:791:
+		if ((rc = ops->read_emulated((unsigned long)src.ptr,

WARNING:INDENTED_LABEL: labels should not be indented
#874: FILE: drivers/kvm/x86_emulate.c:828:
+	      add:		/* add */

WARNING:INDENTED_LABEL: labels should not be indented
#878: FILE: drivers/kvm/x86_emulate.c:832:
+	      or:		/* or */

WARNING:INDENTED_LABEL: labels should not be indented
#882: FILE: drivers/kvm/x86_emulate.c:836:
+	      adc:		/* adc */

WARNING:INDENTED_LABEL: labels should not be indented
#886: FILE: drivers/kvm/x86_emulate.c:840:
+	      sbb:		/* sbb */

WARNING:INDENTED_LABEL: labels should not be indented
#890: FILE: drivers/kvm/x86_emulate.c:844:
+	      and:		/* and */

WARNING:INDENTED_LABEL: labels should not be indented
#894: FILE: drivers/kvm/x86_emulate.c:848:
+	      sub:		/* sub */

WARNING:INDENTED_LABEL: labels should not be indented
#898: FILE: drivers/kvm/x86_emulate.c:852:
+	      xor:		/* xor */

WARNING:INDENTED_LABEL: labels should not be indented
#902: FILE: drivers/kvm/x86_emulate.c:856:
+	      cmp:		/* cmp */

CHECK:SPACING: No space is necessary after a cast
#908: FILE: drivers/kvm/x86_emulate.c:862:
+		dst.val = (s32) src.val;

WARNING:INDENTED_LABEL: labels should not be indented
#931: FILE: drivers/kvm/x86_emulate.c:885:
+	      test:		/* test */

CHECK:SPACING: No space is necessary after a cast
#938: FILE: drivers/kvm/x86_emulate.c:892:
+			*(u8 *) src.ptr = (u8) dst.val;

CHECK:SPACING: No space is necessary after a cast
#941: FILE: drivers/kvm/x86_emulate.c:895:
+			*(u16 *) src.ptr = (u16) dst.val;

CHECK:SPACING: No space is necessary after a cast
#944: FILE: drivers/kvm/x86_emulate.c:898:
+			*src.ptr = (u32) dst.val;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#974: FILE: drivers/kvm/x86_emulate.c:928:
+		if ((rc = ops->read_std(register_address(ctxt->ss_base,

WARNING:INDENTED_LABEL: labels should not be indented
#981: FILE: drivers/kvm/x86_emulate.c:935:
+	      grp2:		/* Grp2 */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1059: FILE: drivers/kvm/x86_emulate.c:1013:
+				if ((rc = ops->read_std((unsigned long)dst.ptr,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1066: FILE: drivers/kvm/x86_emulate.c:1020:
+			if ((rc = ops->write_std(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1066: FILE: drivers/kvm/x86_emulate.c:1020:
+			if ((rc = ops->write_std(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dst.orig_val != dst.val'
#1080: FILE: drivers/kvm/x86_emulate.c:1034:
+	if ((d & Mov) || (dst.orig_val != dst.val)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dst.ptr'
#1102: FILE: drivers/kvm/x86_emulate.c:1056:
+				rc = ops->cmpxchg_emulated((unsigned long)dst.
+							   ptr, dst.orig_val,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SIZEOF_PARENTHESIS: sizeof _regs should be sizeof(_regs)
#1117: FILE: drivers/kvm/x86_emulate.c:1071:
+	memcpy(ctxt->vcpu->regs, _regs, sizeof _regs);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1141: FILE: drivers/kvm/x86_emulate.c:1095:
+		if ((rc = ops->read_emulated(register_address(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1141: FILE: drivers/kvm/x86_emulate.c:1095:
+		if ((rc = ops->read_emulated(register_address(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: drivers/kvm/x86_emulate.c:1100:
+		register_address_increment(_regs[VCPU_REGS_RSI],
+			     (_eflags & EFLG_DF) ? -dst.bytes : dst.bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1148: FILE: drivers/kvm/x86_emulate.c:1102:
+		register_address_increment(_regs[VCPU_REGS_RDI],
+			     (_eflags & EFLG_DF) ? -dst.bytes : dst.bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: drivers/kvm/x86_emulate.c:1113:
+		register_address_increment(_regs[VCPU_REGS_RDI],
+			     (_eflags & EFLG_DF) ? -dst.bytes : dst.bytes);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1165: FILE: drivers/kvm/x86_emulate.c:1119:
+		if ((rc = ops->read_emulated(cr2, &dst.val, dst.bytes, ctxt)) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1168: FILE: drivers/kvm/x86_emulate.c:1122:
+		register_address_increment(_regs[VCPU_REGS_RSI],
+			   (_eflags & EFLG_DF) ? -dst.bytes : dst.bytes);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1205: FILE: drivers/kvm/x86_emulate.c:1159:
+		dst.val = dst.orig_val = src.val;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1232: FILE: drivers/kvm/x86_emulate.c:1186:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:INDENTED_LABEL: labels should not be indented
#1261: FILE: drivers/kvm/x86_emulate.c:1215:
+	      bt:		/* bt */

WARNING:INDENTED_LABEL: labels should not be indented
#1266: FILE: drivers/kvm/x86_emulate.c:1220:
+	      btr:		/* btr */

WARNING:INDENTED_LABEL: labels should not be indented
#1271: FILE: drivers/kvm/x86_emulate.c:1225:
+	      bts:		/* bts */

CHECK:SPACING: No space is necessary after a cast
#1277: FILE: drivers/kvm/x86_emulate.c:1231:
+		dst.val = (d & ByteOp) ? (u8) src.val : (u16) src.val;

WARNING:INDENTED_LABEL: labels should not be indented
#1280: FILE: drivers/kvm/x86_emulate.c:1234:
+	      btc:		/* btc */

CHECK:SPACING: No space is necessary after a cast
#1298: FILE: drivers/kvm/x86_emulate.c:1252:
+		dst.val = (d & ByteOp) ? (s8) src.val : (s16) src.val;

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1324: FILE: drivers/kvm/x86_emulate.c:1278:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1327: FILE: drivers/kvm/x86_emulate.c:1281:
+			unsigned long old_lo, old_hi;
+			if (((rc = ops->read_emulated(cr2 + 0, &old_lo, 4,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1327: FILE: drivers/kvm/x86_emulate.c:1281:
+			if (((rc = ops->read_emulated(cr2 + 0, &old_lo, 4,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1329: FILE: drivers/kvm/x86_emulate.c:1283:
+						      ctxt)) != 0)
+			    || ((rc = ops->read_emulated(cr2 + 4, &old_hi, 4,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_lo != _regs[VCPU_REGS_RAX]'
#1332: FILE: drivers/kvm/x86_emulate.c:1286:
+			if ((old_lo != _regs[VCPU_REGS_RAX])
+			    || (old_hi != _regs[VCPU_REGS_RDI])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_hi != _regs[VCPU_REGS_RDI]'
#1332: FILE: drivers/kvm/x86_emulate.c:1286:
+			if ((old_lo != _regs[VCPU_REGS_RAX])
+			    || (old_hi != _regs[VCPU_REGS_RDI])) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1333: FILE: drivers/kvm/x86_emulate.c:1287:
+			if ((old_lo != _regs[VCPU_REGS_RAX])
+			    || (old_hi != _regs[VCPU_REGS_RDI])) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ops->cmpxchg8b_emulated"
#1337: FILE: drivers/kvm/x86_emulate.c:1291:
+			} else if (ops->cmpxchg8b_emulated == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1341: FILE: drivers/kvm/x86_emulate.c:1295:
+				if ((rc = ops->cmpxchg8b_emulated(cr2, old_lo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/kvm/x86_emulate.c:1296:
+				if ((rc = ops->cmpxchg8b_emulated(cr2, old_lo,
+							  old_hi,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1354: FILE: drivers/kvm/x86_emulate.c:1308:
+			unsigned long old, new;
+			if ((rc = ops->read_emulated(cr2, &old, 8, ctxt)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1354: FILE: drivers/kvm/x86_emulate.c:1308:
+			if ((rc = ops->read_emulated(cr2, &old, 8, ctxt)) != 0)

CHECK:SPACING: No space is necessary after a cast
#1356: FILE: drivers/kvm/x86_emulate.c:1310:
+			if (((u32) (old >> 0) != (u32) _regs[VCPU_REGS_RAX]) ||

CHECK:SPACING: No space is necessary after a cast
#1357: FILE: drivers/kvm/x86_emulate.c:1311:
+			    ((u32) (old >> 32) != (u32) _regs[VCPU_REGS_RDX])) {

CHECK:SPACING: No space is necessary after a cast
#1358: FILE: drivers/kvm/x86_emulate.c:1312:
+				_regs[VCPU_REGS_RAX] = (u32) (old >> 0);

CHECK:SPACING: No space is necessary after a cast
#1359: FILE: drivers/kvm/x86_emulate.c:1313:
+				_regs[VCPU_REGS_RDX] = (u32) (old >> 32);

CHECK:SPACING: No space is necessary after a cast
#1362: FILE: drivers/kvm/x86_emulate.c:1316:
+				new = (_regs[VCPU_REGS_RCX] << 32) | (u32) _regs[VCPU_REGS_RBX];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1363: FILE: drivers/kvm/x86_emulate.c:1317:
+				if ((rc = ops->cmpxchg_emulated(cr2, old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1364: FILE: drivers/kvm/x86_emulate.c:1318:
+				if ((rc = ops->cmpxchg_emulated(cr2, old,
+							  new, 8, ctxt)) != 0)

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1382: FILE: drivers/kvm/x86_emulate.c:1336:
+#include <asm/uaccess.h>

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1393: FILE: drivers/kvm/x86_emulate.c:1347:
+	if ((rc = copy_from_user((void *)val, (void *)addr, bytes)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1408: FILE: drivers/kvm/x86_emulate.c:1362:
+	if ((rc = copy_to_user((void *)addr, (void *)&val, bytes)) != 0) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1422: FILE: drivers/kvm/x86_emulate.h:1:
+/******************************************************************************

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1485: FILE: drivers/kvm/x86_emulate.h:64:
+			unsigned int bytes, struct x86_emulate_ctxt * ctxt);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1497: FILE: drivers/kvm/x86_emulate.h:76:
+			 unsigned int bytes, struct x86_emulate_ctxt * ctxt);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1505: FILE: drivers/kvm/x86_emulate.h:84:
+	int (*read_emulated) (unsigned long addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1508: FILE: drivers/kvm/x86_emulate.h:87:
+			      struct x86_emulate_ctxt * ctxt);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1517: FILE: drivers/kvm/x86_emulate.h:96:
+	int (*write_emulated) (unsigned long addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1520: FILE: drivers/kvm/x86_emulate.h:99:
+			       struct x86_emulate_ctxt * ctxt);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1530: FILE: drivers/kvm/x86_emulate.h:109:
+	int (*cmpxchg_emulated) (unsigned long addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1534: FILE: drivers/kvm/x86_emulate.h:113:
+				 struct x86_emulate_ctxt * ctxt);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1548: FILE: drivers/kvm/x86_emulate.h:127:
+	int (*cmpxchg8b_emulated) (unsigned long addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1553: FILE: drivers/kvm/x86_emulate.h:132:
+				   struct x86_emulate_ctxt * ctxt);

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1584: FILE: drivers/kvm/x86_emulate.h:163:
+#if defined(__i386__)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.21260.commit.dc86708cefbb6d1fda2abadc6bc8d9f0779cb50e total: 94 errors, 43 warnings, 142 checks, 1555 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.21260.commit.dc86708cefbb6d1fda2abadc6bc8d9f0779cb50e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
