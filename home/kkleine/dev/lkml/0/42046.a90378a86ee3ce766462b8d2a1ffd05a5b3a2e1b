WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#28: 
Chanelogs: (upto 20060814)
            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'semaphones' may be misspelled - perhaps 'semaphores'?
#34: 
	5. replace two semaphones with mutex.
	               ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
PS: I have not Subscribe linux-usb-devel maillist, please CC me your reply, thanks. 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#91: FILE: drivers/usb/input/hid-core.c:807:
+			if (hid->simple->pre_event &&
[...]
+			return;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: drivers/usb/input/hid-core.c:808:
+^I^I^I^I!hid->simple->pre_event(hid, field, usage, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/usb/input/hid-core.c:808:
+			if (hid->simple->pre_event &&
+				!hid->simple->pre_event(hid, field, usage, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/usb/input/hid-core.c:2012:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/usb/input/hid-core.c:2066:
+static int hidinput_simple_driver_bind_one(struct hidinput_simple_driver *simple,
+							struct hid_device *hid,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: drivers/usb/input/hid-core.c:2080:
+	printk(KERN_INFO"The simple HID driver \'%s\' attach on\'%s\'\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#181: FILE: drivers/usb/input/hid-core.c:2080:
+	printk(KERN_INFO"The simple HID driver \'%s\' attach on\'%s\'\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/usb/input/hid-core.c:2081:
+	printk(KERN_INFO"The simple HID driver \'%s\' attach on\'%s\'\n",
+						simple->name, hid->name);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: drivers/usb/input/hid-core.c:2092:
+	struct matched_device *matched=NULL;
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: drivers/usb/input/hid-core.c:2095:
+	struct hid_device *hid=NULL;
 	                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#219: FILE: drivers/usb/input/hid-core.c:2118:
+static void hidinput_simple_driver_bind_foreach_simple(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/usb/input/hid-core.c:2124:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: drivers/usb/input/hid-core.c:2127:
+	hid = usb_get_intfdata (matched->intf);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#245: FILE: drivers/usb/input/hid-core.c:2144:
+static void hidinput_simple_driver_bind_foreach_matched(

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: drivers/usb/input/hid-core.c:2147:
+	struct list_head *node=NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: drivers/usb/input/hid-core.c:2149:
+	struct hid_device *hid=NULL;
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: drivers/usb/input/hid-core.c:2157:
+		hid = usb_get_intfdata (matched->intf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/usb/input/hid-core.c:2172:
+^Iprintk(KERN_INFO"The simple HID driver \'%s\' register.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#273: FILE: drivers/usb/input/hid-core.c:2172:
+	printk(KERN_INFO"The simple HID driver \'%s\' register.\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#273: FILE: drivers/usb/input/hid-core.c:2172:
+	printk(KERN_INFO"The simple HID driver \'%s\' register.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/usb/input/hid-core.c:2173:
+	printk(KERN_INFO"The simple HID driver \'%s\' register.\n", 
+								simple->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/usb/input/hid-core.c:2187:
+^Iprintk(KERN_INFO"The simple HID driver \'%s\' unregister.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#288: FILE: drivers/usb/input/hid-core.c:2187:
+	printk(KERN_INFO"The simple HID driver \'%s\' unregister.\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#288: FILE: drivers/usb/input/hid-core.c:2187:
+	printk(KERN_INFO"The simple HID driver \'%s\' unregister.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/usb/input/hid-core.c:2188:
+	printk(KERN_INFO"The simple HID driver \'%s\' unregister.\n", 
+							simple->name);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*matched)...) over kmalloc(sizeof(struct matched_device)...)
#321: FILE: drivers/usb/input/hid-core.c:2222:
+		matched = kmalloc(sizeof(struct matched_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#429: FILE: drivers/usb/input/hid-input.c:746:
+			if (!hid->simple->ff_event(dev, type, code, value));
+				return 0;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#429: FILE: drivers/usb/input/hid-input.c:746:
+			if (!hid->simple->ff_event(dev, type, code, value));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/usb/input/hid-input.c:873:
+#ifdef CONFIG_HID_SIMPLE_FF^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: drivers/usb/input/hid-input.c:929:
+static void inline hidinput_simple_configure_one_usage(int op, $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#533: FILE: drivers/usb/input/hid-input.c:929:
+static void inline hidinput_simple_configure_one_usage(int op, 

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/usb/input/hid-input.c:930:
+static void inline hidinput_simple_configure_one_usage(int op, 
+						struct input_dev *input,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/usb/input/hid-input.c:937:
+^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#543: FILE: drivers/usb/input/hid-input.c:939:
+	switch (usage_block->event) {
+		case EV_KEY:
[...]
+		case EV_REL:
[...]
+		case EV_ABS:
[...]
+		case EV_MSC:
[...]
+		case EV_SW:
[...]
+		case EV_LED:
[...]
+		case EV_SND:
[...]
+		case EV_FF:
[...]
+		case EV_FF_STATUS:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#586: FILE: drivers/usb/input/hid-input.c:982:
+	if (SET_BIT == op) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#594: FILE: drivers/usb/input/hid-input.c:990:
+	else if (CLR_BIT == op) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#594: FILE: drivers/usb/input/hid-input.c:990:
+	}
+	else if (CLR_BIT == op) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#604: FILE: drivers/usb/input/hid-input.c:1000:
+static do_usage_t hidinput_simple_driver_configure_usage_prep(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: drivers/usb/input/hid-input.c:1005:
+^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#617: FILE: drivers/usb/input/hid-input.c:1013:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#617: FILE: drivers/usb/input/hid-input.c:1013:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/usb/input/hid-input.c:1021:
+static void __hidinput_simple_driver_configure_usage(int op,
+						struct hid_field *field,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/usb/input/hid-input.c:1030:
+^I$

ERROR:SPACING: space required after that ';' (ctx:BxV)
#638: FILE: drivers/usb/input/hid-input.c:1034:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#638: FILE: drivers/usb/input/hid-input.c:1034:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/usb/input/hid-input.c:1041:
+^I^I^Ihidinput_simple_configure_one_usage(op, input, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: drivers/usb/input/hid-input.c:1042:
+			hidinput_simple_configure_one_usage(op, input, 
+						hid_usage, usage_block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#669: FILE: drivers/usb/input/hid-input.c:1065:
+		if (hid->collection[i].type == HID_COLLECTION_APPLICATION ||
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#669: FILE: drivers/usb/input/hid-input.c:1065:
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)
 			                       ^

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#683: FILE: drivers/usb/input/hid-input.c:1079:
+					__hidinput_simple_driver_configure_usage(op, report->field[i], report->field[i]->usage + j);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: drivers/usb/input/hid-input.c:1082:
+						do_usage(report->field[i],
+						report->field[i]->usage + j);

WARNING:RETURN_VOID: void function return statements are not generally useful
#691: FILE: drivers/usb/input/hid-input.c:1087:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#692: FILE: drivers/usb/input/hid-input.c:1088:
+}
+#undef SET_BIT

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/usb/input/hid-input.c:1091:
+int hidinput_simple_driver_push(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: drivers/usb/input/hid-input.c:1092:
+int hidinput_simple_driver_push(struct hid_device *hid, 
+					struct hidinput_simple_driver *simple,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/usb/input/hid-input.c:1096:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*raw_simple)...) over kmalloc(sizeof(struct raw_simple_device)...)
#701: FILE: drivers/usb/input/hid-input.c:1097:
+	raw_simple = kmalloc(sizeof(struct raw_simple_device), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: drivers/usb/input/hid-input.c:1108:
+void hidinput_simple_driver_pop(struct hid_device *hid,
+					struct matched_device *matched)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#715: FILE: drivers/usb/input/hid-input.c:1111:
+	struct raw_simple_device *raw_simple=NULL;
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#717: FILE: drivers/usb/input/hid-input.c:1113:
+	list_for_each (node, &hid->simple->raw_devices) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/usb/input/hid-input.c:1130:
+^I^Iraw_simple = list_entry(simple->raw_devices.next, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#736: FILE: drivers/usb/input/hid-input.c:1132:
+		hid = usb_get_intfdata (raw_simple->intf);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#739: FILE: drivers/usb/input/hid-input.c:1135:
+				BUG_ON(hid->simple != simple);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/usb/input/hid-input.c:1145:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/usb/input/hid-input.c:1146:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+						struct hid_device *hid)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#773: FILE: drivers/usb/input/hid-input.c:1169:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#789: FILE: drivers/usb/input/hid-input.c:1185:
+	return;
+}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#791: FILE: drivers/usb/input/hid-input.c:1187:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: drivers/usb/input/hid-input.c:1192:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#814: FILE: drivers/usb/input/hid-simple.h:1:
+#ifdef CONFIG_HID_SIMPLE

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: drivers/usb/input/hid-simple.h:4:
+ *^IFor use me , you must include hid.h in your source first. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: drivers/usb/input/hid-simple.h:29:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#843: FILE: drivers/usb/input/hid-simple.h:30:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, 
+				  not implement yet */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#843: FILE: drivers/usb/input/hid-simple.h:30:
+				  not implement yet */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: drivers/usb/input/hid-simple.h:62:
+^Iint (*connect)(struct hid_device *, struct hid_input *);^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#875: FILE: drivers/usb/input/hid-simple.h:62:
+	int (*connect)(struct hid_device *, struct hid_input *);	

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#875: FILE: drivers/usb/input/hid-simple.h:62:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#876: FILE: drivers/usb/input/hid-simple.h:63:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#876: FILE: drivers/usb/input/hid-simple.h:63:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#877: FILE: drivers/usb/input/hid-simple.h:64:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#877: FILE: drivers/usb/input/hid-simple.h:64:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#878: FILE: drivers/usb/input/hid-simple.h:65:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#878: FILE: drivers/usb/input/hid-simple.h:65:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#879: FILE: drivers/usb/input/hid-simple.h:66:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#879: FILE: drivers/usb/input/hid-simple.h:66:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#879: FILE: drivers/usb/input/hid-simple.h:66:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#879: FILE: drivers/usb/input/hid-simple.h:66:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: drivers/usb/input/hid-simple.h:67:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#882: FILE: drivers/usb/input/hid-simple.h:69:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#882: FILE: drivers/usb/input/hid-simple.h:69:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#882: FILE: drivers/usb/input/hid-simple.h:69:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#882: FILE: drivers/usb/input/hid-simple.h:69:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: drivers/usb/input/hid-simple.h:70:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32,

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: drivers/usb/input/hid-simple.h:75:
+        int (*upload_effect)(struct input_dev *dev, struct ff_effect *effect);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/usb/input/hid-simple.h:75:
+        int (*upload_effect)(struct input_dev *dev, struct ff_effect *effect);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: drivers/usb/input/hid-simple.h:76:
+        int (*erase_effect)(struct input_dev *dev, int effect_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/usb/input/hid-simple.h:76:
+        int (*erase_effect)(struct input_dev *dev, int effect_id);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#898: FILE: drivers/usb/input/hid-simple.h:85:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#901: FILE: drivers/usb/input/hid-simple.h:88:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: drivers/usb/input/hid-simple.h:94:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/usb/input/hid-simple.h:95:
+ *  matched_device record one device which hid-subsystem handle, it may $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: drivers/usb/input/hid-simple.h:98:
+ *  The element of matched_device list is inserted at hidinput_connect(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: drivers/usb/input/hid-simple.h:100:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: drivers/usb/input/hid-simple.h:106:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: drivers/usb/input/hid-simple.h:109:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/usb/input/hid-simple.h:124:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: drivers/usb/input/hid-simple.h:125:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+							struct hid_device *hid);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#956: FILE: drivers/usb/input/hid-simple.h:143:
+static void inline hidinput_simple_driver_setup_usage(struct hid_device *hid)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#964: FILE: drivers/usb/input/hid-simple.h:151:
+static void inline hidinput_simple_driver_clear_usage(struct hid_device *hid)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42046.commit.a90378a86ee3ce766462b8d2a1ffd05a5b3a2e1b total: 45 errors, 39 warnings, 28 checks, 901 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42046.commit.a90378a86ee3ce766462b8d2a1ffd05a5b3a2e1b has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
