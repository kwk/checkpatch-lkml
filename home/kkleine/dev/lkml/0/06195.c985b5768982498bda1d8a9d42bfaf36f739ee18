WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#85: FILE: include/linux/wait.h:148:
+int FASTCALL(__wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#85: FILE: include/linux/wait.h:148:
+int FASTCALL(__wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#85: FILE: include/linux/wait.h:148:
+int FASTCALL(__wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: include/linux/wait.h:149:
+int FASTCALL(__wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *,
+	int (*)(void *, wait_queue_t *), unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#86: FILE: include/linux/wait.h:149:
+	int (*)(void *, wait_queue_t *), unsigned));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#87: FILE: include/linux/wait.h:150:
+int FASTCALL(__wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#87: FILE: include/linux/wait.h:150:
+int FASTCALL(__wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#87: FILE: include/linux/wait.h:150:
+int FASTCALL(__wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: include/linux/wait.h:151:
+int FASTCALL(__wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *,
+	int (*)(void *, wait_queue_t *), unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: include/linux/wait.h:151:
+	int (*)(void *, wait_queue_t *), unsigned));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#92: FILE: include/linux/wait.h:153:
+int FASTCALL(out_of_line_wait_on_bit(void *, int, int (*)(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#92: FILE: include/linux/wait.h:153:
+int FASTCALL(out_of_line_wait_on_bit(void *, int, int (*)(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#92: FILE: include/linux/wait.h:153:
+int FASTCALL(out_of_line_wait_on_bit(void *, int, int (*)(void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: include/linux/wait.h:154:
+int FASTCALL(out_of_line_wait_on_bit(void *, int, int (*)(void *,
+	wait_queue_t *), unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: include/linux/wait.h:154:
+	wait_queue_t *), unsigned));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#94: FILE: include/linux/wait.h:155:
+int FASTCALL(out_of_line_wait_on_bit_lock(void *, int, int (*)(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#94: FILE: include/linux/wait.h:155:
+int FASTCALL(out_of_line_wait_on_bit_lock(void *, int, int (*)(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#94: FILE: include/linux/wait.h:155:
+int FASTCALL(out_of_line_wait_on_bit_lock(void *, int, int (*)(void *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/wait.h:156:
+int FASTCALL(out_of_line_wait_on_bit_lock(void *, int, int (*)(void *,
+	wait_queue_t *), unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#95: FILE: include/linux/wait.h:156:
+	wait_queue_t *), unsigned));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: include/linux/wait.h:435:
+				unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#115: FILE: include/linux/wait.h:460:
+				unsigned mode)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#127: FILE: include/linux/writeback.h:69:
+int inode_wait(void *, wait_queue_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_t *' should also have an identifier name
#127: FILE: include/linux/writeback.h:69:
+int inode_wait(void *, wait_queue_t *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: kernel/wait.c:162:
+			int (*action)(void *, wait_queue_t *), unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#157: FILE: kernel/wait.c:178:
+					unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#166: FILE: kernel/wait.c:189:
+			int (*action)(void *, wait_queue_t *), unsigned mode)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#174: FILE: kernel/wait.c:196:
+			if ((ret = (*action)(q->key.flags, &q->wait)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: kernel/wait.c:207:
+				unsigned mode)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#253: FILE: net/sunrpc/sched.c:297:
+int __rpc_wait_for_completion_task(struct rpc_task *task, int (*action)(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: include/linux/sunrpc/sched.h:272:
+int		__rpc_wait_for_completion_task(struct rpc_task *task,
+				int (*)(void *, wait_queue_t *wait));

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06195.commit.c985b5768982498bda1d8a9d42bfaf36f739ee18 total: 1 errors, 24 warnings, 6 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06195.commit.c985b5768982498bda1d8a9d42bfaf36f739ee18 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
