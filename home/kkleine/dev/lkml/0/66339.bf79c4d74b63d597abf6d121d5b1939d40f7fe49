WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/char/eqnx/sst_tty.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: drivers/char/eqnx/sst_tty.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: drivers/char/eqnx/sst_tty.c:14:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: drivers/char/eqnx/sst_tty.c:19:
boards

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#105: FILE: drivers/char/eqnx/sst_tty.c:54:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: drivers/char/eqnx/sst_tty.c:62:
+/**********************************************************************
+/* module globals and defines

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: drivers/char/eqnx/sst_tty.c:63:
+/* module globals and defines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#118: FILE: drivers/char/eqnx/sst_tty.c:64:
+/**********************************************************************
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#120: FILE: drivers/char/eqnx/sst_tty.c:66:
+int eqnx_write_wakeup_deferred = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#123: FILE: drivers/char/eqnx/sst_tty.c:69:
+extern char *eqnx_txcookbuf;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#124: FILE: drivers/char/eqnx/sst_tty.c:70:
+static int eqnx_txcooksize = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#125: FILE: drivers/char/eqnx/sst_tty.c:71:
+static int eqnx_txcookrealsize = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/char/eqnx/sst_tty.c:79:
+static void eqnx_write_SSP64(struct mpchan *mpc, unsigned char *buf,
+void eqnx_write_SSP4(struct mpchan *mpc, int func_type);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#134: FILE: drivers/char/eqnx/sst_tty.c:79:
+void eqnx_write_SSP4(struct mpchan *mpc, int func_type);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#135: FILE: drivers/char/eqnx/sst_tty.c:80:
+void eqnx_flush_chars(struct tty_struct *tty);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#137: FILE: drivers/char/eqnx/sst_tty.c:82:
+void eqnx_flush_buffer_locked(struct tty_struct *tty);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#139: FILE: drivers/char/eqnx/sst_tty.c:84:
+extern int SSTMINOR(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#139: FILE: drivers/char/eqnx/sst_tty.c:84:
+extern int SSTMINOR(unsigned int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#139: FILE: drivers/char/eqnx/sst_tty.c:84:
+extern int SSTMINOR(unsigned int, unsigned int);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#143: FILE: drivers/char/eqnx/sst_tty.c:87:
+/**********************************************************************
+/* external variable and routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#145: FILE: drivers/char/eqnx/sst_tty.c:88:
+/* external variable and routines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: drivers/char/eqnx/sst_tty.c:89:
+/**********************************************************************
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#166: FILE: drivers/char/eqnx/sst_tty.c:107:
+ * eqnx_open(tty, filp)
                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#171: FILE: drivers/char/eqnx/sst_tty.c:112:
+ * filp	= file structure.
    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#173: FILE: drivers/char/eqnx/sst_tty.c:114:
+int eqnx_open(struct tty_struct *tty, struct file *filp)
                                                    ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'eqnx_nssps == 0'
#187: FILE: drivers/char/eqnx/sst_tty.c:128:
+	if ((d > (eqnx_nssps * MAXCHNL_BRD)) || (eqnx_nssps == 0) || (d
< 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: drivers/char/eqnx/sst_tty.c:135:
+	/* validate that the board for this channel is valid and alive
+	if ((mpd == (struct mpdev *)NULL) || (!(mpd->mpd_alive)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpd >= &eqnx_dev[eqnx_nssps]'
#208: FILE: drivers/char/eqnx/sst_tty.c:147:
+	if ((mpd >= &eqnx_dev[eqnx_nssps]) || (!(mpd->mpd_alive)) ||
+	    (nchan >= (int)mpd->mpd_nchan) ||
+	    (mpc->mpc_icp->icp_rng_state != RNG_GOOD) ||
+	    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_active != DEV_GOOD))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nchan >= (int)mpd->mpd_nchan'
#208: FILE: drivers/char/eqnx/sst_tty.c:147:
+	if ((mpd >= &eqnx_dev[eqnx_nssps]) || (!(mpd->mpd_alive)) ||
+	    (nchan >= (int)mpd->mpd_nchan) ||
+	    (mpc->mpc_icp->icp_rng_state != RNG_GOOD) ||
+	    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_active != DEV_GOOD))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icp->icp_rng_state != RNG_GOOD'
#208: FILE: drivers/char/eqnx/sst_tty.c:147:
+	if ((mpd >= &eqnx_dev[eqnx_nssps]) || (!(mpd->mpd_alive)) ||
+	    (nchan >= (int)mpd->mpd_nchan) ||
+	    (mpc->mpc_icp->icp_rng_state != RNG_GOOD) ||
+	    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_active != DEV_GOOD))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_active != DEV_GOOD'
#208: FILE: drivers/char/eqnx/sst_tty.c:147:
+	if ((mpd >= &eqnx_dev[eqnx_nssps]) || (!(mpd->mpd_alive)) ||
+	    (nchan >= (int)mpd->mpd_nchan) ||
+	    (mpc->mpc_icp->icp_rng_state != RNG_GOOD) ||
+	    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_active != DEV_GOOD))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: drivers/char/eqnx/sst_tty.c:164:
+	/* Do not allow ports to open on SST-16 boards without a panel
+	if (mpd->mpd_board_def->flags & NOPANEL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_open', this function's name, in a string
#236: FILE: drivers/char/eqnx/sst_tty.c:173:
+			dev_dbg(mpd->dev, "eqnx_open: mpchan(%d) "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#237: FILE: drivers/char/eqnx/sst_tty.c:174:
+			dev_dbg(mpd->dev, "eqnx_open: mpchan(%d) "
+				"lmx_no(%d) lmx_chan(%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#251: FILE: drivers/char/eqnx/sst_tty.c:187:
+	if (tty->termios == NULL) {
+		*tty->termios = *mpc->normaltermios;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tty->termios"
#251: FILE: drivers/char/eqnx/sst_tty.c:187:
+	if (tty->termios == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
 MX_8E_422'
#259: FILE: drivers/char/eqnx/sst_tty.c:195:
+		if ((mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
LMX_8E_422) ||
+		    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
LMX_PM16_422))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
 MX_PM16_422'
#259: FILE: drivers/char/eqnx/sst_tty.c:195:
+		if ((mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
LMX_8E_422) ||
+		    (mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id ==
LMX_PM16_422))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_open', this function's name, in a string
#266: FILE: drivers/char/eqnx/sst_tty.c:200:
+			dev_dbg(mpd->dev, "eqnx_open: device %d "

WARNING:SPLIT_STRING: quoted string split across lines
#267: FILE: drivers/char/eqnx/sst_tty.c:201:
+			dev_dbg(mpd->dev, "eqnx_open: device %d "
+				"calling megaparam\n", d);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_open', this function's name, in a string
#283: FILE: drivers/char/eqnx/sst_tty.c:216:
+		dev_dbg(mpd->dev, "eqnx_open: sleeping on close_wait "

WARNING:SPLIT_STRING: quoted string split across lines
#284: FILE: drivers/char/eqnx/sst_tty.c:217:
+		dev_dbg(mpd->dev, "eqnx_open: sleeping on close_wait "
+			"for device %d\n", d);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/char/eqnx/sst_tty.c:220:
+		wait_event_interruptible(mpc->close_wait,
0);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#300: FILE: drivers/char/eqnx/sst_tty.c:231:
+			dev_dbg(mpd->dev, "eqnx_open: opening dialin
 			                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#312: FILE: drivers/char/eqnx/sst_tty.c:242:
+				if (tty_hung_up_p(filp) ||
 				                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/char/eqnx/sst_tty.c:243:
+				if (tty_hung_up_p(filp) ||
0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->carr_state'
#324: FILE: drivers/char/eqnx/sst_tty.c:252:
+				if (((mpc->flags & ASYNC_CLOSING) == 0)
&&
+				    ((tp->termios->c_cflag & CLOCAL) ||
+				     (mpc->carr_state)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#356: FILE: drivers/char/eqnx/sst_tty.c:279:
+			if (!tty_hung_up_p(filp))
 			                   ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#362: FILE: drivers/char/eqnx/sst_tty.c:284:
+				dev_dbg(mpd->dev, "eqnx_open: device %d
 				                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#362: FILE: drivers/char/eqnx/sst_tty.c:284:
+				dev_dbg(mpd->dev, "eqnx_open: device %d
 				                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#366: FILE: drivers/char/eqnx/sst_tty.c:286:
+					"rc=%d\n",
 					   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#366: FILE: drivers/char/eqnx/sst_tty.c:286:
+					"rc=%d\n",
 					    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#372: FILE: drivers/char/eqnx/sst_tty.c:292:
+		dev_dbg(mpd->dev, "eqnx_open: device %d open fail w/ "
 		                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#372: FILE: drivers/char/eqnx/sst_tty.c:292:
+		dev_dbg(mpd->dev, "eqnx_open: device %d open fail w/ "
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#372: FILE: drivers/char/eqnx/sst_tty.c:292:
+		dev_dbg(mpd->dev, "eqnx_open: device %d open fail w/ "
 		                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#373: FILE: drivers/char/eqnx/sst_tty.c:293:
+			"c_cflag=%o, carr_stat=%d, rc=%d\n",
 			                              ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#403: FILE: drivers/char/eqnx/sst_tty.c:322:
+ * eqnx_close(tty, filp)
                    ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/char/eqnx/sst_tty.c:322:
+ * eqnx_close(tty, filp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/char/eqnx/sst_tty.c:323:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/char/eqnx/sst_tty.c:324:
+ * Close of tty device associated with SST channel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/char/eqnx/sst_tty.c:325:
+ * Called on last close of any device.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/char/eqnx/sst_tty.c:326:
+ * Release resources, reset device, and wakeup any sleepers$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/char/eqnx/sst_tty.c:327:
+ * waiting for channel to become idle.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/char/eqnx/sst_tty.c:328:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/char/eqnx/sst_tty.c:328:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/char/eqnx/sst_tty.c:329:
+ * tty^I= pointer to tty structure.$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#411: FILE: drivers/char/eqnx/sst_tty.c:330:
+ * filp	= file structure.
    ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/char/eqnx/sst_tty.c:330:
+ * filp^I= file structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/char/eqnx/sst_tty.c:331:
+ */$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#413: FILE: drivers/char/eqnx/sst_tty.c:332:
+void eqnx_close(struct tty_struct *tty, struct file *filp)
                                                      ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#439: FILE: drivers/char/eqnx/sst_tty.c:358:
+	dev_dbg(mpd->dev, "eqnx_close: device %d being closed\n", d);
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#439: FILE: drivers/char/eqnx/sst_tty.c:358:
+	dev_dbg(mpd->dev, "eqnx_close: device %d being closed\n", d);
 	                                      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#442: FILE: drivers/char/eqnx/sst_tty.c:361:
+	if (tty_hung_up_p(filp)) {
 	                  ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#446: FILE: drivers/char/eqnx/sst_tty.c:365:
+	dev_dbg(mpd->dev, "eqnx_close: device %d being closed with "
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#446: FILE: drivers/char/eqnx/sst_tty.c:365:
+	dev_dbg(mpd->dev, "eqnx_close: device %d being closed with "
 	                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#447: FILE: drivers/char/eqnx/sst_tty.c:366:
+		"refcount = %d\n", d, mpc->refcount);
 		            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#500: FILE: drivers/char/eqnx/sst_tty.c:418:
+		dev_dbg(mpd->dev, "eqnx_close: waking up open_waiters
 		                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpd->mpd_board_def->asic != SSP64'
#508: FILE: drivers/char/eqnx/sst_tty.c:425:
+	if ((mpd->mpd_board_def->asic != SSP64) && (mpc->xmit_buf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->xmit_buf'
#508: FILE: drivers/char/eqnx/sst_tty.c:425:
+	if ((mpd->mpd_board_def->asic != SSP64) && (mpc->xmit_buf)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/char/eqnx/sst_tty.c:432:
+	dev_dbg(mpd->dev, "eqnx_close: close complete for device %d\n",
+	wake_up_interruptible(&mpc->close_wait);

WARNING:RETURN_VOID: void function return statements are not generally useful
#520: FILE: drivers/char/eqnx/sst_tty.c:436:
+	return;
+}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#539: FILE: drivers/char/eqnx/sst_tty.c:454:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#540: FILE: drivers/char/eqnx/sst_tty.c:455:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#541: FILE: drivers/char/eqnx/sst_tty.c:456:
+	volatile struct cout_que_struct *icpq;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_write', this function's name, in a string
#559: FILE: drivers/char/eqnx/sst_tty.c:474:
+	dev_dbg(mpd->dev, "eqnx_write: tty=%d, count=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/char/eqnx/sst_tty.c:475:
+	dev_dbg(mpd->dev, "eqnx_write: tty=%d, count=%d\n",
count);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#568: FILE: drivers/char/eqnx/sst_tty.c:482:
+	icpg = (volatile union global_regs_u *)icpo;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpd->mpd_board_def->asic != SSP64'
#576: FILE: drivers/char/eqnx/sst_tty.c:488:
+		if ((mpd->mpd_board_def->asic != SSP64) &&
(mpc->xmit_cnt))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/char/eqnx/sst_tty.c:489:
+		if ((mpd->mpd_board_def->asic != SSP64) &&
+			goto ssp_end;

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#581: FILE: drivers/char/eqnx/sst_tty.c:491:
+			"space = %d\n",
 			         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/char/eqnx/sst_tty.c:526:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#667: FILE: drivers/char/eqnx/sst_tty.c:566:
+		dev_dbg(mpd->dev, "eqnx_write: wrote %d chars for device
 		                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#673: FILE: drivers/char/eqnx/sst_tty.c:569:
+			"for device %d\n",
 			            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#688: FILE: drivers/char/eqnx/sst_tty.c:583:
+		dev_dbg(mpd->dev, "eqnx_write: wrote %d bytes for device
 		                                     ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#691: FILE: drivers/char/eqnx/sst_tty.c:585:
+		return (written);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_write', this function's name, in a string
#696: FILE: drivers/char/eqnx/sst_tty.c:590:
+		dev_dbg(mpd->dev, "eqnx_write: fill xmit_buf with %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/char/eqnx/sst_tty.c:591:
+		dev_dbg(mpd->dev, "eqnx_write: fill xmit_buf with %d\n",
+		c = MIN(count, MIN(XMIT_BUF_SIZE - mpc->xmit_cnt - 1,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc->xmit_buf"
#704: FILE: drivers/char/eqnx/sst_tty.c:597:
+		if (mpc->xmit_buf == NULL)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#715: FILE: drivers/char/eqnx/sst_tty.c:606:
+			"%d count %d\n", d, c);
 			 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#715: FILE: drivers/char/eqnx/sst_tty.c:606:
+			"%d count %d\n", d, c);
 			          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#719: FILE: drivers/char/eqnx/sst_tty.c:610:
+	dev_dbg(mpd->dev, "eqnx_write: wrote %d bytes for device %d\n",
 	                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#719: FILE: drivers/char/eqnx/sst_tty.c:610:
+	dev_dbg(mpd->dev, "eqnx_write: wrote %d bytes for device %d\n",
 	                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/char/eqnx/sst_tty.c:617:
+ * eqnx_put_char(tty, ch)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/char/eqnx/sst_tty.c:618:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: drivers/char/eqnx/sst_tty.c:619:
+ * Write single data byte to the tty device.  Note data is queued and$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/char/eqnx/sst_tty.c:620:
+ * flush call must be done to force to the device.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/char/eqnx/sst_tty.c:621:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/char/eqnx/sst_tty.c:622:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/char/eqnx/sst_tty.c:623:
+ * ch^I= byte to write.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/char/eqnx/sst_tty.c:624:
+ */$

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#756: FILE: drivers/char/eqnx/sst_tty.c:647:
+	dev_dbg(mpd->dev, "eqnx_put_char: tty=%d, ch=%x\n", d, (int)ch);
 	                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#756: FILE: drivers/char/eqnx/sst_tty.c:647:
+	dev_dbg(mpd->dev, "eqnx_put_char: tty=%d, ch=%x\n", d, (int)ch);
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#756: FILE: drivers/char/eqnx/sst_tty.c:647:
+	dev_dbg(mpd->dev, "eqnx_put_char: tty=%d, ch=%x\n", d, (int)ch);
 	                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#756: FILE: drivers/char/eqnx/sst_tty.c:647:
+	dev_dbg(mpd->dev, "eqnx_put_char: tty=%d, ch=%x\n", d, (int)ch);
 	                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/char/eqnx/sst_tty.c:685:
+ * eqnx_flush_chars_locked(tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/char/eqnx/sst_tty.c:686:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/char/eqnx/sst_tty.c:687:
+ * Flush (actually drain) data bytes queued by put_char routine.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/char/eqnx/sst_tty.c:688:
+ * Helper routine called by eqnx_flush_chars.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/char/eqnx/sst_tty.c:689:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/char/eqnx/sst_tty.c:690:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/char/eqnx/sst_tty.c:691:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/char/eqnx/sst_tty.c:692:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/char/eqnx/sst_tty.c:693:
+ */$

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#821: FILE: drivers/char/eqnx/sst_tty.c:712:
+	dev_dbg(mpd->dev, "eqnx_flush_chars_locked: tty=%d\n", d);
 	                                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#821: FILE: drivers/char/eqnx/sst_tty.c:712:
+	dev_dbg(mpd->dev, "eqnx_flush_chars_locked: tty=%d\n", d);
 	                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#845: FILE: drivers/char/eqnx/sst_tty.c:735:
+			unsigned int cooksize = eqnx_txcooksize;
+			eqnx_txcooksize = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#851: FILE: drivers/char/eqnx/sst_tty.c:741:
+			dev_dbg(mpd->dev, "eqnx_flush_chars_locked: "
+				"calling eqnx_write_SSP64\n");

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/char/eqnx/sst_tty.c:748:
+			dev_dbg(mpd->dev, "eqnx_flush_chars_locked: "
+				"calling eqnx_write_SSP4\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#895: FILE: drivers/char/eqnx/sst_tty.c:785:
+	if (eqnx_txcooktty == NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!eqnx_txcooktty"
#895: FILE: drivers/char/eqnx/sst_tty.c:785:
+	if (eqnx_txcooktty == NULL)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#897: FILE: drivers/char/eqnx/sst_tty.c:787:
+		return;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#897: FILE: drivers/char/eqnx/sst_tty.c:787:
+	else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#898: FILE: drivers/char/eqnx/sst_tty.c:788:
+	else {
+

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#900: FILE: drivers/char/eqnx/sst_tty.c:790:
+		if (spin_is_locked(&mpd->mpd_lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_flush_chars', this function's name, in a string
#901: FILE: drivers/char/eqnx/sst_tty.c:791:
+			dev_dbg(mpd->dev, "eqnx_flush_chars: mpd lock "

WARNING:SPLIT_STRING: quoted string split across lines
#902: FILE: drivers/char/eqnx/sst_tty.c:792:
+			dev_dbg(mpd->dev, "eqnx_flush_chars: mpd lock "
+				"already held\n");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#927: FILE: drivers/char/eqnx/sst_tty.c:817:
+	volatile struct cout_que_struct *icpq;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#928: FILE: drivers/char/eqnx/sst_tty.c:818:
+	volatile struct icp_out_struct *icpo;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_write_room', this function's name, in a string
#948: FILE: drivers/char/eqnx/sst_tty.c:838:
+	dev_dbg(mpd->dev, "eqnx_write_room: device = %d\n", d);

WARNING:LINE_SPACING: Missing a blank line after declarations
#954: FILE: drivers/char/eqnx/sst_tty.c:844:
+		int ret;
+		ret = (XMIT_BUF_SIZE - mpc->xmit_cnt - 1);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#958: FILE: drivers/char/eqnx/sst_tty.c:848:
+		return (ret);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#965: FILE: drivers/char/eqnx/sst_tty.c:855:
+			return (space);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#978: FILE: drivers/char/eqnx/sst_tty.c:868:
+	return (space);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#993: FILE: drivers/char/eqnx/sst_tty.c:883:
+	volatile struct cout_que_struct *icpq;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#994: FILE: drivers/char/eqnx/sst_tty.c:884:
+	volatile struct icp_out_struct *icpo;

WARNING:REPEATED_WORD: Possible repeated word: 'include'
#1019: FILE: drivers/char/eqnx/sst_tty.c:909:
+	 * for SSP4, include include internal buffer in addition

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_chars_in_buffer', this function's name, in a string
#1025: FILE: drivers/char/eqnx/sst_tty.c:915:
+	dev_dbg(mpd->dev, "eqnx_chars_in_buffer: count for device %d = "

WARNING:SPLIT_STRING: quoted string split across lines
#1026: FILE: drivers/char/eqnx/sst_tty.c:916:
+	dev_dbg(mpd->dev, "eqnx_chars_in_buffer: count for device %d = "
+		"%d\n", d, count);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1027: FILE: drivers/char/eqnx/sst_tty.c:917:
+	return (count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_throttle', this function's name, in a string
#1055: FILE: drivers/char/eqnx/sst_tty.c:945:
+	dev_dbg(mpd->dev, "eqnx_throttle: device %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_unthrottle', this function's name, in a string
#1085: FILE: drivers/char/eqnx/sst_tty.c:975:
+	dev_dbg(mpd->dev, "eqnx_unthrottle: device %d\n",

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1104: FILE: drivers/char/eqnx/sst_tty.c:994:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1105: FILE: drivers/char/eqnx/sst_tty.c:995:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1106: FILE: drivers/char/eqnx/sst_tty.c:996:
+	volatile struct cout_que_struct *icpq;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1107: FILE: drivers/char/eqnx/sst_tty.c:997:
+	volatile struct cin_bnk_struct *icpb;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1128: FILE: drivers/char/eqnx/sst_tty.c:1018:
+	if (!(spin_is_locked(&mpd->mpd_lock)))

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1138: FILE: drivers/char/eqnx/sst_tty.c:1027:
+	dev_dbg(mpd->dev, "eqnx_flush_buffer_locked: device = %d\n", d);
 	                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: drivers/char/eqnx/sst_tty.c:1076:
+ * eqnx_flush_buffer(tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: drivers/char/eqnx/sst_tty.c:1077:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: drivers/char/eqnx/sst_tty.c:1078:
+ * Flush all input and output queued data.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: drivers/char/eqnx/sst_tty.c:1079:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: drivers/char/eqnx/sst_tty.c:1080:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: drivers/char/eqnx/sst_tty.c:1081:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: drivers/char/eqnx/sst_tty.c:1082:
+ * mpdev (board-level) lock ** MUST NOT ** be held$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: drivers/char/eqnx/sst_tty.c:1083:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: drivers/char/eqnx/sst_tty.c:1122:
+ * eqnx_stop(tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: drivers/char/eqnx/sst_tty.c:1123:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: drivers/char/eqnx/sst_tty.c:1124:
+ * Stop queueing data bytes to be output.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: drivers/char/eqnx/sst_tty.c:1125:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/char/eqnx/sst_tty.c:1126:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: drivers/char/eqnx/sst_tty.c:1127:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1264: FILE: drivers/char/eqnx/sst_tty.c:1152:
+	dev_dbg(mpd->dev, "eqnx_stop: device %d\n", d);
 	                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/char/eqnx/sst_tty.c:1162:
+ * eqnx_start(tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: drivers/char/eqnx/sst_tty.c:1163:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1276: FILE: drivers/char/eqnx/sst_tty.c:1164:
+ * Re-start queueing data bytes to be output.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: drivers/char/eqnx/sst_tty.c:1165:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: drivers/char/eqnx/sst_tty.c:1166:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: drivers/char/eqnx/sst_tty.c:1167:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1304: FILE: drivers/char/eqnx/sst_tty.c:1192:
+	dev_dbg(mpd->dev, "eqnx_start: device %d\n", d);
 	                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: drivers/char/eqnx/sst_tty.c:1202:
+ * eqnx_hangup(tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: drivers/char/eqnx/sst_tty.c:1203:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: drivers/char/eqnx/sst_tty.c:1204:
+ * Hangup tty device.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: drivers/char/eqnx/sst_tty.c:1205:
+ * Drop control signals, flush buffer, and close port.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: drivers/char/eqnx/sst_tty.c:1206:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: drivers/char/eqnx/sst_tty.c:1207:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: drivers/char/eqnx/sst_tty.c:1208:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1344: FILE: drivers/char/eqnx/sst_tty.c:1232:
+	dev_dbg(mpd->dev, "eqnx_hangup: device %d\n", d);
 	                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: drivers/char/eqnx/sst_tty.c:1275:
+ * eqnx_set_termios(tty, old)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: drivers/char/eqnx/sst_tty.c:1276:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: drivers/char/eqnx/sst_tty.c:1277:
+ * Device termios structure has been modified.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: drivers/char/eqnx/sst_tty.c:1278:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: drivers/char/eqnx/sst_tty.c:1279:
+ * tty^I= pointer to tty structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: drivers/char/eqnx/sst_tty.c:1280:
+ * old^I= previous termios settings.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: drivers/char/eqnx/sst_tty.c:1281:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1417: FILE: drivers/char/eqnx/sst_tty.c:1305:
+	dev_dbg(mpd->dev, "eqnx_set_termios: device %d\n", d);
 	                                            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_tiocmget', this function's name, in a string
#1469: FILE: drivers/char/eqnx/sst_tty.c:1354:
+	dev_dbg(mpd->dev, "eqnx_tiocmget: device %d\n", d);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/char/eqnx/sst_tty.c:1398:
+ * chan_alive(index)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: drivers/char/eqnx/sst_tty.c:1399:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/char/eqnx/sst_tty.c:1400:
+ * return true if channel alive$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: drivers/char/eqnx/sst_tty.c:1401:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/char/eqnx/sst_tty.c:1440:
+ * chanon(mpc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: drivers/char/eqnx/sst_tty.c:1441:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: drivers/char/eqnx/sst_tty.c:1442:
+ * Turn on a channel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: drivers/char/eqnx/sst_tty.c:1443:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: drivers/char/eqnx/sst_tty.c:1444:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: drivers/char/eqnx/sst_tty.c:1445:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: drivers/char/eqnx/sst_tty.c:1446:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/char/eqnx/sst_tty.c:1447:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: drivers/char/eqnx/sst_tty.c:1541:
+ * chanoff(mpc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1659: FILE: drivers/char/eqnx/sst_tty.c:1542:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: drivers/char/eqnx/sst_tty.c:1543:
+ * Turn off a channel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: drivers/char/eqnx/sst_tty.c:1544:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: drivers/char/eqnx/sst_tty.c:1545:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1663: FILE: drivers/char/eqnx/sst_tty.c:1546:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: drivers/char/eqnx/sst_tty.c:1547:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: drivers/char/eqnx/sst_tty.c:1548:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1772: FILE: drivers/char/eqnx/sst_tty.c:1650:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1773: FILE: drivers/char/eqnx/sst_tty.c:1651:
+ * Output support routines$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1774: FILE: drivers/char/eqnx/sst_tty.c:1652:
+ *$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1778: FILE: drivers/char/eqnx/sst_tty.c:1654:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1780: FILE: drivers/char/eqnx/sst_tty.c:1656:
+ * eqnx_write_SSP64(mpc, buf, count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1781: FILE: drivers/char/eqnx/sst_tty.c:1657:
+ * write output data to channel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1782: FILE: drivers/char/eqnx/sst_tty.c:1658:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1783: FILE: drivers/char/eqnx/sst_tty.c:1659:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1784: FILE: drivers/char/eqnx/sst_tty.c:1660:
+ * buf^I= data buffer.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1785: FILE: drivers/char/eqnx/sst_tty.c:1661:
+ * count= count of bytes to write.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1786: FILE: drivers/char/eqnx/sst_tty.c:1662:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1787: FILE: drivers/char/eqnx/sst_tty.c:1663:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1788: FILE: drivers/char/eqnx/sst_tty.c:1664:
+ */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1807: FILE: drivers/char/eqnx/sst_tty.c:1681:
+	icpg = (volatile union global_regs_u *)icpo;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1826: FILE: drivers/char/eqnx/sst_tty.c:1700:
+		char *ubase = buf;
+		room = DSQSIZE - ((eqnx_dscope[d].next -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1857: FILE: drivers/char/eqnx/sst_tty.c:1727:
+		memcpy(mpc->mpc_txq.q_addr + mpc->mpc_txq.q_ptr, buf,
+		mpc->mpc_txq.q_ptr += c;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1864: FILE: drivers/char/eqnx/sst_tty.c:1734:
+			char *ubase = buf;
+			room = DSQSIZE - ((eqnx_dscope[d].next -

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1889: FILE: drivers/char/eqnx/sst_tty.c:1755:
+
+		}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1918: FILE: drivers/char/eqnx/sst_tty.c:1783:
+ * eqnx_write_SSP4(mpc, func_type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1919: FILE: drivers/char/eqnx/sst_tty.c:1784:
+ * write output data to channel.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1920: FILE: drivers/char/eqnx/sst_tty.c:1785:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1921: FILE: drivers/char/eqnx/sst_tty.c:1786:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1922: FILE: drivers/char/eqnx/sst_tty.c:1787:
+ * func_type: one of EQNX_COOKED or EQNX_TXINT$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1923: FILE: drivers/char/eqnx/sst_tty.c:1788:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1924: FILE: drivers/char/eqnx/sst_tty.c:1789:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1925: FILE: drivers/char/eqnx/sst_tty.c:1790:
+ */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1944: FILE: drivers/char/eqnx/sst_tty.c:1808:
+	icpg = (volatile union global_regs_u *)icpo;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'func_type != EQNX_TXINT'
#1950: FILE: drivers/char/eqnx/sst_tty.c:1814:
+	if ((func_type != EQNX_TXINT) &&
+	    ((space < block_count) && (mpc->xmit_cnt >= block_count)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'space < block_count'
#1950: FILE: drivers/char/eqnx/sst_tty.c:1814:
+	if ((func_type != EQNX_TXINT) &&
+	    ((space < block_count) && (mpc->xmit_cnt >= block_count)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->xmit_cnt >= block_count'
#1950: FILE: drivers/char/eqnx/sst_tty.c:1814:
+	if ((func_type != EQNX_TXINT) &&
+	    ((space < block_count) && (mpc->xmit_cnt >= block_count)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc->xmit_buf"
#1965: FILE: drivers/char/eqnx/sst_tty.c:1829:
+		if (mpc->xmit_buf == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1979: FILE: drivers/char/eqnx/sst_tty.c:1842:
+			char *ubase = mpc->xmit_buf + mpc->xmit_tail;
+			room = DSQSIZE - ((eqnx_dscope[d].next -

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2004: FILE: drivers/char/eqnx/sst_tty.c:1865:
+
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc->xmit_buf"
#2009: FILE: drivers/char/eqnx/sst_tty.c:1870:
+		if (mpc->xmit_buf == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2035: FILE: drivers/char/eqnx/sst_tty.c:1892:
+					move_cnt = MIN(room,
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2036: FILE: drivers/char/eqnx/sst_tty.c:1892:
+					move_cnt = MIN(room,
eqnx_dscope[d].q.q_end -

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2037: FILE: drivers/char/eqnx/sst_tty.c:1893:
+
+

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'eqnx_dscope[d].scope_wait'
#2054: FILE: drivers/char/eqnx/sst_tty.c:1907:
+				wake_up_interruptible(&eqnx_dscope[d].
+						      scope_wait);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SPLIT_STRING: quoted string split across lines
#2075: FILE: drivers/char/eqnx/sst_tty.c:1928:
+		dev_dbg(mpd->dev, "eqnx_write_SSP4: wrote %d chars for "
+			"device %d\n", (c + nx),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->xmit_cnt < block_count'
#2084: FILE: drivers/char/eqnx/sst_tty.c:1937:
+	if ((mpc->xmit_cnt < block_count) && (func_type == EQNX_TXINT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'func_type == EQNX_TXINT'
#2084: FILE: drivers/char/eqnx/sst_tty.c:1937:
+	if ((mpc->xmit_cnt < block_count) && (func_type == EQNX_TXINT))

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2088: FILE: drivers/char/eqnx/sst_tty.c:1939:
+			"for device = %d\n",
 			              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2099: FILE: drivers/char/eqnx/sst_tty.c:1950:
+ * delay_jiffies(len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2100: FILE: drivers/char/eqnx/sst_tty.c:1951:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2101: FILE: drivers/char/eqnx/sst_tty.c:1952:
+ * Delay by the specified number of jiffies.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2102: FILE: drivers/char/eqnx/sst_tty.c:1953:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2103: FILE: drivers/char/eqnx/sst_tty.c:1954:
+ * len^I= jiffies to delay.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2104: FILE: drivers/char/eqnx/sst_tty.c:1955:
+ */$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.66339.commit.bf79c4d74b63d597abf6d121d5b1939d40f7fe49 total: 25 errors, 178 warnings, 66 checks, 2060 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.66339.commit.bf79c4d74b63d597abf6d121d5b1939d40f7fe49 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
