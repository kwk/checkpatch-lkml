CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#31: 
Der patch hat eine Abhängikeit auf den strstrip patch.
                      ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#106: FILE: arch/s390/kernel/ipl.c:26:
+extern char s390_readinfo_sccb[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#107: FILE: arch/s390/kernel/ipl.c:27:
+#define SCCB_VALID (*((__u16*)&s390_readinfo_sccb[6]) == 0x0010)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/s390/kernel/ipl.c:302:
+            char loadparm[LOADPARM_LEN + 1] = {};$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/s390/kernel/ipl.c:302:
+            char loadparm[LOADPARM_LEN + 1] = {};$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/s390/kernel/ipl.c:304:
+            if (!SCCB_VALID)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/s390/kernel/ipl.c:304:
+            if (!SCCB_VALID)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#121: FILE: arch/s390/kernel/ipl.c:304:
+            if (!SCCB_VALID)
+                        return sprintf(page, "#unknown#\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/s390/kernel/ipl.c:305:
+                        return sprintf(page, "#unknown#\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/s390/kernel/ipl.c:305:
+                        return sprintf(page, "#unknown#\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/s390/kernel/ipl.c:306:
+            memcpy(loadparm, SCCB_LOADPARM, LOADPARM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/s390/kernel/ipl.c:306:
+            memcpy(loadparm, SCCB_LOADPARM, LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/s390/kernel/ipl.c:307:
+            EBCASC(loadparm, LOADPARM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/s390/kernel/ipl.c:307:
+            EBCASC(loadparm, LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/s390/kernel/ipl.c:308:
+            strstrip(loadparm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/s390/kernel/ipl.c:308:
+            strstrip(loadparm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/s390/kernel/ipl.c:309:
+            return sprintf(page, "%s\n", loadparm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/s390/kernel/ipl.c:309:
+            return sprintf(page, "%s\n", loadparm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/s390/kernel/ipl.c:313:
+            __ATTR(loadparm, 0444, ipl_ccw_loadparm_show, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/s390/kernel/ipl.c:313:
+            __ATTR(loadparm, 0444, ipl_ccw_loadparm_show, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/s390/kernel/ipl.c:318:
+            &sys_ipl_ccw_loadparm_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/s390/kernel/ipl.c:318:
+            &sys_ipl_ccw_loadparm_attr.attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/s390/kernel/ipl.c:377:
+            memcpy(loadparm, &reipl_block_ccw->ipl_info.ccw.load_param,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/s390/kernel/ipl.c:377:
+            memcpy(loadparm, &reipl_block_ccw->ipl_info.ccw.load_param,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/s390/kernel/ipl.c:378:
+                   LOADPARM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/s390/kernel/ipl.c:378:
+                   LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/s390/kernel/ipl.c:379:
+            EBCASC(loadparm, LOADPARM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/s390/kernel/ipl.c:379:
+            EBCASC(loadparm, LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/s390/kernel/ipl.c:380:
+            loadparm[LOADPARM_LEN] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/s390/kernel/ipl.c:380:
+            loadparm[LOADPARM_LEN] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/s390/kernel/ipl.c:381:
+            strstrip(loadparm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/s390/kernel/ipl.c:381:
+            strstrip(loadparm);$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#153: FILE: arch/s390/kernel/ipl.c:384:
*page)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/s390/kernel/ipl.c:386:
+            char buf[LOADPARM_LEN + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/s390/kernel/ipl.c:386:
+            char buf[LOADPARM_LEN + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/s390/kernel/ipl.c:388:
+            reipl_get_ascii_loadparm(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/s390/kernel/ipl.c:388:
+            reipl_get_ascii_loadparm(buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/s390/kernel/ipl.c:389:
+            return sprintf(page, "%s\n", buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/s390/kernel/ipl.c:389:
+            return sprintf(page, "%s\n", buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/s390/kernel/ipl.c:393:
+                                                            const char$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: arch/s390/kernel/ipl.c:393:
+static ssize_t reipl_ccw_loadparm_store(struct subsystem *subsys,
+                                                            const char

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/s390/kernel/ipl.c:393:
+                                                            const char$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: arch/s390/kernel/ipl.c:393:
+static ssize_t reipl_ccw_loadparm_store(struct subsystem *subsys,
*buf, size_t len)

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/s390/kernel/ipl.c:395:
+            int i, lp_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/s390/kernel/ipl.c:395:
+            int i, lp_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/s390/kernel/ipl.c:397:
+            /* ignore trailing newline */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/s390/kernel/ipl.c:398:
+            lp_len = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/s390/kernel/ipl.c:398:
+            lp_len = len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/s390/kernel/ipl.c:399:
+            if ((len > 0) && (buf[len - 1] == '\n'))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/s390/kernel/ipl.c:399:
+            if ((len > 0) && (buf[len - 1] == '\n'))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#169: FILE: arch/s390/kernel/ipl.c:399:
+            if ((len > 0) && (buf[len - 1] == '\n'))
+                        lp_len--;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 0'
#169: FILE: arch/s390/kernel/ipl.c:399:
+            if ((len > 0) && (buf[len - 1] == '\n'))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/s390/kernel/ipl.c:400:
+                        lp_len--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/s390/kernel/ipl.c:400:
+                        lp_len--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/s390/kernel/ipl.c:401:
+            /* loadparm can have max 8 characters and must not start with$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/s390/kernel/ipl.c:402:
+            if ((lp_len > LOADPARM_LEN) || ((lp_len > 0) && (buf[0] == '$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: arch/s390/kernel/ipl.c:402:
+            /* loadparm can have max 8 characters and must not start with
+            if ((lp_len > LOADPARM_LEN) || ((lp_len > 0) && (buf[0] == '

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/s390/kernel/ipl.c:403:
+                        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/s390/kernel/ipl.c:404:
+            /* loadparm can only contain "a-z,A-Z,0-9,SP,." */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/s390/kernel/ipl.c:405:
+            for (i = 0; i < lp_len; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/s390/kernel/ipl.c:405:
+            for (i = 0; i < lp_len; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#177: FILE: arch/s390/kernel/ipl.c:405:
+            for (i = 0; i < lp_len; i++) {
+                        if (isalpha(buf[i]) || isdigit(buf[i]) || (buf[i]

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/s390/kernel/ipl.c:406:
+                        if (isalpha(buf[i]) || isdigit(buf[i]) || (buf[i]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/s390/kernel/ipl.c:406:
+                        if (isalpha(buf[i]) || isdigit(buf[i]) || (buf[i]$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 36)
#178: FILE: arch/s390/kernel/ipl.c:406:
+                        if (isalpha(buf[i]) || isdigit(buf[i]) || (buf[i]
[...]
+                                    continue;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: arch/s390/kernel/ipl.c:406:
+                        if (isalpha(buf[i]) || isdigit(buf[i]) || (buf[i]

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/s390/kernel/ipl.c:407:
+                            (buf[i] == '.'))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/s390/kernel/ipl.c:407:
+                            (buf[i] == '.'))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/s390/kernel/ipl.c:408:
+                                    continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/s390/kernel/ipl.c:408:
+                                    continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/s390/kernel/ipl.c:409:
+                        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/s390/kernel/ipl.c:409:
+                        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/s390/kernel/ipl.c:410:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/s390/kernel/ipl.c:410:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/s390/kernel/ipl.c:411:
+            /* initialize loadparm with blanks */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/s390/kernel/ipl.c:412:
+            memset(&reipl_block_ccw->ipl_info.ccw.load_param, ' ',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/s390/kernel/ipl.c:412:
+            memset(&reipl_block_ccw->ipl_info.ccw.load_param, ' ',$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/s390/kernel/ipl.c:413:
+            /* copy and convert to ebcdic */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/s390/kernel/ipl.c:413:
+            memset(&reipl_block_ccw->ipl_info.ccw.load_param, ' ',
+            /* copy and convert to ebcdic */

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/s390/kernel/ipl.c:414:
+            memcpy(&reipl_block_ccw->ipl_info.ccw.load_param, buf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/s390/kernel/ipl.c:414:
+            memcpy(&reipl_block_ccw->ipl_info.ccw.load_param, buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: arch/s390/kernel/ipl.c:415:
+            ASCEBC(reipl_block_ccw->ipl_info.ccw.load_param,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: arch/s390/kernel/ipl.c:415:
+            memcpy(&reipl_block_ccw->ipl_info.ccw.load_param, buf,
+            ASCEBC(reipl_block_ccw->ipl_info.ccw.load_param,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/s390/kernel/ipl.c:415:
+            ASCEBC(reipl_block_ccw->ipl_info.ccw.load_param,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: arch/s390/kernel/ipl.c:415:
+            memcpy(&reipl_block_ccw->ipl_info.ccw.load_param, buf,
LOADPARM_LEN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: arch/s390/kernel/ipl.c:416:
+            return len;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: arch/s390/kernel/ipl.c:416:
+            ASCEBC(reipl_block_ccw->ipl_info.ccw.load_param,
+            return len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/s390/kernel/ipl.c:416:
+            return len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/s390/kernel/ipl.c:420:
+            __ATTR(loadparm, 0644, reipl_ccw_loadparm_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/s390/kernel/ipl.c:420:
+            __ATTR(loadparm, 0644, reipl_ccw_loadparm_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/s390/kernel/ipl.c:421:
+                   reipl_ccw_loadparm_store);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/s390/kernel/ipl.c:421:
+                   reipl_ccw_loadparm_store);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/s390/kernel/ipl.c:425:
+            &sys_reipl_ccw_loadparm_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/s390/kernel/ipl.c:425:
+            &sys_reipl_ccw_loadparm_attr.attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/s390/kernel/ipl.c:647:
+            char loadparm[LOADPARM_LEN + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/s390/kernel/ipl.c:647:
+            char loadparm[LOADPARM_LEN + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/s390/kernel/ipl.c:651:
+                        reipl_get_ascii_loadparm(loadparm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/s390/kernel/ipl.c:651:
+                        reipl_get_ascii_loadparm(loadparm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/s390/kernel/ipl.c:654:
+                        printk(KERN_EMERG "loadparm = '%s'\n", loadparm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/s390/kernel/ipl.c:654:
+                        printk(KERN_EMERG "loadparm = '%s'\n", loadparm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/s390/kernel/ipl.c:671:
+                        if (strlen(loadparm) == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/s390/kernel/ipl.c:671:
+                        if (strlen(loadparm) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 36)
#227: FILE: arch/s390/kernel/ipl.c:671:
+                        if (strlen(loadparm) == 0)
+                                    sprintf(buf, "IPL %X",

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/s390/kernel/ipl.c:672:
+                                    sprintf(buf, "IPL %X",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/s390/kernel/ipl.c:672:
+                                    sprintf(buf, "IPL %X",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: arch/s390/kernel/ipl.c:673:
+                                    sprintf(buf, "IPL %X",
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: arch/s390/kernel/ipl.c:673:
+                                    sprintf(buf, "IPL %X",
reipl_block_ccw->ipl_info.ccw.devno);

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/s390/kernel/ipl.c:674:
+                        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/s390/kernel/ipl.c:674:
+                        else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 36)
#231: FILE: arch/s390/kernel/ipl.c:674:
+                        else
+                                    sprintf(buf, "IPL %X LOADPARM '%s'",

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/s390/kernel/ipl.c:675:
+                                    sprintf(buf, "IPL %X LOADPARM '%s'",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/s390/kernel/ipl.c:675:
+                                    sprintf(buf, "IPL %X LOADPARM '%s'",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/s390/kernel/ipl.c:676:
+                                    sprintf(buf, "IPL %X LOADPARM '%s'",
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: arch/s390/kernel/ipl.c:676:
+                                    sprintf(buf, "IPL %X LOADPARM '%s'",
reipl_block_ccw->ipl_info.ccw.devno, loadparm);

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/s390/kernel/ipl.c:830:
+            /* check if read scp info worked and set loadparm */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/s390/kernel/ipl.c:831:
+            if (SCCB_VALID)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/s390/kernel/ipl.c:831:
+            if (SCCB_VALID)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#244: FILE: arch/s390/kernel/ipl.c:831:
+            if (SCCB_VALID)
+                        memcpy(reipl_block_ccw->ipl_info.ccw.load_param,

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/s390/kernel/ipl.c:832:
+                        memcpy(reipl_block_ccw->ipl_info.ccw.load_param,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/s390/kernel/ipl.c:832:
+                        memcpy(reipl_block_ccw->ipl_info.ccw.load_param,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/s390/kernel/ipl.c:833:
+                               SCCB_LOADPARM, LOADPARM_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/s390/kernel/ipl.c:833:
+                               SCCB_LOADPARM, LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/s390/kernel/ipl.c:834:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/s390/kernel/ipl.c:834:
+            else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 0)
#247: FILE: arch/s390/kernel/ipl.c:834:
+            else
[...]
(EBCDIC blanks) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/s390/kernel/ipl.c:835:
+                        /* read scp info failed: set empty loadparm$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: arch/s390/kernel/ipl.c:836:
+                        memset(reipl_block_ccw->ipl_info.ccw.load_param,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#250: FILE: arch/s390/kernel/ipl.c:836:
+                        /* read scp info failed: set empty loadparm
+                        memset(reipl_block_ccw->ipl_info.ccw.load_param,

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: arch/s390/kernel/ipl.c:837:
+                               LOADPARM_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: arch/s390/kernel/ipl.c:838:
+            /* FIXME: check for diag308_set_works when enabling diag ccw$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/s390/kernel/ipl.c:839:
+            if (!MACHINE_IS_VM)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#255: FILE: arch/s390/kernel/ipl.c:839:
+            /* FIXME: check for diag308_set_works when enabling diag ccw
+            if (!MACHINE_IS_VM)

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/s390/kernel/ipl.c:840:
+                        sys_reipl_ccw_loadparm_attr.attr.mode = S_IRUGO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: arch/s390/kernel/ipl.c:926:
+            if(!(SCCB_FLAG & 0x2) || !SCCB_VALID)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/s390/kernel/ipl.c:926:
+            if(!(SCCB_FLAG & 0x2) || !SCCB_VALID)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#271: FILE: arch/s390/kernel/ipl.c:926:
+            if(!(SCCB_FLAG & 0x2) || !SCCB_VALID)
                         return 0; /* LDIPL DUMP is not installed */

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: arch/s390/kernel/ipl.c:926:
+            if(!(SCCB_FLAG & 0x2) || !SCCB_VALID)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24104.commit.b6a11ca5b42d2dd65a32ea87275ca483ba27c33e total: 65 errors, 60 warnings, 12 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24104.commit.b6a11ca5b42d2dd65a32ea87275ca483ba27c33e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
