WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/i386/mach-xen/memory.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#85: FILE: arch/i386/mach-xen/memory.c:6:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: arch/i386/mach-xen/memory.c:13:
+	BUG_ON(pte == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#92: FILE: arch/i386/mach-xen/memory.c:13:
+	BUG_ON(pte == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#107: FILE: arch/i386/mach-xen/memory.c:28:
+	BUG_ON(pte == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#107: FILE: arch/i386/mach-xen/memory.c:28:
+	BUG_ON(pte == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#109: FILE: arch/i386/mach-xen/memory.c:30:
+	BUG_ON(rc);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: include/asm-i386/mach-default/mach_page.h:1:
+#ifndef __ASM_MACH_PAGE_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: include/asm-i386/mach-xen/mach_page.h:1:
+#ifndef __ASM_MACH_PAGE_H

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#156: FILE: include/asm-i386/mach-xen/mach_page.h:34:
+	asm (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#163: FILE: include/asm-i386/mach-xen/mach_page.h:41:
+		: "=r" (pfn) : "m" (machine_to_phys_mapping[mfn]) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#178: FILE: include/asm-i386/mach-xen/mach_page.h:56:
+typedef unsigned long long paddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#179: FILE: include/asm-i386/mach-xen/mach_page.h:57:
+typedef unsigned long long maddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#181: FILE: include/asm-i386/mach-xen/mach_page.h:59:
+typedef unsigned long paddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#182: FILE: include/asm-i386/mach-xen/mach_page.h:60:
+typedef unsigned long maddr_t;

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_pte' - possible side-effects?
#188: FILE: include/asm-i386/mach-xen/mach_page.h:66:
+#define pte_mfn(_pte) (((_pte).pte_low >> PAGE_SHIFT) |\
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#189: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))
                                                         ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56368.commit.c07bde393cba50a70951b6830003edc0e7fc6b4c total: 2 errors, 11 warnings, 6 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56368.commit.c07bde393cba50a70951b6830003edc0e7fc6b4c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
