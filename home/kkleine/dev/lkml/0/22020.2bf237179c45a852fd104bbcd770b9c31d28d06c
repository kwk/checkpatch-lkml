CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#41: 
signed-off-by   Luming.yu@gmail.com
              ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/video/output.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#71: FILE: drivers/video/output.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: drivers/video/output.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#81: FILE: drivers/video/output.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/video/output.c:34:
+static ssize_t video_output_show_state(struct class_device *dev,char *buf)
                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: drivers/video/output.c:38:
+	struct output_device *od = to_output_device(dev);
+	if (od->props)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: drivers/video/output.c:39:
+		ret_size = sprintf(buf,"%.8x\n",od->props->get_status(od));
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: drivers/video/output.c:39:
+		ret_size = sprintf(buf,"%.8x\n",od->props->get_status(od));
 		                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/video/output.c:44:
+static ssize_t video_output_store_state(struct class_device *dev,
+	const char *buf,size_t count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/video/output.c:44:
+	const char *buf,size_t count)
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#100: FILE: drivers/video/output.c:48:
+	int request_state = simple_strtoul(buf,&endp,0);
 	                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#100: FILE: drivers/video/output.c:48:
+	int request_state = simple_strtoul(buf,&endp,0);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: drivers/video/output.c:48:
+	int request_state = simple_strtoul(buf,&endp,0);
 	                                            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#100: FILE: drivers/video/output.c:48:
+	int request_state = simple_strtoul(buf,&endp,0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/video/output.c:51:
+        if (*endp && isspace(*endp))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/video/output.c:51:
+        if (*endp && isspace(*endp))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/video/output.c:52:
+                size++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/video/output.c:52:
+                size++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/video/output.c:53:
+        if (size != count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/video/output.c:53:
+        if (size != count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: drivers/video/output.c:54:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/video/output.c:54:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/video/output.c:65:
+        struct output_device *od = to_output_device(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/video/output.c:65:
+        struct output_device *od = to_output_device(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/video/output.c:66:
+        kfree(od);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: drivers/video/output.c:66:
+        struct output_device *od = to_output_device(dev);
+        kfree(od);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/video/output.c:66:
+        kfree(od);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/video/output.c:81:
+struct output_device *video_output_register(const char *name,
+	struct device *dev,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: drivers/video/output.c:88:
+	new_dev = kzalloc(sizeof(struct output_device),GFP_KERNEL);
 	                                              ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_dev)...) over kzalloc(sizeof(struct output_device)...)
#140: FILE: drivers/video/output.c:88:
+	new_dev = kzalloc(sizeof(struct output_device),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: drivers/video/output.c:96:
+	strlcpy(new_dev->class_dev.class_id,name,KOBJ_NAME_LEN);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: drivers/video/output.c:96:
+	strlcpy(new_dev->class_dev.class_id,name,KOBJ_NAME_LEN);
 	                                        ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#148: FILE: drivers/video/output.c:96:
+	strlcpy(new_dev->class_dev.class_id,name,KOBJ_NAME_LEN);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/video/output.c:97:
+	class_set_devdata(&new_dev->class_dev,devdata);
 	                                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#188: FILE: include/linux/output.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#205: FILE: include/linux/output.h:18:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#206: FILE: include/linux/output.h:19:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_device *' should also have an identifier name
#215: FILE: include/linux/output.h:28:
+	int (*set_state)(struct output_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_device *' should also have an identifier name
#216: FILE: include/linux/output.h:29:
+	int (*get_status)(struct output_device *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#218: FILE: include/linux/output.h:31:
+};
+struct output_device {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#223: FILE: include/linux/output.h:36:
+};
+#define to_output_device(obj) container_of(obj, struct output_device, class_dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: include/linux/output.h:38:
+struct output_device *video_output_register(const char *name,
+	struct device *dev,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22020.commit.2bf237179c45a852fd104bbcd770b9c31d28d06c total: 21 errors, 15 warnings, 8 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22020.commit.2bf237179c45a852fd104bbcd770b9c31d28d06c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
