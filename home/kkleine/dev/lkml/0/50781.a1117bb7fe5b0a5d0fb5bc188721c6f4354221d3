WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
The implementation comes from Zach's [RFC, PATCH 10/24] i386 Vmi descriptor changes:

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#45: 
  Signed-off-by: Zachary Amsden <zach@vmware.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#104: FILE: arch/i386/kernel/traps.c:1141:
+	_set_gate(n, DESCTYPE_TASK, (void *)0, (gdt_entry<<3));
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: include/asm-i386/desc.h:45:
+static inline void pack_descriptor(__u32 *a, __u32 *b,
+	unsigned long base, unsigned long limit, unsigned char type, unsigned char flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: include/asm-i386/desc.h:53:
+static inline void pack_gate(__u32 *a, __u32 *b,
+	unsigned long base, unsigned short seg, unsigned char type, unsigned char flags)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: include/asm-i386/desc.h:59:
+#define DESCTYPE_LDT ^I0x82^I/* present, system, DPL-0, LDT */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: include/asm-i386/desc.h:60:
+#define DESCTYPE_TSS ^I0x89^I/* present, system, DPL-0, 32-bit TSS */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: include/asm-i386/desc.h:72:
+	__u32 a, b;
+	pack_gate(&a, &b, (unsigned long)addr, seg, type, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: include/asm-i386/desc.h:79:
+	__u32 a, b;
+	pack_descriptor(&a, &b, (unsigned long)addr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: include/asm-i386/desc.h:88:
+	__u32 a, b;
+	pack_descriptor(&a, &b, (unsigned long)addr,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: include/asm-i386/desc.h:94:
+#define set_tss_desc(cpu,addr) __set_tss_desc(cpu, GDT_ENTRY_TSS, addr)
                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#236: FILE: include/asm-i386/no_paravirt_desc.h:1:
+#ifndef __ASM_NO_PARAVIRT_DESC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: include/asm-i386/no_paravirt_desc.h:4:
+ * processor.h, which needs paravirt.h... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#241: FILE: include/asm-i386/no_paravirt_desc.h:6:
+#define load_TR_desc() __asm__ __volatile__("ltr %w0"::"q" (GDT_ENTRY_TSS*8))
                                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#241: FILE: include/asm-i386/no_paravirt_desc.h:6:
+#define load_TR_desc() __asm__ __volatile__("ltr %w0"::"q" (GDT_ENTRY_TSS*8))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#242: FILE: include/asm-i386/no_paravirt_desc.h:7:
+#define load_LDT_desc() __asm__ __volatile__("lldt %w0"::"q" (GDT_ENTRY_LDT*8))
                                                                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#242: FILE: include/asm-i386/no_paravirt_desc.h:7:
+#define load_LDT_desc() __asm__ __volatile__("lldt %w0"::"q" (GDT_ENTRY_LDT*8))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#244: FILE: include/asm-i386/no_paravirt_desc.h:9:
+#define load_gdt(dtr) __asm__ __volatile("lgdt %0"::"m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#244: FILE: include/asm-i386/no_paravirt_desc.h:9:
+#define load_gdt(dtr) __asm__ __volatile("lgdt %0"::"m" (*dtr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#245: FILE: include/asm-i386/no_paravirt_desc.h:10:
+#define load_idt(dtr) __asm__ __volatile("lidt %0"::"m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#245: FILE: include/asm-i386/no_paravirt_desc.h:10:
+#define load_idt(dtr) __asm__ __volatile("lidt %0"::"m" (*dtr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#246: FILE: include/asm-i386/no_paravirt_desc.h:11:
+#define load_tr(tr) __asm__ __volatile("ltr %0"::"m" (tr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#247: FILE: include/asm-i386/no_paravirt_desc.h:12:
+#define load_ldt(ldt) __asm__ __volatile("lldt %0"::"m" (ldt))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#249: FILE: include/asm-i386/no_paravirt_desc.h:14:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#249: FILE: include/asm-i386/no_paravirt_desc.h:14:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#249: FILE: include/asm-i386/no_paravirt_desc.h:14:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#250: FILE: include/asm-i386/no_paravirt_desc.h:15:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#250: FILE: include/asm-i386/no_paravirt_desc.h:15:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#250: FILE: include/asm-i386/no_paravirt_desc.h:15:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#251: FILE: include/asm-i386/no_paravirt_desc.h:16:
+#define store_tr(tr) __asm__ ("str %0":"=m" (tr))
                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#251: FILE: include/asm-i386/no_paravirt_desc.h:16:
+#define store_tr(tr) __asm__ ("str %0":"=m" (tr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#252: FILE: include/asm-i386/no_paravirt_desc.h:17:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#252: FILE: include/asm-i386/no_paravirt_desc.h:17:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#260: FILE: include/asm-i386/no_paravirt_desc.h:25:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#260: FILE: include/asm-i386/no_paravirt_desc.h:25:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#260: FILE: include/asm-i386/no_paravirt_desc.h:25:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#267: FILE: include/asm-i386/no_paravirt_desc.h:32:
+	__u32 *lp = (__u32 *)((char *)dt + entry*8);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#269: FILE: include/asm-i386/no_paravirt_desc.h:34:
+	*(lp+1) = entry_b;
 	    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: include/asm-i386/paravirt_desc.h:1:
+#ifndef __ASM_PARAVIRT_DESC_H

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.50781.commit.a1117bb7fe5b0a5d0fb5bc188721c6f4354221d3 total: 12 errors, 10 warnings, 17 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.50781.commit.a1117bb7fe5b0a5d0fb5bc188721c6f4354221d3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
