ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: Documentation/drivers/display/cfag12864b:274:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#493: FILE: drivers/display/cfag12864b.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: drivers/display/cfag12864b.c:12:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#514: FILE: drivers/display/cfag12864b.c:22:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#519: FILE: drivers/display/cfag12864b.c:27:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#525: FILE: drivers/display/cfag12864b.c:33:
+static const unsigned int FirstMinor = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <FirstMinor>
#525: FILE: drivers/display/cfag12864b.c:33:
+static const unsigned int FirstMinor = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <nDevices>
#526: FILE: drivers/display/cfag12864b.c:34:
+static const unsigned int nDevices = 1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#527: FILE: drivers/display/cfag12864b.c:35:
+static const char * Name = NAME;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Name>
#527: FILE: drivers/display/cfag12864b.c:35:
+static const char * Name = NAME;

CHECK:CAMELCASE: Avoid CamelCase: <Major>
#529: FILE: drivers/display/cfag12864b.c:37:
+static int Major;

CHECK:CAMELCASE: Avoid CamelCase: <FirstDevice>
#530: FILE: drivers/display/cfag12864b.c:38:
+static dev_t FirstDevice;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#533: FILE: drivers/display/cfag12864b.c:41:
+struct cfag12864b
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Minor>
#534: FILE: drivers/display/cfag12864b.c:42:
+	int Minor;

CHECK:CAMELCASE: Avoid CamelCase: <Device>
#535: FILE: drivers/display/cfag12864b.c:43:
+	dev_t Device;

CHECK:CAMELCASE: Avoid CamelCase: <CharDevice>
#536: FILE: drivers/display/cfag12864b.c:44:
+	struct cdev CharDevice;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#539: FILE: drivers/display/cfag12864b.c:47:
+static struct cfag12864b * Devices;

CHECK:CAMELCASE: Avoid CamelCase: <Devices>
#539: FILE: drivers/display/cfag12864b.c:47:
+static struct cfag12864b * Devices;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#541: FILE: drivers/display/cfag12864b.c:49:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#547: FILE: drivers/display/cfag12864b.c:55:
+#define Bit(n) ((unsigned char)(1<<(n)))
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Bit>
#547: FILE: drivers/display/cfag12864b.c:55:
+#define Bit(n) ((unsigned char)(1<<(n)))

CHECK:CAMELCASE: Avoid CamelCase: <NoBit>
#548: FILE: drivers/display/cfag12864b.c:56:
+#define NoBit(n) ((unsigned char)(~Bit(n)))

CHECK:CAMELCASE: Avoid CamelCase: <Bits>
#549: FILE: drivers/display/cfag12864b.c:57:
+static const unsigned int Bits = 8;

CHECK:CAMELCASE: Avoid CamelCase: <Width>
#551: FILE: drivers/display/cfag12864b.c:59:
+static const unsigned int Width = CFAG12864B_WIDTH;

CHECK:CAMELCASE: Avoid CamelCase: <Height>
#552: FILE: drivers/display/cfag12864b.c:60:
+static const unsigned int Height = CFAG12864B_HEIGHT;

CHECK:CAMELCASE: Avoid CamelCase: <MatrixSize>
#553: FILE: drivers/display/cfag12864b.c:61:
+static const unsigned int MatrixSize = CFAG12864B_MATRIXSIZE;

CHECK:CAMELCASE: Avoid CamelCase: <Controllers>
#554: FILE: drivers/display/cfag12864b.c:62:
+static const unsigned int Controllers = CFAG12864B_CONTROLLERS;

CHECK:CAMELCASE: Avoid CamelCase: <Pages>
#555: FILE: drivers/display/cfag12864b.c:63:
+static const unsigned int Pages = CFAG12864B_PAGES;

CHECK:CAMELCASE: Avoid CamelCase: <Addresses>
#556: FILE: drivers/display/cfag12864b.c:64:
+static const unsigned int Addresses = CFAG12864B_ADDRESSES;

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#557: FILE: drivers/display/cfag12864b.c:65:
+static const unsigned int Size = CFAG12864B_SIZE;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#559: FILE: drivers/display/cfag12864b.c:67:
+static unsigned char State = 0;

CHECK:CAMELCASE: Avoid CamelCase: <State>
#559: FILE: drivers/display/cfag12864b.c:67:
+static unsigned char State = 0;

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Set>
#561: FILE: drivers/display/cfag12864b.c:69:
+void cfag12864b_Set(void)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#563: FILE: drivers/display/cfag12864b.c:71:
+	ks0108_WriteControl(State ^ (Bit(3) | Bit(1) | Bit(0)) );

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_WriteControl>
#563: FILE: drivers/display/cfag12864b.c:71:
+	ks0108_WriteControl(State ^ (Bit(3) | Bit(1) | Bit(0)) );

CHECK:CAMELCASE: Avoid CamelCase: <_State>
#566: FILE: drivers/display/cfag12864b.c:74:
+void cfag12864b_E(unsigned char _State)

ERROR:SPACING: space required before the open parenthesis '('
#568: FILE: drivers/display/cfag12864b.c:76:
+	if(_State)

ERROR:SPACING: space required before the open parenthesis '('
#577: FILE: drivers/display/cfag12864b.c:85:
+	if(_State)

ERROR:SPACING: space required before the open parenthesis '('
#586: FILE: drivers/display/cfag12864b.c:94:
+	if(_State)

ERROR:SPACING: space required before the open parenthesis '('
#595: FILE: drivers/display/cfag12864b.c:103:
+	if(_State)

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_FirstController>
#602: FILE: drivers/display/cfag12864b.c:110:
+void cfag12864b_FirstController(unsigned char _State)

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: drivers/display/cfag12864b.c:112:
+	if(_State)

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_SecondController>
#610: FILE: drivers/display/cfag12864b.c:118:
+void cfag12864b_SecondController(unsigned char _State)

ERROR:SPACING: space required before the open parenthesis '('
#612: FILE: drivers/display/cfag12864b.c:120:
+	if(_State)

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Controllers>
#618: FILE: drivers/display/cfag12864b.c:126:
+void cfag12864b_Controllers(unsigned char _First, unsigned char _Second)

CHECK:CAMELCASE: Avoid CamelCase: <_First>
#618: FILE: drivers/display/cfag12864b.c:126:
+void cfag12864b_Controllers(unsigned char _First, unsigned char _Second)

CHECK:CAMELCASE: Avoid CamelCase: <_Second>
#618: FILE: drivers/display/cfag12864b.c:126:
+void cfag12864b_Controllers(unsigned char _First, unsigned char _Second)

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Controller>
#624: FILE: drivers/display/cfag12864b.c:132:
+void cfag12864b_Controller(unsigned char _Which)

CHECK:CAMELCASE: Avoid CamelCase: <_Which>
#624: FILE: drivers/display/cfag12864b.c:132:
+void cfag12864b_Controller(unsigned char _Which)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#626: FILE: drivers/display/cfag12864b.c:134:
+	if(_Which==0)
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: drivers/display/cfag12864b.c:134:
+	if(_Which==0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#627: FILE: drivers/display/cfag12864b.c:135:
+		cfag12864b_Controllers(1,0);
 		                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#628: FILE: drivers/display/cfag12864b.c:136:
+	else if(_Which==1)
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: drivers/display/cfag12864b.c:136:
+	else if(_Which==1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#629: FILE: drivers/display/cfag12864b.c:137:
+		cfag12864b_Controllers(0,1);
 		                        ^

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_DisplayState>
#632: FILE: drivers/display/cfag12864b.c:140:
+void cfag12864b_DisplayState(unsigned char _State)

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_DisplayState>
#636: FILE: drivers/display/cfag12864b.c:144:
+	ks0108_DisplayState(_State);

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Address>
#640: FILE: drivers/display/cfag12864b.c:148:
+void cfag12864b_Address(unsigned char _Address)

CHECK:CAMELCASE: Avoid CamelCase: <_Address>
#640: FILE: drivers/display/cfag12864b.c:148:
+void cfag12864b_Address(unsigned char _Address)

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_Address>
#644: FILE: drivers/display/cfag12864b.c:152:
+	ks0108_Address(_Address);

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Page>
#648: FILE: drivers/display/cfag12864b.c:156:
+void cfag12864b_Page(unsigned char _Page)

CHECK:CAMELCASE: Avoid CamelCase: <_Page>
#648: FILE: drivers/display/cfag12864b.c:156:
+void cfag12864b_Page(unsigned char _Page)

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_Page>
#652: FILE: drivers/display/cfag12864b.c:160:
+	ks0108_Page(_Page);

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_StartLine>
#656: FILE: drivers/display/cfag12864b.c:164:
+void cfag12864b_StartLine(unsigned char _StartLine)

CHECK:CAMELCASE: Avoid CamelCase: <_StartLine>
#656: FILE: drivers/display/cfag12864b.c:164:
+void cfag12864b_StartLine(unsigned char _StartLine)

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_StartLine>
#660: FILE: drivers/display/cfag12864b.c:168:
+	ks0108_StartLine(_StartLine);

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_WriteByte>
#664: FILE: drivers/display/cfag12864b.c:172:
+void cfag12864b_WriteByte(unsigned char _Byte)

CHECK:CAMELCASE: Avoid CamelCase: <_Byte>
#664: FILE: drivers/display/cfag12864b.c:172:
+void cfag12864b_WriteByte(unsigned char _Byte)

CHECK:CAMELCASE: Avoid CamelCase: <ks0108_WriteData>
#668: FILE: drivers/display/cfag12864b.c:176:
+	ks0108_WriteData(_Byte);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#677: FILE: drivers/display/cfag12864b.c:185:
+
+

WARNING:TYPO_SPELLING: 'Auxiliar' may be misspelled - perhaps 'Auxiliary'?
#680: FILE: drivers/display/cfag12864b.c:188:
+// Auxiliar
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#683: FILE: drivers/display/cfag12864b.c:191:
+void NormalizeOffset(unsigned int * _Offset)

CHECK:CAMELCASE: Avoid CamelCase: <NormalizeOffset>
#683: FILE: drivers/display/cfag12864b.c:191:
+void NormalizeOffset(unsigned int * _Offset)

CHECK:CAMELCASE: Avoid CamelCase: <_Offset>
#683: FILE: drivers/display/cfag12864b.c:191:
+void NormalizeOffset(unsigned int * _Offset)

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#685: FILE: drivers/display/cfag12864b.c:193:
+	if(*_Offset>=Pages*Addresses)
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#685: FILE: drivers/display/cfag12864b.c:193:
+	if(*_Offset>=Pages*Addresses)
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#685: FILE: drivers/display/cfag12864b.c:193:
+	if(*_Offset>=Pages*Addresses)

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#686: FILE: drivers/display/cfag12864b.c:194:
+		*_Offset-=Pages*Addresses;
 		        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#686: FILE: drivers/display/cfag12864b.c:194:
+		*_Offset-=Pages*Addresses;
 		               ^

CHECK:CAMELCASE: Avoid CamelCase: <GetAddress>
#689: FILE: drivers/display/cfag12864b.c:197:
+unsigned char GetAddress(unsigned int _Offset)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#692: FILE: drivers/display/cfag12864b.c:200:
+	return _Offset%Addresses;
 	              ^

CHECK:CAMELCASE: Avoid CamelCase: <GetController>
#695: FILE: drivers/display/cfag12864b.c:203:
+unsigned char GetController(unsigned int _Offset)

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#697: FILE: drivers/display/cfag12864b.c:205:
+	if(_Offset<Pages*Addresses)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#697: FILE: drivers/display/cfag12864b.c:205:
+	if(_Offset<Pages*Addresses)
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#697: FILE: drivers/display/cfag12864b.c:205:
+	if(_Offset<Pages*Addresses)

CHECK:CAMELCASE: Avoid CamelCase: <GetPage>
#702: FILE: drivers/display/cfag12864b.c:210:
+unsigned char GetPage(unsigned int _Offset)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#705: FILE: drivers/display/cfag12864b.c:213:
+	return _Offset/Addresses;
 	              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: drivers/display/cfag12864b.c:216:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_On>
#714: FILE: drivers/display/cfag12864b.c:222:
+void cfag12864b_On(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: drivers/display/cfag12864b.c:224:
+	cfag12864b_Controllers(1,1);
 	                        ^

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Off>
#720: FILE: drivers/display/cfag12864b.c:228:
+void cfag12864b_Off(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: drivers/display/cfag12864b.c:230:
+	cfag12864b_Controllers(1,1);
 	                        ^

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Clear>
#726: FILE: drivers/display/cfag12864b.c:234:
+void cfag12864b_Clear(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#728: FILE: drivers/display/cfag12864b.c:236:
+	unsigned char Page,Address;
 	                  ^

CHECK:CAMELCASE: Avoid CamelCase: <Page>
#728: FILE: drivers/display/cfag12864b.c:236:
+	unsigned char Page,Address;

CHECK:CAMELCASE: Avoid CamelCase: <Address>
#728: FILE: drivers/display/cfag12864b.c:236:
+	unsigned char Page,Address;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: drivers/display/cfag12864b.c:238:
+	cfag12864b_Controllers(1,1);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#731: FILE: drivers/display/cfag12864b.c:239:
+	for(Page=0; Page<Pages; ++Page) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#731: FILE: drivers/display/cfag12864b.c:239:
+	for(Page=0; Page<Pages; ++Page) {
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#731: FILE: drivers/display/cfag12864b.c:239:
+	for(Page=0; Page<Pages; ++Page) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#734: FILE: drivers/display/cfag12864b.c:242:
+		for(Address=0; Address<Addresses; ++Address)
 		           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#734: FILE: drivers/display/cfag12864b.c:242:
+		for(Address=0; Address<Addresses; ++Address)
 		                      ^

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: drivers/display/cfag12864b.c:242:
+		for(Address=0; Address<Addresses; ++Address)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#739: FILE: drivers/display/cfag12864b.c:247:
+void cfag12864b_Write(

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Write>
#739: FILE: drivers/display/cfag12864b.c:247:
+void cfag12864b_Write(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#741: FILE: drivers/display/cfag12864b.c:249:
+	unsigned char * _Buffer,

CHECK:CAMELCASE: Avoid CamelCase: <_Buffer>
#741: FILE: drivers/display/cfag12864b.c:249:
+	unsigned char * _Buffer,

CHECK:CAMELCASE: Avoid CamelCase: <_Count>
#742: FILE: drivers/display/cfag12864b.c:250:
+	unsigned short _Count)

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#747: FILE: drivers/display/cfag12864b.c:255:
+	unsigned char Controller = 0xFF;

CHECK:CAMELCASE: Avoid CamelCase: <tmpController>
#751: FILE: drivers/display/cfag12864b.c:259:
+	unsigned char tmpController, tmpPage, tmpAddress;

CHECK:CAMELCASE: Avoid CamelCase: <tmpPage>
#751: FILE: drivers/display/cfag12864b.c:259:
+	unsigned char tmpController, tmpPage, tmpAddress;

CHECK:CAMELCASE: Avoid CamelCase: <tmpAddress>
#751: FILE: drivers/display/cfag12864b.c:259:
+	unsigned char tmpController, tmpPage, tmpAddress;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#753: FILE: drivers/display/cfag12864b.c:261:
+	for(i=0; i<_Count; ++i, ++_Offset, ++Address) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#753: FILE: drivers/display/cfag12864b.c:261:
+	for(i=0; i<_Count; ++i, ++_Offset, ++Address) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#753: FILE: drivers/display/cfag12864b.c:261:
+	for(i=0; i<_Count; ++i, ++_Offset, ++Address) {

ERROR:SPACING: space required before the open parenthesis '('
#758: FILE: drivers/display/cfag12864b.c:266:
+		if(Controller != tmpController) {

ERROR:SPACING: space required before the open parenthesis '('
#763: FILE: drivers/display/cfag12864b.c:271:
+		if(Page != tmpPage) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#770: FILE: drivers/display/cfag12864b.c:278:
+		/*if(Address != tmpAddress) {
+			Address = tmpAddress;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#773: FILE: drivers/display/cfag12864b.c:281:
+		}*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#776: FILE: drivers/display/cfag12864b.c:284:
+		/*if(tmpController == 0) {
+			if(Address != tmpAddress) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#784: FILE: drivers/display/cfag12864b.c:292:
+		}*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#797: FILE: drivers/display/cfag12864b.c:305:
+void cfag12864b_Format(unsigned char * _Src)

CHECK:CAMELCASE: Avoid CamelCase: <cfag12864b_Format>
#797: FILE: drivers/display/cfag12864b.c:305:
+void cfag12864b_Format(unsigned char * _Src)

CHECK:CAMELCASE: Avoid CamelCase: <_Src>
#797: FILE: drivers/display/cfag12864b.c:305:
+void cfag12864b_Format(unsigned char * _Src)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: drivers/display/cfag12864b.c:307:
+	unsigned short Controller,Page,Address,Bit;
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: drivers/display/cfag12864b.c:307:
+	unsigned short Controller,Page,Address,Bit;
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: drivers/display/cfag12864b.c:307:
+	unsigned short Controller,Page,Address,Bit;
 	                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#800: FILE: drivers/display/cfag12864b.c:308:
+	unsigned char * Dest = kmalloc(sizeof(unsigned char)*Size,GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#800: FILE: drivers/display/cfag12864b.c:308:
+	unsigned char * Dest = kmalloc(sizeof(unsigned char)*Size,GFP_KERNEL);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#800: FILE: drivers/display/cfag12864b.c:308:
+	unsigned char * Dest = kmalloc(sizeof(unsigned char)*Size,GFP_KERNEL);
 	                                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Dest>
#800: FILE: drivers/display/cfag12864b.c:308:
+	unsigned char * Dest = kmalloc(sizeof(unsigned char)*Size,GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#802: FILE: drivers/display/cfag12864b.c:310:
+	if(Dest == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Dest"
#802: FILE: drivers/display/cfag12864b.c:310:
+	if(Dest == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#803: FILE: drivers/display/cfag12864b.c:311:
+		printk(PRINTK_PREFIX "Format: ERROR: "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#803: FILE: drivers/display/cfag12864b.c:311:
+	if(Dest == NULL) {
+		printk(PRINTK_PREFIX "Format: ERROR: "

WARNING:SPLIT_STRING: quoted string split across lines
#804: FILE: drivers/display/cfag12864b.c:312:
+		printk(PRINTK_PREFIX "Format: ERROR: "
+			"kmalloc\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#808: FILE: drivers/display/cfag12864b.c:316:
+	for(Controller=0; Controller<Controllers; ++Controller)
+	for(Page=0; Page<Pages; ++Page)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#808: FILE: drivers/display/cfag12864b.c:316:
+	for(Controller=0; Controller<Controllers; ++Controller)
 	              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#808: FILE: drivers/display/cfag12864b.c:316:
+	for(Controller=0; Controller<Controllers; ++Controller)
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#808: FILE: drivers/display/cfag12864b.c:316:
+	for(Controller=0; Controller<Controllers; ++Controller)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#809: FILE: drivers/display/cfag12864b.c:317:
+	for(Page=0; Page<Pages; ++Page)
+	for(Address=0; Address<Addresses; ++Address) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#809: FILE: drivers/display/cfag12864b.c:317:
+	for(Page=0; Page<Pages; ++Page)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#809: FILE: drivers/display/cfag12864b.c:317:
+	for(Page=0; Page<Pages; ++Page)
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#809: FILE: drivers/display/cfag12864b.c:317:
+	for(Page=0; Page<Pages; ++Page)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#810: FILE: drivers/display/cfag12864b.c:318:
+	for(Address=0; Address<Addresses; ++Address) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#810: FILE: drivers/display/cfag12864b.c:318:
+	for(Address=0; Address<Addresses; ++Address) {
 	                      ^

ERROR:SPACING: space required before the open parenthesis '('
#810: FILE: drivers/display/cfag12864b.c:318:
+	for(Address=0; Address<Addresses; ++Address) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#811: FILE: drivers/display/cfag12864b.c:319:
+		Dest[(Controller*Pages+Page)*Addresses+Address]=0;
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#811: FILE: drivers/display/cfag12864b.c:319:
+		Dest[(Controller*Pages+Page)*Addresses+Address]=0;
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#811: FILE: drivers/display/cfag12864b.c:319:
+		Dest[(Controller*Pages+Page)*Addresses+Address]=0;
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#811: FILE: drivers/display/cfag12864b.c:319:
+		Dest[(Controller*Pages+Page)*Addresses+Address]=0;
 		                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#811: FILE: drivers/display/cfag12864b.c:319:
+		Dest[(Controller*Pages+Page)*Addresses+Address]=0;
 		                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#812: FILE: drivers/display/cfag12864b.c:320:
+		for(Bit=0; Bit<Bits; ++Bit)
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#812: FILE: drivers/display/cfag12864b.c:320:
+		for(Bit=0; Bit<Bits; ++Bit)
 		              ^

ERROR:SPACING: space required before the open parenthesis '('
#812: FILE: drivers/display/cfag12864b.c:320:
+		for(Bit=0; Bit<Bits; ++Bit)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])
 			                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#813: FILE: drivers/display/cfag12864b.c:321:
+			if(_Src[Controller*Addresses+Address+(Page*Bits+Bit)*Width])

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#814: FILE: drivers/display/cfag12864b.c:322:
+				Dest[(Controller*Pages+Page)*Addresses+Address]|=Bit(Bit);
 				                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#814: FILE: drivers/display/cfag12864b.c:322:
+				Dest[(Controller*Pages+Page)*Addresses+Address]|=Bit(Bit);
 				                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#814: FILE: drivers/display/cfag12864b.c:322:
+				Dest[(Controller*Pages+Page)*Addresses+Address]|=Bit(Bit);
 				                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#814: FILE: drivers/display/cfag12864b.c:322:
+				Dest[(Controller*Pages+Page)*Addresses+Address]|=Bit(Bit);
 				                                      ^

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#814: FILE: drivers/display/cfag12864b.c:322:
+				Dest[(Controller*Pages+Page)*Addresses+Address]|=Bit(Bit);
 				                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#817: FILE: drivers/display/cfag12864b.c:325:
+	cfag12864b_Write(0,Dest,Size);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#817: FILE: drivers/display/cfag12864b.c:325:
+	cfag12864b_Write(0,Dest,Size);
 	                       ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#822: FILE: drivers/display/cfag12864b.c:330:
+EXPORT_SYMBOL_GPL(cfag12864b_On);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#823: FILE: drivers/display/cfag12864b.c:331:
+EXPORT_SYMBOL_GPL(cfag12864b_Off);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#824: FILE: drivers/display/cfag12864b.c:332:
+EXPORT_SYMBOL_GPL(cfag12864b_Clear);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#825: FILE: drivers/display/cfag12864b.c:333:
+EXPORT_SYMBOL_GPL(cfag12864b_Write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#826: FILE: drivers/display/cfag12864b.c:334:
+EXPORT_SYMBOL_GPL(cfag12864b_Format);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#828: FILE: drivers/display/cfag12864b.c:336:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#833: FILE: drivers/display/cfag12864b.c:341:
+int Open(

CHECK:CAMELCASE: Avoid CamelCase: <Open>
#833: FILE: drivers/display/cfag12864b.c:341:
+int Open(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#834: FILE: drivers/display/cfag12864b.c:342:
+	struct inode * _Inode,

CHECK:CAMELCASE: Avoid CamelCase: <_Inode>
#834: FILE: drivers/display/cfag12864b.c:342:
+	struct inode * _Inode,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#835: FILE: drivers/display/cfag12864b.c:343:
+	struct file * _File)

CHECK:CAMELCASE: Avoid CamelCase: <_File>
#835: FILE: drivers/display/cfag12864b.c:343:
+	struct file * _File)

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#838: FILE: drivers/display/cfag12864b.c:345:
cfag12864b, CharDevice);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#843: FILE: drivers/display/cfag12864b.c:350:
+loff_t Seek(

CHECK:CAMELCASE: Avoid CamelCase: <Seek>
#843: FILE: drivers/display/cfag12864b.c:350:
+loff_t Seek(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#844: FILE: drivers/display/cfag12864b.c:351:
+	struct file * _File,

CHECK:CAMELCASE: Avoid CamelCase: <_Whence>
#846: FILE: drivers/display/cfag12864b.c:353:
+	int _Whence)

CHECK:CAMELCASE: Avoid CamelCase: <New>
#848: FILE: drivers/display/cfag12864b.c:355:
+	loff_t New;

ERROR:SPACING: space required before the open parenthesis '('
#850: FILE: drivers/display/cfag12864b.c:357:
+	switch(_Whence) {

ERROR:SPACING: space required before the open parenthesis '('
#864: FILE: drivers/display/cfag12864b.c:371:
+	if(New < 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#870: FILE: drivers/display/cfag12864b.c:377:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#871: FILE: drivers/display/cfag12864b.c:378:
+ssize_t Write(

CHECK:CAMELCASE: Avoid CamelCase: <Write>
#871: FILE: drivers/display/cfag12864b.c:378:
+ssize_t Write(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#872: FILE: drivers/display/cfag12864b.c:379:
+	struct file * _File,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#873: FILE: drivers/display/cfag12864b.c:380:
+	const char __user * _Buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: drivers/display/cfag12864b.c:382:
+	loff_t * _Offset)

CHECK:CAMELCASE: Avoid CamelCase: <Result>
#877: FILE: drivers/display/cfag12864b.c:384:
+	int Result;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#878: FILE: drivers/display/cfag12864b.c:385:
+	char * Buffer;

CHECK:CAMELCASE: Avoid CamelCase: <Buffer>
#878: FILE: drivers/display/cfag12864b.c:385:
+	char * Buffer;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#880: FILE: drivers/display/cfag12864b.c:387:
+	if(*_Offset>Size)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#880: FILE: drivers/display/cfag12864b.c:387:
+	if(*_Offset>Size)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#882: FILE: drivers/display/cfag12864b.c:389:
+	if(*_Offset+_Count>Size)
 	           ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#882: FILE: drivers/display/cfag12864b.c:389:
+	if(*_Offset+_Count>Size)
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#882: FILE: drivers/display/cfag12864b.c:389:
+	if(*_Offset+_Count>Size)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#883: FILE: drivers/display/cfag12864b.c:390:
+		_Count=Size-*_Offset;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#883: FILE: drivers/display/cfag12864b.c:390:
+		_Count=Size-*_Offset;
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#885: FILE: drivers/display/cfag12864b.c:392:
+	Buffer = kmalloc(_Count,GFP_KERNEL);
 	                       ^

ERROR:SPACING: space required before the open parenthesis '('
#886: FILE: drivers/display/cfag12864b.c:393:
+	if(Buffer == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Buffer"
#886: FILE: drivers/display/cfag12864b.c:393:
+	if(Buffer == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#887: FILE: drivers/display/cfag12864b.c:394:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'Write', this function's name, in a string
#887: FILE: drivers/display/cfag12864b.c:394:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#887: FILE: drivers/display/cfag12864b.c:394:
+	if(Buffer == NULL) {
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "

WARNING:SPLIT_STRING: quoted string split across lines
#888: FILE: drivers/display/cfag12864b.c:395:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "
+			"kmalloc\n");

ERROR:SPACING: space required before the open parenthesis '('
#893: FILE: drivers/display/cfag12864b.c:400:
+	if(Result != 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#894: FILE: drivers/display/cfag12864b.c:401:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'Write', this function's name, in a string
#894: FILE: drivers/display/cfag12864b.c:401:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "

WARNING:SPLIT_STRING: quoted string split across lines
#895: FILE: drivers/display/cfag12864b.c:402:
+		printk(PRINTK_PREFIX "FOP Write: ERROR: "
+			"copy_from_user\n");

CHECK:CAMELCASE: Avoid CamelCase: <IOCtl_Format>
#910: FILE: drivers/display/cfag12864b.c:417:
+int IOCtl_Format(unsigned long _Arg)

CHECK:CAMELCASE: Avoid CamelCase: <_Arg>
#910: FILE: drivers/display/cfag12864b.c:417:
+int IOCtl_Format(unsigned long _Arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#912: FILE: drivers/display/cfag12864b.c:419:
+	int Result,Return = -ENOTTY;
 	          ^

CHECK:CAMELCASE: Avoid CamelCase: <Return>
#912: FILE: drivers/display/cfag12864b.c:419:
+	int Result,Return = -ENOTTY;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#914: FILE: drivers/display/cfag12864b.c:421:
+	unsigned char * IOCFormatSrc;

CHECK:CAMELCASE: Avoid CamelCase: <IOCFormatSrc>
#914: FILE: drivers/display/cfag12864b.c:421:
+	unsigned char * IOCFormatSrc;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#917: FILE: drivers/display/cfag12864b.c:424:
+	IOCFormatSrc = kmalloc(sizeof(unsigned char)*Width*Height,GFP_KERNEL);
 	                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#917: FILE: drivers/display/cfag12864b.c:424:
+	IOCFormatSrc = kmalloc(sizeof(unsigned char)*Width*Height,GFP_KERNEL);
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#917: FILE: drivers/display/cfag12864b.c:424:
+	IOCFormatSrc = kmalloc(sizeof(unsigned char)*Width*Height,GFP_KERNEL);
 	                                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: drivers/display/cfag12864b.c:425:
+	if(IOCFormatSrc == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!IOCFormatSrc"
#918: FILE: drivers/display/cfag12864b.c:425:
+	if(IOCFormatSrc == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#919: FILE: drivers/display/cfag12864b.c:426:
+		printk(PRINTK_PREFIX "FOP IOCtl: ERROR: "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#919: FILE: drivers/display/cfag12864b.c:426:
+	if(IOCFormatSrc == NULL) {
+		printk(PRINTK_PREFIX "FOP IOCtl: ERROR: "

WARNING:SPLIT_STRING: quoted string split across lines
#920: FILE: drivers/display/cfag12864b.c:427:
+		printk(PRINTK_PREFIX "FOP IOCtl: ERROR: "
+			"IOC FormatWrite: "

WARNING:SPLIT_STRING: quoted string split across lines
#921: FILE: drivers/display/cfag12864b.c:428:
+			"IOC FormatWrite: "
+			"kmalloc\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#926: FILE: drivers/display/cfag12864b.c:433:
+	Result = copy_from_user(

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#929: FILE: drivers/display/cfag12864b.c:436:
+		sizeof(unsigned char)*Width*Height);
 		                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#929: FILE: drivers/display/cfag12864b.c:436:
+		sizeof(unsigned char)*Width*Height);
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#930: FILE: drivers/display/cfag12864b.c:437:
+	if(Result != 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#931: FILE: drivers/display/cfag12864b.c:438:
+		printk(PRINTK_PREFIX "FOP IOCtl: ERROR: "

WARNING:SPLIT_STRING: quoted string split across lines
#932: FILE: drivers/display/cfag12864b.c:439:
+		printk(PRINTK_PREFIX "FOP IOCtl: ERROR: "
+			"IOC FormatWrite: "

WARNING:SPLIT_STRING: quoted string split across lines
#933: FILE: drivers/display/cfag12864b.c:440:
+			"IOC FormatWrite: "
+			"copy_from_user(IOCFormatSrc,...\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: drivers/display/cfag12864b.c:443:
+^I$

WARNING:REPEATED_WORD: Possible repeated word: 'return'
#944: FILE: drivers/display/cfag12864b.c:451:
+	return Return;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#947: FILE: drivers/display/cfag12864b.c:454:
+int IOCtl(

CHECK:CAMELCASE: Avoid CamelCase: <IOCtl>
#947: FILE: drivers/display/cfag12864b.c:454:
+int IOCtl(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: drivers/display/cfag12864b.c:455:
+	struct inode * _Inode,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#949: FILE: drivers/display/cfag12864b.c:456:
+	struct file * _File,

CHECK:CAMELCASE: Avoid CamelCase: <_Cmd>
#950: FILE: drivers/display/cfag12864b.c:457:
+	unsigned int _Cmd,

ERROR:SPACING: space required before the open parenthesis '('
#953: FILE: drivers/display/cfag12864b.c:460:
+	if(_IOC_TYPE(_Cmd) != CFAG12864B_IOC_MAGIC)

ERROR:SPACING: space required before the open parenthesis '('
#955: FILE: drivers/display/cfag12864b.c:462:
+	if(_IOC_NR(_Cmd) > CFAG12864B_IOC_MAXNR)

ERROR:SPACING: space required before the open parenthesis '('
#958: FILE: drivers/display/cfag12864b.c:465:
+	switch(_Cmd) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#977: FILE: drivers/display/cfag12864b.c:484:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Fops>
#979: FILE: drivers/display/cfag12864b.c:486:
+struct file_operations Fops =

WARNING:CONST_STRUCT: struct file_operations should normally be const
#979: FILE: drivers/display/cfag12864b.c:486:
+struct file_operations Fops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#980: FILE: drivers/display/cfag12864b.c:487:
+struct file_operations Fops =
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#988: FILE: drivers/display/cfag12864b.c:495:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#990: FILE: drivers/display/cfag12864b.c:497:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: drivers/display/cfag12864b.c:499:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#994: FILE: drivers/display/cfag12864b.c:501:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1005: FILE: drivers/display/cfag12864b.c:512:
+	printk(PRINTK_PREFIX "Init... ");

ERROR:SPACING: space required before the open parenthesis '('
#1008: FILE: drivers/display/cfag12864b.c:515:
+	if(Result < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1009: FILE: drivers/display/cfag12864b.c:516:
+		printk("ERROR - alloc_chrdev_region\n");

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1014: FILE: drivers/display/cfag12864b.c:521:
+	Devices = kmalloc(nDevices * sizeof(struct cfag12864b), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: space required before the open parenthesis '('
#1015: FILE: drivers/display/cfag12864b.c:522:
+	if(Devices == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Devices"
#1015: FILE: drivers/display/cfag12864b.c:522:
+	if(Devices == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1016: FILE: drivers/display/cfag12864b.c:523:
+		printk("ERROR - kmalloc\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1016: FILE: drivers/display/cfag12864b.c:523:
+	if(Devices == NULL) {
+		printk("ERROR - kmalloc\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1021: FILE: drivers/display/cfag12864b.c:528:
+	for(i=0; i<nDevices; ++i) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1021: FILE: drivers/display/cfag12864b.c:528:
+	for(i=0; i<nDevices; ++i) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1021: FILE: drivers/display/cfag12864b.c:528:
+	for(i=0; i<nDevices; ++i) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1022: FILE: drivers/display/cfag12864b.c:529:
+		Devices[i].Minor = FirstMinor+i;
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1023: FILE: drivers/display/cfag12864b.c:530:
+		Devices[i].Device = MKDEV(Major,Devices[i].Minor);
 		                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around Devices[i].CharDevice
#1025: FILE: drivers/display/cfag12864b.c:532:
+		cdev_init(&(Devices[i].CharDevice), &Fops);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around Devices[i].CharDevice
#1028: FILE: drivers/display/cfag12864b.c:535:
+		Result = cdev_add(&(Devices[i].CharDevice),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/display/cfag12864b.c:536:
+		Result = cdev_add(&(Devices[i].CharDevice),
+			Devices[i].Device, 1);

ERROR:SPACING: space required before the open parenthesis '('
#1030: FILE: drivers/display/cfag12864b.c:537:
+		if(Result < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1031: FILE: drivers/display/cfag12864b.c:538:
+			printk("ERROR - cdev_add\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1036: FILE: drivers/display/cfag12864b.c:543:
+		class_device_create(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1037: FILE: drivers/display/cfag12864b.c:544:
+			display_class,NULL,MKDEV(Major,Devices[i].Minor),
 			             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1037: FILE: drivers/display/cfag12864b.c:544:
+			display_class,NULL,MKDEV(Major,Devices[i].Minor),
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1037: FILE: drivers/display/cfag12864b.c:544:
+			display_class,NULL,MKDEV(Major,Devices[i].Minor),
 			                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1038: FILE: drivers/display/cfag12864b.c:545:
+			NULL,"cfag12864b%d",Devices[i].Minor);
 			    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1038: FILE: drivers/display/cfag12864b.c:545:
+			NULL,"cfag12864b%d",Devices[i].Minor);
 			                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1041: FILE: drivers/display/cfag12864b.c:548:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1045: FILE: drivers/display/cfag12864b.c:552:
+	printk("Done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1054: FILE: drivers/display/cfag12864b.c:561:
+	printk(PRINTK_PREFIX "Exit... ");

ERROR:SPACING: space required before the open parenthesis '('
#1058: FILE: drivers/display/cfag12864b.c:565:
+	if(Devices != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Devices"
#1058: FILE: drivers/display/cfag12864b.c:565:
+	if(Devices != NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1059: FILE: drivers/display/cfag12864b.c:566:
+		for(i=0; i<nDevices; ++i) {
 		     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1059: FILE: drivers/display/cfag12864b.c:566:
+		for(i=0; i<nDevices; ++i) {
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1059: FILE: drivers/display/cfag12864b.c:566:
+		for(i=0; i<nDevices; ++i) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: drivers/display/cfag12864b.c:567:
+			class_device_destroy(display_class,MKDEV(Major,Devices[i].Minor));
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: drivers/display/cfag12864b.c:567:
+			class_device_destroy(display_class,MKDEV(Major,Devices[i].Minor));
 			                                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around Devices[i].CharDevice
#1061: FILE: drivers/display/cfag12864b.c:568:
+			cdev_del(&(Devices[i].CharDevice));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1068: FILE: drivers/display/cfag12864b.c:575:
+	printk("Done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1074: FILE: drivers/display/cfag12864b.c:581:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1087: FILE: drivers/display/display.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1098: FILE: drivers/display/display.c:12:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1109: FILE: drivers/display/display.c:23:
+static char * Name = NAME;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1115: FILE: drivers/display/display.c:29:
+struct class * display_class;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1118: FILE: drivers/display/display.c:32:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1125: FILE: drivers/display/display.c:39:
+	display_class = class_create(THIS_MODULE,Name);
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1126: FILE: drivers/display/display.c:40:
+	if(IS_ERR(display_class)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1127: FILE: drivers/display/display.c:41:
+		printk(PRINTK_PREFIX "ERROR: class_simple_create\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1142: FILE: drivers/display/display.c:56:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1163: FILE: drivers/display/Kconfig:10:
+config DISPLAY
+	tristate "Display support"
+	default n
+	---help---
+	  If you have an extra display, like a small LCD screen, say Y.
+
+	  To compile this as a module, choose M here:
+	  module will be called display.
+
+	  If unsure, say N.
+
+comment "Parallel port dependent:"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1176: FILE: drivers/display/Kconfig:23:
+config KS0108
+	tristate "KS0108 LCD Controller"
+	depends on DISPLAY && PARPORT
+	default n
+	---help---
+	  If you have a LCD display controlled by one or more KS0108
+	  controllers, say Y. You will need also another more specific
+	  driver for your LCD.
+
+	  Depends on Parallel Port support. If you say Y at
+	  parport, you will be able to compile this as a module (M)
+	  and built-in as well (Y). If you said M at parport,
+	  you will be able only to compile this as a module (M).
+
+	  To compile this as a module, choose M here:
+	  module will be called ks0108.
+
+	  If unsure, say N.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1195: FILE: drivers/display/Kconfig:42:
+config CFAG12864B
+	tristate "CFAG12864B LCD Display"
+	depends on KS0108
+	default n
+	---help---
+	  If you have a Crystalfontz 128x64 2-color LCD display,
+	  cfag12864b Series, say Y. You also need the ks0108 LCD
+	  Controller driver.
+
+	  For help about how to wire your LCD to the parallel port,
+	  check this image: http://www.skippari.net/lcd/sekalaista
+	                    /crystalfontz_cfag12864B-TMI-V.png
+
+	  To compile this as a module, choose M here:
+	  module will be called cfag12864b.
+
+	  If unsure, say N.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1222: FILE: drivers/display/ks0108.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1233: FILE: drivers/display/ks0108.c:12:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1241: FILE: drivers/display/ks0108.c:20:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1242: FILE: drivers/display/ks0108.c:21:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1244: FILE: drivers/display/ks0108.c:23:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1248: FILE: drivers/display/ks0108.c:27:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Port>
#1254: FILE: drivers/display/ks0108.c:33:
+static unsigned int Port = 0x378;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/display/ks0108.c:34:
+module_param(Port,uint,S_IRUGO);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/display/ks0108.c:34:
+module_param(Port,uint,S_IRUGO);
                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1255: FILE: drivers/display/ks0108.c:34:
+module_param(Port,uint,S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1257: FILE: drivers/display/ks0108.c:36:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1263: FILE: drivers/display/ks0108.c:42:
+static const char * Name = NAME;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1265: FILE: drivers/display/ks0108.c:44:
+static struct parport * Parport;

CHECK:CAMELCASE: Avoid CamelCase: <Parport>
#1265: FILE: drivers/display/ks0108.c:44:
+static struct parport * Parport;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1266: FILE: drivers/display/ks0108.c:45:
+static struct pardevice * Pardevice;

CHECK:CAMELCASE: Avoid CamelCase: <Pardevice>
#1266: FILE: drivers/display/ks0108.c:45:
+static struct pardevice * Pardevice;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1268: FILE: drivers/display/ks0108.c:47:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1274: FILE: drivers/display/ks0108.c:53:
+#define Bit(n)   ((unsigned char)(1<<(n)))
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1278: FILE: drivers/display/ks0108.c:57:
+	parport_write_data(Parport,_Byte);
 	                          ^

CHECK:CAMELCASE: Avoid CamelCase: <ECycleDelay>
#1283: FILE: drivers/display/ks0108.c:62:
+	const unsigned int ECycleDelay = 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1284: FILE: drivers/display/ks0108.c:63:
+	const unsigned int ECycleDelay = 1;
+	udelay(ECycleDelay);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1285: FILE: drivers/display/ks0108.c:64:
+	parport_write_control(Parport,_Byte);
 	                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#1290: FILE: drivers/display/ks0108.c:69:
+	unsigned char Command = Bit(1) | Bit(2) | Bit(3) | Bit(4) | Bit(5);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1291: FILE: drivers/display/ks0108.c:70:
+	unsigned char Command = Bit(1) | Bit(2) | Bit(3) | Bit(4) | Bit(5);
+	if(_State)

ERROR:SPACING: space required before the open parenthesis '('
#1291: FILE: drivers/display/ks0108.c:70:
+	if(_State)

CHECK:CAMELCASE: Avoid CamelCase: <MaxStartLine>
#1298: FILE: drivers/display/ks0108.c:77:
+	const unsigned char MaxStartLine = 63;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1300: FILE: drivers/display/ks0108.c:79:
+	unsigned char Command = Bit(6) | Bit(7);
+	if(_StartLine>MaxStartLine)

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1300: FILE: drivers/display/ks0108.c:79:
+	if(_StartLine>MaxStartLine)
 	             ^

ERROR:SPACING: space required before the open parenthesis '('
#1300: FILE: drivers/display/ks0108.c:79:
+	if(_StartLine>MaxStartLine)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1301: FILE: drivers/display/ks0108.c:80:
+		_StartLine=MaxStartLine;
 		          ^

CHECK:CAMELCASE: Avoid CamelCase: <MaxAddress>
#1308: FILE: drivers/display/ks0108.c:87:
+	const unsigned char MaxAddress = 63;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1310: FILE: drivers/display/ks0108.c:89:
+	unsigned char Command = Bit(6);
+	if(_Address>MaxAddress)

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1310: FILE: drivers/display/ks0108.c:89:
+	if(_Address>MaxAddress)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#1310: FILE: drivers/display/ks0108.c:89:
+	if(_Address>MaxAddress)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1311: FILE: drivers/display/ks0108.c:90:
+		_Address=MaxAddress;
 		        ^

CHECK:CAMELCASE: Avoid CamelCase: <MaxPage>
#1318: FILE: drivers/display/ks0108.c:97:
+	const unsigned char MaxPage = 7;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1320: FILE: drivers/display/ks0108.c:99:
+	unsigned char Command = Bit(3) | Bit(4) | Bit(5) | Bit(7);
+	if(_Page>MaxPage)

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1320: FILE: drivers/display/ks0108.c:99:
+	if(_Page>MaxPage)
 	        ^

ERROR:SPACING: space required before the open parenthesis '('
#1320: FILE: drivers/display/ks0108.c:99:
+	if(_Page>MaxPage)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1321: FILE: drivers/display/ks0108.c:100:
+		_Page=MaxPage;
 		     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1326: FILE: drivers/display/ks0108.c:105:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1327: FILE: drivers/display/ks0108.c:106:
+EXPORT_SYMBOL_GPL(ks0108_WriteData);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1328: FILE: drivers/display/ks0108.c:107:
+EXPORT_SYMBOL_GPL(ks0108_WriteControl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1329: FILE: drivers/display/ks0108.c:108:
+EXPORT_SYMBOL_GPL(ks0108_DisplayState);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1330: FILE: drivers/display/ks0108.c:109:
+EXPORT_SYMBOL_GPL(ks0108_StartLine);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1331: FILE: drivers/display/ks0108.c:110:
+EXPORT_SYMBOL_GPL(ks0108_Address);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1332: FILE: drivers/display/ks0108.c:111:
+EXPORT_SYMBOL_GPL(ks0108_Page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1334: FILE: drivers/display/ks0108.c:113:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1336: FILE: drivers/display/ks0108.c:115:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1345: FILE: drivers/display/ks0108.c:124:
+	printk(PRINTK_PREFIX "Init... ");

ERROR:SPACING: space required before the open parenthesis '('
#1348: FILE: drivers/display/ks0108.c:127:
+	if(Parport == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Parport"
#1348: FILE: drivers/display/ks0108.c:127:
+	if(Parport == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1349: FILE: drivers/display/ks0108.c:128:
+		printk("ERROR - parport_find_base\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1354: FILE: drivers/display/ks0108.c:133:
+	Pardevice = parport_register_device(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1355: FILE: drivers/display/ks0108.c:134:
+		Parport,Name,
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1356: FILE: drivers/display/ks0108.c:135:
+		NULL,NULL,NULL,
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1356: FILE: drivers/display/ks0108.c:135:
+		NULL,NULL,NULL,
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1357: FILE: drivers/display/ks0108.c:136:
+		PARPORT_DEV_EXCL,NULL);
 		                ^

ERROR:SPACING: space required before the open parenthesis '('
#1358: FILE: drivers/display/ks0108.c:137:
+	if(Pardevice == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Pardevice"
#1358: FILE: drivers/display/ks0108.c:137:
+	if(Pardevice == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1359: FILE: drivers/display/ks0108.c:138:
+		printk("ERROR: parport_register_device\n");

ERROR:SPACING: space required before the open parenthesis '('
#1364: FILE: drivers/display/ks0108.c:143:
+	if(parport_claim(Pardevice) != 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1365: FILE: drivers/display/ks0108.c:144:
+		printk("ERROR: parport_claim\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1370: FILE: drivers/display/ks0108.c:149:
+	printk("Done\n");

WARNING:REPEATED_WORD: Possible repeated word: 'return'
#1377: FILE: drivers/display/ks0108.c:156:
+	return Return;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1382: FILE: drivers/display/ks0108.c:161:
+	printk(PRINTK_PREFIX "Exit... ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1387: FILE: drivers/display/ks0108.c:166:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1388: FILE: drivers/display/ks0108.c:167:
+	printk("Done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1394: FILE: drivers/display/ks0108.c:173:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1445: FILE: include/linux/cfag12864b.h:1:
+/*

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1462: FILE: include/linux/cfag12864b.h:18:
+#define CFAG12864B_MATRIXSIZE	CFAG12864B_WIDTH*CFAG12864B_HEIGHT
                              	                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1462: FILE: include/linux/cfag12864b.h:18:
+#define CFAG12864B_MATRIXSIZE	CFAG12864B_WIDTH*CFAG12864B_HEIGHT

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1467: FILE: include/linux/cfag12864b.h:23:
+#define CFAG12864B_SIZE		CFAG12864B_CONTROLLERS * \
+				CFAG12864B_PAGES * \
+				CFAG12864B_ADDRESSES

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1474: FILE: include/linux/cfag12864b.h:30:
+#define CFAG12864B_IOCOFF	_IO(CFAG12864B_IOC_MAGIC,0)
                          	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1475: FILE: include/linux/cfag12864b.h:31:
+#define CFAG12864B_IOCON	_IO(CFAG12864B_IOC_MAGIC,1)
                         	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1476: FILE: include/linux/cfag12864b.h:32:
+#define CFAG12864B_IOCCLEAR	_IO(CFAG12864B_IOC_MAGIC,2)
                            	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1477: FILE: include/linux/cfag12864b.h:33:
+#define CFAG12864B_IOCFORMAT	_IOW(CFAG12864B_IOC_MAGIC,3,void *)
                             	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1477: FILE: include/linux/cfag12864b.h:33:
+#define CFAG12864B_IOCFORMAT	_IOW(CFAG12864B_IOC_MAGIC,3,void *)
                             	                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1479: FILE: include/linux/cfag12864b.h:35:
+extern void cfag12864b_On(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1480: FILE: include/linux/cfag12864b.h:36:
+extern void cfag12864b_Off(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1481: FILE: include/linux/cfag12864b.h:37:
+extern void cfag12864b_Clear(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1482: FILE: include/linux/cfag12864b.h:38:
+extern void cfag12864b_Write(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1482: FILE: include/linux/cfag12864b.h:38:
+extern void cfag12864b_Write(

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#1483: FILE: include/linux/cfag12864b.h:39:
+	unsigned short Offset,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1484: FILE: include/linux/cfag12864b.h:40:
+	unsigned char * Buffer,

CHECK:CAMELCASE: Avoid CamelCase: <Count>
#1485: FILE: include/linux/cfag12864b.h:41:
+	unsigned short Count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1486: FILE: include/linux/cfag12864b.h:42:
+extern void cfag12864b_Format(unsigned char * Src);

CHECK:CAMELCASE: Avoid CamelCase: <Src>
#1486: FILE: include/linux/cfag12864b.h:42:
+extern void cfag12864b_Format(unsigned char * Src);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1486: FILE: include/linux/cfag12864b.h:42:
+extern void cfag12864b_Format(unsigned char * Src);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1497: FILE: include/linux/display.h:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1512: FILE: include/linux/display.h:16:
+extern struct class * display_class;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1523: FILE: include/linux/ks0108.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <Byte>
#1536: FILE: include/linux/ks0108.h:14:
+extern void ks0108_WriteData(unsigned char Byte);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1536: FILE: include/linux/ks0108.h:14:
+extern void ks0108_WriteData(unsigned char Byte);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1537: FILE: include/linux/ks0108.h:15:
+extern void ks0108_WriteControl(unsigned char Byte);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1538: FILE: include/linux/ks0108.h:16:
+extern void ks0108_DisplayState(unsigned char State);

CHECK:CAMELCASE: Avoid CamelCase: <StartLine>
#1539: FILE: include/linux/ks0108.h:17:
+extern void ks0108_StartLine(unsigned char StartLine);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1539: FILE: include/linux/ks0108.h:17:
+extern void ks0108_StartLine(unsigned char StartLine);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1540: FILE: include/linux/ks0108.h:18:
+extern void ks0108_Address(unsigned char Address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1541: FILE: include/linux/ks0108.h:19:
+extern void ks0108_Page(unsigned char Page);

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#1555: FILE: MAINTAINERS:1645:
+P:	Miguel Ojeda Sandonis
+M:	maxextreme@gmail.com

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39165.commit.76c2cb98b42264e2d2bbf2cbeff5cd9e960edb9b total: 152 errors, 74 warnings, 180 checks, 1419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39165.commit.76c2cb98b42264e2d2bbf2cbeff5cd9e960edb9b has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
