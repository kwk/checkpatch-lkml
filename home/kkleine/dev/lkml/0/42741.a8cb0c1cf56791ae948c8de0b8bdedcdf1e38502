WARNING:TYPO_SPELLING: 'ackward' may be misspelled - perhaps 'awkward'?
#58: 
And the name is a bit ackward, anyone have a better suggestion?
                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Iinclude' may be misspelled - perhaps 'Include'?
#105: FILE: Documentation/DocBook/kernel-api.tmpl:436:
+!Iinclude/linux/iio.h
  ^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#133: FILE: drivers/iio/Kconfig:2:
+config IIO
+	tristate "Industrial IO"
+	help
+	  base driver for industrial IO
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#138: FILE: drivers/iio/Kconfig:7:
+config IIO_DUMMY
+	tristate "Industrial IO dummy driver"
+	help
+	  example/dummy driver for industrial IO

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: drivers/iio/iio_base.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#186: FILE: drivers/iio/iio_base.c:34:
+static const char *iio_dev_ext[] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#196: FILE: drivers/iio/iio_base.c:44:
+	struct class_device *cdev [4];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#200: FILE: drivers/iio/iio_base.c:48:
+extern struct file_operations iio_event_fops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#200: FILE: drivers/iio/iio_base.c:48:
+extern struct file_operations iio_event_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#210: FILE: drivers/iio/iio_base.c:58:
+static CLASS_ATTR(version, S_IRUGO, show_iio_version, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#216: FILE: drivers/iio/iio_base.c:64:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "0x%lx\n", idev->physaddr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_addr' to 'physaddr_show'
#217: FILE: drivers/iio/iio_base.c:65:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#218: FILE: drivers/iio/iio_base.c:66:
+static DEVICE_ATTR(physaddr, S_IRUGO, show_addr, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: drivers/iio/iio_base.c:72:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "%s\n", idev->name);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_name' to 'name_show'
#225: FILE: drivers/iio/iio_base.c:73:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#226: FILE: drivers/iio/iio_base.c:74:
+static DEVICE_ATTR(name, S_IRUGO, show_name, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: drivers/iio/iio_base.c:80:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "0x%lx\n", idev->read_offset);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_read_offset' to 'read_offset_show'
#233: FILE: drivers/iio/iio_base.c:81:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#234: FILE: drivers/iio/iio_base.c:82:
+static DEVICE_ATTR(read_offset, S_IRUGO, show_read_offset, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: drivers/iio/iio_base.c:88:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "0x%lx\n", idev->size);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_size' to 'size_show'
#241: FILE: drivers/iio/iio_base.c:89:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#242: FILE: drivers/iio/iio_base.c:90:
+static DEVICE_ATTR(size, S_IRUGO, show_size, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: drivers/iio/iio_base.c:96:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "%s\n", idev->version);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_version' to 'version_show'
#249: FILE: drivers/iio/iio_base.c:97:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#250: FILE: drivers/iio/iio_base.c:98:
+static DEVICE_ATTR(version, S_IRUGO, show_version, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: drivers/iio/iio_base.c:104:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "0x%lx\n", idev->write_offset);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_write_offset' to 'write_offset_show'
#257: FILE: drivers/iio/iio_base.c:105:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#258: FILE: drivers/iio/iio_base.c:106:
+static DEVICE_ATTR(write_offset, S_IRUGO, show_write_offset, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: drivers/iio/iio_base.c:112:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "%ld\n", idev->event_listener);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_listener' to 'listener_show'
#265: FILE: drivers/iio/iio_base.c:113:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#266: FILE: drivers/iio/iio_base.c:114:
+static DEVICE_ATTR(listener, S_IRUGO, show_listener, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/iio/iio_base.c:120:
+	struct iio_device *idev = to_iio_device(dev);
+	return sprintf(buf, "%d\n", atomic_read(&idev->event));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_event' to 'event_show'
#273: FILE: drivers/iio/iio_base.c:121:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#274: FILE: drivers/iio/iio_base.c:122:
+static DEVICE_ATTR(event, S_IRUGO, show_event, NULL);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#281: FILE: drivers/iio/iio_base.c:129:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: drivers/iio/iio_base.c:135:
+	int ret;
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#287: FILE: drivers/iio/iio_base.c:135:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#294: FILE: drivers/iio/iio_base.c:142:
+		printk(KERN_ERR "%s: cdev_add failed (%d)\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#294: FILE: drivers/iio/iio_base.c:142:
+		printk(KERN_ERR "%s: cdev_add failed (%d)\n", __FUNCTION__, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#301: FILE: drivers/iio/iio_base.c:149:
+		printk(KERN_ERR "%s: cdev_add failed (%d)\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#301: FILE: drivers/iio/iio_base.c:149:
+		printk(KERN_ERR "%s: cdev_add failed (%d)\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#306: FILE: drivers/iio/iio_base.c:154:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#316: FILE: drivers/iio/iio_base.c:164:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#331: FILE: drivers/iio/iio_base.c:179:
+		pr_debug("%s: error creating sysfs files\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#336: FILE: drivers/iio/iio_base.c:184:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: drivers/iio/iio_base.c:212:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#380: FILE: drivers/iio/iio_base.c:228:
+# if 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#382: FILE: drivers/iio/iio_base.c:230:
+		while (ktime_cmp_val(idev->next_event, == , KTIME_ZERO))
 		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#403: FILE: drivers/iio/iio_base.c:251:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev_nr != 0'
#409: FILE: drivers/iio/iio_base.c:257:
+		if ((entry->dev_nr > dev_nr + 1) && (dev_nr != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#426: FILE: drivers/iio/iio_base.c:274:
+int __devinit iio_register_device(struct device *parent,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#426: FILE: drivers/iio/iio_base.c:274:
+int __devinit iio_register_device(struct device *parent,
+				  struct iio_device *idev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#431: FILE: drivers/iio/iio_base.c:279:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cdev)...) over kmalloc(sizeof(struct iio_class_dev)...)
#436: FILE: drivers/iio/iio_base.c:284:
+	cdev = kmalloc(sizeof(struct iio_class_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#450: FILE: drivers/iio/iio_base.c:298:
+	if ((ret = device_register(&idev->dev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#459: FILE: drivers/iio/iio_base.c:307:
+		cdev->cdev [i] = class_device_create(iio_class, NULL,

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#462: FILE: drivers/iio/iio_base.c:310:
+						     cdev->dev_nr, iio_dev_ext [i]);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#463: FILE: drivers/iio/iio_base.c:311:
+		if (IS_ERR(cdev->cdev [i])) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#464: FILE: drivers/iio/iio_base.c:312:
+			printk(KERN_ERR "IIO: device register_failed\n");

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#468: FILE: drivers/iio/iio_base.c:316:
+			ret = PTR_ERR(cdev->cdev [i]);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#519: FILE: drivers/iio/iio_base.c:367:
+int __devexit iio_unregister_device(int dev_nr)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#525: FILE: drivers/iio/iio_base.c:373:
+	pr_debug("%s (%d)\n", __FUNCTION__, dev_nr);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#531: FILE: drivers/iio/iio_base.c:379:
+		if (entry->dev_nr == dev_nr) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#532: FILE: drivers/iio/iio_base.c:380:
+			idev = to_iio_device(entry->cdev [0]->dev);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: drivers/iio/iio_base.c:392:
+			for (i = 0; i < 4; i++) {
+				class_device_unregister(entry->cdev [i]);
+			}

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#545: FILE: drivers/iio/iio_base.c:393:
+				class_device_unregister(entry->cdev [i]);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#594: FILE: drivers/iio/iio_dev.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#595: FILE: drivers/iio/iio_dev.c:2:
+ * drivers/iio/iio_dev.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#617: FILE: drivers/iio/iio_dev.c:24:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#618: FILE: drivers/iio/iio_dev.c:25:
+#include <asm/uaccess.h>

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#628: FILE: drivers/iio/iio_dev.c:35:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#657: FILE: drivers/iio/iio_dev.c:64:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#660: FILE: drivers/iio/iio_dev.c:67:
+	case 0: if (filep->f_pos + count >= idev->size)
+			count = idev->size - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#660: FILE: drivers/iio/iio_dev.c:67:
+	case 0: if (filep->f_pos + count >= idev->size)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#664: FILE: drivers/iio/iio_dev.c:71:
+	case 1: if (filep->f_pos + count >= idev->read_len)
+			count = idev->read_len - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#664: FILE: drivers/iio/iio_dev.c:71:
+	case 1: if (filep->f_pos + count >= idev->read_len)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#668: FILE: drivers/iio/iio_dev.c:75:
+	case 2: if (filep->f_pos + count >= idev->write_len)
+			count = idev->write_len - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#668: FILE: drivers/iio/iio_dev.c:75:
+	case 2: if (filep->f_pos + count >= idev->write_len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/iio/iio_dev.c:91:
+			if (__put_user(inb(idev->physaddr + offset + i),
+					buf + i) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#702: FILE: drivers/iio/iio_dev.c:109:
+ssize_t iio_write(struct file *filep, const char __user * buf, size_t count,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#709: FILE: drivers/iio/iio_dev.c:116:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#712: FILE: drivers/iio/iio_dev.c:119:
+	case 0: if (filep->f_pos + count >= idev->size)
+			count = idev->size - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#712: FILE: drivers/iio/iio_dev.c:119:
+	case 0: if (filep->f_pos + count >= idev->size)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#716: FILE: drivers/iio/iio_dev.c:123:
+	case 1: if (filep->f_pos + count >= idev->read_len)
+			count = idev->read_len - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#716: FILE: drivers/iio/iio_dev.c:123:
+	case 1: if (filep->f_pos + count >= idev->read_len)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#720: FILE: drivers/iio/iio_dev.c:127:
+	case 2: if (filep->f_pos + count >= idev->write_len)
+			count = idev->write_len - filep->f_pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#720: FILE: drivers/iio/iio_dev.c:127:
+	case 2: if (filep->f_pos + count >= idev->write_len)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#760: FILE: drivers/iio/iio_dev.c:167:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#779: FILE: drivers/iio/iio_dev.c:186:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#782: FILE: drivers/iio/iio_dev.c:189:
+	case 0: if (size > idev->size)
+			return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#782: FILE: drivers/iio/iio_dev.c:189:
+	case 0: if (size > idev->size)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#786: FILE: drivers/iio/iio_dev.c:193:
+	case 1: if (size > idev->read_len)
+			return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#786: FILE: drivers/iio/iio_dev.c:193:
+	case 1: if (size > idev->read_len)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#790: FILE: drivers/iio/iio_dev.c:197:
+	case 2: if (size > idev->write_len)
+			return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#790: FILE: drivers/iio/iio_dev.c:197:
+	case 2: if (size > idev->write_len)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#813: FILE: drivers/iio/iio_dev.c:220:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#819: FILE: drivers/iio/iio_dev.c:226:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#827: FILE: drivers/iio/iio_dev.c:234:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#840: FILE: drivers/iio/iio_dev.c:247:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#878: FILE: drivers/iio/iio_dev.c:285:
+	pr_debug("%s\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#937: FILE: drivers/iio/iio_dev.c:344:
+ssize_t iio_event_write(struct file *filep, const char __user * buf,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#942: FILE: drivers/iio/iio_dev.c:349:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#950: FILE: drivers/iio/iio_dev.c:357:
+struct file_operations iio_event_fops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#963: FILE: drivers/iio/iio_dummy.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#975: FILE: drivers/iio/iio_dummy.c:13:
+#include <asm/io.h>

WARNING:CONST_STRUCT: struct file_operations should normally be const
#982: FILE: drivers/iio/iio_dummy.c:20:
+static struct file_operations iio_dummy_fops = {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#997: FILE: drivers/iio/iio_dummy.c:35:
+	.read_len = MEMSIZE/2,
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#998: FILE: drivers/iio/iio_dummy.c:36:
+	.write_offset = MEMSIZE/2,
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#999: FILE: drivers/iio/iio_dummy.c:37:
+	.write_len = MEMSIZE/2,
 	                    ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1027: FILE: drivers/iio/iio_dummy.c:65:
+	iio_dummy_count = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO|S_IWUSR|S_IWGRP' used
#1029: FILE: drivers/iio/iio_dummy.c:67:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1030: FILE: drivers/iio/iio_dummy.c:68:
+static DEVICE_ATTR(count, S_IRUGO|S_IWUSR|S_IWGRP, show_count, store_count);
                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1030: FILE: drivers/iio/iio_dummy.c:68:
+static DEVICE_ATTR(count, S_IRUGO|S_IWUSR|S_IWGRP, show_count, store_count);
                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR|S_IWGRP' are not preferred. Consider using octal permissions '0664'.
#1030: FILE: drivers/iio/iio_dummy.c:68:
+static DEVICE_ATTR(count, S_IRUGO|S_IWUSR|S_IWGRP, show_count, store_count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1037: FILE: drivers/iio/iio_dummy.c:75:
+}
+static ssize_t store_freq(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/iio/iio_dummy.c:76:
+static ssize_t store_freq(struct device *dev, struct device_attribute *attr,
+			   const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1040: FILE: drivers/iio/iio_dummy.c:78:
+	iio_dummy_idev.freq = simple_strtol(buf, NULL, 10);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO|S_IWUSR|S_IWGRP' used
#1042: FILE: drivers/iio/iio_dummy.c:80:
+}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1043: FILE: drivers/iio/iio_dummy.c:81:
+static DEVICE_ATTR(freq, S_IRUGO|S_IWUSR|S_IWGRP, show_freq, store_freq);
                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1043: FILE: drivers/iio/iio_dummy.c:81:
+static DEVICE_ATTR(freq, S_IRUGO|S_IWUSR|S_IWGRP, show_freq, store_freq);
                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR|S_IWGRP' are not preferred. Consider using octal permissions '0664'.
#1043: FILE: drivers/iio/iio_dummy.c:81:
+static DEVICE_ATTR(freq, S_IRUGO|S_IWUSR|S_IWGRP, show_freq, store_freq);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1054: FILE: drivers/iio/iio_dummy.c:92:
+	iio_dummy_signal.pid = simple_strtol(buf, NULL, 10);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO|S_IWUSR|S_IWGRP' used
#1080: FILE: drivers/iio/iio_dummy.c:118:
+}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1082: FILE: drivers/iio/iio_dummy.c:120:
+static DEVICE_ATTR(sig_pid, S_IRUGO|S_IWUSR|S_IWGRP, show_sig_pid, store_sig_pid);
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1082: FILE: drivers/iio/iio_dummy.c:120:
+static DEVICE_ATTR(sig_pid, S_IRUGO|S_IWUSR|S_IWGRP, show_sig_pid, store_sig_pid);
                                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR|S_IWGRP' are not preferred. Consider using octal permissions '0664'.
#1082: FILE: drivers/iio/iio_dummy.c:120:
+static DEVICE_ATTR(sig_pid, S_IRUGO|S_IWUSR|S_IWGRP, show_sig_pid, store_sig_pid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1121: FILE: drivers/iio/iio_dummy.c:159:
+	struct iio_device *idev = (struct iio_device *)dev_id;
+	iio_dummy_count++;

CHECK:SPACING: No space is necessary after a cast
#1123: FILE: drivers/iio/iio_dummy.c:161:
+	*((long *) idev->physaddr) = iio_dummy_count;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1129: FILE: drivers/iio/iio_dummy.c:167:
+static int __devinit iio_dummy_probe(struct device *dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1133: FILE: drivers/iio/iio_dummy.c:171:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1146: FILE: drivers/iio/iio_dummy.c:184:
+static int __devexit iio_dummy_remove(struct device *dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1148: FILE: drivers/iio/iio_dummy.c:186:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1157: FILE: drivers/iio/iio_dummy.c:195:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1178: FILE: drivers/iio/iio_dummy.c:216:
+	pr_debug("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1217: FILE: drivers/iio/iio_dummy.c:255:
+	pr_debug("%s\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1219: FILE: drivers/iio/iio_dummy.c:257:
+	iio_unregister_device((int) iio_dummy_device->dev.driver_data);

CHECK:SPACING: No space is necessary after a cast
#1220: FILE: drivers/iio/iio_dummy.c:258:
+	kfree((void *) iio_dummy_idev.physaddr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1235: FILE: include/linux/iio.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1236: FILE: include/linux/iio.h:2:
+ * include/linux/iio.h

WARNING:TYPO_SPELLING: 'iomaped' may be misspelled - perhaps 'iomapped'?
#1269: FILE: include/linux/iio.h:35:
+ * @virtaddr:		iomaped address (optional)
              		^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1313: FILE: include/linux/iio.h:79:
+	ssize_t (*event_write)(struct file *filep, const char __user * buf,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1317: FILE: include/linux/iio.h:83:
+	struct file_operations	*fops;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1332: FILE: include/linux/iio.h:98:
+ssize_t iio_write(struct file *filep, const char __user * buf, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: include/linux/iio.h:99:
+ssize_t iio_write(struct file *filep, const char __user * buf, size_t count,
+		   loff_t *ppos);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1340: FILE: include/linux/iio.h:106:
+extern struct file_operations iio_event_fops;

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42741.commit.a8cb0c1cf56791ae948c8de0b8bdedcdf1e38502 total: 23 errors, 101 warnings, 21 checks, 1248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42741.commit.a8cb0c1cf56791ae948c8de0b8bdedcdf1e38502 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
