WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
In addition to the clock jump-back check being falsely triggered by clock wrap

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#58: FILE: kernel/latency_trace.c:995:
+				(u64)tmp_max->trace[entries-2].timestamp,
 				                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#59: FILE: kernel/latency_trace.c:996:
+				(u64)tmp_max->trace[entries-1].timestamp);
 				                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#67: FILE: kernel/latency_trace.c:1002:
+		printk("first stamp: %016Lx\n", (u64)first_stamp);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#67: FILE: kernel/latency_trace.c:1002:
+		printk("first stamp: %016Lx\n", (u64)first_stamp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#68: FILE: kernel/latency_trace.c:1003:
+		printk(" last stamp: %016Lx\n", (u64)first_stamp);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#68: FILE: kernel/latency_trace.c:1003:
+		printk(" last stamp: %016Lx\n", (u64)first_stamp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: kernel/latency_trace.c:1007:
+	printk("first_stamp: %Ld [%016Lx]\n", (u64)first_stamp, (u64)first_stamp);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#74: FILE: kernel/latency_trace.c:1007:
+	printk("first_stamp: %Ld [%016Lx]\n", (u64)first_stamp, (u64)first_stamp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#75: FILE: kernel/latency_trace.c:1008:
+	printk(" last_stamp: %Ld [%016Lx]\n", (u64)last_stamp, (u64)last_stamp);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#75: FILE: kernel/latency_trace.c:1008:
+	printk(" last_stamp: %Ld [%016Lx]\n", (u64)last_stamp, (u64)last_stamp);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: kernel/latency_trace.c:1013:
+		(u64)tmp_max->trace[entries+1].timestamp,
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: kernel/latency_trace.c:1014:
+		(u64)tmp_max->trace[entries+1].timestamp);
 		                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#87: FILE: kernel/latency_trace.c:1015:
+	printk("      delta: %Ld\n", (u64)(last_stamp-first_stamp));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#87: FILE: kernel/latency_trace.c:1015:
+	printk("      delta: %Ld\n", (u64)(last_stamp-first_stamp));
 	                                             ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#87: FILE: kernel/latency_trace.c:1015:
+	printk("      delta: %Ld\n", (u64)(last_stamp-first_stamp));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#96: FILE: kernel/latency_trace.c:1243:
+			(u64)entry->timestamp, abs_usecs/1000,
 			                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: kernel/latency_trace.c:1627:
+		printk("  [%016Lx %016Lx %016Lx]\n", (u64)T0, (u64)T1, (u64)T2);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#107: FILE: kernel/latency_trace.c:1627:
+		printk("  [%016Lx %016Lx %016Lx]\n", (u64)T0, (u64)T1, (u64)T2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: kernel/latency_trace.c:2009:
+		printk("bug2: %016Lx < %016Lx!\n", (u64)T2, (u64)T1);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#116: FILE: kernel/latency_trace.c:2009:
+		printk("bug2: %016Lx < %016Lx!\n", (u64)T2, (u64)T1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: kernel/latency_trace.c:2027:
+		printk("  [%016Lx %016Lx %016Lx]\n", (u64)T0, (u64)T1, (u64)T2);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#127: FILE: kernel/latency_trace.c:2027:
+		printk("  [%016Lx %016Lx %016Lx]\n", (u64)T0, (u64)T1, (u64)T2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#138: FILE: kernel/latency_trace.c:2277:
+			printk("  [%016Lx %016Lx]\n", (u64)T0, (u64)T1);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#138: FILE: kernel/latency_trace.c:2277:
+			printk("  [%016Lx %016Lx]\n", (u64)T0, (u64)T1);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18861.commit.b737d8045427da287599a112d587428efa6371d6 total: 0 errors, 19 warnings, 6 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18861.commit.b737d8045427da287599a112d587428efa6371d6 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
