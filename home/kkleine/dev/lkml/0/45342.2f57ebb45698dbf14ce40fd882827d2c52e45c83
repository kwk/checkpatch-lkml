WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: ipg.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#62: FILE: ipg.c:2:
+ * ipg.c: Device Driver for the IP1000 Gigabit Ethernet Adapter

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: ipg.c:499:
+   ^Iphyctrl = ioread8(ioaddr + PHY_CTRL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: ipg.c:499:
+   ^Iphyctrl = ioread8(ioaddr + PHY_CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: ipg.c:499:
+   ^Iphyctrl = ioread8(ioaddr + PHY_CTRL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: ipg.c:500:
+   ^Imac_ctrl_value = ioread32(ioaddr + MAC_CTRL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: ipg.c:500:
+   ^Imac_ctrl_value = ioread32(ioaddr + MAC_CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: ipg.c:500:
+   ^Imac_ctrl_value = ioread32(ioaddr + MAC_CTRL);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#134: FILE: ipg.c:516:
+	printk(KERN_INFO "Link speed = ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#142: FILE: ipg.c:522:
+		printk(KERN_INFO "%s: 10Mbps operational mode enabled.\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#231: FILE: ipg.c:550:
+		printk(KERN_INFO "%s: setting full duplex, ", dev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: ipg.c:555:
+			printk("TX flow control");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#252: FILE: ipg.c:558:
+			printk("no TX flow control");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#277: FILE: ipg.c:563:
+			printk(", RX flow control.");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: ipg.c:566:
+			printk(", no RX flow control.");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: ipg.c:570:
+		printk("\n");

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#312: FILE: ipg.c:573:
+	        printk(KERN_INFO "%s: setting half duplex, no TX flow control, no RX flow control.\n", dev->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: ipg.c:573:
+^I        printk(KERN_INFO "%s: setting half duplex, no TX flow control, no RX flow control.\n", dev->name);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#312: FILE: ipg.c:573:
+	        printk(KERN_INFO "%s: setting half duplex, no TX flow control, no RX flow control.\n", dev->name);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#335: FILE: ipg.c:575:
+		mac_ctrl_value &= ~IPG_MC_DUPLEX_SELECT_FD & ~IPG_MC_TX_FLOW_CONTROL_ENABLE & ~IPG_MC_RX_FLOW_CONTROL_ENABLE;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#455: FILE: ipg.c:577:
+	iowrite32(mac_ctrl_value , ioaddr+MAC_CTRL);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: ipg.c:577:
+	iowrite32(mac_ctrl_value , ioaddr+MAC_CTRL);
 	                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <TFDList>
#484: FILE: ipg.c:888:
+		sp->TFDList[i].TFDNextPtr = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <TFDNextPtr>
#484: FILE: ipg.c:888:
+		sp->TFDList[i].TFDNextPtr = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#492: FILE: ipg.c:906:
+	sp->ResetCurrentTFD=1;
 	                   ^

CHECK:CAMELCASE: Avoid CamelCase: <ResetCurrentTFD>
#492: FILE: ipg.c:906:
+	sp->ResetCurrentTFD=1;

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#500: FILE: ipg.c:919:
+	long CurrentTxTFDPtr = (ioread32(ipg_ioaddr(dev) + TFD_LIST_PTR_0) - (long)sp->TFDListDMAhandle) / (long)sizeof(struct TFD);

CHECK:CAMELCASE: Avoid CamelCase: <CurrentTxTFDPtr>
#500: FILE: ipg.c:919:
+	long CurrentTxTFDPtr = (ioread32(ipg_ioaddr(dev) + TFD_LIST_PTR_0) - (long)sp->TFDListDMAhandle) / (long)sizeof(struct TFD);

CHECK:CAMELCASE: Avoid CamelCase: <TFDListDMAhandle>
#500: FILE: ipg.c:919:
+	long CurrentTxTFDPtr = (ioread32(ipg_ioaddr(dev) + TFD_LIST_PTR_0) - (long)sp->TFDListDMAhandle) / (long)sizeof(struct TFD);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'NextToFree != sp->CurrentTFD'
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'NextToFree != CurrentTxTFDPtr'
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))

CHECK:CAMELCASE: Avoid CamelCase: <NextToFree>
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))

CHECK:CAMELCASE: Avoid CamelCase: <CurrentTFD>
#510: FILE: ipg.c:942:
+		if((NextToFree != sp->CurrentTFD) && (NextToFree != CurrentTxTFDPtr))

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#513: FILE: ipg.c:945:
+			sp->TFDList[NextToFree].TFC = cpu_to_le64(sp->TFDList[NextToFree].TFC | IPG_TFC_TFDDONE);

CHECK:CAMELCASE: Avoid CamelCase: <TxBuffDMAhandle>
#523: FILE: ipg.c:949:
+						 sp->TxBuffDMAhandle[NextToFree].dmahandle,

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#524: FILE: ipg.c:950:
+						 sp->TxBuffDMAhandle[NextToFree].len, PCI_DMA_TODEVICE);

CHECK:CAMELCASE: Avoid CamelCase: <LastTFDHoldCnt>
#532: FILE: ipg.c:964:
+	if (sp->LastTFDHoldCnt > 1000) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: ipg.c:967:
+^I^I// Re-configure after DMA reset. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#536: FILE: ipg.c:968:
+		if ((ipg_io_config(dev) < 0) || (init_tfdlist(dev) < 0)) {
+			printk(KERN_INFO "%s: Error during re-configuration, memory allocate fail or hardware reset fail.\n", dev->name);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#537: FILE: ipg.c:969:
+			printk(KERN_INFO "%s: Error during re-configuration, memory allocate fail or hardware reset fail.\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#537: FILE: ipg.c:969:
+			printk(KERN_INFO "%s: Error during re-configuration, memory allocate fail or hardware reset fail.\n", dev->name);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#539: FILE: ipg.c:971:
+		iowrite32(IPG_MC_RSVD_MASK & (ioread32(ipg_ioaddr(dev) + MAC_CTRL) | IPG_MC_TX_ENABLE),ipg_ioaddr(dev) + MAC_CTRL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: ipg.c:971:
+		iowrite32(IPG_MC_RSVD_MASK & (ioread32(ipg_ioaddr(dev) + MAC_CTRL) | IPG_MC_TX_ENABLE),ipg_ioaddr(dev) + MAC_CTRL);
 		                                                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: ipg.c:972:
+^I}^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#549: FILE: ipg.c:1044:
+					  IPG_AC_DMA | IPG_AC_NETWORK| IPG_AC_FIFO);
 					                             ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#557: FILE: ipg.c:2049:
+	if (sp->ResetCurrentTFD != 0)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: ipg.c:2052:
+^I^INextTFD = 0;^I$

CHECK:CAMELCASE: Avoid CamelCase: <NextTFD>
#560: FILE: ipg.c:2052:
+		NextTFD = 0;	

CHECK:CAMELCASE: Avoid CamelCase: <LastFreedTxBuff>
#563: FILE: ipg.c:2055:
+	if (NextTFD == sp->LastFreedTxBuff) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: ipg.c:2056:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#564: FILE: ipg.c:2056:
+	if (NextTFD == sp->LastFreedTxBuff) {
+		

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#565: FILE: ipg.c:2057:
+		if (sp->LastTFDHoldAddr == sp->CurrentTFD) sp->LastTFDHoldCnt++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <LastTFDHoldAddr>
#565: FILE: ipg.c:2057:
+		if (sp->LastTFDHoldAddr == sp->CurrentTFD) sp->LastTFDHoldCnt++;

CHECK:BRACES: braces {} should be used on all arms of this statement
#565: FILE: ipg.c:2057:
+		if (sp->LastTFDHoldAddr == sp->CurrentTFD) sp->LastTFDHoldCnt++;
[...]
+		else {sp->LastTFDHoldAddr = sp->CurrentTFD; sp->LastTFDHoldCnt=0; }
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#566: FILE: ipg.c:2058:
+		else {sp->LastTFDHoldAddr = sp->CurrentTFD; sp->LastTFDHoldCnt=0; }
 		                                                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#566: FILE: ipg.c:2058:
+		else {sp->LastTFDHoldAddr = sp->CurrentTFD; sp->LastTFDHoldCnt=0; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#578: FILE: ipg.c:2073:
+		iowrite32(IPG_DC_RSVD_MASK & (IPG_DC_TX_DMA_POLL_NOW),ioaddr + DMA_CTRL);
 		                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: ipg.c:2076:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#590: FILE: ipg.c:2169:
+	sp->TFDList[sp->CurrentTFD].TFDNextPtr=cpu_to_le64(sp->TFDListDMAhandle+
 	                                      ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#590: FILE: ipg.c:2169:
+	sp->TFDList[sp->CurrentTFD].TFDNextPtr=cpu_to_le64(sp->TFDListDMAhandle+
 	                                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: ipg.c:2170:
+sizeof(struct TFD)*NextTFD);
                   ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.45342.commit.2f57ebb45698dbf14ce40fd882827d2c52e45c83 total: 19 errors, 24 warnings, 20 checks, 674 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.45342.commit.2f57ebb45698dbf14ce40fd882827d2c52e45c83 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
