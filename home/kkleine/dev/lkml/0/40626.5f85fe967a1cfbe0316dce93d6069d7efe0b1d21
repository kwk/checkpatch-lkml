WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: include/linux/generic_acl.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#121: FILE: include/linux/generic_acl.h:22:
+	struct posix_acl *(*getacl)(struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#121: FILE: include/linux/generic_acl.h:22:
+	struct posix_acl *(*getacl)(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#122: FILE: include/linux/generic_acl.h:23:
+	void (*setacl)(struct inode *, int, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#122: FILE: include/linux/generic_acl.h:23:
+	void (*setacl)(struct inode *, int, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct posix_acl *' should also have an identifier name
#122: FILE: include/linux/generic_acl.h:23:
+	void (*setacl)(struct inode *, int, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#125: FILE: include/linux/generic_acl.h:26:
+size_t generic_acl_list(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct generic_acl_operations *' should also have an identifier name
#125: FILE: include/linux/generic_acl.h:26:
+size_t generic_acl_list(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#125: FILE: include/linux/generic_acl.h:26:
+size_t generic_acl_list(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#125: FILE: include/linux/generic_acl.h:26:
+size_t generic_acl_list(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#125: FILE: include/linux/generic_acl.h:26:
+size_t generic_acl_list(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#127: FILE: include/linux/generic_acl.h:28:
+int generic_acl_get(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct generic_acl_operations *' should also have an identifier name
#127: FILE: include/linux/generic_acl.h:28:
+int generic_acl_get(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#127: FILE: include/linux/generic_acl.h:28:
+int generic_acl_get(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#127: FILE: include/linux/generic_acl.h:28:
+int generic_acl_get(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#127: FILE: include/linux/generic_acl.h:28:
+int generic_acl_get(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#129: FILE: include/linux/generic_acl.h:30:
+int generic_acl_set(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct generic_acl_operations *' should also have an identifier name
#129: FILE: include/linux/generic_acl.h:30:
+int generic_acl_set(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#129: FILE: include/linux/generic_acl.h:30:
+int generic_acl_set(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#129: FILE: include/linux/generic_acl.h:30:
+int generic_acl_set(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#129: FILE: include/linux/generic_acl.h:30:
+int generic_acl_set(struct inode *, struct generic_acl_operations *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#131: FILE: include/linux/generic_acl.h:32:
+int generic_acl_init(struct inode *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#131: FILE: include/linux/generic_acl.h:32:
+int generic_acl_init(struct inode *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct generic_acl_operations *' should also have an identifier name
#131: FILE: include/linux/generic_acl.h:32:
+int generic_acl_init(struct inode *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#133: FILE: include/linux/generic_acl.h:34:
+int generic_acl_chmod(struct inode *, struct generic_acl_operations *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct generic_acl_operations *' should also have an identifier name
#133: FILE: include/linux/generic_acl.h:34:
+int generic_acl_chmod(struct inode *, struct generic_acl_operations *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: fs/generic_acl.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#142: FILE: fs/generic_acl.c:2:
+ * fs/generic_acl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#170: FILE: fs/generic_acl.c:30:
+	switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#170: FILE: fs/generic_acl.c:30:
+	switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#234: FILE: fs/generic_acl.c:94:
+		switch(type) {
+			case ACL_TYPE_ACCESS:
[...]
+			case ACL_TYPE_DEFAULT:

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: fs/generic_acl.c:94:
+		switch(type) {

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40626.commit.5f85fe967a1cfbe0316dce93d6069d7efe0b1d21 total: 4 errors, 28 warnings, 0 checks, 250 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40626.commit.5f85fe967a1cfbe0316dce93d6069d7efe0b1d21 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
