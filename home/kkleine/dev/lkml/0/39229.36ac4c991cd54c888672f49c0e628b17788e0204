WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
>>> One of the key requirements of resource management for us is to be able to

CHECK:BIT_MACRO: Prefer using the BIT macro
#136: FILE: include/bc/beancounter.h:48:
+#define BC_TGID_HASH_SIZE	(1 << BC_TGID_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: include/bc/beancounter.h:120:
+static inline void tbc_adjust_maxheld(struct tgid_beancounter *tbc,
+					int resource)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#166: FILE: include/bc/beancounter.h:122:
+	struct bc_resource_parm *parm;
 	                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#168: FILE: include/bc/beancounter.h:124:
+	parm = &tbc->tbc_parms[resource];
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/bc/beancounter.h:139:
+static inline void tbc_adjust_minheld(struct tgid_beancounter *tbc,
+					int resource)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#183: FILE: include/bc/beancounter.h:141:
+	struct bc_resource_parm *parm;
 	                         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#185: FILE: include/bc/beancounter.h:143:
+	parm = &tbc->tbc_parms[resource];
 	^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#197: FILE: include/bc/beancounter.h:157:
+struct tgid_beancounter *tgid_beancounter_findcreate(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#209: FILE: include/bc/beancounter.h:169:
+static inline struct tgid_beancounter *tgid_get_beancounter(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: kernel/bc/beancounter.c:23:
+static void init_tgid_beancounter_struct(struct tgid_beancounter *tbc,
+						struct beancounter *bc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: kernel/bc/beancounter.c:107:
+ * ^I^Ibc$

WARNING:REPEATED_WORD: Possible repeated word: 'tbc'
#274: FILE: kernel/bc/beancounter.c:108:
+ *	tbc tbc ...  tbc tbc

WARNING:REPEATED_WORD: Possible repeated word: 'tbc'
#274: FILE: kernel/bc/beancounter.c:108:
+ *	tbc tbc ...  tbc tbc

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: kernel/bc/beancounter.c:115:
+struct tgid_beancounter *tgid_beancounter_findcreate(struct beancounter *bc,
+							int mask, int locked)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: kernel/bc/beancounter.c:129:
+	hlist_for_each_entry (tbc, pos, slot, hash)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#299: FILE: kernel/bc/beancounter.c:133:
+	if (pos != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_tbc"
#307: FILE: kernel/bc/beancounter.c:141:
+		if (new_tbc != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_tbc"
#312: FILE: kernel/bc/beancounter.c:146:
+	if (new_tbc != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: kernel/bc/beancounter.c:156:
+	new_tbc = kmem_cache_alloc(bc_tgid_cachep,
+			mask & BC_ALLOC_ATOMIC ? GFP_ATOMIC : GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_tbc"
#323: FILE: kernel/bc/beancounter.c:157:
+	if (new_tbc == NULL)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#336: FILE: kernel/bc/beancounter.c:170:
+	if (new_tbc == NULL) {
+		new_tbc = &default_tgid_beancounter;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_tbc"
#336: FILE: kernel/bc/beancounter.c:170:
+	if (new_tbc == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#348: FILE: kernel/bc/beancounter.c:182:
+	if (tbc == &default_tgid_beancounter) {
+		return;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: kernel/bc/beancounter.c:188:
+	if (!atomic_dec_and_lock_irqsave(&tbc->tbc_refcount, &bc->bc_lock,
+						flags))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: kernel/bc/beancounter.c:193:
+			printk("BC: %d has %lu of %s held on put\n", tbc->tgid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: kernel/bc/beancounter.c:194:
+			printk("BC: %d has %lu of %s held on put\n", tbc->tgid,
+				tbc->tbc_parms[i].held, bc_rnames[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: kernel/bc/beancounter.c:215:
+			printk("BC: %d has %lu of %s held on put\n", bc->bc_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: kernel/bc/beancounter.c:216:
+			printk("BC: %d has %lu of %s held on put\n", bc->bc_id,
  				bc->bc_parms[i].held, bc_rnames[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: kernel/bc/beancounter.c:219:
+		printk("BC: %d has %lu of unused pages held on put\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: kernel/bc/beancounter.c:220:
+		printk("BC: %d has %lu of unused pages held on put\n",
+			bc->bc_id, bc->unused_privvmpages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#387: FILE: kernel/bc/beancounter.c:223:
+		printk("BC: %d hash %llu of rss pages held on put\n", bc->bc_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: kernel/bc/beancounter.c:224:
+		printk("BC: %d hash %llu of rss pages held on put\n", bc->bc_id,
  			bc->rss_pages);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#400: FILE: kernel/bc/beancounter.c:249:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d tgid "

WARNING:SPLIT_STRING: quoted string split across lines
#401: FILE: kernel/bc/beancounter.c:250:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d tgid "
+			"%d\n", bc->bc_id, current->tgid);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#439: FILE: kernel/bc/beancounter.c:311:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d tgid "

WARNING:SPLIT_STRING: quoted string split across lines
#440: FILE: kernel/bc/beancounter.c:312:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d tgid "
+			"%d\n", bc->bc_id, current->tgid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#445: FILE: kernel/bc/beancounter.c:317:
+		printk("BC: overuncharging bc %d %s: val %lu, holds %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: kernel/bc/beancounter.c:318:
+		printk("BC: overuncharging bc %d %s: val %lu, holds %lu\n",
+				tbc->tgid, bc_rnames[resource], val2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: kernel/bc/beancounter.c:375:
+static void init_tgid_beancounter_struct(struct tgid_beancounter *tbc,
+						struct beancounter *bc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: kernel/bc/beancounter.c:438:
+	bc_tgid_cachep = kmem_cache_create("tgid_beancounters",
+			sizeof(struct tgid_beancounter), 0,

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: kernel/bc/misc.c:31:
+	struct tgid_beancounter *tbc;
+	tbc = tgid_beancounter_findcreate_unlocked(tsk->task_bc.exec_bc,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: kernel/bc/misc.c:32:
+	tbc = tgid_beancounter_findcreate_unlocked(tsk->task_bc.exec_bc,
+							BC_LOOKUP);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39229.commit.36ac4c991cd54c888672f49c0e628b17788e0204 total: 0 errors, 21 warnings, 22 checks, 389 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39229.commit.36ac4c991cd54c888672f49c0e628b17788e0204 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
