ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/i386/kernel/kprobes.c:357:
+        struct kretprobe_instance *ri = NULL, *tmp;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/i386/kernel/kprobes.c:357:
+        struct kretprobe_instance *ri = NULL, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/i386/kernel/kprobes.c:358:
+        struct list_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/i386/kernel/kprobes.c:358:
+        struct list_head *head;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/linux/djprobe.h:68:
+extern int init_djprobe(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/linux/kprobes.h:166:
+extern int init_kprobes(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: include/linux/kprobes.h:179:
+struct list_head * kretprobe_inst_table_head(struct task_struct *tsk);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: kernel/djprobe.c:119:
+		list_for_each_entry(djpi, &djprobe_inst_table[idx],
 				     hlist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: kernel/kprobes.c:154:
+					list_add(&kip->hlist,
 						       &pages->list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: kernel/kprobes.c:315:
+	list_add(&ri->hlist,
 			&kretprobe_inst_table[hash_ptr(ri->task, KPROBE_HASH_BITS)]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: kernel/kprobes.c:351:
+        struct kretprobe_instance *ri, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: kernel/kprobes.c:351:
+        struct kretprobe_instance *ri, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: kernel/kprobes.c:352:
+        struct list_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: kernel/kprobes.c:352:
+        struct list_head *head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: kernel/kprobes.c:357:
+        list_for_each_entry_safe(ri, tmp, head, hlist) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: kernel/kprobes.c:357:
+        list_for_each_entry_safe(ri, tmp, head, hlist) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: kernel/kprobes.c:502:
+	list_add_rcu(&p->hlist,
 		       &kprobe_table[hash_ptr(p->addr, KPROBE_HASH_BITS)]);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.37626.commit.91bbaf80e7a09b0b1220d6933e7abf3f62fcdc3e total: 6 errors, 5 warnings, 6 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.37626.commit.91bbaf80e7a09b0b1220d6933e7abf3f62fcdc3e has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
