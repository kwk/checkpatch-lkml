WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
PS: I have not Subscribe linux-usb-devel maillist, please CC me your reply, thanks. 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/usb/input/btp2118.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#84: FILE: drivers/usb/input/btp2118.c:39:
+	(test_bit(BTP_URB_DONE|BTP_DISCONNECTING, &(info)->flags))
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/usb/input/btp2118.c:65:
+^Istruct urb *ctrl0;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#124: FILE: drivers/usb/input/btp2118.c:79:
+static char driver_name[] = "BETOP Vibration Gamepad (BTP-2118) Driver";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/usb/input/btp2118.c:105:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: drivers/usb/input/btp2118.c:108:
+^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#159: FILE: drivers/usb/input/btp2118.c:114:
+static int inline btp_effect_request(struct usb_btp_info *info, char *packet)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/usb/input/btp2118.c:119:
+	usb_fill_control_urb (info->ctrl0, info->dev, info->pipe0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/usb/input/btp2118.c:120:
+	usb_fill_control_urb (info->ctrl0, info->dev, info->pipe0,
+							(char*)&info->req,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#165: FILE: drivers/usb/input/btp2118.c:120:
+							(char*)&info->req,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#167: FILE: drivers/usb/input/btp2118.c:122:
+							info->req.wLength,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/usb/input/btp2118.c:124:
+^I^I                                        info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#178: FILE: drivers/usb/input/btp2118.c:133:
+	struct usb_btp_info *info = (struct usb_btp_info*)data;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: drivers/usb/input/btp2118.c:142:
+		mod_timer(&info->timer, jiffies+4*HZ);
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: drivers/usb/input/btp2118.c:142:
+		mod_timer(&info->timer, jiffies+4*HZ);
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/usb/input/btp2118.c:175:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct usb_btp_info)...)
#221: FILE: drivers/usb/input/btp2118.c:176:
+	info = kzalloc(sizeof(struct usb_btp_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/usb/input/btp2118.c:178:
+^I^Ireturn -ENOMEM;^I$

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#232: FILE: drivers/usb/input/btp2118.c:187:
+	info->req.bRequest = 0x9;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#233: FILE: drivers/usb/input/btp2118.c:188:
+	info->req.bRequestType = (USB_TYPE_CLASS|USB_RECIP_INTERFACE);
 	                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#233: FILE: drivers/usb/input/btp2118.c:188:
+	info->req.bRequestType = (USB_TYPE_CLASS|USB_RECIP_INTERFACE);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#234: FILE: drivers/usb/input/btp2118.c:189:
+	info->req.wIndex = 0x0;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#235: FILE: drivers/usb/input/btp2118.c:190:
+	info->req.wValue = 0x200;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#251: FILE: drivers/usb/input/btp2118.c:206:
+static void inline btp_wait_for_effect(struct usb_btp_info *info)

ERROR:SPACING: space prohibited after that open parenthesis '('
#253: FILE: drivers/usb/input/btp2118.c:208:
+	while ( info->flags && !IS_BTP_URB_DONE(info) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#253: FILE: drivers/usb/input/btp2118.c:208:
+	while ( info->flags && !IS_BTP_URB_DONE(info) )

WARNING:RETURN_VOID: void function return statements are not generally useful
#256: FILE: drivers/usb/input/btp2118.c:211:
+	return;
+}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#297: FILE: drivers/usb/input/btp2118.c:252:
+		}
+		else	/* remove effect */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#312: FILE: drivers/usb/input/btp2118.c:267:
+	offset = (value>49); /*0 - left motor, 1 - right motor */
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#321: FILE: drivers/usb/input/btp2118.c:276:
+	strength = ((21*value)+459)/48;
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: drivers/usb/input/btp2118.c:276:
+	strength = ((21*value)+459)/48;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#321: FILE: drivers/usb/input/btp2118.c:276:
+	strength = ((21*value)+459)/48;
 	                           ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#361: FILE: drivers/usb/input/btp2118.c:316:
+	switch (code) {
+		case FF_GAIN:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#375: FILE: drivers/usb/input/btp2118.c:330:
+				if (value>1) {
 				         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: drivers/usb/input/btp2118.c:332:
+					mod_timer(&info->timer, jiffies+4*HZ);
 					                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#377: FILE: drivers/usb/input/btp2118.c:332:
+					mod_timer(&info->timer, jiffies+4*HZ);
 					                                 ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#381: FILE: drivers/usb/input/btp2118.c:336:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#381: FILE: drivers/usb/input/btp2118.c:336:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/usb/input/btp2118.c:346:
+^Ireturn ret; $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#394: FILE: drivers/usb/input/btp2118.c:349:
+static int inline btp_new_effect_id(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#396: FILE: drivers/usb/input/btp2118.c:351:
+	static atomic_t effect_id= ATOMIC_INIT(0);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/usb/input/btp2118.c:352:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#409: FILE: drivers/usb/input/btp2118.c:364:
+	if (!hidinput) {
+		return -ENODEV;
+	}

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#414: FILE: drivers/usb/input/btp2118.c:369:
+	if (offset>=0 && offset<8) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#414: FILE: drivers/usb/input/btp2118.c:369:
+	if (offset>=0 && offset<8) {
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: drivers/usb/input/btp2118.c:376:
+		memcpy(info->effects+offset, effect, sizeof(struct ff_effect));
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/usb/input/btp2118.c:385:
+{^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#433: FILE: drivers/usb/input/btp2118.c:388:
+	int offset, ret=0;
 	               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#436: FILE: drivers/usb/input/btp2118.c:391:
+	if (!hidinput) {
+		return -ENODEV;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#446: FILE: drivers/usb/input/btp2118.c:401:
+	for (offset=0; offset<8; ++offset) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#446: FILE: drivers/usb/input/btp2118.c:401:
+	for (offset=0; offset<8; ++offset) {
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#448: FILE: drivers/usb/input/btp2118.c:403:
+			memset(info->effects+offset, 0, sizeof(struct ff_effect));
 			                    ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42045.commit.f07d4fdebb43f010aaf77edc60b8828fd4ee6ed5 total: 27 errors, 7 warnings, 19 checks, 438 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42045.commit.f07d4fdebb43f010aaf77edc60b8828fd4ee6ed5 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
