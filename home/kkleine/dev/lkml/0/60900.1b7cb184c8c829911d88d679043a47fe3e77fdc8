CHECK:CAMELCASE: Avoid CamelCase: <ica_xcRB>
#68: FILE: drivers/s390/crypto/zcrypt_api.c:324:
+static long zcrypt_send_cprb(struct ica_xcRB *xcRB)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xcRB>
#68: FILE: drivers/s390/crypto/zcrypt_api.c:324:
+static long zcrypt_send_cprb(struct ica_xcRB *xcRB)

CHECK:SPACING: No space is necessary after a cast
#104: FILE: drivers/s390/crypto/zcrypt_api.c:496:
+		struct ica_xcRB __user *uxcRB = (void __user *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <uxcRB>
#104: FILE: drivers/s390/crypto/zcrypt_api.c:496:
+		struct ica_xcRB __user *uxcRB = (void __user *) arg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: drivers/s390/crypto/zcrypt_api.c:498:
+		struct ica_xcRB xcRB;
+		if (copy_from_user(&xcRB, uxcRB, sizeof(xcRB)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <compat_ica_xcRB>
#122: FILE: drivers/s390/crypto/zcrypt_api.c:655:
+struct compat_ica_xcRB {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/s390/crypto/zcrypt_api.c:660:
+	unsigned char	padding1[16 - sizeof (compat_uptr_t)];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: drivers/s390/crypto/zcrypt_api.c:663:
+	char		padding2[16 - sizeof (compat_uptr_t)];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: drivers/s390/crypto/zcrypt_api.c:666:
+	char		padding3[16 - sizeof (compat_uptr_t)];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/s390/crypto/zcrypt_api.c:669:
+	char		padding4[16 - sizeof (compat_uptr_t)];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#140: FILE: drivers/s390/crypto/zcrypt_api.c:673:
+} __attribute__((packed));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#142: FILE: drivers/s390/crypto/zcrypt_api.c:675:
+static long trans_xcRB32(struct file *filp, unsigned int cmd,
                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <trans_xcRB32>
#142: FILE: drivers/s390/crypto/zcrypt_api.c:675:
+static long trans_xcRB32(struct file *filp, unsigned int cmd,

CHECK:CAMELCASE: Avoid CamelCase: <uxcRB32>
#145: FILE: drivers/s390/crypto/zcrypt_api.c:678:
+	struct compat_ica_xcRB __user *uxcRB32 = compat_ptr(arg);

CHECK:CAMELCASE: Avoid CamelCase: <xcRB32>
#146: FILE: drivers/s390/crypto/zcrypt_api.c:679:
+	struct compat_ica_xcRB xcRB32;

CHECK:CAMELCASE: Avoid CamelCase: <xcRB64>
#147: FILE: drivers/s390/crypto/zcrypt_api.c:680:
+	struct ica_xcRB xcRB64;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#178: FILE: drivers/s390/crypto/zcrypt_api.c:711:
+	if (copy_to_user(uxcRB32, &xcRB32, sizeof(xcRB32)))
+			return -EFAULT;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#191: FILE: drivers/s390/crypto/zcrypt_api.c:724:
+		return trans_xcRB32(filp, cmd, arg);
 		                    ^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zcrypt_device *' should also have an identifier name
#211: FILE: drivers/s390/crypto/zcrypt_api.h:109:
+	long (*send_cprb)(struct zcrypt_device *, struct ica_xcRB *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ica_xcRB *' should also have an identifier name
#211: FILE: drivers/s390/crypto/zcrypt_api.h:109:
+	long (*send_cprb)(struct zcrypt_device *, struct ica_xcRB *);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#339: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:63:
+#define CEIL4(x) ((((x)+3)/4)*4)
                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#339: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:63:
+#define CEIL4(x) ((((x)+3)/4)*4)
                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#339: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:63:
+#define CEIL4(x) ((((x)+3)/4)*4)
                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#345: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:69:
+};
+#define PCIXCC_RESPONSE_TYPE_ICA  0

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#366: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:269:
+} __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <XCRB_msg_to_type6CPRB_msgX>
#368: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:271:
+static int XCRB_msg_to_type6CPRB_msgX(struct zcrypt_device *zdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:272:
+static int XCRB_msg_to_type6CPRB_msgX(struct zcrypt_device *zdev,
+				       struct ap_message *ap_msg,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#379: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:282:
+	} __attribute__((packed)) *msg = ap_msg->message;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:295:
+		PRINTK("Combined message is too large (%ld/%d/%d).\n",
+		    sizeof(struct type6_hdr),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:303:
+		PDEBUG("Reply CPRB length is too large (%d).\n",
+		    xcRB->request_control_blk_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:308:
+		PDEBUG("Reply data block length is too large (%d).\n",
+		    xcRB->reply_data_length);

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:316:
+		PDEBUG("Reply CPRB + data block > PCIXCC_MAX_XCRB_RESPONSE_SIZE"
+		       " (%d/%d/%d).\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#426: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:329:
+	memcpy(msg->hdr.agent_id , &(xcRB->agent_ID), sizeof(xcRB->agent_ID));
 	                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around xcRB->agent_ID
#426: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:329:
+	memcpy(msg->hdr.agent_id , &(xcRB->agent_ID), sizeof(xcRB->agent_ID));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <ToCardLen1>
#427: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:330:
+	msg->hdr.ToCardLen1 = xcRB->request_control_blk_length;

CHECK:CAMELCASE: Avoid CamelCase: <ToCardLen2>
#430: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:333:
+		msg->hdr.ToCardLen2 = xcRB->request_data_length;

CHECK:CAMELCASE: Avoid CamelCase: <FromCardLen1>
#432: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:335:
+	msg->hdr.FromCardLen1 = xcRB->reply_control_blk_length;

CHECK:CAMELCASE: Avoid CamelCase: <FromCardLen2>
#433: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:336:
+	msg->hdr.FromCardLen2 = xcRB->reply_data_length;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->cprbx
#436: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:339:
+	if (copy_from_user(&(msg->cprbx), xcRB->request_control_blk_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:340:
+	if (copy_from_user(&(msg->cprbx), xcRB->request_control_blk_addr,
+		    xcRB->request_control_blk_length))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:345:
+		PDEBUG("cprb_len too large (%d/%d)\n", msg->cprbx.cprb_len,
+		    xcRB->request_control_blk_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:354:
+	    copy_from_user(req_data, xcRB->request_data_address,
+		xcRB->request_data_length))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:497:
+	if (copy_to_user(xcRB->reply_control_blk_addr,
+		data + msg->fmt2.offset1, msg->fmt2.count1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:504:
+		if (copy_to_user(xcRB->reply_data_addr,
+			data + msg->fmt2.offset2, msg->fmt2.count2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:539:
+static int convert_response_xcrb(struct zcrypt_device *zdev,
+			    struct ap_message *reply,

CHECK:SPACING: No space is necessary after a cast
#509: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:545:
+	switch (((unsigned char *) reply->message)[1]) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around xcRB->status
#516: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:552:
+			memcpy(&(xcRB->status), msg->fmt2.apfs, sizeof(u32));

CHECK:SPACING: No space is necessary after a cast
#524: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:560:
+		       *(unsigned int *) reply->message,

CHECK:SPACING: No space is necessary after a cast
#525: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:561:
+		       *(unsigned int *) (reply->message+4));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#525: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:561:
+		       *(unsigned int *) (reply->message+4));
 		                                        ^

CHECK:SPACING: No space is necessary after a cast
#540: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:585:
+		(struct response_type *) msg->private;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:608:
+			PRINTK("Invalid internal response type: %i\n",
+			    resp_type->type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:610:
+			memcpy(msg->message, &error_reply,
+			    sizeof error_reply);

WARNING:SIZEOF_PARENTHESIS: sizeof error_reply should be sizeof(error_reply)
#567: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:610:
+			    sizeof error_reply);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resp_type->work
#572: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:614:
+	complete(&(resp_type->work));

CHECK:SPACING: No space is necessary after a cast
#652: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:722:
+	ap_msg.message = (void *) kmalloc(PCIXCC_MAX_XCRB_MESSAGE_SIZE, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#652: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:722:
+	ap_msg.message = (void *) kmalloc(PCIXCC_MAX_XCRB_MESSAGE_SIZE, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#655: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:725:
+	ap_msg.psmid = (((unsigned long long) current->pid) << 32) +

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#663: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:733:
+	rc = wait_for_completion_interruptible_timeout(

CHECK:BRACES: braces {} should be used on all arms of this statement
#665: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:735:
+	if (rc > 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#667: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:737:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: include/asm-s390/zcrypt.h:109:
+	unsigned char	padx000[16 - sizeof (char *)];

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#746: FILE: include/asm-s390/zcrypt.h:110:
+	unsigned char *	req_parmb;	/* request parm block 'address'	 */
 	               	          	           ^^^^

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#746: FILE: include/asm-s390/zcrypt.h:110:
+	unsigned char *	req_parmb;	/* request parm block 'address'	 */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: include/asm-s390/zcrypt.h:111:
+	unsigned char	padx001[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#748: FILE: include/asm-s390/zcrypt.h:112:
+	unsigned char *	req_datab;	/* request data block 'address'	 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: include/asm-s390/zcrypt.h:113:
+	unsigned char	padx002[16 - sizeof (char *)];

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#750: FILE: include/asm-s390/zcrypt.h:114:
+	unsigned char *	rpl_parmb;	/* reply parm block 'address'	 */
 	               	          	         ^^^^

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#750: FILE: include/asm-s390/zcrypt.h:114:
+	unsigned char *	rpl_parmb;	/* reply parm block 'address'	 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#751: FILE: include/asm-s390/zcrypt.h:115:
+	unsigned char	padx003[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#752: FILE: include/asm-s390/zcrypt.h:116:
+	unsigned char *	rpl_datab;	/* reply data block 'address'	 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: include/asm-s390/zcrypt.h:117:
+	unsigned char	padx004[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#754: FILE: include/asm-s390/zcrypt.h:118:
+	unsigned char *	req_extb;	/* request extension block 'addr'*/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: include/asm-s390/zcrypt.h:119:
+	unsigned char	padx005[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#756: FILE: include/asm-s390/zcrypt.h:120:
+	unsigned char *	rpl_extb;	/* reply extension block 'addres'*/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: include/asm-s390/zcrypt.h:143:
+	unsigned char	padding1[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#780: FILE: include/asm-s390/zcrypt.h:144:
+	char __user *	request_control_blk_addr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: include/asm-s390/zcrypt.h:146:
+	char		padding2[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#783: FILE: include/asm-s390/zcrypt.h:147:
+	char __user *	request_data_address;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: include/asm-s390/zcrypt.h:149:
+	char		padding3[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#786: FILE: include/asm-s390/zcrypt.h:150:
+	char __user *	reply_control_blk_addr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: include/asm-s390/zcrypt.h:152:
+	char		padding4[16 - sizeof (char *)];

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#789: FILE: include/asm-s390/zcrypt.h:153:
+	char __user *	reply_data_addr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#792: FILE: include/asm-s390/zcrypt.h:156:
+} __attribute__((packed));

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0xFFFFFFFF' could be '0xFFFFFFFFU'
#793: FILE: include/asm-s390/zcrypt.h:157:
+#define AUTOSELECT ((unsigned int)0xFFFFFFFF)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#802: FILE: include/asm-s390/zcrypt.h:267:
+#define ZSECSENDCPRB	_IOC(_IOC_READ|_IOC_WRITE, ZCRYPT_IOCTL_MAGIC, 0x81, 0)
                     	              ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60900.commit.1b7cb184c8c829911d88d679043a47fe3e77fdc8 total: 11 errors, 30 warnings, 45 checks, 680 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60900.commit.1b7cb184c8c829911d88d679043a47fe3e77fdc8 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
