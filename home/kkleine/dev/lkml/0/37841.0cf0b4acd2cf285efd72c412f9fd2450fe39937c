WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#100: FILE: drivers/dma/dmaengine.c:108:
+	__ATTR(count, S_IRUGO, show_count, NULL),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: drivers/dma/dmaengine.c:249:
+struct dma_client *dma_async_client_register(enum dma_function_type type,
+		dma_event_callback event_callback)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#143: FILE: drivers/dma/dmaengine.c:412:
+EXPORT_SYMBOL(dma_async_buf_to_pg);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#144: FILE: drivers/dma/dmaengine.c:413:
+EXPORT_SYMBOL(dma_async_pg_to_pg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#145: FILE: drivers/dma/dmaengine.c:414:
+EXPORT_SYMBOL(dma_async_complete);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#146: FILE: drivers/dma/dmaengine.c:415:
+EXPORT_SYMBOL(dma_async_issue_pending);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#166: FILE: drivers/dma/ioatdma.c:693:
 static int __devinit ioat_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: include/linux/dmaengine.h:179:
+	dma_cookie_t (*buf_to_buf)(struct dma_chan *chan,
+				void *dest, void *src, size_t len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: include/linux/dmaengine.h:181:
+	dma_cookie_t (*buf_to_pg)(struct dma_chan *chan,
+				struct page *page, unsigned int offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: include/linux/dmaengine.h:184:
+	dma_cookie_t (*pg_to_pg)(struct dma_chan *chan,
+				struct page *dest_pg, unsigned int dest_off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: include/linux/dmaengine.h:188:
+	enum dma_status (*complete)(struct dma_chan *chan,
+				dma_cookie_t cookie, dma_cookie_t *last,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chan' - possible side-effects?
#293: FILE: include/linux/dmaengine.h:221:
+#define CHAN2FUNCS(chan) (chan->device->funcs[chan->client->type])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#293: FILE: include/linux/dmaengine.h:221:
+#define CHAN2FUNCS(chan) (chan->device->funcs[chan->client->type])

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: include/linux/dmaengine.h:226:
+struct dma_client *dma_async_client_register(enum dma_function_type type,
+		dma_event_callback event_callback);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: include/linux/dmaengine.h:244:
+static inline dma_cookie_t dma_async_buf_to_buf(struct dma_chan *chan,
+		void *dest, void *src, size_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: include/linux/dmaengine.h:268:
+static inline dma_cookie_t dma_async_buf_to_pg(struct dma_chan *chan,
+		struct page *page, unsigned int offset,

ERROR:SPACING: space prohibited after that open parenthesis '('
#370: FILE: include/linux/dmaengine.h:294:
+static inline dma_cookie_t dma_async_pg_to_pg( struct dma_chan *chan,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: include/linux/dmaengine.h:295:
+static inline dma_cookie_t dma_async_pg_to_pg( struct dma_chan *chan,
+		struct page *dest_pg, unsigned int dest_off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: include/linux/dmaengine.h:331:
+static inline enum dma_status dma_async_complete(struct dma_chan *chan,
+		dma_cookie_t cookie, dma_cookie_t *last,

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.37841.commit.0cf0b4acd2cf285efd72c412f9fd2450fe39937c total: 1 errors, 6 warnings, 12 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.37841.commit.0cf0b4acd2cf285efd72c412f9fd2450fe39937c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
