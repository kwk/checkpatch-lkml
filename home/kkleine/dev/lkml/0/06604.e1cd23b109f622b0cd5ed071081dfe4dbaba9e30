WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#94: FILE: fs/proc/kmsg.c:14:
+extern unsigned int klog_poll(struct file *, poll_table *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#94: FILE: fs/proc/kmsg.c:14:
+extern unsigned int klog_poll(struct file *, poll_table *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'poll_table *' should also have an identifier name
#94: FILE: fs/proc/kmsg.c:14:
+extern unsigned int klog_poll(struct file *, poll_table *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: fs/proc/kmsg.c:19:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: fs/proc/kmsg.c:33:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: fs/proc/kmsg.c:41:
+	int error = security_syslog(LSM_KLOG_READ);
+	if (error)

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: include/linux/klog.h:24:
+ ^IKLOG_READ_NONBLOCK   = 11, /* read from log, don't block if empty$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: include/linux/klog.h:24:
+ ^IKLOG_READ_NONBLOCK   = 11, /* read from log, don't block if empty$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: include/linux/klog.h:24:
+ ^IKLOG_READ_NONBLOCK   = 11, /* read from log, don't block if empty$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: include/linux/klog.h:25:
+ ^I^I^I^I    * -- new in 2.6.20 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: include/linux/klog.h:25:
+ ^I^I^I^I    * -- new in 2.6.20 */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#146: FILE: include/linux/klog.h:25:
+ 				    * -- new in 2.6.20 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: kernel/printk.c:203:
+		error = __put_user(c,buf);
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: kernel/printk.c:269:
+		j = limit-1-i;
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: kernel/printk.c:269:
+		j = limit-1-i;
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#280: FILE: kernel/printk.c:274:
+		error = __put_user(c,&buf[count-1-i]);
 		                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#280: FILE: kernel/printk.c:274:
+		error = __put_user(c,&buf[count-1-i]);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#280: FILE: kernel/printk.c:274:
+		error = __put_user(c,&buf[count-1-i]);
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#280: FILE: kernel/printk.c:274:
+		error = __put_user(c,&buf[count-1-i]);
 		                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#289: FILE: kernel/printk.c:283:
+		int offset = count-error;
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#292: FILE: kernel/printk.c:286:
+			if (__get_user(c,&buf[i+offset]) ||
 			                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#292: FILE: kernel/printk.c:286:
+			if (__get_user(c,&buf[i+offset]) ||
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#292: FILE: kernel/printk.c:286:
+			if (__get_user(c,&buf[i+offset]) ||
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#293: FILE: kernel/printk.c:287:
+			    __put_user(c,&buf[i])) {
 			                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#293: FILE: kernel/printk.c:287:
+			    __put_user(c,&buf[i])) {
 			                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#303: FILE: kernel/printk.c:297:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: kernel/printk.c:404:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06604.commit.e1cd23b109f622b0cd5ed071081dfe4dbaba9e30 total: 9 errors, 11 warnings, 7 checks, 407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06604.commit.e1cd23b109f622b0cd5ed071081dfe4dbaba9e30 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
