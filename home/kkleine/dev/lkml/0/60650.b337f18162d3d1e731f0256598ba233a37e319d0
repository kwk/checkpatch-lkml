WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
> > >>I was seeking to be minimal in my changes to the philosophy of the code.

WARNING:TYPO_SPELLING: 'definitly' may be misspelled - perhaps 'definitely'?
#56: 
> > >It definitly should not be a file_operation! It works at the address_space
        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: mm/filemap.c:2177:
+  ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: mm/filemap.c:2177:
+  ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: mm/filemap.c:2177:
+  ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#245: FILE: mm/filemap.c:2195:
+	BUG_ON(bytes == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: mm/filemap.c:2212:
+					      offset+bytes);
 					            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: mm/filemap.c:2240:
+  ^I^Iunlock_page(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#316: FILE: mm/filemap.c:2240:
+  ^I^Iunlock_page(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: mm/filemap.c:2240:
+  ^I^Iunlock_page(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: mm/filemap.c:2241:
+  ^I^Imark_page_accessed(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: mm/filemap.c:2241:
+  ^I^Imark_page_accessed(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: mm/filemap.c:2241:
+  ^I^Imark_page_accessed(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: mm/filemap.c:2242:
+  ^I^Ipage_cache_release(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: mm/filemap.c:2242:
+  ^I^Ipage_cache_release(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: mm/filemap.c:2242:
+  ^I^Ipage_cache_release(page);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: mm/filemap.c:2263:
+	struct address_space * mapping = file->f_mapping;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: mm/filemap.c:2265:
+^Istruct inode ^I*inode = mapping->host;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: mm/filemap.c:2270:
+        const struct iovec *cur_iov = iov; /* current iovec */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: mm/filemap.c:2270:
+        const struct iovec *cur_iov = iov; /* current iovec */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: mm/filemap.c:2271:
+        size_t          iov_base = 0;      /* offset in the current iovec */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: mm/filemap.c:2271:
+        size_t          iov_base = 0;      /* offset in the current iovec */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: mm/filemap.c:2292:
+                filemap_set_next_iovec(&cur_iov, &iov_base, written);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: mm/filemap.c:2292:
+                filemap_set_next_iovec(&cur_iov, &iov_base, written);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#389: FILE: mm/filemap.c:2307:
+		if (desc.count > 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#391: FILE: mm/filemap.c:2309:
+		else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: mm/filemap.c:2330:
+  ^I^Iif (status < 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: mm/filemap.c:2330:
+  ^I^Iif (status < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: mm/filemap.c:2330:
+  ^I^Iif (status < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: mm/filemap.c:2331:
+  ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: mm/filemap.c:2331:
+  ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: mm/filemap.c:2331:
+  ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: mm/filemap.c:2332:
+  ^I^Ibalance_dirty_pages_ratelimited(mapping);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: mm/filemap.c:2332:
+  ^I^Ibalance_dirty_pages_ratelimited(mapping);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: mm/filemap.c:2332:
+  ^I^Ibalance_dirty_pages_ratelimited(mapping);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: mm/filemap.c:2333:
+  ^I^Icond_resched();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: mm/filemap.c:2333:
+  ^I^Icond_resched();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: mm/filemap.c:2333:
+  ^I^Icond_resched();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: mm/filemap.c:2334:
+^I} while (count);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: mm/filemap.c:2336:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: mm/filemap.c:2336:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: mm/filemap.c:2337:
+  ^Iif (desc.cached_page)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: mm/filemap.c:2337:
+  ^Iif (desc.cached_page)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: mm/filemap.c:2337:
+  ^Iif (desc.cached_page)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: mm/filemap.c:2338:
+  ^I^Ipage_cache_release(desc.cached_page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: mm/filemap.c:2338:
+  ^I^Ipage_cache_release(desc.cached_page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: mm/filemap.c:2338:
+  ^I^Ipage_cache_release(desc.cached_page);$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60650.commit.b337f18162d3d1e731f0256598ba233a37e319d0 total: 16 errors, 28 warnings, 3 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.60650.commit.b337f18162d3d1e731f0256598ba233a37e319d0 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
