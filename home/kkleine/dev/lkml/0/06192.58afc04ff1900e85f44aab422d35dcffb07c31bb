CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: include/linux/wait.h:112:
+static inline int test_wait_bit_key(wait_queue_t *wait,
+				struct wait_bit_key *key)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#55: FILE: include/linux/wait.h:115:
+	struct wait_bit_queue *wait_bit
+		= container_of(wait, struct wait_bit_queue, wait);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: include/linux/wait.h:118:
+	return (wait_bit->key.flags == key->flags &&
+			wait_bit->key.bit_nr == key->bit_nr &&

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'waitbit' - possible side-effects?
#69: FILE: include/linux/wait.h:430:
+#define init_wait_bit_key(waitbit, word, bit)				\
+	do {								\
+		(waitbit)->key.flags = word;				\
+		(waitbit)->key.bit_nr = bit;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'waitbit' - possible side-effects?
#75: FILE: include/linux/wait.h:436:
+#define init_wait_bit_task(waitbit, tsk)				\
+	do {								\
+		(waitbit)->wait.private = tsk;				\
+		(waitbit)->wait.func = wake_bit_function;		\
+		INIT_LIST_HEAD(&(waitbit)->wait.task_list);		\
+	} while (0)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06192.commit.58afc04ff1900e85f44aab422d35dcffb07c31bb total: 0 errors, 0 warnings, 5 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06192.commit.58afc04ff1900e85f44aab422d35dcffb07c31bb has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
