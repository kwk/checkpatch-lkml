WARNING:TYPO_SPELLING: 'abilty' may be misspelled - perhaps 'ability'?
#15: 
Subject: [PATCH for review] [13/145] x86_64: Add abilty to enable/disable nmi watchdog with sysctl
                                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#29: 
Signed-off-by:  Don Zickus <dzickus@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: arch/i386/kernel/nmi.c:853:
+int proc_nmi_enabled(struct ctl_table *table, int write, struct file *file,
+			void __user *buffer, size_t *length, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#64: FILE: arch/i386/kernel/nmi.c:864:
+		printk(KERN_WARNING "NMI watchdog is permanently disabled\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#75: FILE: arch/i386/kernel/nmi.c:875:
+	if (nmi_watchdog == NMI_LOCAL_APIC)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#85: FILE: arch/i386/kernel/nmi.c:885:
+		printk("Can not enable/disable NMI on IO APIC\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#87: FILE: arch/i386/kernel/nmi.c:887:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: arch/i386/kernel/nmi.c:894:
+		printk( KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#94: FILE: arch/i386/kernel/nmi.c:894:
+		printk( KERN_WARNING

ERROR:SPACING: space prohibited after that open parenthesis '('
#94: FILE: arch/i386/kernel/nmi.c:894:
+		printk( KERN_WARNING

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: arch/x86_64/kernel/nmi.c:757:
+int proc_nmi_enabled(struct ctl_table *table, int write, struct file *file,
+			void __user *buffer, size_t *length, loff_t *ppos)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: arch/x86_64/kernel/nmi.c:768:
+		printk( KERN_WARNING "NMI watchdog is permanently disabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#127: FILE: arch/x86_64/kernel/nmi.c:768:
+		printk( KERN_WARNING "NMI watchdog is permanently disabled\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: arch/x86_64/kernel/nmi.c:768:
+		printk( KERN_WARNING "NMI watchdog is permanently disabled\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#134: FILE: arch/x86_64/kernel/nmi.c:775:
+	if (nmi_watchdog == NMI_LOCAL_APIC)
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: arch/x86_64/kernel/nmi.c:785:
+		printk("Can not enable/disable NMI on IO APIC\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#146: FILE: arch/x86_64/kernel/nmi.c:787:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#153: FILE: arch/x86_64/kernel/nmi.c:794:
+		printk(KERN_WARNING

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#195: FILE: include/linux/sysctl.h:153:
+	KERN_NMI_WATCHDOG=75, /* int: enable/disable nmi watchdog */
 	                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
                                                     ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#208: FILE: kernel/sysctl.c:80:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: kernel/sysctl.c:81:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
+			void __user *, size_t *, loff_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: kernel/sysctl.c:638:
+		.maxlen         = sizeof (int),

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49002.commit.b380560c91c2b5ae7d9929cc0303ca6616b6ef5a total: 6 errors, 20 warnings, 3 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49002.commit.b380560c91c2b5ae7d9929cc0303ca6616b6ef5a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
