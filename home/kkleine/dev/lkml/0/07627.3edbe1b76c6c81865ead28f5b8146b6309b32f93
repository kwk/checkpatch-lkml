WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
 This is a set of changes to add TURBOchannel support to the defxx driver.  

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: drivers/net/Kconfig:2466:
+config DEFXX_MMIO
+	bool
+	prompt "Use MMIO instead of PIO" if PCI || EISA
+	depends on DEFXX
+	default n if PCI || EISA
+	default y
+	---help---
+	  This instructs the driver to use EISA or PCI memory-mapped I/O
+	  (MMIO) as appropriate instead of programmed I/O ports (PIO).
+	  Enabling this gives an improvement in processing time in parts
+	  of the driver, but it may cause problems with EISA (DEFEA)
+	  adapters.  TURBOchannel does not have the concept of I/O ports,
+	  so MMIO is always used for these (DEFTA) adapters.
+
+	  If unsure, say N.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#161: FILE: drivers/net/defxx.c:230:
 static char version[] __devinitdata =

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#167: FILE: drivers/net/defxx.c:243:
+#define __unused __attribute__ ((unused))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#167: FILE: drivers/net/defxx.c:243:
+#define __unused __attribute__ ((unused))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#170: FILE: drivers/net/defxx.c:246:
+#define DFX_BUS_PCI(dev) (dev->bus == &pci_bus_type)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#176: FILE: drivers/net/defxx.c:252:
+#define DFX_BUS_EISA(dev) (dev->bus == &eisa_bus_type)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#182: FILE: drivers/net/defxx.c:258:
+#define DFX_BUS_TC(dev) (dev->bus == &tc_bus_type)

WARNING:MEMORY_BARRIER: memory barrier without comment
#277: FILE: drivers/net/defxx.c:369:
+	mb();

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#294: FILE: drivers/net/defxx.c:379:
+	struct device __unused *bdev = bp->bus_dev;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#316: FILE: drivers/net/defxx.c:392:
+	mb();

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#334: FILE: drivers/net/defxx.c:403:
+	struct device __unused *bdev = bp->bus_dev;
 	                       ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#347: FILE: drivers/net/defxx.c:413:
+
 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/net/defxx.c:413:
+^L$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: drivers/net/defxx.c:413:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#349: FILE: drivers/net/defxx.c:415:
+/*
+ * ================

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: drivers/net/defxx.c:418:
+ *   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/net/defxx.c:422:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: drivers/net/defxx.c:425:
+ *       $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#444: FILE: drivers/net/defxx.c:510:
+static int __devinit dfx_register(struct device *bdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#472: FILE: drivers/net/defxx.c:532:
+		printk(KERN_ERR "%s: Unable to allocate fddidev, aborting\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#483: FILE: drivers/net/defxx.c:539:
+		printk(KERN_ERR "%s: Cannot enable PCI device, aborting\n",

WARNING:SPLIT_STRING: quoted string split across lines
#511: FILE: drivers/net/defxx.c:559:
 		printk(KERN_ERR "%s: Cannot reserve I/O resource "
+		       "0x%lx @ 0x%lx, aborting\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#523: FILE: drivers/net/defxx.c:569:
+			printk(KERN_ERR "%s: Cannot map MMIO\n", print_name);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#644: FILE: drivers/net/defxx.c:664:
 static void __devinit dfx_bus_init(struct net_device *dev)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#741: FILE: drivers/net/defxx.c:710:
+		/*
+		 * Enable memory decoding (MEMCS0) and/or port decoding

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#782: FILE: drivers/net/defxx.c:746:
+		/*
+		 * Map PDQ registers into memory or port space.  This is

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#830: FILE: drivers/net/defxx.c:783:
+/*
+ * ==================

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: drivers/net/defxx.c:786:
+ *   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: drivers/net/defxx.c:789:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: drivers/net/defxx.c:792:
+ *       $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#857: FILE: drivers/net/defxx.c:810:
+static void __devinit dfx_bus_uninit(struct net_device *dev)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dfx_bus_uninit', this function's name, in a string
#865: FILE: drivers/net/defxx.c:818:
+	DBG_printk("In dfx_bus_uninit...\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#887: FILE: drivers/net/defxx.c:867:
 static void __devinit dfx_bus_config_check(DFX_board_t *bp)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#889: FILE: drivers/net/defxx.c:869:
+	struct device __unused *bdev = bp->bus_dev;
 	                       ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#928: FILE: drivers/net/defxx.c:963:
 static int __devinit dfx_driver_init(struct net_device *dev,

WARNING:SPLIT_STRING: quoted string split across lines
#973: FILE: drivers/net/defxx.c:1053:
+	pr_info("%s: %s at %saddr = 0x%llx, IRQ = %d, "
+		"Hardware addr = %02X-%02X-%02X-%02X-%02X-%02X\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#987: FILE: drivers/net/defxx.c:1072:
+	bp->kmalloced = top_v = dma_alloc_coherent(bp->bus_dev, alloc_size,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1157: FILE: drivers/net/defxx.c:3068:
+						dma_unmap_single(bp->bus_dev,
 							bp->descr_block_virt->rcv_data[entry].long_1,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1225: FILE: drivers/net/defxx.c:3563:
+/*
+ * ==================

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1228: FILE: drivers/net/defxx.c:3566:
+ *   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: drivers/net/defxx.c:3569:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: drivers/net/defxx.c:3572:
+ *       $

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1250: FILE: drivers/net/defxx.c:3588:
+static void __devexit dfx_unregister(struct device *bdev)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1279: FILE: drivers/net/defxx.c:3615:
+	if (dfx_use_mmio) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1282: FILE: drivers/net/defxx.c:3618:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1292: FILE: drivers/net/defxx.c:3627:
 
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1293: FILE: drivers/net/defxx.c:3628:
+static int __devinit __unused dfx_dev_register(struct device *);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1294: FILE: drivers/net/defxx.c:3629:
+static int __devexit __unused dfx_dev_unregister(struct device *);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1297: FILE: drivers/net/defxx.c:3632:
+static int __devinit dfx_pci_register(struct pci_dev *,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1299: FILE: drivers/net/defxx.c:3634:
+static void __devexit dfx_pci_unregister(struct pci_dev *);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1314: FILE: drivers/net/defxx.c:3649:
+static __devinit int dfx_pci_register(struct pci_dev *pdev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1323: FILE: drivers/net/defxx.c:3655:
+static void __devexit dfx_pci_unregister(struct pci_dev *pdev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/net/defxx.c:3663:
+        { "DEC3001", DEFEA_PROD_ID_1 },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: drivers/net/defxx.c:3663:
+        { "DEC3001", DEFEA_PROD_ID_1 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: drivers/net/defxx.c:3664:
+        { "DEC3002", DEFEA_PROD_ID_2 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: drivers/net/defxx.c:3664:
+        { "DEC3002", DEFEA_PROD_ID_2 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: drivers/net/defxx.c:3665:
+        { "DEC3003", DEFEA_PROD_ID_3 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: drivers/net/defxx.c:3665:
+        { "DEC3003", DEFEA_PROD_ID_3 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: drivers/net/defxx.c:3666:
+        { "DEC3004", DEFEA_PROD_ID_4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: drivers/net/defxx.c:3666:
+        { "DEC3004", DEFEA_PROD_ID_4 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: drivers/net/defxx.c:3667:
+        { }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: drivers/net/defxx.c:3667:
+        { }$

WARNING:STATIC_CONST: Move const after static - use 'static const struct tc_device_id'
#1362: FILE: drivers/net/defxx.c:3683:
+static struct tc_device_id const dfx_tc_table[] = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1383: FILE: drivers/net/defxx.c:3703:
+static int __devinit __unused dfx_dev_register(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1405: FILE: drivers/net/defxx.c:3713:
+static int __devexit __unused dfx_dev_unregister(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1420: FILE: drivers/net/defxx.c:3721:
+static int __devinit dfx_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1433: FILE: drivers/net/defxx.c:3733:
+static void __devexit dfx_cleanup(void)

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1569: FILE: drivers/net/defxx.h:1775:
+	} base;										/* base address */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07627.commit.3edbe1b76c6c81865ead28f5b8146b6309b32f93 total: 16 errors, 40 warnings, 13 checks, 1472 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07627.commit.3edbe1b76c6c81865ead28f5b8146b6309b32f93 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
