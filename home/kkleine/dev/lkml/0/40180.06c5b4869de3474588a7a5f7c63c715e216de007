WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: Documentation/firmware_class/firmware_example.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: Documentation/firmware_class/firmware_example.c:19:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: Documentation/firmware_class/firmware_example.c:20:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);
+       memcpy(buf, firmware, size);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: Documentation/firmware_class/firmware_example.c:20:
+       memcpy(buf, firmware, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: Documentation/firmware_class/firmware_example.c:21:
+       buf[size] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: Documentation/firmware_class/firmware_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#68: FILE: Documentation/firmware_class/firmware_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: Documentation/firmware_class/firmware_example.c:23:
+       kfree(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: Documentation/firmware_class/firmware_example.c:29:
+       const struct firmware *fw_entry;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#76: FILE: Documentation/firmware_class/firmware_example.c:30:
+       const struct firmware *fw_entry;
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: Documentation/firmware_class/firmware_example.c:30:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#76: FILE: Documentation/firmware_class/firmware_example.c:30:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: Documentation/firmware_class/firmware_example.c:32:
+       if (request_firmware(&fw_entry, "sample_firware.bin", dev) != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#78: FILE: Documentation/firmware_class/firmware_example.c:32:
+       if (request_firmware(&fw_entry, "sample_firware.bin", dev) != 0) {
+               printk(KERN_ERR "firmware_example: Firmware not 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#80: FILE: Documentation/firmware_class/firmware_example.c:33:
available\n");

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: Documentation/firmware_class/firmware_example.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: Documentation/firmware_class/firmware_example.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: Documentation/firmware_class/firmware_example.c:35:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: Documentation/firmware_class/firmware_example.c:37:
+       sample_firmware_load(fw_entry->data, fw_entry->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: Documentation/firmware_class/firmware_example.c:39:
+       release_firmware(fw_entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: Documentation/firmware_class/firmware_example.c:41:
+       /* finish setting up the device */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: Documentation/firmware_class/firmware_example.c:46:
+       printk(KERN_DEBUG "firmware_example : ghost device released\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: Documentation/firmware_class/firmware_example.c:50:
+       .bus_id = "ghost0",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: Documentation/firmware_class/firmware_example.c:51:
+       .release = ghost_release$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: Documentation/firmware_class/firmware_example.c:56:
+       device_register(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: Documentation/firmware_class/firmware_example.c:57:
+       sample_probe(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: Documentation/firmware_class/firmware_example.c:58:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: Documentation/firmware_class/firmware_example.c:62:
+       device_unregister(&ghost_device);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: Documentation/firmware_class/firmware_nowait_example.c:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: Documentation/firmware_class/firmware_nowait_example.c:19:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: Documentation/firmware_class/firmware_nowait_example.c:20:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);
+       memcpy(buf, firmware, size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: Documentation/firmware_class/firmware_nowait_example.c:20:
+       memcpy(buf, firmware, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: Documentation/firmware_class/firmware_nowait_example.c:21:
+       buf[size] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: Documentation/firmware_class/firmware_nowait_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#146: FILE: Documentation/firmware_class/firmware_nowait_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: Documentation/firmware_class/firmware_nowait_example.c:23:
+       kfree(buf);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: Documentation/firmware_class/firmware_nowait_example.c:26:
+static void sample_probe_async_cont(const struct firmware *fw, void $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: Documentation/firmware_class/firmware_nowait_example.c:28:
+       if (!fw) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#153: FILE: Documentation/firmware_class/firmware_nowait_example.c:28:
+       if (!fw) {
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: Documentation/firmware_class/firmware_nowait_example.c:29:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: Documentation/firmware_class/firmware_nowait_example.c:29:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#154: FILE: Documentation/firmware_class/firmware_nowait_example.c:29:
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: Documentation/firmware_class/firmware_nowait_example.c:30:
+                      "firmware_nowait_example: Firmware not available\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: Documentation/firmware_class/firmware_nowait_example.c:30:
+                      "firmware_nowait_example: Firmware not available\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: Documentation/firmware_class/firmware_nowait_example.c:31:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: Documentation/firmware_class/firmware_nowait_example.c:31:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: Documentation/firmware_class/firmware_nowait_example.c:32:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: Documentation/firmware_class/firmware_nowait_example.c:34:
+       printk(KERN_INFO "firmware_nowait_example: Device Pointer \"%s\"\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#159: FILE: Documentation/firmware_class/firmware_nowait_example.c:34:
+       printk(KERN_INFO "firmware_nowait_example: Device Pointer \"%s\"\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: Documentation/firmware_class/firmware_nowait_example.c:35:
+              (char *)context);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: Documentation/firmware_class/firmware_nowait_example.c:35:
+              (char *)context);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: Documentation/firmware_class/firmware_nowait_example.c:36:
+       sample_firmware_load(fw->data, fw->size);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#163: FILE: Documentation/firmware_class/firmware_nowait_example.c:38:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: Documentation/firmware_class/firmware_nowait_example.c:43:
+       int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: Documentation/firmware_class/firmware_nowait_example.c:45:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#170: FILE: Documentation/firmware_class/firmware_nowait_example.c:45:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: Documentation/firmware_class/firmware_nowait_example.c:47:
+       error = request_firmware_nowait(THIS_MODULE, FW_ACTION_NOHOTPLUG,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: Documentation/firmware_class/firmware_nowait_example.c:48:
+                                       "sample_firmware.bin", dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: Documentation/firmware_class/firmware_nowait_example.c:48:
+                                       "sample_firmware.bin", dev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: Documentation/firmware_class/firmware_nowait_example.c:49:
+                                       "my device pointer",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: Documentation/firmware_class/firmware_nowait_example.c:49:
+                                       "my device pointer",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: Documentation/firmware_class/firmware_nowait_example.c:50:
+                                       sample_probe_async_cont);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: Documentation/firmware_class/firmware_nowait_example.c:50:
+                                       sample_probe_async_cont);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: Documentation/firmware_class/firmware_nowait_example.c:52:
+       if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#177: FILE: Documentation/firmware_class/firmware_nowait_example.c:52:
+       if (error) {
+               printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: Documentation/firmware_class/firmware_nowait_example.c:53:
+               printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: Documentation/firmware_class/firmware_nowait_example.c:53:
+               printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: Documentation/firmware_class/firmware_nowait_example.c:53:
+               printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/firmware_class/firmware_nowait_example.c:54:
+                      "firmware_nowait_example: request_firmware_nowait $

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: Documentation/firmware_class/firmware_nowait_example.c:54:
+                      "firmware_nowait_example: request_firmware_nowait $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: Documentation/firmware_class/firmware_nowait_example.c:54:
+                      "firmware_nowait_example: request_firmware_nowait $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: Documentation/firmware_class/firmware_nowait_example.c:55:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: Documentation/firmware_class/firmware_nowait_example.c:61:
+       printk(KERN_DEBUG "firmware_nowait_example: ghost device $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: Documentation/firmware_class/firmware_nowait_example.c:61:
+       printk(KERN_DEBUG "firmware_nowait_example: ghost device $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#187: FILE: Documentation/firmware_class/firmware_nowait_example.c:61:
+       printk(KERN_DEBUG "firmware_nowait_example: ghost device 
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: Documentation/firmware_class/firmware_nowait_example.c:65:
+       .bus_id = "ghost0",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: Documentation/firmware_class/firmware_nowait_example.c:66:
+       .release = ghost_release$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: Documentation/firmware_class/firmware_nowait_example.c:71:
+       device_register(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: Documentation/firmware_class/firmware_nowait_example.c:72:
+       sample_probe_async(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: Documentation/firmware_class/firmware_nowait_example.c:73:
+       return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: Documentation/firmware_class/firmware_nowait_example.c:75:
+}
+static void __exit sample_exit(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: Documentation/firmware_class/firmware_nowait_example.c:77:
+       device_unregister(&ghost_device);$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40180.commit.06c5b4869de3474588a7a5f7c63c715e216de007 total: 17 errors, 67 warnings, 2 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40180.commit.06c5b4869de3474588a7a5f7c63c715e216de007 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
