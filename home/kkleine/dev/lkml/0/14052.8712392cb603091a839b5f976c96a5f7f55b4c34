CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: fs/buffer.c:2012:
+int generic_cont_expand(struct inode *inode, loff_t size, loff_t *bytes,
+						get_block_t *get_block)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#121: FILE: fs/buffer.c:2048:
+		if (zerofrom & (blocksize-1))
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#122: FILE: fs/buffer.c:2049:
+			*bytes = (*bytes + blocksize-1) & (blocksize-1);
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#122: FILE: fs/buffer.c:2049:
+			*bytes = (*bytes + blocksize-1) & (blocksize-1);
 			                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: fs/buffer.c:2054:
+		status = __block_prepare_write(inode, page, zerofrom,
+						zeroto, get_block);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#136: FILE: fs/buffer.c:2058:
+		memset(kaddr+zerofrom, 0, PAGE_CACHE_SIZE-zerofrom);
 		            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#136: FILE: fs/buffer.c:2058:
+		memset(kaddr+zerofrom, 0, PAGE_CACHE_SIZE-zerofrom);
 		                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#152: FILE: fs/buffer.c:2067:
+			BUG_ON(status == AOP_TRUNCATED_PAGE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t *' should also have an identifier name
#301: FILE: include/linux/buffer_head.h:205:
+int generic_cont_expand(struct inode *inode, loff_t size, loff_t *bytes, get_block_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14052.commit.8712392cb603091a839b5f976c96a5f7f55b4c34 total: 0 errors, 2 warnings, 7 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.14052.commit.8712392cb603091a839b5f976c96a5f7f55b4c34 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
