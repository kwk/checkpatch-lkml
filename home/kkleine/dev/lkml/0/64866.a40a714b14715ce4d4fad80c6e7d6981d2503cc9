CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: kernel/power/extent.c:149:
+int suspend_serialise_extent_chain(struct suspend_module_ops *owner,
+		struct extent_chain *chain)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: kernel/power/extent.c:153:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#50: FILE: kernel/power/extent.c:154:
+	if ((ret = suspend_active_writer->rw_header_chunk(WRITE, owner,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: kernel/power/extent.c:155:
+	if ((ret = suspend_active_writer->rw_header_chunk(WRITE, owner,
+		(char *) chain,

CHECK:SPACING: No space is necessary after a cast
#51: FILE: kernel/power/extent.c:155:
+		(char *) chain,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#57: FILE: kernel/power/extent.c:161:
+		if ((ret = suspend_active_writer->rw_header_chunk(WRITE, owner,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: kernel/power/extent.c:162:
+		if ((ret = suspend_active_writer->rw_header_chunk(WRITE, owner,
+				(char *) this,

CHECK:SPACING: No space is necessary after a cast
#58: FILE: kernel/power/extent.c:162:
+				(char *) this,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#66: FILE: kernel/power/extent.c:170:
+		printk(KERN_EMERG "Saved %d extents but chain metadata says there should be %d-%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: kernel/power/extent.c:171:
+		printk(KERN_EMERG "Saved %d extents but chain metadata says there should be %d-%d.\n",
+				i, chain->allocs, chain->frees);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#68: FILE: kernel/power/extent.c:172:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#83: FILE: kernel/power/extent.c:187:
+	if (!(ret = suspend_active_writer->rw_header_chunk(READ, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: kernel/power/extent.c:188:
+	if (!(ret = suspend_active_writer->rw_header_chunk(READ, NULL,
+		(char *) chain,

CHECK:SPACING: No space is necessary after a cast
#84: FILE: kernel/power/extent.c:188:
+		(char *) chain,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*this)...) over kmalloc(sizeof(struct extent)...)
#89: FILE: kernel/power/extent.c:193:
+		this = kmalloc(sizeof(struct extent), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#90: FILE: kernel/power/extent.c:194:
+		BUG_ON(!this); /* Shouldn't run out of memory trying this! */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#92: FILE: kernel/power/extent.c:196:
+		if (!(ret = suspend_active_writer->rw_header_chunk(READ, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: kernel/power/extent.c:197:
+		if (!(ret = suspend_active_writer->rw_header_chunk(READ, NULL,
+				(char *) this, 2 * sizeof(unsigned long))))

CHECK:SPACING: No space is necessary after a cast
#93: FILE: kernel/power/extent.c:197:
+				(char *) this, 2 * sizeof(unsigned long))))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64866.commit.a40a714b14715ce4d4fad80c6e7d6981d2503cc9 total: 5 errors, 3 warnings, 11 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.64866.commit.a40a714b14715ce4d4fad80c6e7d6981d2503cc9 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
