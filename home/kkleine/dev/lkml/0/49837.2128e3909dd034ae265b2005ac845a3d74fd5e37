WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/net/ehea/ehea_qmr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#42: FILE: drivers/net/ehea/ehea_qmr.c:2:
+ *  linux/drivers/net/ehea/ehea_qmr.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: drivers/net/ehea/ehea_qmr.c:26:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: drivers/net/ehea/ehea_qmr.c:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: drivers/net/ehea/ehea_qmr.c:37:
+	void *retvalue = ipz_qeit_get(queue);
+	queue->current_q_offset += queue->pagesize;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#82: FILE: drivers/net/ehea/ehea_qmr.c:42:
+	else if ((((u64) retvalue) & (EHEA_PAGESIZE-1)) != 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#82: FILE: drivers/net/ehea/ehea_qmr.c:42:
+	else if ((((u64) retvalue) & (EHEA_PAGESIZE-1)) != 0) {
 	                                           ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#82: FILE: drivers/net/ehea/ehea_qmr.c:42:
+	}
+	else if ((((u64) retvalue) & (EHEA_PAGESIZE-1)) != 0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: drivers/net/ehea/ehea_qmr.c:56:
+	int f;
+	EDEB_EN(7, "nr_of_pages=%x pagesize=%x qe_size=%x",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#109: FILE: drivers/net/ehea/ehea_qmr.c:69:
+		if (!(queue->queue_pages)[f]) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: drivers/net/ehea/ehea_qmr.c:75:
+		int g;
+		EDEB_ERR(4, "couldn't get 0ed pages queue=%p f=%x "

WARNING:SPLIT_STRING: quoted string split across lines
#116: FILE: drivers/net/ehea/ehea_qmr.c:76:
+		EDEB_ERR(4, "couldn't get 0ed pages queue=%p f=%x "
+			 "nr_of_pages=%x", queue, f, nr_of_pages);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#117: FILE: drivers/net/ehea/ehea_qmr.c:77:
+		for (g = 0; g < f; g++) {
+			free_page((unsigned long)(queue->queue_pages)[g]);
+		}

WARNING:SPLIT_STRING: quoted string split across lines
#128: FILE: drivers/net/ehea/ehea_qmr.c:88:
+	EDEB_EX(7, "queue_length=%x queue_pages=%p qe_size=%x"
+		" act_nr_of_sg=%x", queue->queue_length, queue->queue_pages,

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: drivers/net/ehea/ehea_qmr.c:96:
+	int g;
+	EDEB_EN(7, "ipz_queue pointer=%p", queue);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#137: FILE: drivers/net/ehea/ehea_qmr.c:97:
+	if (!queue) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#140: FILE: drivers/net/ehea/ehea_qmr.c:100:
+	if (!queue->queue_pages) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#147: FILE: drivers/net/ehea/ehea_qmr.c:107:
+	for (g = 0; g < (queue->queue_length / queue->pagesize); g++) {
+		free_page((unsigned long)(queue->queue_pages)[g]);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: drivers/net/ehea/ehea_qmr.c:119:
+	struct ehea_cq *cq = vmalloc(sizeof(*cq));
+	if (cq)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ehea_create_cq', this function's name, in a string
#190: FILE: drivers/net/ehea/ehea_qmr.c:150:
+		EDEB_ERR(4, "ehea_create_cq ret=%p (-ENOMEM)", cq);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: drivers/net/ehea/ehea_qmr.c:184:
+			EDEB_ERR(4, "ipz_qpageit_get_inc() "
+				 "returns NULL adapter=%p", adapter);

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: drivers/net/ehea/ehea_qmr.c:198:
+			EDEB_ERR(4, "ehea_h_register_rpage_cq() failed "
+				 "ehea_cq=%p hret=%lx "

WARNING:SPLIT_STRING: quoted string split across lines
#239: FILE: drivers/net/ehea/ehea_qmr.c:199:
+				 "ehea_cq=%p hret=%lx "
+				 "counter=%i act_pages=%i",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#247: FILE: drivers/net/ehea/ehea_qmr.c:207:
+			if ((hret != H_SUCCESS) || (vpage)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#249: FILE: drivers/net/ehea/ehea_qmr.c:209:
+				EDEB_ERR(4, "Registration of pages not "
+					 "complete ehea_cq=%p hret=%lx",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#254: FILE: drivers/net/ehea/ehea_qmr.c:214:
+			if ((hret != H_PAGE_REGISTERED) || (vpage == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vpage == 0'
#254: FILE: drivers/net/ehea/ehea_qmr.c:214:
+			if ((hret != H_PAGE_REGISTERED) || (vpage == 0)) {

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: drivers/net/ehea/ehea_qmr.c:216:
+				EDEB_ERR(4, "Registration of page failed "
+					 "ehea_cq=%p hret=%lx"

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: drivers/net/ehea/ehea_qmr.c:217:
+					 "ehea_cq=%p hret=%lx"
+					 "counter=%i act_pages=%i",

WARNING:MISSING_SPACE: break quoted strings at a space character
#257: FILE: drivers/net/ehea/ehea_qmr.c:217:
+					 "ehea_cq=%p hret=%lx"
+					 "counter=%i act_pages=%i",

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: drivers/net/ehea/ehea_qmr.c:274:
+	struct ehea_eq *eq = vmalloc(sizeof(*eq));
+	if (eq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: drivers/net/ehea/ehea_qmr.c:315:
+	ret = ipz_queue_ctor(&eq->ipz_queue, eq->attr.nr_pages,
+			      EHEA_PAGESIZE, sizeof(struct ehea_eqe), 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#364: FILE: drivers/net/ehea/ehea_qmr.c:324:
+		if (!(vpage = ipz_qpageit_get_inc(&eq->ipz_queue))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#380: FILE: drivers/net/ehea/ehea_qmr.c:340:
+			if ((hret != H_SUCCESS) || (vpage)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#380: FILE: drivers/net/ehea/ehea_qmr.c:340:
+			if ((hret != H_SUCCESS) || (vpage)) {
+				goto register_page_failed;
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#384: FILE: drivers/net/ehea/ehea_qmr.c:344:
+			if ((hret != H_PAGE_REGISTERED) || (!vpage)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vpage'
#384: FILE: drivers/net/ehea/ehea_qmr.c:344:
+			if ((hret != H_PAGE_REGISTERED) || (!vpage)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#384: FILE: drivers/net/ehea/ehea_qmr.c:344:
+			if ((hret != H_PAGE_REGISTERED) || (!vpage)) {
+				goto register_page_failed;
+			}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#447: FILE: drivers/net/ehea/ehea_qmr.c:407:
+struct ehea_qp *ehea_qp_new(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#449: FILE: drivers/net/ehea/ehea_qmr.c:409:
+	struct ehea_qp *qp = vmalloc(sizeof(*qp));
+	if (qp != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#449: FILE: drivers/net/ehea/ehea_qmr.c:409:
+	if (qp != 0) {
+		memset(qp, 0, sizeof(*qp));
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#491: FILE: drivers/net/ehea/ehea_qmr.c:451:
+			EDEB_ERR(4, "SQ ipz_qpageit_get_inc() "
+				 "failed p_vpage= %p", vpage);

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: drivers/net/ehea/ehea_qmr.c:512:
+	EDEB(7, "send_ehea_cq->ipz_cq_handle=0x%lX"
+	     "recv_ehea_cq->ipz_cq_handle=0x%lX", init_attr->send_cq_handle,

WARNING:MISSING_SPACE: break quoted strings at a space character
#552: FILE: drivers/net/ehea/ehea_qmr.c:512:
+	EDEB(7, "send_ehea_cq->ipz_cq_handle=0x%lX"
+	     "recv_ehea_cq->ipz_cq_handle=0x%lX", init_attr->send_cq_handle,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#555: FILE: drivers/net/ehea/ehea_qmr.c:515:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#665: FILE: drivers/net/ehea/ehea_qmr.c:625:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: drivers/net/ehea/ehea_qmr.c:632:
+	struct ehea_qp_init_attr *qp_attr = &qp->init_attr;
+	EDEB_EX(7, "");

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: drivers/net/ehea/ehea_qmr.c:644:
+   ^Iif(qp_attr->rq_count > 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: drivers/net/ehea/ehea_qmr.c:644:
+   ^Iif(qp_attr->rq_count > 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/net/ehea/ehea_qmr.c:644:
+   ^Iif(qp_attr->rq_count > 1)$

ERROR:SPACING: space required before the open parenthesis '('
#684: FILE: drivers/net/ehea/ehea_qmr.c:644:
+   	if(qp_attr->rq_count > 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: drivers/net/ehea/ehea_qmr.c:646:
+   ^Iif(qp_attr->rq_count > 2)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: drivers/net/ehea/ehea_qmr.c:646:
+   ^Iif(qp_attr->rq_count > 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/net/ehea/ehea_qmr.c:646:
+   ^Iif(qp_attr->rq_count > 2)$

ERROR:SPACING: space required before the open parenthesis '('
#686: FILE: drivers/net/ehea/ehea_qmr.c:646:
+   	if(qp_attr->rq_count > 2)

CHECK:SPACING: No space is necessary after a cast
#701: FILE: drivers/net/ehea/ehea_qmr.c:661:
+	u64 end = (u64) high_memory;

WARNING:MINMAX: min() should probably be min_t(u64, nr_pages, 512)
#731: FILE: drivers/net/ehea/ehea_qmr.c:691:
+			u64 num_pages = min(nr_pages, (u64)512);

WARNING:LINE_SPACING: Missing a blank line after declarations
#732: FILE: drivers/net/ehea/ehea_qmr.c:692:
+			u64 num_pages = min(nr_pages, (u64)512);
+			for (i = 0; i < num_pages; i++)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#756: FILE: drivers/net/ehea/ehea_qmr.c:716:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#756: FILE: drivers/net/ehea/ehea_qmr.c:716:
+		if ((hret != H_SUCCESS) && (hret != H_PAGE_REGISTERED)) {

WARNING:SPLIT_STRING: quoted string split across lines
#816: FILE: drivers/net/ehea/ehea_qmr.c:776:
+		EDEB_EX(4, " register rpage_mr failed for last page:"
+			"hret=%lX\n", hret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#825: FILE: drivers/net/ehea/ehea_qmr.c:785:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#830: FILE: drivers/net/ehea/ehea_qmr.c:790:
+	u64 hret = H_HARDWARE;
+	EDEB_EN(7, "adapter=%p", adapter);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#842: FILE: drivers/net/ehea/ehea_qmr.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#843: FILE: drivers/net/ehea/ehea_qmr.h:2:
+ *  linux/drivers/net/ehea/ehea_qmr.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#867: FILE: drivers/net/ehea/ehea_qmr.h:26:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#868: FILE: drivers/net/ehea/ehea_qmr.h:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#905: FILE: drivers/net/ehea/ehea_qmr.h:64:
+#define EHEA_SWQE_IMM_DATA_PRESENT ^I 0x0200$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#943: FILE: drivers/net/ehea/ehea_qmr.h:102:
+			struct ehea_vsgentry sg_list[EHEA_MAX_WQE_SG_ENTRIES-1];
 			                                                    ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#944: FILE: drivers/net/ehea/ehea_qmr.h:103:
+		} immdata_desc __attribute__ ((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1009: FILE: drivers/net/ehea/ehea_qmr.h:168:
+	struct ipz_page *current_page = NULL;
+	if (q_offset >= queue->queue_length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1033: FILE: drivers/net/ehea/ehea_qmr.h:192:
+	void *retvalue = ipz_qeit_get(queue);
+	ipz_qeit_inc(queue);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1045: FILE: drivers/net/ehea/ehea_qmr.h:204:
+	u8 valid = retvalue->valid;
+	if ((valid >> 7) == (queue->toggle_state & 1)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1045: FILE: drivers/net/ehea/ehea_qmr.h:204:
+	if ((valid >> 7) == (queue->toggle_state & 1)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1051: FILE: drivers/net/ehea/ehea_qmr.h:210:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1062: FILE: drivers/net/ehea/ehea_qmr.h:221:
+	void *pref;
+	pref = ipz_qeit_calc(queue, queue->current_q_offset);

CHECK:SPACING: No space is necessary after a cast
#1099: FILE: drivers/net/ehea/ehea_qmr.h:258:
+	u32 qe = *(u8 *) retvalue;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1100: FILE: drivers/net/ehea/ehea_qmr.h:259:
+	u32 qe = *(u8 *) retvalue;
+	EDEB(7, "ipz_eqit_eq_get_inc_valid qe=%x", qe);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipz_eqit_eq_get_inc_valid', this function's name, in a string
#1100: FILE: drivers/net/ehea/ehea_qmr.h:259:
+	EDEB(7, "ipz_eqit_eq_get_inc_valid qe=%x", qe);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1111: FILE: drivers/net/ehea/ehea_qmr.h:270:
+{
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1115: FILE: drivers/net/ehea/ehea_qmr.h:274:
+	struct ehea_qp *my_qp = qp;
+	EDEB_EN(8, "QP=%p, RQ_nr=%d", qp, rq_nr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1134: FILE: drivers/net/ehea/ehea_qmr.h:293:
+	struct ehea_swqe *wqe_p = NULL;
+	EDEB_EN(7, "QP=%p, queue=%p", my_qp, &my_qp->ipz_squeue);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1143: FILE: drivers/net/ehea/ehea_qmr.h:302:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1146: FILE: drivers/net/ehea/ehea_qmr.h:305:
+	     (u64) swqe->wr_id, swqe->immediate_data_length, swqe->descriptors);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1169: FILE: drivers/net/ehea/ehea_qmr.h:328:
+	struct ipz_queue *queue = &qp->ipz_rqueue1;
+	ipz_qeit_inc(queue);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1174: FILE: drivers/net/ehea/ehea_qmr.h:333:
+{
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1176: FILE: drivers/net/ehea/ehea_qmr.h:335:
+	struct ehea_cqe *wqe_p = NULL;
+	EDEB_EN(7, "CQ=%p", my_cq);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1208: FILE: drivers/net/ehea/ehea_qmr.h:367:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1209: FILE: drivers/net/ehea/ehea_qmr.h:368:
+struct ehea_qp *ehea_create_qp(struct ehea_adapter * adapter,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1226: FILE: drivers/net/ehea/ehea_ethtool.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1227: FILE: drivers/net/ehea/ehea_ethtool.c:2:
+ *  linux/drivers/net/ehea/ehea_ethtool.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1251: FILE: drivers/net/ehea/ehea_ethtool.c:26:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1252: FILE: drivers/net/ehea/ehea_ethtool.c:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1258: FILE: drivers/net/ehea/ehea_ethtool.c:33:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1262: FILE: drivers/net/ehea/ehea_ethtool.c:37:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:SPACING: space required before the open parenthesis '('
#1269: FILE: drivers/net/ehea/ehea_ethtool.c:44:
+	if(!cb4) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1286: FILE: drivers/net/ehea/ehea_ethtool.c:61:
+	EDEB_DMP(7, (u8*)cb4,

ERROR:SPACING: space required before the open brace '{'
#1290: FILE: drivers/net/ehea/ehea_ethtool.c:65:
+		switch(cb4->port_speed){

ERROR:SPACING: space required before the open parenthesis '('
#1290: FILE: drivers/net/ehea/ehea_ethtool.c:65:
+		switch(cb4->port_speed){

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10000baseT_Full>
#1322: FILE: drivers/net/ehea/ehea_ethtool.c:97:
+	    (SUPPORTED_10000baseT_Full | SUPPORTED_1000baseT_Full

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#1322: FILE: drivers/net/ehea/ehea_ethtool.c:97:
+	    (SUPPORTED_10000baseT_Full | SUPPORTED_1000baseT_Full

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Full>
#1323: FILE: drivers/net/ehea/ehea_ethtool.c:98:
+	     | SUPPORTED_100baseT_Full |  SUPPORTED_100baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Half>
#1323: FILE: drivers/net/ehea/ehea_ethtool.c:98:
+	     | SUPPORTED_100baseT_Full |  SUPPORTED_100baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#1324: FILE: drivers/net/ehea/ehea_ethtool.c:99:
+	     | SUPPORTED_10baseT_Full | SUPPORTED_10baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#1324: FILE: drivers/net/ehea/ehea_ethtool.c:99:
+	     | SUPPORTED_10baseT_Full | SUPPORTED_10baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10000baseT_Full>
#1327: FILE: drivers/net/ehea/ehea_ethtool.c:102:
+	    (ADVERTISED_10000baseT_Full | ADVERTISED_Autoneg

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1342: FILE: drivers/net/ehea/ehea_ethtool.c:117:
+	printk("set settings\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1349: FILE: drivers/net/ehea/ehea_ethtool.c:124:
+	printk("get drvinfo\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1368: FILE: drivers/net/ehea/ehea_ethtool.c:143:
+	printk("nway reset\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1375: FILE: drivers/net/ehea/ehea_ethtool.c:150:
+	printk("get pauseparam\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1381: FILE: drivers/net/ehea/ehea_ethtool.c:156:
+	printk("set pauseparam\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1387: FILE: drivers/net/ehea/ehea_ethtool.c:162:
+	printk("set rx_csum\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1393: FILE: drivers/net/ehea/ehea_ethtool.c:168:
+	printk("set rx_csum\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1399: FILE: drivers/net/ehea/ehea_ethtool.c:174:
+	printk("self test count\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1406: FILE: drivers/net/ehea/ehea_ethtool.c:181:
+	printk("self test\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1411: FILE: drivers/net/ehea/ehea_ethtool.c:186:
+	printk("physical id\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: drivers/net/ehea/ehea_ethtool.c:218:
+static void netdev_get_strings(struct net_device *dev,
+				     u32 stringset, u8 * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1443: FILE: drivers/net/ehea/ehea_ethtool.c:218:
+				     u32 stringset, u8 * data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1459: FILE: drivers/net/ehea/ehea_ethtool.c:234:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1465: FILE: drivers/net/ehea/ehea_ethtool.c:240:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:SPACING: space required before the open parenthesis '('
#1474: FILE: drivers/net/ehea/ehea_ethtool.c:249:
+	if(!cb6) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1488: FILE: drivers/net/ehea/ehea_ethtool.c:263:
+	EDEB_DMP(7, (u8*)cb6,

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1521: FILE: drivers/net/ehea/ehea_ethtool.c:296:
+struct ethtool_ops ehea_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49837.commit.2128e3909dd034ae265b2005ac845a3d74fd5e37 total: 23 errors, 70 warnings, 34 checks, 1504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49837.commit.2128e3909dd034ae265b2005ac845a3d74fd5e37 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
