WARNING:TYPO_SPELLING: 'havent' may be misspelled - perhaps 'haven't'?
#41: 
>    major reason i havent applied it yet.
                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#55: 
Signed-Off-By: Daniel Walker <dwalker@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/lock_stat.h:87:
+extern void lock_stat_note_contention(lock_stat_ref_t *ls,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: include/linux/lock_stat.h:91:
+extern void lock_stat_scoped_attach(lock_stat_ref_t *_s,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'LOCK_STAT_NOTE_PARAM_DECL' should also have an identifier name
#98: FILE: include/linux/lock_stat.h:91:
+extern void lock_stat_scoped_attach(lock_stat_ref_t *_s,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: include/linux/lock_stat.h:121:
+^Istruct lock_stat _lock_stat_##name##_entry = ^I\$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct lock_stat)...)
#165: FILE: kernel/lock_stat.c:163:
+		s = kmalloc(sizeof(struct lock_stat), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.05721.commit.db65af942efb34c12ab3565670c58d14e43c7785 total: 0 errors, 4 warnings, 3 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.05721.commit.db65af942efb34c12ab3565670c58d14e43c7785 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
