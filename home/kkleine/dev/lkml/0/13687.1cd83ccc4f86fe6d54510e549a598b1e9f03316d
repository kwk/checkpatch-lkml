WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
I just implemented some modifications over i386, x86_64, powerpc, mips and arm

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#59: 
--- a/include/asm-i386/atomic.h

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: include/asm-i386/system.h:270:
+#define cmpxchg_local(ptr,o,n)\
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: include/asm-i386/system.h:270:
+#define cmpxchg_local(ptr,o,n)\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#88: FILE: include/asm-i386/system.h:270:
+#define cmpxchg_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/system.h:271:
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: include/asm-i386/system.h:272:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#98: FILE: include/asm-i386/system.h:302:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: include/asm-i386/system.h:303:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: include/asm-i386/system.h:306:
+	unsigned long prev;
+	switch (size) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/system.h:365:
+#define cmpxchg_local(ptr,o,n)						\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/system.h:365:
+#define cmpxchg_local(ptr,o,n)						\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#132: FILE: include/asm-i386/system.h:365:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'o' - possible side-effects?
#132: FILE: include/asm-i386/system.h:365:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#132: FILE: include/asm-i386/system.h:365:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: include/asm-i386/system.h:394:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/asm-i386/system.h:395:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,
+			unsigned long long old, unsigned long long new)

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: include/asm-i386/system.h:398:
+	unsigned long long prev;
+	__asm__ __volatile__("cmpxchg8b %3"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: include/asm-i386/system.h:411:
+#define cmpxchg64_local(ptr,o,n)\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: include/asm-i386/system.h:411:
+#define cmpxchg64_local(ptr,o,n)\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#168: FILE: include/asm-i386/system.h:411:
+#define cmpxchg64_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
+					(unsigned long long)(n)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-i386/system.h:412:
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
 	                                            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#215: FILE: include/asm-x86_64/system.h:211:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: include/asm-x86_64/system.h:212:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: include/asm-x86_64/system.h:215:
+	unsigned long prev;
+	switch (size) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: include/asm-x86_64/system.h:247:
+#define cmpxchg_local(ptr,o,n)\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: include/asm-x86_64/system.h:247:
+#define cmpxchg_local(ptr,o,n)\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#251: FILE: include/asm-x86_64/system.h:247:
+#define cmpxchg_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#252: FILE: include/asm-x86_64/system.h:248:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: include/asm-x86_64/system.h:249:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:INLINE: plain inline is preferred over __inline__
#286: FILE: include/asm-powerpc/atomic.h:428:
+static __inline__ int atomic64_add_unless(atomic_t *v, long a, long u)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#290: FILE: include/asm-powerpc/atomic.h:432:
+	__asm__ __volatile__ (

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#292: FILE: include/asm-powerpc/atomic.h:434:
+"1:	ldarx	%0,0,%1		# atomic_add_unless\n\

ERROR:SPACING: space required after that ',' (ctx:VxO)
#296: FILE: include/asm-powerpc/atomic.h:438:
+	PPC405_ERR77(0,%2)
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#296: FILE: include/asm-powerpc/atomic.h:438:
+	PPC405_ERR77(0,%2)
 	               ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#297: FILE: include/asm-powerpc/atomic.h:439:
+"	stdcx.	%0,0,%1 \n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#297: FILE: include/asm-powerpc/atomic.h:439:
+"	stdcx.	%0,0,%1 \n\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#300: FILE: include/asm-powerpc/atomic.h:442:
+"	subf	%0,%2,%0 \n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#300: FILE: include/asm-powerpc/atomic.h:442:
+"	subf	%0,%2,%0 \n\

WARNING:INLINE: plain inline is preferred over __inline__
#326: FILE: include/asm-powerpc/system.h:244:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#327: FILE: include/asm-powerpc/system.h:245:
+__xchg_u32_local(volatile void *p, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#331: FILE: include/asm-powerpc/system.h:249:
+	__asm__ __volatile__(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#332: FILE: include/asm-powerpc/system.h:250:
+"1:	lwarx	%0,0,%2 \n"

ERROR:SPACING: space required after that ',' (ctx:VxO)
#333: FILE: include/asm-powerpc/system.h:251:
+	PPC405_ERR77(0,%2)
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#333: FILE: include/asm-powerpc/system.h:251:
+	PPC405_ERR77(0,%2)
 	               ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#334: FILE: include/asm-powerpc/system.h:252:
+"	stwcx.	%3,0,%2 \n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#334: FILE: include/asm-powerpc/system.h:252:
+"	stwcx.	%3,0,%2 \n\

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#336: FILE: include/asm-powerpc/system.h:254:
+	: "=&r" (prev), "+m" (*(volatile unsigned int *)p)

WARNING:INLINE: plain inline is preferred over __inline__
#351: FILE: include/asm-powerpc/system.h:281:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#352: FILE: include/asm-powerpc/system.h:282:
+__xchg_u64_local(volatile void *p, unsigned long val)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#356: FILE: include/asm-powerpc/system.h:286:
+	__asm__ __volatile__(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#357: FILE: include/asm-powerpc/system.h:287:
+"1:	ldarx	%0,0,%2 \n"

ERROR:SPACING: space required after that ',' (ctx:VxO)
#358: FILE: include/asm-powerpc/system.h:288:
+	PPC405_ERR77(0,%2)
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#358: FILE: include/asm-powerpc/system.h:288:
+	PPC405_ERR77(0,%2)
 	               ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#359: FILE: include/asm-powerpc/system.h:289:
+"	stdcx.	%3,0,%2 \n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#359: FILE: include/asm-powerpc/system.h:289:
+"	stdcx.	%3,0,%2 \n\

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#361: FILE: include/asm-powerpc/system.h:291:
+	: "=&r" (prev), "+m" (*(volatile unsigned long *)p)

WARNING:INLINE: plain inline is preferred over __inline__
#374: FILE: include/asm-powerpc/system.h:320:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#375: FILE: include/asm-powerpc/system.h:321:
+__xchg_local(volatile void *ptr, unsigned long x, unsigned int size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: include/asm-powerpc/system.h:340:
+#define xchg_local(ptr,x)						     \
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#394: FILE: include/asm-powerpc/system.h:340:
+#define xchg_local(ptr,x)						     \
+  ({									     \
+     __typeof__(*(ptr)) _x_ = (x);					     \
+     (__typeof__(*(ptr))) __xchg_local((ptr),				     \
+     		(unsigned long)_x_, sizeof(*(ptr))); 			     \
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: include/asm-powerpc/system.h:341:
+  ({^I^I^I^I^I^I^I^I^I     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: include/asm-powerpc/system.h:342:
+     __typeof__(*(ptr)) _x_ = (x);^I^I^I^I^I     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: include/asm-powerpc/system.h:343:
+     (__typeof__(*(ptr))) __xchg_local((ptr),^I^I^I^I     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: include/asm-powerpc/system.h:344:
+     ^I^I(unsigned long)_x_, sizeof(*(ptr))); ^I^I^I     \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#398: FILE: include/asm-powerpc/system.h:344:
+     ^I^I(unsigned long)_x_, sizeof(*(ptr))); ^I^I^I     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: include/asm-powerpc/system.h:344:
+     ^I^I(unsigned long)_x_, sizeof(*(ptr))); ^I^I^I     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: include/asm-powerpc/system.h:345:
+  })$

WARNING:INLINE: plain inline is preferred over __inline__
#408: FILE: include/asm-powerpc/system.h:378:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#409: FILE: include/asm-powerpc/system.h:379:
+__cmpxchg_u32_local(volatile unsigned int *p, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: include/asm-powerpc/system.h:380:
+__cmpxchg_u32_local(volatile unsigned int *p, unsigned long old,
+			unsigned long new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#414: FILE: include/asm-powerpc/system.h:384:
+	__asm__ __volatile__ (

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#415: FILE: include/asm-powerpc/system.h:385:
+"1:	lwarx	%0,0,%2		# __cmpxchg_u32\n\

ERROR:SPACING: space required after that ',' (ctx:VxO)
#418: FILE: include/asm-powerpc/system.h:388:
+	PPC405_ERR77(0,%2)
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#418: FILE: include/asm-powerpc/system.h:388:
+	PPC405_ERR77(0,%2)
 	               ^

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#419: FILE: include/asm-powerpc/system.h:389:
+"	stwcx.	%4,0,%2\n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#421: FILE: include/asm-powerpc/system.h:391:
+	"\n\

WARNING:INLINE: plain inline is preferred over __inline__
#438: FILE: include/asm-powerpc/system.h:423:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#439: FILE: include/asm-powerpc/system.h:424:
+__cmpxchg_u64_local(volatile unsigned long *p, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: include/asm-powerpc/system.h:425:
+__cmpxchg_u64_local(volatile unsigned long *p, unsigned long old,
+			unsigned long new)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#444: FILE: include/asm-powerpc/system.h:429:
+	__asm__ __volatile__ (

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#445: FILE: include/asm-powerpc/system.h:430:
+"1:	ldarx	%0,0,%2		# __cmpxchg_u64\n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#450: FILE: include/asm-powerpc/system.h:435:
+	"\n\

WARNING:INLINE: plain inline is preferred over __inline__
#465: FILE: include/asm-powerpc/system.h:465:
+static __inline__ unsigned long

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#466: FILE: include/asm-powerpc/system.h:466:
+__cmpxchg_local(volatile void *ptr, unsigned long old, unsigned long new,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: include/asm-powerpc/system.h:467:
+__cmpxchg_local(volatile void *ptr, unsigned long old, unsigned long new,
+	  unsigned int size)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#488: FILE: include/asm-powerpc/system.h:489:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: include/asm-powerpc/system.h:490:
+#define cmpxchg_local(ptr,o,n)						 \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: include/asm-powerpc/system.h:490:
+#define cmpxchg_local(ptr,o,n)						 \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#489: FILE: include/asm-powerpc/system.h:490:
+#define cmpxchg_local(ptr,o,n)						 \
+  ({									 \
+     __typeof__(*(ptr)) _o_ = (o);					 \
+     __typeof__(*(ptr)) _n_ = (n);					 \
+     (__typeof__(*(ptr))) __cmpxchg_local((ptr), (unsigned long)_o_,	 \
+				    (unsigned long)_n_, sizeof(*(ptr))); \
+  })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: include/asm-powerpc/system.h:491:
+  ({^I^I^I^I^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: include/asm-powerpc/system.h:492:
+     __typeof__(*(ptr)) _o_ = (o);^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: include/asm-powerpc/system.h:493:
+     __typeof__(*(ptr)) _n_ = (n);^I^I^I^I^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: include/asm-powerpc/system.h:494:
+     (__typeof__(*(ptr))) __cmpxchg_local((ptr), (unsigned long)_o_,^I \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: include/asm-powerpc/system.h:496:
+  })$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#550: FILE: include/asm-mips/atomic.h:663:
+#define atomic64_add_unless(v, a, u)				\
+({								\
+	__typeof__((v)->counter) c, old;			\
+	c = atomic_read(v);					\
+	while (c != (u) && (old = atomic64_cmpxchg((v), c, c + (a))) != c) \
+		c = old;					\
+	c != (u);						\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'u' - possible side-effects?
#550: FILE: include/asm-mips/atomic.h:663:
+#define atomic64_add_unless(v, a, u)				\
+({								\
+	__typeof__((v)->counter) c, old;			\
+	c = atomic_read(v);					\
+	while (c != (u) && (old = atomic64_cmpxchg((v), c, c + (a))) != c) \
+		c = old;					\
+	c != (u);						\
+})

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: include/asm-generic/atomic.h:72:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: include/asm-generic/atomic.h:79:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: include/asm-generic/atomic.h:86:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: include/asm-generic/atomic.h:93:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: include/asm-generic/atomic.h:100:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: include/asm-generic/atomic.h:107:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: include/asm-generic/atomic.h:114:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: include/asm-generic/atomic.h:121:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#625: FILE: include/asm-generic/atomic.h:125:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: include/asm-generic/atomic.h:130:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: include/asm-generic/atomic.h:137:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: include/asm-generic/atomic.h:192:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: include/asm-generic/atomic.h:199:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: include/asm-generic/atomic.h:206:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: include/asm-generic/atomic.h:213:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: include/asm-generic/atomic.h:220:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: include/asm-generic/atomic.h:227:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: include/asm-generic/atomic.h:234:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: include/asm-generic/atomic.h:241:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: include/asm-generic/atomic.h:248:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: include/asm-generic/atomic.h:255:
+^I$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13687.commit.1cd83ccc4f86fe6d54510e549a598b1e9f03316d total: 42 errors, 50 warnings, 26 checks, 624 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13687.commit.1cd83ccc4f86fe6d54510e549a598b1e9f03316d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
