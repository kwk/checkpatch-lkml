WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Well, AFAIK this particular divide is the only one that hurts performance o=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#111: FILE: include/linux/reciprocal_div.h:1:
+#ifndef _LINUX_RECIPROCAL_DIV_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#120: FILE: include/linux/reciprocal_div.h:10:
+#define RECIPROCAL_VALUE(B) (u32)(((1LL << 32) + ((B) - 1))/ (B))
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#120: FILE: include/linux/reciprocal_div.h:10:
+#define RECIPROCAL_VALUE(B) (u32)(((1LL << 32) + ((B) - 1))/ (B))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'B' - possible side-effects?
#120: FILE: include/linux/reciprocal_div.h:10:
+#define RECIPROCAL_VALUE(B) (u32)(((1LL << 32) + ((B) - 1))/ (B))

CHECK:BRACES: braces {} should be used on all arms of this statement
#124: FILE: include/linux/reciprocal_div.h:14:
+	if (__builtin_constant_p(k))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#126: FILE: include/linux/reciprocal_div.h:16:
+		return RECIPROCAL_VALUE(k);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: include/linux/reciprocal_div.h:16:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: include/linux/reciprocal_div.h:18:
+		u64 val = (1LL << 32) + (k - 1);
+		do_div(val, k);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: include/linux/reciprocal_div.h:28:
+#define RECIPROCAL_DIVIDE(A, R) (u32)(((u64)(A) * (R)) >> 32)

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: mm/slab.c:641:
+	unsigned int offset = (obj - slab->s_mem);
+	return RECIPROCAL_DIVIDE(offset, cache->reciprocal_buffer_size);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12611.commit.071af83e0216e9a803942b7938006d50101c7a68 total: 2 errors, 5 warnings, 4 checks, 79 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12611.commit.071af83e0216e9a803942b7938006d50101c7a68 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
