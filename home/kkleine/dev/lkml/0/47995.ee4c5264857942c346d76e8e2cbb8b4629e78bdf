WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/net/ehea/ehea.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#43: FILE: drivers/net/ehea/ehea.h:2:
+ *  linux/drivers/net/ehea/ehea.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: drivers/net/ehea/ehea.h:26:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: drivers/net/ehea/ehea.h:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#94: FILE: drivers/net/ehea/ehea.h:53:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: drivers/net/ehea/ehea.h:128:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#179: FILE: drivers/net/ehea/ehea.h:138:
+#define EDEB_P_GENERIC(level, idstring, format, args...) \
+	while (0 == 1) { \
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \
+				__func__, ##args); \
+	  } \
+	} \
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#180: FILE: drivers/net/ehea/ehea.h:139:
+	while (0 == 1) { \
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:TABSTOP: Statements should start on a tabstop
#181: FILE: drivers/net/ehea/ehea.h:140:
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#181: FILE: drivers/net/ehea/ehea.h:140:
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: drivers/net/ehea/ehea.h:140:
+	    if(unlikely (level <= ehea_trace_level)) { \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level <= ehea_trace_level'
#181: FILE: drivers/net/ehea/ehea.h:140:
+	    if(unlikely (level <= ehea_trace_level)) { \

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: drivers/net/ehea/ehea.h:140:
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: drivers/net/ehea/ehea.h:141:
+			printk("%s " idstring " "format "\n", \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
                                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+	do { \
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \
+				__func__, ##args); \
+	  } \
+	} while (1 == 0); \
+}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+	do { \
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \
+				__func__, ##args); \
+	  } \
+	} while (1 == 0); \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#189: FILE: drivers/net/ehea/ehea.h:148:
+#define EDEB_P_GENERIC(level,idstring,format,args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+	do { \
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \
+				__func__, ##args); \
+	  } \
+	} while (1 == 0); \
+}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#191: FILE: drivers/net/ehea/ehea.h:150:
+	do { \
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:TABSTOP: Statements should start on a tabstop
#192: FILE: drivers/net/ehea/ehea.h:151:
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 24)
#192: FILE: drivers/net/ehea/ehea.h:151:
+	    if(unlikely (level <= ehea_trace_level)) { \
+			printk("%s " idstring " "format "\n", \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: drivers/net/ehea/ehea.h:151:
+	    if(unlikely (level <= ehea_trace_level)) { \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level <= ehea_trace_level'
#192: FILE: drivers/net/ehea/ehea.h:151:
+	    if(unlikely (level <= ehea_trace_level)) { \

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: drivers/net/ehea/ehea.h:151:
+	    if(unlikely (level <= ehea_trace_level)) { \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: drivers/net/ehea/ehea.h:152:
+			printk("%s " idstring " "format "\n", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/net/ehea/ehea.h:160:
+        EDEB_P_GENERIC(level, "", format, ##args)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/net/ehea/ehea.h:160:
+        EDEB_P_GENERIC(level, "", format, ##args)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/net/ehea/ehea.h:163:
+        EDEB_P_GENERIC(level, "EHEA_ERROR", format, ##args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/net/ehea/ehea.h:163:
+        EDEB_P_GENERIC(level, "EHEA_ERROR", format, ##args)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/net/ehea/ehea.h:166:
+        EDEB_P_GENERIC(level, ">>>", format, ##args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/net/ehea/ehea.h:166:
+        EDEB_P_GENERIC(level, ">>>", format, ##args)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/net/ehea/ehea.h:169:
+        EDEB_P_GENERIC(level, "<<<", format, ##args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/net/ehea/ehea.h:169:
+        EDEB_P_GENERIC(level, "<<<", format, ##args)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'to' - possible side-effects?
#213: FILE: drivers/net/ehea/ehea.h:172:
+#define EHEA_BMASK_IBM(from, to) (((63 - to) << 16) + ((to) - (from) + 1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'to' may be better as '(to)' to avoid precedence issues
#213: FILE: drivers/net/ehea/ehea.h:172:
+#define EHEA_BMASK_IBM(from, to) (((63 - to) << 16) + ((to) - (from) + 1))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#217: FILE: drivers/net/ehea/ehea.h:176:
+#define EHEA_BMASK_SET(mask, value) \
+        ((EHEA_BMASK_MASK(mask) & ((u64)(value))) << EHEA_BMASK_SHIFTPOS(mask))

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/net/ehea/ehea.h:177:
+        ((EHEA_BMASK_MASK(mask) & ((u64)(value))) << EHEA_BMASK_SHIFTPOS(mask))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/net/ehea/ehea.h:177:
+        ((EHEA_BMASK_MASK(mask) & ((u64)(value))) << EHEA_BMASK_SHIFTPOS(mask))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#219: FILE: drivers/net/ehea/ehea.h:178:
+#define EHEA_BMASK_GET(mask, value) \
+        (EHEA_BMASK_MASK(mask) & (((u64)(value)) >> EHEA_BMASK_SHIFTPOS(mask)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/net/ehea/ehea.h:179:
+        (EHEA_BMASK_MASK(mask) & (((u64)(value)) >> EHEA_BMASK_SHIFTPOS(mask)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/net/ehea/ehea.h:179:
+        (EHEA_BMASK_MASK(mask) & (((u64)(value)) >> EHEA_BMASK_SHIFTPOS(mask)))$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#222: FILE: drivers/net/ehea/ehea.h:181:
+#define EDEB_DMP(level, adr, len, format, args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+     if(unlikely (level <= ehea_trace_level)) {  \
+        do { \
+                unsigned int x; \
+		unsigned int l = (unsigned int)(len); \
+                unsigned char *deb = (unsigned char*)(adr); \
+		for (x = 0; x < l; x += 16) { \
+		        EDEB(level, format " adr=%p ofs=%04x %016lx %016lx", \
+			     ##args, deb, x, *((u64 *)&deb[0]), \
+			     *((u64 *)&deb[8])); \
+			deb += 16; \
+		} \
+        } while (0); \
+     } \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#222: FILE: drivers/net/ehea/ehea.h:181:
+#define EDEB_DMP(level, adr, len, format, args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+     if(unlikely (level <= ehea_trace_level)) {  \
+        do { \
+                unsigned int x; \
+		unsigned int l = (unsigned int)(len); \
+                unsigned char *deb = (unsigned char*)(adr); \
+		for (x = 0; x < l; x += 16) { \
+		        EDEB(level, format " adr=%p ofs=%04x %016lx %016lx", \
+			     ##args, deb, x, *((u64 *)&deb[0]), \
+			     *((u64 *)&deb[8])); \
+			deb += 16; \
+		} \
+        } while (0); \
+     } \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#222: FILE: drivers/net/ehea/ehea.h:181:
+#define EDEB_DMP(level, adr, len, format, args...) \
+if (level < KEEP_EDEBS_BELOW) { \
+     if(unlikely (level <= ehea_trace_level)) {  \
+        do { \
+                unsigned int x; \
+		unsigned int l = (unsigned int)(len); \
+                unsigned char *deb = (unsigned char*)(adr); \
+		for (x = 0; x < l; x += 16) { \
+		        EDEB(level, format " adr=%p ofs=%04x %016lx %016lx", \
+			     ##args, deb, x, *((u64 *)&deb[0]), \
+			     *((u64 *)&deb[8])); \
+			deb += 16; \
+		} \
+        } while (0); \
+     } \
+}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 5)
#223: FILE: drivers/net/ehea/ehea.h:182:
+if (level < KEEP_EDEBS_BELOW) { \
+     if(unlikely (level <= ehea_trace_level)) {  \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/net/ehea/ehea.h:183:
+     if(unlikely (level <= ehea_trace_level)) {  \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: drivers/net/ehea/ehea.h:183:
+     if(unlikely (level <= ehea_trace_level)) {  \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level <= ehea_trace_level'
#224: FILE: drivers/net/ehea/ehea.h:183:
+     if(unlikely (level <= ehea_trace_level)) {  \

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: drivers/net/ehea/ehea.h:183:
+     if(unlikely (level <= ehea_trace_level)) {  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/net/ehea/ehea.h:184:
+        do { \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/net/ehea/ehea.h:184:
+        do { \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/net/ehea/ehea.h:185:
+                unsigned int x; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/net/ehea/ehea.h:185:
+                unsigned int x; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/net/ehea/ehea.h:187:
+                unsigned char *deb = (unsigned char*)(adr); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/net/ehea/ehea.h:187:
+                unsigned char *deb = (unsigned char*)(adr); \$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#228: FILE: drivers/net/ehea/ehea.h:187:
+                unsigned char *deb = (unsigned char*)(adr); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/net/ehea/ehea.h:189:
+^I^I        EDEB(level, format " adr=%p ofs=%04x %016lx %016lx", \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/net/ehea/ehea.h:194:
+        } while (0); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/net/ehea/ehea.h:194:
+        } while (0); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/net/ehea/ehea.h:195:
+     } \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: drivers/net/ehea/ehea.h:198:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#241: FILE: drivers/net/ehea/ehea.h:200:
+/*
+ * generic ehea page

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#248: FILE: drivers/net/ehea/ehea.h:207:
+/*
+ * generic queue in linux kernel virtual memory

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/net/ehea/ehea.h:213:
+^Iu32 queue_length;      ^I^I/* queue length allocated in bytes */$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#261: FILE: drivers/net/ehea/ehea.h:220:
+/*
+ * h_epa: for pSeries this is a 64bit memory address where

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#270: FILE: drivers/net/ehea/ehea.h:229:
+	struct h_epa kernel;	/* kernel space accessible resource,
+				   set to 0 if unused */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#270: FILE: drivers/net/ehea/ehea.h:229:
+				   set to 0 if unused */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#272: FILE: drivers/net/ehea/ehea.h:231:
+	struct h_epa user;	/* user space accessible resource
+				   set to 0 if unused */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#272: FILE: drivers/net/ehea/ehea.h:231:
+				   set to 0 if unused */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#283: FILE: drivers/net/ehea/ehea.h:242:
+/*
+ * queue attributes passed to ehea_create_qp()

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/net/ehea/ehea.h:245:
+        /* input parameter */$

WARNING:TYPO_SPELLING: 'immidiate' may be misspelled - perhaps 'immediate'?
#300: FILE: drivers/net/ehea/ehea.h:259:
+	u8 swqe_imm_data_len;   /* immidiate data length for swqes */
 	                           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/net/ehea/ehea.h:267:
+        /* output parameter */$

WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#329: FILE: drivers/net/ehea/ehea.h:288:
+ * Event Queue attributes, passed as paramter
                                      ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#329: FILE: drivers/net/ehea/ehea.h:288:
+/*
+ * Event Queue attributes, passed as paramter

CHECK:LINE_SPACING: Please don't use multiple blank lines
#344: FILE: drivers/net/ehea/ehea.h:303:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#346: FILE: drivers/net/ehea/ehea.h:305:
+/*
+ * Event Queue

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#353: FILE: drivers/net/ehea/ehea.h:312:
+	spinlock_t spinlock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#358: FILE: drivers/net/ehea/ehea.h:317:
+/*
+ * HEA Queues

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#372: FILE: drivers/net/ehea/ehea.h:331:
+/*
+ * Completion Queue attributes

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/net/ehea/ehea.h:334:
+        /* input parameter */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/net/ehea/ehea.h:339:
+        /* output parameter */$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#386: FILE: drivers/net/ehea/ehea.h:345:
+/*
+ * Completion Queue

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#397: FILE: drivers/net/ehea/ehea.h:356:
+/*
+ * Memory Region

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#406: FILE: drivers/net/ehea/ehea.h:365:
+/*
+ * port state information

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#424: FILE: drivers/net/ehea/ehea.h:383:
+/*
+ * Port resourcen

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#438: FILE: drivers/net/ehea/ehea.h:397:
+	spinlock_t send_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#450: FILE: drivers/net/ehea/ehea.h:409:
+	spinlock_t netif_queue;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#457: FILE: drivers/net/ehea/ehea.h:416:
+	spinlock_t recv_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#463: FILE: drivers/net/ehea/ehea.h:422:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#475: FILE: drivers/net/ehea/ehea.h:434:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#493: FILE: drivers/net/ehea/ehea.h:452:
+^Iint promisc;^I^I ^I /* Indicates IFF_PROMISC state */$

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#515: FILE: drivers/net/ehea/ehea_hw.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#516: FILE: drivers/net/ehea/ehea_hw.h:2:
+ *  linux/drivers/net/ehea/ehea_hw.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#540: FILE: drivers/net/ehea/ehea_hw.h:26:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#541: FILE: drivers/net/ehea/ehea_hw.h:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: drivers/net/ehea/ehea_hw.h:33:
+#define QPX_SQA_VALUE   EHEA_BMASK_IBM(48,63)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: drivers/net/ehea/ehea_hw.h:34:
+#define QPX_RQ1A_VALUE  EHEA_BMASK_IBM(48,63)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#549: FILE: drivers/net/ehea/ehea_hw.h:35:
+#define QPX_RQ2A_VALUE  EHEA_BMASK_IBM(48,63)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: drivers/net/ehea/ehea_hw.h:36:
+#define QPX_RQ3A_VALUE  EHEA_BMASK_IBM(48,63)
                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <MRx_HCR_LPARID_VALID>
#612: FILE: drivers/net/ehea/ehea_hw.h:98:
+#define MRx_HCR_LPARID_VALID EHEA_BMASK_IBM(0, 0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#632: FILE: drivers/net/ehea/ehea_hw.h:118:
+struct ehea_qpedmm {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <EQx_HCR>
#692: FILE: drivers/net/ehea/ehea_hw.h:178:
+	u64 EQx_HCR;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_C>
#693: FILE: drivers/net/ehea/ehea_hw.h:179:
+	u64 EQx_C;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_HERR>
#694: FILE: drivers/net/ehea/ehea_hw.h:180:
+	u64 EQx_HERR;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_AER>
#695: FILE: drivers/net/ehea/ehea_hw.h:181:
+	u64 EQx_AER;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_PTP>
#696: FILE: drivers/net/ehea/ehea_hw.h:182:
+	u64 EQx_PTP;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_TP>
#697: FILE: drivers/net/ehea/ehea_hw.h:183:
+	u64 EQx_TP;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_SSBA>
#698: FILE: drivers/net/ehea/ehea_hw.h:184:
+	u64 EQx_SSBA;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_PSBA>
#699: FILE: drivers/net/ehea/ehea_hw.h:185:
+	u64 EQx_PSBA;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_CEC>
#700: FILE: drivers/net/ehea/ehea_hw.h:186:
+	u64 EQx_CEC;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_MEQL>
#701: FILE: drivers/net/ehea/ehea_hw.h:187:
+	u64 EQx_MEQL;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_XISBI>
#702: FILE: drivers/net/ehea/ehea_hw.h:188:
+	u64 EQx_XISBI;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_XISC>
#703: FILE: drivers/net/ehea/ehea_hw.h:189:
+	u64 EQx_XISC;

CHECK:CAMELCASE: Avoid CamelCase: <EQx_IT>
#704: FILE: drivers/net/ehea/ehea_hw.h:190:
+	u64 EQx_IT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: drivers/net/ehea/ehea_hw.h:197:
+	u64 out;
+	EDEB_EN(7, "addr=%lx offset=%x ", addr, offset);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#712: FILE: drivers/net/ehea/ehea_hw.h:198:
+	out = *(volatile u64 *)addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#720: FILE: drivers/net/ehea/ehea_hw.h:206:
+	u64 addr = epa.fw_handle + offset;
+	EDEB_EN(7, "addr=%lx offset=%x value=%lx", addr, offset, value);

CHECK:SPACING: No space is necessary after a cast
#721: FILE: drivers/net/ehea/ehea_hw.h:207:
+	*(u64 *) addr = value;

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: drivers/net/ehea/ehea_hw.h:215:
+	u64 addr = epa.fw_handle + offset;
+	EDEB(7, "Accelerated store: addr=%lx offset=%x value=%lx",

CHECK:SPACING: No space is necessary after a cast
#731: FILE: drivers/net/ehea/ehea_hw.h:217:
+	*(u64 *) addr = value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: drivers/net/ehea/ehea_hw.h:221:
+        epa_store(epa, EQTEMM_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: drivers/net/ehea/ehea_hw.h:221:
+        epa_store(epa, EQTEMM_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#737: FILE: drivers/net/ehea/ehea_hw.h:223:
+        epa_load(epa, EQTEMM_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: drivers/net/ehea/ehea_hw.h:223:
+        epa_load(epa, EQTEMM_OFFSET(offset))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/net/ehea/ehea_hw.h:226:
+        epa_store(epa, CQTEMM_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/net/ehea/ehea_hw.h:226:
+        epa_store(epa, CQTEMM_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: drivers/net/ehea/ehea_hw.h:228:
+        epa_load(epa, CQTEMM_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/net/ehea/ehea_hw.h:228:
+        epa_load(epa, CQTEMM_OFFSET(offset))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: drivers/net/ehea/ehea_hw.h:231:
+        epa_store(epa, QPTEMM_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: drivers/net/ehea/ehea_hw.h:231:
+        epa_store(epa, QPTEMM_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: drivers/net/ehea/ehea_hw.h:233:
+        epa_load(epa, QPTEMM_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: drivers/net/ehea/ehea_hw.h:233:
+        epa_load(epa, QPTEMM_OFFSET(offset))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: drivers/net/ehea/ehea_hw.h:236:
+        epa_store(epa, QPEDMM_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/net/ehea/ehea_hw.h:236:
+        epa_store(epa, QPEDMM_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: drivers/net/ehea/ehea_hw.h:238:
+        epa_load(epa, QPEDMM_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: drivers/net/ehea/ehea_hw.h:238:
+        epa_load(epa, QPEDMM_OFFSET(offset))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: drivers/net/ehea/ehea_hw.h:241:
+        epa_store(epa, MRMWMM_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: drivers/net/ehea/ehea_hw.h:241:
+        epa_store(epa, MRMWMM_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: drivers/net/ehea/ehea_hw.h:243:
+        epa_load(epa, MRMWMM_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/net/ehea/ehea_hw.h:243:
+        epa_load(epa, MRMWMM_OFFSET(offset))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#760: FILE: drivers/net/ehea/ehea_hw.h:246:
+        epa_store(epa, HCAGR_OFFSET(offset), value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/net/ehea/ehea_hw.h:246:
+        epa_store(epa, HCAGR_OFFSET(offset), value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: drivers/net/ehea/ehea_hw.h:248:
+        epa_load(epa, HCAGR_OFFSET(offset))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/net/ehea/ehea_hw.h:248:
+        epa_load(epa, HCAGR_OFFSET(offset))$

WARNING:LINE_SPACING: Missing a blank line after declarations
#767: FILE: drivers/net/ehea/ehea_hw.h:253:
+	struct h_epa epa = qp->epas.kernel;
+	EDEB_EN(7, "qp=%p, nr_wqes=%d", qp, nr_wqes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#777: FILE: drivers/net/ehea/ehea_hw.h:263:
+	struct h_epa epa = qp->epas.kernel;
+	EDEB_EN(7, "ehea_qp=%p, nr_wqes=%d", qp, nr_wqes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: drivers/net/ehea/ehea_hw.h:272:
+	struct h_epa epa = qp->epas.kernel;
+	EDEB_EN(7, "ehea_qp=%p, nr_wqes=%d", qp, nr_wqes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#795: FILE: drivers/net/ehea/ehea_hw.h:281:
+	struct h_epa epa = qp->epas.kernel;
+	EDEB_EN(7, "ehea_qp=%p, nr_wqes=%d", qp, nr_wqes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#804: FILE: drivers/net/ehea/ehea_hw.h:290:
+	struct h_epa epa = cq->epas.kernel;
+	EDEB_EN(7, "");

WARNING:LINE_SPACING: Missing a blank line after declarations
#813: FILE: drivers/net/ehea/ehea_hw.h:299:
+	struct h_epa epa = cq->epas.kernel;
+	EDEB_EN(7, "");

WARNING:LINE_SPACING: Missing a blank line after declarations
#822: FILE: drivers/net/ehea/ehea_hw.h:308:
+	struct h_epa epa = my_cq->epas.kernel;
+	EDEB_EN(7, "");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#828: FILE: drivers/net/ehea/ehea_hw.h:314:
+
+

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.47995.commit.ee4c5264857942c346d76e8e2cbb8b4629e78bdf total: 44 errors, 75 warnings, 39 checks, 785 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.47995.commit.ee4c5264857942c346d76e8e2cbb8b4629e78bdf has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
