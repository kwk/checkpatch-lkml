WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- class_device_add(): add missing sysfs_remove_link() [fix leak] to error path

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: drivers/base/class.c:859:
+		printk(KERN_ERR "Error %d while undoing kobject_rename('%s') failure... ruh roh, raggy\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/base/class.c:860:
+		printk(KERN_ERR "Error %d while undoing kobject_rename('%s') failure... ruh roh, raggy\n",
+			err2, new_name);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#151: FILE: drivers/base/class.c:862:
+	strlcpy(class_dev->class_id, old_name, KOBJ_NAME_LEN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: drivers/base/dmapool.c:129:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#169: FILE: drivers/base/dmapool.c:129:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SIZEOF_PARENTHESIS: sizeof *retval should be sizeof(*retval)
#169: FILE: drivers/base/dmapool.c:129:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: drivers/base/dmapool.c:146:
+			if (device_create_file (dev, &dev_attr_pools)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: drivers/base/dmapool.c:147:
+				up (&pools_lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: drivers/base/platform.c:567:
+	int err = device_register(&platform_bus);
+	if (err)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: drivers/base/topology.c:103:
+static void __cpuinit topology_remove_dev(struct sys_device * sys_dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31790.commit.f7cf8fc185c4f7ef1cd806e426bd2202c5acea60 total: 2 errors, 8 warnings, 1 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.31790.commit.f7cf8fc185c4f7ef1cd806e426bd2202c5acea60 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
