WARNING:TYPO_SPELLING: 'demostrates' may be misspelled - perhaps 'demonstrates'?
#34: 
Please see the example that demostrates how to inject slab allocation
                            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: fs/proc/base.c:854:
+static ssize_t proc_fault_inject_read(struct file * file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: fs/proc/base.c:854:
+static ssize_t proc_fault_inject_read(struct file * file, char __user * buf,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#72: FILE: fs/proc/base.c:871:
+	if (count > len-__ppos)
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: fs/proc/base.c:872:
+		count = len-__ppos;
 		           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: fs/proc/base.c:879:
+static ssize_t proc_fault_inject_write(struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/proc/base.c:880:
+static ssize_t proc_fault_inject_write(struct file * file,
+			const char __user * buf, size_t count, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#81: FILE: fs/proc/base.c:880:
+			const char __user * buf, size_t count, loff_t *ppos)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#94: FILE: fs/proc/base.c:893:
+	make_it_fail = simple_strtol(buffer, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONST_STRUCT: struct file_operations should normally be const
#107: FILE: fs/proc/base.c:906:
+static struct file_operations proc_fault_inject_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#121: FILE: fs/proc/base.c:1853:
+	REG("make-it-fail", S_IRUGO|S_IWUSR, fault_inject),
 	                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#121: FILE: fs/proc/base.c:1853:
+	REG("make-it-fail", S_IRUGO|S_IWUSR, fault_inject),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#131: FILE: fs/proc/base.c:2130:
+	REG("make-it-fail", S_IRUGO|S_IWUSR, fault_inject),
 	                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#131: FILE: fs/proc/base.c:2130:
+	REG("make-it-fail", S_IRUGO|S_IWUSR, fault_inject),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: lib/fault-inject.c:181:
+	attr->dentries.task_filter_file = debugfs_create_bool("task-filter",
+						mode, dir, &attr->task_filter);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#224: FILE: lib/fault-inject.c:185:
 	    || !attr->dentries.times_file || !attr->dentries.space_file
+	    || !attr->dentries.verbose_file || !attr->dentries.task_filter_file)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.20278.commit.19a5b37e5812961fa9fa04fc98d2127acf78a2d7 total: 4 errors, 5 warnings, 7 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.20278.commit.19a5b37e5812961fa9fa04fc98d2127acf78a2d7 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
