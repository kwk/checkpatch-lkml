WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -Naurp -X dontdiff linux-2.6.17/drivers/char/eqnx/sst_misc.c linux-2.6.17.eqnx/drivers/char/eqnx/sst_misc.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: drivers/char/eqnx/sst_misc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#49: FILE: drivers/char/eqnx/sst_misc.c:2:
+/*
+/*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#50: FILE: drivers/char/eqnx/sst_misc.c:3:
+/*
+#include <linux/config.h>

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#52: FILE: drivers/char/eqnx/sst_misc.c:4:
Drop config.h.

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#65: FILE: drivers/char/eqnx/sst_misc.c:16:
+/* external variable and routines
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#127: FILE: drivers/char/eqnx/sst_misc.c:72:
+static void inline megaparam_parity(struct mpchan *mpc,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#128: FILE: drivers/char/eqnx/sst_misc.c:73:
+				    volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#130: FILE: drivers/char/eqnx/sst_misc.c:75:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#131: FILE: drivers/char/eqnx/sst_misc.c:76:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#153: FILE: drivers/char/eqnx/sst_misc.c:94:
+	volatile struct icp_out_struct *icpo = mpc->mpc_icpo;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#156: FILE: drivers/char/eqnx/sst_misc.c:97:
+	while (((icpo->cout_flow_config & TX_TGL_XON_XOFF) !=
[...]
+	       (++ii < 100000)) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#158: FILE: drivers/char/eqnx/sst_misc.c:99:
+	       (++ii < 100000)) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#161: FILE: drivers/char/eqnx/sst_misc.c:102:
+	while ((icpo->cout_intnl_flow_ctrl & IFLOW_XOFF) && (++ii < 100000)) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#161: FILE: drivers/char/eqnx/sst_misc.c:102:
+	while ((icpo->cout_intnl_flow_ctrl & IFLOW_XOFF) && (++ii < 100000)) ;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#169: FILE: drivers/char/eqnx/sst_misc.c:109:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#171: FILE: drivers/char/eqnx/sst_misc.c:111:
+	volatile unsigned char *chan_ptr;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 1)
#174: FILE: drivers/char/eqnx/sst_misc.c:114:
+	if (mpc->mpc_mpd->mpd_board_def->asic == SSP64) {
[...]


WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#179: FILE: drivers/char/eqnx/sst_misc.c:118:
+		icpg = (volatile union global_regs_u *)mpc->mpc_icpo;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpg->ssp.gicp_chan
#180: FILE: drivers/char/eqnx/sst_misc.c:119:
+		chan_ptr = &(icpg->ssp.gicp_chan);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#184: FILE: drivers/char/eqnx/sst_misc.c:123:
+		icpg = (volatile union global_regs_u *)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpg->ssp4.chan_ctr
#186: FILE: drivers/char/eqnx/sst_misc.c:125:
+		chan_ptr = &(icpg->ssp4.chan_ctr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 1)
#190: FILE: drivers/char/eqnx/sst_misc.c:129:
+		if (++i > 9000)


WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#200: FILE: drivers/char/eqnx/sst_misc.c:138:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#201: FILE: drivers/char/eqnx/sst_misc.c:139:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#203: FILE: drivers/char/eqnx/sst_misc.c:141:
+	volatile u16 *frame_ptr, curval;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 1)
#206: FILE: drivers/char/eqnx/sst_misc.c:144:
+	if (mpc->mpc_mpd->mpd_board_def->asic == SSP64) {
[...]


WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#211: FILE: drivers/char/eqnx/sst_misc.c:148:
+		icpg = (volatile union global_regs_u *)(mpc->mpc_icpo);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#215: FILE: drivers/char/eqnx/sst_misc.c:152:
+		icpg = (volatile union global_regs_u *)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#217: FILE: drivers/char/eqnx/sst_misc.c:154:
+		icpo = (volatile struct icp_out_struct *)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpo->cout_frame_ctr
#219: FILE: drivers/char/eqnx/sst_misc.c:156:
+		frame_ptr = &(icpo->cout_frame_ctr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_frame_wait', this function's name, in a string
#236: FILE: drivers/char/eqnx/sst_misc.c:173:
+		dev_warn(mpc->mpc_mpd->dev, "eqnx_frame_wait: timeout\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.61104.commit.2f2c8c22e8d8ad5f430defa5906287cc559e9329 total: 4 errors, 25 warnings, 3 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.61104.commit.2f2c8c22e8d8ad5f430defa5906287cc559e9329 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
