WARNING:TYPO_SPELLING: 'beacause' may be misspelled - perhaps 'because'?
#80: 
need handle a lot of devices (e.g. more than 20) at same time, beacause 
                                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'beacause' may be misspelled - perhaps 'because'?
#130: 
beacause of some device will yield more than one hid_device/hid_input 
^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#181: 
#include <linux/kernel.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#182: 
#include <linux/input.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#183: 
#include "hid.h"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#184: 
#include "hid-simple.h"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#186: 
#define VENDOR_ID 0x1234

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#187: 
#define PRODUCT_ID 0x5678

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#224: 
                                                                                                  

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#262: FILE: Kconfig:330:
+config HID_MSNEK4K
+	tristate "Microsoft Natural Ergonomic Keyboard 4000 Driver"
+	depends on USB && USB_HID
+	---help---
+	Microsoft Natural Ergonomic Keyboard 4000 driver. These extend keys
+	may not work without change user space configration, e.g, XKB conf-
+	iguration in X. 

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'configration' may be misspelled - perhaps 'configuration'?
#267: FILE: Kconfig:335:
+	may not work without change user space configration, e.g, XKB conf-
 	                                       ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: Kconfig:336:
+^Iiguration in X. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#284: FILE: usbnek4k.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: usbnek4k.c:6:
+ *  TODO:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: usbnek4k.c:9:
+ *  Copyright (c) 2006 Liyu <liyu@ccoss.com.cn> ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: usbnek4k.c:9:
+ *  Copyright (c) 2006 Liyu <liyu@ccoss.com.cn> ^I$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#307: FILE: usbnek4k.c:24:
+#define map_key(c)	do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: usbnek4k.c:24:
+#define map_key(c)	do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)
                   	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#307: FILE: usbnek4k.c:24:
+#define map_key(c)	do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#308: FILE: usbnek4k.c:25:
+#define clear_key(c)	do { usage->code = 0; usage->type = 0; clear_bit(c,input->keybit); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: usbnek4k.c:25:
+#define clear_key(c)	do { usage->code = 0; usage->type = 0; clear_bit(c,input->keybit); } while (0)
                     	                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#313: FILE: usbnek4k.c:30:
+#define KPP_PRESSED_MASK	(LEFTP_PRESSED|RIGHTP_PRESSED)
                         	              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#315: FILE: usbnek4k.c:32:
+#define set_leftp_pressed(hiddev) \
+	set_bit(LEFTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#316: FILE: usbnek4k.c:33:
+	set_bit(LEFTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#317: FILE: usbnek4k.c:34:
+#define set_rightp_pressed(hiddev) \
+	set_bit(RIGHTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#318: FILE: usbnek4k.c:35:
+	set_bit(RIGHTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#319: FILE: usbnek4k.c:36:
+#define clear_leftp_pressed(hiddev) \
+	clear_bit(LEFTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#320: FILE: usbnek4k.c:37:
+	clear_bit(LEFTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#321: FILE: usbnek4k.c:38:
+#define clear_rightp_pressed(hiddev) \
+	clear_bit(RIGHTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#322: FILE: usbnek4k.c:39:
+	clear_bit(RIGHTP_PRESSED, (unsigned long*)(&hiddev->simple->private))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#324: FILE: usbnek4k.c:41:
+#define is_kpp_pressed(hiddev) \
+	((unsigned long)(hiddev->simple->private) & KPP_PRESSED_MASK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#326: FILE: usbnek4k.c:43:
+#define is_leftp_pressed(hiddev) \
+	((unsigned long)(hiddev->simple->private) & LEFTP_PRESSED)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hiddev' may be better as '(hiddev)' to avoid precedence issues
#328: FILE: usbnek4k.c:45:
+#define is_rightp_pressed(hiddev) \
+	((unsigned long)(hiddev->simple->private) & RIGHTP_PRESSED)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: usbnek4k.c:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#372: FILE: usbnek4k.c:89:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#376: FILE: usbnek4k.c:93:
+
+

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#386: FILE: usbnek4k.c:103:
+static char driver_name[] = "Microsoft Natural Ergonomic Keyboard 4000";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: usbnek4k.c:106:
+{^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#393: FILE: usbnek4k.c:110:
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_CONSUMER) {
[...]
+	} else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_MSVENDOR) {
[...]
+	} else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_KEYBOARD) {
[...]
+	else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_LED)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#394: FILE: usbnek4k.c:111:
+		switch (usage->hid & HID_USAGE) {
+			case USAGE_ZOOM_IN:
[...]
+			case USAGE_ZOOM_OUT:
[...]
+			case USAGE_HOME:
[...]
+			case USAGE_SEARCH:
[...]
+			case USAGE_EMAIL:
[...]
+			case USAGE_FAVORITES:
[...]
+			case USAGE_MUTE:
[...]
+			case USAGE_VOLUME_DOWN:
[...]
+			case USAGE_VOLUME_UP:
[...]
+			case USAGE_PLAY_PAUSE:
[...]
+			case USAGE_CALCULATOR:
[...]
+			case USAGE_BACK:
[...]
+			case USAGE_FORWARD:
[...]
+			case USAGE_HELP:
[...]
+			case USAGE_UNDO:
[...]
+			case USAGE_REDO:
[...]
+			case USAGE_NEW:
[...]
+			case USAGE_OPEN:
[...]
+			case USAGE_CLOSE:
[...]
+			case USAGE_REPLY:
[...]
+			case USAGE_FWD:
[...]
+			case USAGE_SEND:
[...]
+			case USAGE_SPELL:
[...]
+			case USAGE_SAVE:
[...]
+			case USAGE_PRINT:
[...]
+			default:	

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ';' (ctx:VxV)
#396: FILE: usbnek4k.c:113:
+				map_key(KEY_F13);break;
 				                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#398: FILE: usbnek4k.c:115:
+				map_key(KEY_F14);break;
 				                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#400: FILE: usbnek4k.c:117:
+				map_key(KEY_HOMEPAGE);break;
 				                     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#402: FILE: usbnek4k.c:119:
+				map_key(KEY_SEARCH);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#404: FILE: usbnek4k.c:121:
+				map_key(KEY_EMAIL);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#406: FILE: usbnek4k.c:123:
+				map_key(KEY_FAVORITES);break;
 				                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#408: FILE: usbnek4k.c:125:
+				map_key(KEY_MUTE);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#410: FILE: usbnek4k.c:127:
+				map_key(KEY_VOLUMEDOWN);break;
 				                       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#414: FILE: usbnek4k.c:131:
+				map_key(KEY_PLAYPAUSE);break;
 				                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#416: FILE: usbnek4k.c:133:
+				map_key(KEY_CALC);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#418: FILE: usbnek4k.c:135:
+				map_key(KEY_BACK);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#420: FILE: usbnek4k.c:137:
+				map_key(KEY_FORWARD);break;
 				                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#422: FILE: usbnek4k.c:139:
+				map_key(KEY_HELP);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#424: FILE: usbnek4k.c:141:
+				map_key(KEY_UNDO);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#426: FILE: usbnek4k.c:143:
+				map_key(KEY_REDO);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#428: FILE: usbnek4k.c:145:
+				map_key(KEY_NEW);break;
 				                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#430: FILE: usbnek4k.c:147:
+				map_key(KEY_OPEN);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#432: FILE: usbnek4k.c:149:
+				map_key(KEY_CLOSE);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#434: FILE: usbnek4k.c:151:
+				map_key(KEY_REPLY);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#436: FILE: usbnek4k.c:153:
+				map_key(KEY_FORWARDMAIL);break;
 				                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#438: FILE: usbnek4k.c:155:
+				map_key(KEY_SEND);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#440: FILE: usbnek4k.c:157:
+				map_key(KEY_F13);break;
 				                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#442: FILE: usbnek4k.c:159:
+				map_key(KEY_SAVE);break;
 				                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#444: FILE: usbnek4k.c:161:
+				map_key(KEY_PRINT);break;
 				                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: usbnek4k.c:162:
+^I^I^Idefault:^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#457: FILE: usbnek4k.c:174:
+		switch (usage->hid & HID_USAGE) {
+			case USAGE_KEYPAD_EQUAL:
[...]
+			case USAGE_KEYPAD_LEFT_PARENTHESES:
[...]
+			case USAGE_KEYPAD_RIGHT_PARENTHESES:
[...]
+			default:

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#471: FILE: usbnek4k.c:188:
+	}
+	else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_LED)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#473: FILE: usbnek4k.c:190:
+		return;
+	else

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#474: FILE: usbnek4k.c:191:
+		printk(KERN_WARNING"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#474: FILE: usbnek4k.c:191:
+		printk(KERN_WARNING"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#474: FILE: usbnek4k.c:191:
+		printk(KERN_WARNING"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#474: FILE: usbnek4k.c:191:
+		printk(KERN_WARNING"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#476: FILE: usbnek4k.c:193:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#483: FILE: usbnek4k.c:200:
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_CONSUMER) {
[...]
+	} else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_MSVENDOR) {
[...]
+	} else if ((usage->hid & HID_USAGE_PAGE) == HID_UP_KEYBOARD) {
[...]
+	} else 
[...]

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#484: FILE: usbnek4k.c:201:
+		switch (usage->hid & HID_USAGE) {
+			case USAGE_ZOOM_IN:
[...]
+			case USAGE_ZOOM_OUT:
[...]
+			case USAGE_HOME:
[...]
+			case USAGE_SEARCH:
[...]
+			case USAGE_EMAIL:
[...]
+			case USAGE_FAVORITES:
[...]
+			case USAGE_MUTE:
[...]
+			case USAGE_VOLUME_DOWN:
[...]
+			case USAGE_VOLUME_UP:
[...]
+			case USAGE_PLAY_PAUSE:
[...]
+			case USAGE_CALCULATOR:
[...]
+			case USAGE_BACK:
[...]
+			case USAGE_FORWARD:
[...]
+			case USAGE_HELP:
[...]
+			case USAGE_UNDO:
[...]
+			case USAGE_REDO:
[...]
+			case USAGE_NEW:
[...]
+			case USAGE_OPEN:
[...]
+			case USAGE_CLOSE:
[...]
+			case USAGE_REPLY:
[...]
+			case USAGE_FWD:
[...]
+			case USAGE_SEND:
[...]
+			case USAGE_SPELL:
[...]
+			case USAGE_SAVE:
[...]
+			case USAGE_PRINT:
[...]
+			default:	

ERROR:SPACING: space required after that ';' (ctx:VxV)
#486: FILE: usbnek4k.c:203:
+				clear_key(KEY_F13);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#488: FILE: usbnek4k.c:205:
+				clear_key(KEY_F14);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#490: FILE: usbnek4k.c:207:
+				clear_key(KEY_HOMEPAGE);break;
 				                       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#492: FILE: usbnek4k.c:209:
+				clear_key(KEY_SEARCH);break;
 				                     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#494: FILE: usbnek4k.c:211:
+				clear_key(KEY_EMAIL);break;
 				                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#496: FILE: usbnek4k.c:213:
+				clear_key(KEY_FAVORITES);break;
 				                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#498: FILE: usbnek4k.c:215:
+				clear_key(KEY_MUTE);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#500: FILE: usbnek4k.c:217:
+				clear_key(KEY_VOLUMEDOWN);break;
 				                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#504: FILE: usbnek4k.c:221:
+				clear_key(KEY_PLAYPAUSE);break;
 				                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#506: FILE: usbnek4k.c:223:
+				clear_key(KEY_CALC);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#508: FILE: usbnek4k.c:225:
+				clear_key(KEY_BACK);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#510: FILE: usbnek4k.c:227:
+				clear_key(KEY_FORWARD);break;
 				                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#512: FILE: usbnek4k.c:229:
+				clear_key(KEY_HELP);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#514: FILE: usbnek4k.c:231:
+				clear_key(KEY_UNDO);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#516: FILE: usbnek4k.c:233:
+				clear_key(KEY_REDO);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#518: FILE: usbnek4k.c:235:
+				clear_key(KEY_NEW);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#520: FILE: usbnek4k.c:237:
+				clear_key(KEY_OPEN);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#522: FILE: usbnek4k.c:239:
+				clear_key(KEY_CLOSE);break;
 				                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#524: FILE: usbnek4k.c:241:
+				clear_key(KEY_REPLY);break;
 				                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#526: FILE: usbnek4k.c:243:
+				clear_key(KEY_FORWARDMAIL);break;
 				                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#528: FILE: usbnek4k.c:245:
+				clear_key(KEY_SEND);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#530: FILE: usbnek4k.c:247:
+				clear_key(KEY_F13);break;
 				                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#532: FILE: usbnek4k.c:249:
+				clear_key(KEY_SAVE);break;
 				                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#534: FILE: usbnek4k.c:251:
+				clear_key(KEY_PRINT);break;
 				                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: usbnek4k.c:252:
+^I^I^Idefault:^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#540: FILE: usbnek4k.c:257:
+			clear_bit(KEY_FN_F1,input->keybit);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#541: FILE: usbnek4k.c:258:
+			clear_bit(KEY_FN_F2,input->keybit);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#542: FILE: usbnek4k.c:259:
+			clear_bit(KEY_FN_F3,input->keybit);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#543: FILE: usbnek4k.c:260:
+			clear_bit(KEY_FN_F4,input->keybit);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: usbnek4k.c:261:
+			clear_bit(KEY_FN_F5,input->keybit);
 			                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: usbnek4k.c:267:
+^I} else $

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#550: FILE: usbnek4k.c:267:
+		return;
+	} else 

CHECK:BRACES: Unbalanced braces around else statement
#550: FILE: usbnek4k.c:267:
+	} else 

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#551: FILE: usbnek4k.c:268:
+		printk(KERN_ERR"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#551: FILE: usbnek4k.c:268:
+		printk(KERN_ERR"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#551: FILE: usbnek4k.c:268:
+		printk(KERN_ERR"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#551: FILE: usbnek4k.c:268:
+		printk(KERN_ERR"Unknown usage page 0x%x in %s:%d\n", usage->hid & HID_USAGE_PAGE, __FUNCTION__, __LINE__);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#553: FILE: usbnek4k.c:270:
+
+}

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#556: FILE: usbnek4k.c:273:
+nek4k_hid_event(const struct hid_device *hid, const struct hid_field *field, const struct hid_usage * usage, const __s32 value, const struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: usbnek4k.c:273:
+nek4k_hid_event(const struct hid_device *hid, const struct hid_field *field, const struct hid_usage * usage, const __s32 value, const struct pt_regs *regs)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#560: FILE: usbnek4k.c:277:
+	int code=0;
 	        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#562: FILE: usbnek4k.c:279:
+	if ( (usage->hid&HID_USAGE_PAGE)==HID_UP_MSVENDOR &&
 	                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#562: FILE: usbnek4k.c:279:
+	if ( (usage->hid&HID_USAGE_PAGE)==HID_UP_MSVENDOR &&
 	                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#562: FILE: usbnek4k.c:279:
+	if ( (usage->hid&HID_USAGE_PAGE)==HID_UP_MSVENDOR &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: usbnek4k.c:280:
+	if ( (usage->hid&HID_USAGE_PAGE)==HID_UP_MSVENDOR &&
+	     (usage->hid&HID_USAGE) == USAGE_CUSTOM ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#563: FILE: usbnek4k.c:280:
+	     (usage->hid&HID_USAGE) == USAGE_CUSTOM ) {
 	                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#563: FILE: usbnek4k.c:280:
+	     (usage->hid&HID_USAGE) == USAGE_CUSTOM ) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#564: FILE: usbnek4k.c:281:
+		switch (value) {
+			case 0x0:
[...]
+			case USAGE_CUSTEM_1:	
[...]
+			case USAGE_CUSTEM_2:
[...]
+			case USAGE_CUSTEM_3:
[...]
+			case USAGE_CUSTEM_4:
[...]
+			case USAGE_CUSTEM_5:
[...]
+			default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: usbnek4k.c:286:
+^I^I^Icase USAGE_CUSTEM_1:^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#590: FILE: usbnek4k.c:307:
+	else if ( (usage->hid&HID_USAGE_PAGE) == HID_UP_KEYBOARD ) {
 	                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#590: FILE: usbnek4k.c:307:
+	else if ( (usage->hid&HID_USAGE_PAGE) == HID_UP_KEYBOARD ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#590: FILE: usbnek4k.c:307:
+	else if ( (usage->hid&HID_USAGE_PAGE) == HID_UP_KEYBOARD ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#590: FILE: usbnek4k.c:307:
+	}
+	else if ( (usage->hid&HID_USAGE_PAGE) == HID_UP_KEYBOARD ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#591: FILE: usbnek4k.c:308:
+		if ((usage->hid&HID_USAGE) == USAGE_KEYPAD_LEFT_PARENTHESES)
 		               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#593: FILE: usbnek4k.c:310:
+		else if ((usage->hid&HID_USAGE) == USAGE_KEYPAD_RIGHT_PARENTHESES)
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: usbnek4k.c:312:
+^I^Ielse $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#597: FILE: usbnek4k.c:314:
+		if (1 == value) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#604: FILE: usbnek4k.c:321:
+			if (KEY_9 == code)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#606: FILE: usbnek4k.c:323:
+			else if (KEY_0 == code)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#608: FILE: usbnek4k.c:325:
+		} else if (0 == value) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#611: FILE: usbnek4k.c:328:
+			if (KEY_9 == code)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: usbnek4k.c:330:
+^I^I^Ielse if (KEY_0 == code) $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#613: FILE: usbnek4k.c:330:
+			else if (KEY_0 == code) 

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#659: FILE: usbnek4k.c:376:
+	switch (result) {
+		case 0:
[...]
+		case -ENOMEM:
+		case -EBUSY:
[...]
+		case -EINVAL:
[...]
+		default:

WARNING:INDENTED_LABEL: labels should not be indented
#671: FILE: usbnek4k.c:388:
+	ok:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: hid-core.c:802:
+		if (hid->simple && hid->simple->pre_event &&
+			!hid->simple->pre_event(hid, field, usage, value, regs))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#803: FILE: hid-core.c:2048:
 
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#809: FILE: hid-core.c:2054:
+	struct matched_device *matched=NULL;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#812: FILE: hid-core.c:2057:
+	struct hid_device *hid=NULL;
 	                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#818: FILE: hid-core.c:2063:
+		printk(KERN_DEBUG"foreach: %s\n", hid->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#818: FILE: hid-core.c:2063:
+		printk(KERN_DEBUG"foreach: %s\n", hid->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#824: FILE: hid-core.c:2069:
+			printk(KERN_DEBUG"foreach inner: %s\n", simple->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#824: FILE: hid-core.c:2069:
+			printk(KERN_DEBUG"foreach inner: %s\n", simple->name);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#832: FILE: hid-core.c:2077:
+			printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'\n", simple->name, hid->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#832: FILE: hid-core.c:2077:
+			printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'\n", simple->name, hid->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#832: FILE: hid-core.c:2077:
+			printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'\n", simple->name, hid->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: hid-core.c:2082:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#838: FILE: hid-core.c:2083:
+	
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: hid-core.c:2092:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#850: FILE: hid-core.c:2095:
+	hid = usb_get_intfdata (matched->intf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: hid-core.c:2108:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: hid-core.c:2109:
+^Iif (!simple) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#872: FILE: hid-core.c:2117:
+	printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'\n", simple->name, hid->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#872: FILE: hid-core.c:2117:
+	printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'\n", simple->name, hid->name);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#878: FILE: hid-core.c:2123:
+	struct list_head *node=NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#880: FILE: hid-core.c:2125:
+	struct hid_device *hid=NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#881: FILE: hid-core.c:2126:
+	int ret=-ENODEV;
 	       ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#881: FILE: hid-core.c:2126:
+	int ret=-ENODEV;
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#891: FILE: hid-core.c:2136:
+		hid = usb_get_intfdata (matched->intf);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#902: FILE: hid-core.c:2147:
+		printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'.\n", simple->name, hid->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#902: FILE: hid-core.c:2147:
+		printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'.\n", simple->name, hid->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#902: FILE: hid-core.c:2147:
+		printk(KERN_INFO"The simple HID driver \'%s\' attach on \'%s\'.\n", simple->name, hid->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#923: FILE: hid-core.c:2168:
+	printk(KERN_INFO"The simple HID driver \'%s\' unregistered.\n", simple->name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#923: FILE: hid-core.c:2168:
+	printk(KERN_INFO"The simple HID driver \'%s\' unregistered.\n", simple->name);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#926: FILE: hid-core.c:2171:
+EXPORT_SYMBOL_GPL(hidinput_unregister_simple_driver);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*matched)...) over kmalloc(sizeof(struct matched_device)...)
#946: FILE: hid-core.c:2193:
+		matched = kmalloc(sizeof(struct matched_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: hid-core.c:2304:
+^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1052: FILE: hid-input.c:872:
+	void (*do_usage)(struct hid_field *,   struct hid_usage *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1052: FILE: hid-input.c:872:
+	void (*do_usage)(struct hid_field *,   struct hid_usage *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: hid-input.c:873:
+^I$

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1066: FILE: hid-input.c:886:
+		if (hid->collection[i].type == HID_COLLECTION_APPLICATION || hid->collection[i].type==HID_COLLECTION_PHYSICAL)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1066: FILE: hid-input.c:886:
+		if (hid->collection[i].type == HID_COLLECTION_APPLICATION || hid->collection[i].type==HID_COLLECTION_PHYSICAL)
 		                                                                                    ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1075: FILE: hid-input.c:895:
+		list_for_each_entry(report, &hid->report_enum[k].report_list, list) {
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#1085: FILE: hid-input.c:905:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1092: FILE: hid-input.c:912:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*raw_simple)...) over kmalloc(sizeof(struct raw_simple_device)...)
#1093: FILE: hid-input.c:913:
+	raw_simple = kmalloc(sizeof(struct raw_simple_device), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1107: FILE: hid-input.c:927:
+	struct raw_simple_device *raw_simple=NULL;
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1110: FILE: hid-input.c:930:
+	list_for_each (node, &simple->raw_devices) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1111: FILE: hid-input.c:931:
+		printk(KERN_DEBUG"list_entry\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1111: FILE: hid-input.c:931:
+		printk(KERN_DEBUG"list_entry\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1114: FILE: hid-input.c:934:
+			printk(KERN_DEBUG"usb_get_intfdata\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1114: FILE: hid-input.c:934:
+			printk(KERN_DEBUG"usb_get_intfdata\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1117: FILE: hid-input.c:937:
+			printk(KERN_DEBUG"list_del\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1117: FILE: hid-input.c:937:
+			printk(KERN_DEBUG"list_del\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1133: FILE: hid-input.c:953:
+		hid = usb_get_intfdata (raw_simple->intf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: hid-input.c:954:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1136: FILE: hid-input.c:956:
+			BUG_ON(hid->simple != simple);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1140: FILE: hid-input.c:960:
+		printk("device '%s' disconnect from one simple driver.\n", hid->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: hid-input.c:966:
+/* modify from hidinput_disconnect() */ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1166: FILE: hid-input.c:986:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: hid-input.c:987:
+/* modify from hidinput_disconnect() */ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1187: FILE: hid-simple.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1189: FILE: hid-simple.h:3:
+ *^IFor use me , you must include hid.h in your source first. $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#1196: FILE: hid-simple.h:10:
+#define list_for_each_continue(pos, head) \
+	for ((pos) = (pos)->next; \
+	prefetch((pos)->next), (pos) != (head); \
+	(pos) = (pos)->next)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: hid-simple.h:19:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: hid-simple.h:20:
+ *  matched_device record one device which hid-subsystem handle, it may $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: hid-simple.h:23:
+ *  The element of matched_device list is inserted at hidinput_connect(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: hid-simple.h:25:
+ */ $

WARNING:TYPO_SPELLING: 'beacause' may be misspelled - perhaps 'because'?
#1215: FILE: hid-simple.h:29:
+	/* this need not atomic_t. beacause it only change while simple driver module insert or delete. thus, one module can not insert and delete at same time, even under SMP */
 	                           ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 178 exceeds 100 columns
#1215: FILE: hid-simple.h:29:
+	/* this need not atomic_t. beacause it only change while simple driver module insert or delete. thus, one module can not insert and delete at same time, even under SMP */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: hid-simple.h:33:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: hid-simple.h:36:
+ */ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: hid-simple.h:43:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hid' - possible side-effects?
#1233: FILE: hid-simple.h:47:
+#define hidinput_simple_driver_setup_usage(hid) \
+do {\
+	if (hid->simple) {\
+		hid->simple->flags |= HIDINPUT_SIMPLE_SETUP_USAGE; \
+		hidinput_simple_driver_configure_usage(hid); \
+	}\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hid' may be better as '(hid)' to avoid precedence issues
#1233: FILE: hid-simple.h:47:
+#define hidinput_simple_driver_setup_usage(hid) \
+do {\
+	if (hid->simple) {\
+		hid->simple->flags |= HIDINPUT_SIMPLE_SETUP_USAGE; \
+		hidinput_simple_driver_configure_usage(hid); \
+	}\
+} while (0)

ERROR:SPACING: space required after that close brace '}'
#1238: FILE: hid-simple.h:52:
+	}\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hid' - possible side-effects?
#1241: FILE: hid-simple.h:55:
+#define hidinput_simple_driver_clear_usage(hid) \
+do {\
+	if (hid->simple) {\
+		hid->simple->flags &= (~HIDINPUT_SIMPLE_SETUP_USAGE); \
+		hidinput_simple_driver_configure_usage(hid); \
+	}\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hid' may be better as '(hid)' to avoid precedence issues
#1241: FILE: hid-simple.h:55:
+#define hidinput_simple_driver_clear_usage(hid) \
+do {\
+	if (hid->simple) {\
+		hid->simple->flags &= (~HIDINPUT_SIMPLE_SETUP_USAGE); \
+		hidinput_simple_driver_configure_usage(hid); \
+	}\
+} while (0)

ERROR:SPACING: space required after that close brace '}'
#1246: FILE: hid-simple.h:60:
+	}\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1260: FILE: hid-simple.h:74:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1263: FILE: hid-simple.h:77:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: hid-simple.h:86:
+^Iint (*connect)(struct hid_device *, struct hid_input *);^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#1272: FILE: hid-simple.h:86:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#1272: FILE: hid-simple.h:86:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1273: FILE: hid-simple.h:87:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1273: FILE: hid-simple.h:87:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#1274: FILE: hid-simple.h:88:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#1274: FILE: hid-simple.h:88:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#1274: FILE: hid-simple.h:88:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#1274: FILE: hid-simple.h:88:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#1274: FILE: hid-simple.h:88:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#1275: FILE: hid-simple.h:89:
+	int (*post_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#1275: FILE: hid-simple.h:89:
+	int (*post_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#1275: FILE: hid-simple.h:89:
+	int (*post_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#1275: FILE: hid-simple.h:89:
+	int (*post_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#1275: FILE: hid-simple.h:89:
+	int (*post_event)(const struct hid_device *, const struct hid_field *, const struct hid_usage *, const __s32, const struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1276: FILE: hid-simple.h:90:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1276: FILE: hid-simple.h:90:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#1277: FILE: hid-simple.h:91:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#1277: FILE: hid-simple.h:91:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1282: FILE: hid-simple.h:96:
+
+

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55464.commit.f5d2a57452abac5581e64ac1b918c9c4b1abfa9b total: 111 errors, 76 warnings, 49 checks, 984 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.55464.commit.f5d2a57452abac5581e64ac1b918c9c4b1abfa9b has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
