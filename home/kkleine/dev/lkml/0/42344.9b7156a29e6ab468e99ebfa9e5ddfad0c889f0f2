WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: include/linux/should_fail.h:1:
+#ifndef _LINUX_SHOULD_FAIL_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#50: FILE: include/linux/should_fail.h:7:
+#include <asm/atomic.h>

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#53: FILE: include/linux/should_fail.h:10:
+struct should_fail_data {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: lib/should_fail.c:1:
+#include <linux/kernel.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#123: FILE: lib/should_fail.c:30:
+#define failure_probability(data)	(data)->probability

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#124: FILE: lib/should_fail.c:31:
+#define failure_interval(data)		(data)->interval

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#125: FILE: lib/should_fail.c:32:
+#define max_failures(data)		(data)->times

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#126: FILE: lib/should_fail.c:33:
+#define current_space(data)		(data)->space

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: lib/should_fail.c:40:
+	rand_seed = rand_seed * 690690L+1;
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42344.commit.9b7156a29e6ab468e99ebfa9e5ddfad0c889f0f2 total: 4 errors, 3 warnings, 2 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42344.commit.9b7156a29e6ab468e99ebfa9e5ddfad0c889f0f2 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
