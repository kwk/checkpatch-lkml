WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: usr/include/arch/ia64/klibc/archconfig.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: usr/include/arch/ia64/klibc/archsetjmp.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#89: FILE: usr/include/arch/ia64/klibc/archsetjmp.h:15:
+typedef char jmp_buf[_JBLEN] __attribute__ ((aligned(16)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#89: FILE: usr/include/arch/ia64/klibc/archsetjmp.h:15:
+typedef char jmp_buf[_JBLEN] __attribute__ ((aligned(16)));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: usr/include/arch/ia64/klibc/archsignal.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: usr/include/arch/ia64/klibc/archsignal.h:16:
+typedef struct {

WARNING:SPACING: Unnecessary space before function pointer arguments
#120: FILE: usr/include/arch/ia64/klibc/archsignal.h:23:
+		void (*_sa_sigaction) (int, struct siginfo *, void *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#120: FILE: usr/include/arch/ia64/klibc/archsignal.h:23:
+		void (*_sa_sigaction) (int, struct siginfo *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct siginfo *' should also have an identifier name
#120: FILE: usr/include/arch/ia64/klibc/archsignal.h:23:
+		void (*_sa_sigaction) (int, struct siginfo *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#120: FILE: usr/include/arch/ia64/klibc/archsignal.h:23:
+		void (*_sa_sigaction) (int, struct siginfo *, void *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: usr/include/arch/ia64/klibc/archstat.h:1:
+#ifndef _KLIBC_ARCHSTAT_H

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: usr/include/arch/ia64/klibc/archstat.h:9:
+	__stdev64	(st_dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: usr/include/arch/ia64/klibc/archstat.h:16:
+	unsigned int	__pad0;
+	__stdev64	(st_rdev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: usr/include/arch/ia64/klibc/archstat.h:16:
+	__stdev64	(st_rdev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: usr/include/arch/ia64/klibc/archsys.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: usr/include/arch/ia64/klibc/archsys.h:12:
+#define _syscall0(type,name)                                            \
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#179: FILE: usr/include/arch/ia64/klibc/archsys.h:12:
+#define _syscall0(type,name)                                            \
+type                                                                    \
+name (void)                                                             \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15)         \
+                         : "2" (_r15) ASM_ARGS_0                        \
+                         : "memory" ASM_CLOBBERS_0);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: usr/include/arch/ia64/klibc/archsys.h:14:
+name (void)                                                             \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: usr/include/arch/ia64/klibc/archsys.h:16:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: usr/include/arch/ia64/klibc/archsys.h:17:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: usr/include/arch/ia64/klibc/archsys.h:18:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: usr/include/arch/ia64/klibc/archsys.h:19:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: usr/include/arch/ia64/klibc/archsys.h:20:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: usr/include/arch/ia64/klibc/archsys.h:20:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: usr/include/arch/ia64/klibc/archsys.h:21:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15)         \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: usr/include/arch/ia64/klibc/archsys.h:21:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15)         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: usr/include/arch/ia64/klibc/archsys.h:22:
+                         : "2" (_r15) ASM_ARGS_0                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: usr/include/arch/ia64/klibc/archsys.h:22:
+                         : "2" (_r15) ASM_ARGS_0                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: usr/include/arch/ia64/klibc/archsys.h:23:
+                         : "memory" ASM_CLOBBERS_0);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: usr/include/arch/ia64/klibc/archsys.h:23:
+                         : "memory" ASM_CLOBBERS_0);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: usr/include/arch/ia64/klibc/archsys.h:24:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: usr/include/arch/ia64/klibc/archsys.h:25:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#192: FILE: usr/include/arch/ia64/klibc/archsys.h:25:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: usr/include/arch/ia64/klibc/archsys.h:26:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: usr/include/arch/ia64/klibc/archsys.h:26:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: usr/include/arch/ia64/klibc/archsys.h:27:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: usr/include/arch/ia64/klibc/archsys.h:27:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: usr/include/arch/ia64/klibc/archsys.h:28:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: usr/include/arch/ia64/klibc/archsys.h:29:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: usr/include/arch/ia64/klibc/archsys.h:32:
+#define _syscall1(type,name,type1,arg1)                                 \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: usr/include/arch/ia64/klibc/archsys.h:32:
+#define _syscall1(type,name,type1,arg1)                                 \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: usr/include/arch/ia64/klibc/archsys.h:32:
+#define _syscall1(type,name,type1,arg1)                                 \
                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#199: FILE: usr/include/arch/ia64/klibc/archsys.h:32:
+#define _syscall1(type,name,type1,arg1)                                 \
+type                                                                    \
+name (type1 arg1)                                                       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_1(arg1);                                               \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_1                                \
+                         : "2" (_r15) ASM_ARGS_1                        \
+                         : "memory" ASM_CLOBBERS_1);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: usr/include/arch/ia64/klibc/archsys.h:34:
+name (type1 arg1)                                                       \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: usr/include/arch/ia64/klibc/archsys.h:36:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: usr/include/arch/ia64/klibc/archsys.h:37:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: usr/include/arch/ia64/klibc/archsys.h:38:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: usr/include/arch/ia64/klibc/archsys.h:39:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: usr/include/arch/ia64/klibc/archsys.h:40:
+       LOAD_ARGS_1(arg1);                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: usr/include/arch/ia64/klibc/archsys.h:41:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: usr/include/arch/ia64/klibc/archsys.h:41:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: usr/include/arch/ia64/klibc/archsys.h:42:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: usr/include/arch/ia64/klibc/archsys.h:42:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: usr/include/arch/ia64/klibc/archsys.h:43:
+                           ASM_OUTARGS_1                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: usr/include/arch/ia64/klibc/archsys.h:43:
+                           ASM_OUTARGS_1                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: usr/include/arch/ia64/klibc/archsys.h:44:
+                         : "2" (_r15) ASM_ARGS_1                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: usr/include/arch/ia64/klibc/archsys.h:44:
+                         : "2" (_r15) ASM_ARGS_1                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: usr/include/arch/ia64/klibc/archsys.h:45:
+                         : "memory" ASM_CLOBBERS_1);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: usr/include/arch/ia64/klibc/archsys.h:45:
+                         : "memory" ASM_CLOBBERS_1);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: usr/include/arch/ia64/klibc/archsys.h:46:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: usr/include/arch/ia64/klibc/archsys.h:47:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#214: FILE: usr/include/arch/ia64/klibc/archsys.h:47:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: usr/include/arch/ia64/klibc/archsys.h:48:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: usr/include/arch/ia64/klibc/archsys.h:48:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: usr/include/arch/ia64/klibc/archsys.h:49:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: usr/include/arch/ia64/klibc/archsys.h:49:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: usr/include/arch/ia64/klibc/archsys.h:50:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: usr/include/arch/ia64/klibc/archsys.h:51:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
+type                                                                    \
+name (type1 arg1, type2 arg2)                                           \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_2(arg1, arg2);                                         \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_2                                \
+                         : "2" (_r15) ASM_ARGS_2                        \
+                         : "memory" ASM_CLOBBERS_2);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#221: FILE: usr/include/arch/ia64/klibc/archsys.h:54:
+#define _syscall2(type,name,type1,arg1,type2,arg2)                      \
+type                                                                    \
+name (type1 arg1, type2 arg2)                                           \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_2(arg1, arg2);                                         \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_2                                \
+                         : "2" (_r15) ASM_ARGS_2                        \
+                         : "memory" ASM_CLOBBERS_2);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: usr/include/arch/ia64/klibc/archsys.h:56:
+name (type1 arg1, type2 arg2)                                           \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: usr/include/arch/ia64/klibc/archsys.h:58:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: usr/include/arch/ia64/klibc/archsys.h:59:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: usr/include/arch/ia64/klibc/archsys.h:60:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: usr/include/arch/ia64/klibc/archsys.h:61:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: usr/include/arch/ia64/klibc/archsys.h:62:
+       LOAD_ARGS_2(arg1, arg2);                                         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: usr/include/arch/ia64/klibc/archsys.h:63:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: usr/include/arch/ia64/klibc/archsys.h:63:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: usr/include/arch/ia64/klibc/archsys.h:64:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: usr/include/arch/ia64/klibc/archsys.h:64:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: usr/include/arch/ia64/klibc/archsys.h:65:
+                           ASM_OUTARGS_2                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: usr/include/arch/ia64/klibc/archsys.h:65:
+                           ASM_OUTARGS_2                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: usr/include/arch/ia64/klibc/archsys.h:66:
+                         : "2" (_r15) ASM_ARGS_2                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: usr/include/arch/ia64/klibc/archsys.h:66:
+                         : "2" (_r15) ASM_ARGS_2                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: usr/include/arch/ia64/klibc/archsys.h:67:
+                         : "memory" ASM_CLOBBERS_2);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: usr/include/arch/ia64/klibc/archsys.h:67:
+                         : "memory" ASM_CLOBBERS_2);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: usr/include/arch/ia64/klibc/archsys.h:68:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: usr/include/arch/ia64/klibc/archsys.h:69:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#236: FILE: usr/include/arch/ia64/klibc/archsys.h:69:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: usr/include/arch/ia64/klibc/archsys.h:70:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: usr/include/arch/ia64/klibc/archsys.h:70:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: usr/include/arch/ia64/klibc/archsys.h:71:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: usr/include/arch/ia64/klibc/archsys.h:71:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: usr/include/arch/ia64/klibc/archsys.h:72:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: usr/include/arch/ia64/klibc/archsys.h:73:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
                                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3)                               \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_3(arg1, arg2, arg3);                                   \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_3                                \
+                         : "2" (_r15) ASM_ARGS_3                        \
+                         : "memory" ASM_CLOBBERS_3);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3)                               \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_3(arg1, arg2, arg3);                                   \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_3                                \
+                         : "2" (_r15) ASM_ARGS_3                        \
+                         : "memory" ASM_CLOBBERS_3);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#243: FILE: usr/include/arch/ia64/klibc/archsys.h:76:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3)           \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3)                               \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_3(arg1, arg2, arg3);                                   \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_3                                \
+                         : "2" (_r15) ASM_ARGS_3                        \
+                         : "memory" ASM_CLOBBERS_3);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: usr/include/arch/ia64/klibc/archsys.h:78:
+name (type1 arg1, type2 arg2, type3 arg3)                               \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: usr/include/arch/ia64/klibc/archsys.h:80:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: usr/include/arch/ia64/klibc/archsys.h:81:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: usr/include/arch/ia64/klibc/archsys.h:82:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: usr/include/arch/ia64/klibc/archsys.h:83:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: usr/include/arch/ia64/klibc/archsys.h:84:
+       LOAD_ARGS_3(arg1, arg2, arg3);                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: usr/include/arch/ia64/klibc/archsys.h:85:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: usr/include/arch/ia64/klibc/archsys.h:85:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: usr/include/arch/ia64/klibc/archsys.h:86:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: usr/include/arch/ia64/klibc/archsys.h:86:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: usr/include/arch/ia64/klibc/archsys.h:87:
+                           ASM_OUTARGS_3                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: usr/include/arch/ia64/klibc/archsys.h:87:
+                           ASM_OUTARGS_3                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: usr/include/arch/ia64/klibc/archsys.h:88:
+                         : "2" (_r15) ASM_ARGS_3                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: usr/include/arch/ia64/klibc/archsys.h:88:
+                         : "2" (_r15) ASM_ARGS_3                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: usr/include/arch/ia64/klibc/archsys.h:89:
+                         : "memory" ASM_CLOBBERS_3);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: usr/include/arch/ia64/klibc/archsys.h:89:
+                         : "memory" ASM_CLOBBERS_3);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: usr/include/arch/ia64/klibc/archsys.h:90:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: usr/include/arch/ia64/klibc/archsys.h:91:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#258: FILE: usr/include/arch/ia64/klibc/archsys.h:91:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: usr/include/arch/ia64/klibc/archsys.h:92:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: usr/include/arch/ia64/klibc/archsys.h:92:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: usr/include/arch/ia64/klibc/archsys.h:93:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: usr/include/arch/ia64/klibc/archsys.h:93:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: usr/include/arch/ia64/klibc/archsys.h:94:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: usr/include/arch/ia64/klibc/archsys.h:95:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4)                   \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_4(arg1, arg2, arg3, arg4);                             \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_4                                \
+                         : "2" (_r15) ASM_ARGS_4                        \
+                         : "memory" ASM_CLOBBERS_4);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4)                   \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_4(arg1, arg2, arg3, arg4);                             \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_4                                \
+                         : "2" (_r15) ASM_ARGS_4                        \
+                         : "memory" ASM_CLOBBERS_4);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4)                   \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_4(arg1, arg2, arg3, arg4);                             \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_4                                \
+                         : "2" (_r15) ASM_ARGS_4                        \
+                         : "memory" ASM_CLOBBERS_4);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#265: FILE: usr/include/arch/ia64/klibc/archsys.h:98:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4)                   \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_4(arg1, arg2, arg3, arg4);                             \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_4                                \
+                         : "2" (_r15) ASM_ARGS_4                        \
+                         : "memory" ASM_CLOBBERS_4);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: usr/include/arch/ia64/klibc/archsys.h:100:
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4)                   \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: usr/include/arch/ia64/klibc/archsys.h:102:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: usr/include/arch/ia64/klibc/archsys.h:103:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: usr/include/arch/ia64/klibc/archsys.h:104:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: usr/include/arch/ia64/klibc/archsys.h:105:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: usr/include/arch/ia64/klibc/archsys.h:106:
+       LOAD_ARGS_4(arg1, arg2, arg3, arg4);                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: usr/include/arch/ia64/klibc/archsys.h:107:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: usr/include/arch/ia64/klibc/archsys.h:107:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: usr/include/arch/ia64/klibc/archsys.h:108:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: usr/include/arch/ia64/klibc/archsys.h:108:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: usr/include/arch/ia64/klibc/archsys.h:109:
+                           ASM_OUTARGS_4                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: usr/include/arch/ia64/klibc/archsys.h:109:
+                           ASM_OUTARGS_4                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: usr/include/arch/ia64/klibc/archsys.h:110:
+                         : "2" (_r15) ASM_ARGS_4                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: usr/include/arch/ia64/klibc/archsys.h:110:
+                         : "2" (_r15) ASM_ARGS_4                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: usr/include/arch/ia64/klibc/archsys.h:111:
+                         : "memory" ASM_CLOBBERS_4);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: usr/include/arch/ia64/klibc/archsys.h:111:
+                         : "memory" ASM_CLOBBERS_4);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: usr/include/arch/ia64/klibc/archsys.h:112:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: usr/include/arch/ia64/klibc/archsys.h:113:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#280: FILE: usr/include/arch/ia64/klibc/archsys.h:113:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: usr/include/arch/ia64/klibc/archsys.h:114:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: usr/include/arch/ia64/klibc/archsys.h:114:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: usr/include/arch/ia64/klibc/archsys.h:115:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: usr/include/arch/ia64/klibc/archsys.h:115:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: usr/include/arch/ia64/klibc/archsys.h:116:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: usr/include/arch/ia64/klibc/archsys.h:117:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
                                                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_5                                \
+                         : "2" (_r15) ASM_ARGS_5                        \
+                         : "memory" ASM_CLOBBERS_5);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_5                                \
+                         : "2" (_r15) ASM_ARGS_5                        \
+                         : "memory" ASM_CLOBBERS_5);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_5                                \
+                         : "2" (_r15) ASM_ARGS_5                        \
+                         : "memory" ASM_CLOBBERS_5);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_5                                \
+                         : "2" (_r15) ASM_ARGS_5                        \
+                         : "memory" ASM_CLOBBERS_5);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg5' - possible side-effects?
#287: FILE: usr/include/arch/ia64/klibc/archsys.h:120:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_5                                \
+                         : "2" (_r15) ASM_ARGS_5                        \
+                         : "memory" ASM_CLOBBERS_5);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: usr/include/arch/ia64/klibc/archsys.h:122:
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5)       \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: usr/include/arch/ia64/klibc/archsys.h:124:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: usr/include/arch/ia64/klibc/archsys.h:125:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: usr/include/arch/ia64/klibc/archsys.h:126:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: usr/include/arch/ia64/klibc/archsys.h:127:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: usr/include/arch/ia64/klibc/archsys.h:128:
+       LOAD_ARGS_5(arg1, arg2, arg3, arg4, arg5);                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: usr/include/arch/ia64/klibc/archsys.h:129:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: usr/include/arch/ia64/klibc/archsys.h:129:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: usr/include/arch/ia64/klibc/archsys.h:130:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: usr/include/arch/ia64/klibc/archsys.h:130:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: usr/include/arch/ia64/klibc/archsys.h:131:
+                           ASM_OUTARGS_5                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: usr/include/arch/ia64/klibc/archsys.h:131:
+                           ASM_OUTARGS_5                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: usr/include/arch/ia64/klibc/archsys.h:132:
+                         : "2" (_r15) ASM_ARGS_5                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: usr/include/arch/ia64/klibc/archsys.h:132:
+                         : "2" (_r15) ASM_ARGS_5                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: usr/include/arch/ia64/klibc/archsys.h:133:
+                         : "memory" ASM_CLOBBERS_5);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: usr/include/arch/ia64/klibc/archsys.h:133:
+                         : "memory" ASM_CLOBBERS_5);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: usr/include/arch/ia64/klibc/archsys.h:134:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: usr/include/arch/ia64/klibc/archsys.h:135:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#302: FILE: usr/include/arch/ia64/klibc/archsys.h:135:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: usr/include/arch/ia64/klibc/archsys.h:136:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: usr/include/arch/ia64/klibc/archsys.h:136:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: usr/include/arch/ia64/klibc/archsys.h:137:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: usr/include/arch/ia64/klibc/archsys.h:137:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: usr/include/arch/ia64/klibc/archsys.h:138:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: usr/include/arch/ia64/klibc/archsys.h:139:
+       return (type)_retval;                                                  \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
                                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg5' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg6' - possible side-effects?
#309: FILE: usr/include/arch/ia64/klibc/archsys.h:142:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4,type5,arg5,type6,arg6) \
+type                                                                    \
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \
+{                                                                       \
+       register long _r8 asm ("r8");					\
+       register long _r10 asm ("r10");                                  \
+       register long _r15 asm ("r15") = __NR_##name;                    \
+       long _retval;                                                    \
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \
+       __asm __volatile (__IA64_BREAK                                   \
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \
+                           ASM_OUTARGS_6                                \
+                         : "2" (_r15) ASM_ARGS_6                        \
+                         : "memory" ASM_CLOBBERS_6);                    \
+       _retval = _r8;                                                   \
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \
+               _retval = -1;                                            \
+       }                                                                \
+       return (type)_retval;                                                  \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: usr/include/arch/ia64/klibc/archsys.h:144:
+name (type1 arg1, type2 arg2, type3 arg3, type4 arg4, type5 arg5, type6 arg6)       \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: usr/include/arch/ia64/klibc/archsys.h:146:
+       register long _r8 asm ("r8");^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: usr/include/arch/ia64/klibc/archsys.h:147:
+       register long _r10 asm ("r10");                                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: usr/include/arch/ia64/klibc/archsys.h:148:
+       register long _r15 asm ("r15") = __NR_##name;                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: usr/include/arch/ia64/klibc/archsys.h:149:
+       long _retval;                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: usr/include/arch/ia64/klibc/archsys.h:150:
+       LOAD_ARGS_6(arg1, arg2, arg3, arg4, arg5, arg6);                 \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: usr/include/arch/ia64/klibc/archsys.h:151:
+       __asm __volatile (__IA64_BREAK                                   \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: usr/include/arch/ia64/klibc/archsys.h:151:
+       __asm __volatile (__IA64_BREAK                                   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: usr/include/arch/ia64/klibc/archsys.h:152:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: usr/include/arch/ia64/klibc/archsys.h:152:
+                         : "=r" (_r8), "=r" (_r10), "=r" (_r15),        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: usr/include/arch/ia64/klibc/archsys.h:153:
+                           ASM_OUTARGS_6                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: usr/include/arch/ia64/klibc/archsys.h:153:
+                           ASM_OUTARGS_6                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: usr/include/arch/ia64/klibc/archsys.h:154:
+                         : "2" (_r15) ASM_ARGS_6                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: usr/include/arch/ia64/klibc/archsys.h:154:
+                         : "2" (_r15) ASM_ARGS_6                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: usr/include/arch/ia64/klibc/archsys.h:155:
+                         : "memory" ASM_CLOBBERS_6);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: usr/include/arch/ia64/klibc/archsys.h:155:
+                         : "memory" ASM_CLOBBERS_6);                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: usr/include/arch/ia64/klibc/archsys.h:156:
+       _retval = _r8;                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: usr/include/arch/ia64/klibc/archsys.h:157:
+       if (_r10 == -1) {                                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#324: FILE: usr/include/arch/ia64/klibc/archsys.h:157:
+       if (_r10 == -1) {                                                \
+               errno = (_retval);                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: usr/include/arch/ia64/klibc/archsys.h:158:
+               errno = (_retval);                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: usr/include/arch/ia64/klibc/archsys.h:158:
+               errno = (_retval);                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: usr/include/arch/ia64/klibc/archsys.h:159:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: usr/include/arch/ia64/klibc/archsys.h:159:
+               _retval = -1;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: usr/include/arch/ia64/klibc/archsys.h:160:
+       }                                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: usr/include/arch/ia64/klibc/archsys.h:161:
+       return (type)_retval;                                                  \$

CHECK:SPACING: No space is necessary after a cast
#333: FILE: usr/include/arch/ia64/klibc/archsys.h:166:
+  register long _out0 asm ("out0") = (long) (out0);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: usr/include/arch/ia64/klibc/archsys.h:166:
+  register long _out0 asm ("out0") = (long) (out0);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: usr/include/arch/ia64/klibc/archsys.h:167:
+  LOAD_ARGS_0 ()$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: usr/include/arch/ia64/klibc/archsys.h:167:
+  LOAD_ARGS_0 ()

CHECK:SPACING: No space is necessary after a cast
#336: FILE: usr/include/arch/ia64/klibc/archsys.h:169:
+  register long _out1 asm ("out1") = (long) (out1);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: usr/include/arch/ia64/klibc/archsys.h:169:
+  register long _out1 asm ("out1") = (long) (out1);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: usr/include/arch/ia64/klibc/archsys.h:170:
+  LOAD_ARGS_1 (out0)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: usr/include/arch/ia64/klibc/archsys.h:170:
+  LOAD_ARGS_1 (out0)

CHECK:SPACING: No space is necessary after a cast
#339: FILE: usr/include/arch/ia64/klibc/archsys.h:172:
+  register long _out2 asm ("out2") = (long) (out2);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: usr/include/arch/ia64/klibc/archsys.h:172:
+  register long _out2 asm ("out2") = (long) (out2);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: usr/include/arch/ia64/klibc/archsys.h:173:
+  LOAD_ARGS_2 (out0, out1)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: usr/include/arch/ia64/klibc/archsys.h:173:
+  LOAD_ARGS_2 (out0, out1)

CHECK:SPACING: No space is necessary after a cast
#342: FILE: usr/include/arch/ia64/klibc/archsys.h:175:
+  register long _out3 asm ("out3") = (long) (out3);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: usr/include/arch/ia64/klibc/archsys.h:175:
+  register long _out3 asm ("out3") = (long) (out3);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: usr/include/arch/ia64/klibc/archsys.h:176:
+  LOAD_ARGS_3 (out0, out1, out2)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: usr/include/arch/ia64/klibc/archsys.h:176:
+  LOAD_ARGS_3 (out0, out1, out2)

CHECK:SPACING: No space is necessary after a cast
#345: FILE: usr/include/arch/ia64/klibc/archsys.h:178:
+  register long _out4 asm ("out4") = (long) (out4);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: usr/include/arch/ia64/klibc/archsys.h:178:
+  register long _out4 asm ("out4") = (long) (out4);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: usr/include/arch/ia64/klibc/archsys.h:179:
+  LOAD_ARGS_4 (out0, out1, out2, out3)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: usr/include/arch/ia64/klibc/archsys.h:179:
+  LOAD_ARGS_4 (out0, out1, out2, out3)

CHECK:SPACING: No space is necessary after a cast
#348: FILE: usr/include/arch/ia64/klibc/archsys.h:181:
+  register long _out5 asm ("out5") = (long) (out5);	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: usr/include/arch/ia64/klibc/archsys.h:181:
+  register long _out5 asm ("out5") = (long) (out5);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: usr/include/arch/ia64/klibc/archsys.h:182:
+  LOAD_ARGS_5 (out0, out1, out2, out3, out4)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#349: FILE: usr/include/arch/ia64/klibc/archsys.h:182:
+  LOAD_ARGS_5 (out0, out1, out2, out3, out4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#352: FILE: usr/include/arch/ia64/klibc/archsys.h:185:
+#define ASM_OUTARGS_2	ASM_OUTARGS_1, "=r" (_out1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#353: FILE: usr/include/arch/ia64/klibc/archsys.h:186:
+#define ASM_OUTARGS_3	ASM_OUTARGS_2, "=r" (_out2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#354: FILE: usr/include/arch/ia64/klibc/archsys.h:187:
+#define ASM_OUTARGS_4	ASM_OUTARGS_3, "=r" (_out3)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#355: FILE: usr/include/arch/ia64/klibc/archsys.h:188:
+#define ASM_OUTARGS_5	ASM_OUTARGS_4, "=r" (_out4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#356: FILE: usr/include/arch/ia64/klibc/archsys.h:189:
+#define ASM_OUTARGS_6	ASM_OUTARGS_5, "=r" (_out5)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#359: FILE: usr/include/arch/ia64/klibc/archsys.h:192:
+#define ASM_ARGS_1	ASM_ARGS_0, "3" (_out0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#360: FILE: usr/include/arch/ia64/klibc/archsys.h:193:
+#define ASM_ARGS_2	ASM_ARGS_1, "4" (_out1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#361: FILE: usr/include/arch/ia64/klibc/archsys.h:194:
+#define ASM_ARGS_3	ASM_ARGS_2, "5" (_out2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#362: FILE: usr/include/arch/ia64/klibc/archsys.h:195:
+#define ASM_ARGS_4	ASM_ARGS_3, "6" (_out3)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#363: FILE: usr/include/arch/ia64/klibc/archsys.h:196:
+#define ASM_ARGS_5	ASM_ARGS_4, "7" (_out4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#364: FILE: usr/include/arch/ia64/klibc/archsys.h:197:
+#define ASM_ARGS_6	ASM_ARGS_5, "8" (_out5)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#372: FILE: usr/include/arch/ia64/klibc/archsys.h:205:
+#define ASM_CLOBBERS_6	, "out6", "out7",				\
                       	^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: usr/include/arch/ia64/klibc/archsys.h:207:
+  "r2", "r3", "r9", "r11", "r12", "r13", "r14", "r16", "r17", "r18",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: usr/include/arch/ia64/klibc/archsys.h:208:
+  "r19", "r20", "r21", "r22", "r23", "r24", "r25", "r26", "r27",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: usr/include/arch/ia64/klibc/archsys.h:209:
+  "r28", "r29", "r30", "r31",^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: usr/include/arch/ia64/klibc/archsys.h:211:
+  "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: usr/include/arch/ia64/klibc/archsys.h:213:
+  "f6", "f7", "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: usr/include/arch/ia64/klibc/archsys.h:215:
+  "b6", "b7"$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: usr/klibc/arch/ia64/crt0.S:1:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#473: FILE: usr/klibc/arch/ia64/pipe.c:1:
+/*

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#480: FILE: usr/klibc/arch/ia64/pipe.c:8:
+#define ASM_CLOBBERS ,"out2", "out3", "out4", "out5", "out6", "out7",    \
                      ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#480: FILE: usr/klibc/arch/ia64/pipe.c:8:
+#define ASM_CLOBBERS ,"out2", "out3", "out4", "out5", "out6", "out7",    \
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: usr/klibc/arch/ia64/pipe.c:10:
+  "r2", "r3", "r11", "r12", "r13", "r14", "r16", "r17", "r18",^I        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: usr/klibc/arch/ia64/pipe.c:11:
+  "r19", "r20", "r21", "r22", "r23", "r24", "r25", "r26", "r27",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: usr/klibc/arch/ia64/pipe.c:12:
+  "r28", "r29", "r30", "r31",^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: usr/klibc/arch/ia64/pipe.c:14:
+  "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: usr/klibc/arch/ia64/pipe.c:16:
+  "f6", "f7", "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15",^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: usr/klibc/arch/ia64/pipe.c:18:
+  "b6", "b7"$

WARNING:LINE_SPACING: Missing a blank line after declarations
#500: FILE: usr/klibc/arch/ia64/pipe.c:28:
+	long _retval;
+	__asm __volatile(__IA64_BREAK:"=r"(_r8), "=r"(_r10), "=r"(_r15),

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#500: FILE: usr/klibc/arch/ia64/pipe.c:28:
+	__asm __volatile(__IA64_BREAK:"=r"(_r8), "=r"(_r10), "=r"(_r15),
 	                             ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#500: FILE: usr/klibc/arch/ia64/pipe.c:28:
+	__asm __volatile(__IA64_BREAK:"=r"(_r8), "=r"(_r10), "=r"(_r15),

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#502: FILE: usr/klibc/arch/ia64/pipe.c:30:
+			 :"2"(_r15), "3"(_out0)
 			 ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#503: FILE: usr/klibc/arch/ia64/pipe.c:31:
+			 :"memory" ASM_CLOBBERS);
 			 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#520: FILE: usr/klibc/arch/ia64/setjmp.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#869: FILE: usr/klibc/arch/ia64/syscall.S:1:
+#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#930: FILE: usr/klibc/arch/ia64/vfork.S:1:
+/*

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.65127.commit.fadca93c4ce65b27784733e139c1ccc0da4e2679 total: 107 errors, 184 warnings, 28 checks, 848 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.65127.commit.fadca93c4ce65b27784733e139c1ccc0da4e2679 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
