WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#132: 
rename from drivers/net/wan/hdlc_generic.c

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#163: FILE: drivers/net/wan/hdlc.c:41:
+static const char* version = "HDLC support module revision 1.20";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#167: FILE: drivers/net/wan/hdlc.c:45:
+static struct hdlc_proto *first_proto = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: drivers/net/wan/hdlc.c:69:
+	struct hdlc_device_desc *desc = dev_to_desc(dev);
+	if (desc->netif_rx)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#215: FILE: drivers/net/wan/hdlc.c:149:
+	printk(KERN_DEBUG "%s: hdlc_open() carrier %i open %i\n", dev->name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hdlc_open', this function's name, in a string
#215: FILE: drivers/net/wan/hdlc.c:149:
+	printk(KERN_DEBUG "%s: hdlc_open() carrier %i open %i\n", dev->name,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdlc->proto"
#220: FILE: drivers/net/wan/hdlc.c:153:
+	if (hdlc->proto == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#235: FILE: drivers/net/wan/hdlc.c:183:
+	printk(KERN_DEBUG "%s: hdlc_close() carrier %i open %i\n", dev->name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hdlc_close', this function's name, in a string
#235: FILE: drivers/net/wan/hdlc.c:183:
+	printk(KERN_DEBUG "%s: hdlc_close() carrier %i open %i\n", dev->name,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#315: FILE: drivers/net/wan/hdlc.c:218:
+		if ((result = proto->ioctl(dev, ifr)) != -EINVAL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#360: FILE: drivers/net/wan/hdlc.c:269:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#363: FILE: drivers/net/wan/hdlc.c:272:
+		if ((dev_to_hdlc(dev)->state = kmalloc(size,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#365: FILE: drivers/net/wan/hdlc.c:274:
+			printk(KERN_WARNING "Memory squeeze on"

WARNING:SPLIT_STRING: quoted string split across lines
#366: FILE: drivers/net/wan/hdlc.c:275:
+			printk(KERN_WARNING "Memory squeeze on"
+			       " hdlc_proto_attach()\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: drivers/net/wan/hdlc.c:284:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: drivers/net/wan/hdlc.c:299:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#397: FILE: drivers/net/wan/hdlc.c:306:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#401: FILE: drivers/net/wan/hdlc.c:310:
+	struct hdlc_proto **p = &first_proto;
+	while (*p) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/net/wan/hdlc.c:319:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#420: FILE: drivers/net/wan/hdlc.c:332:
+EXPORT_SYMBOL(unregister_hdlc_protocol);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#421: FILE: drivers/net/wan/hdlc.c:333:
+EXPORT_SYMBOL(attach_hdlc_protocol);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#422: FILE: drivers/net/wan/hdlc.c:334:
+EXPORT_SYMBOL(detach_hdlc_protocol);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>
  ^

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Krzysztof>
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>

CHECK:CAMELCASE: Avoid CamelCase: <Halasa>
#435: FILE: drivers/net/wan/hdlc_cisco.c:5:
+ * Copyright (C) 2000 - 2006 Krzysztof Halasa <khc@pm.waw.pl>

ERROR:SPACING: space required after that close brace '}'
#447: FILE: drivers/net/wan/hdlc_cisco.c:41:
+}__attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#447: FILE: drivers/net/wan/hdlc_cisco.c:41:
+}__attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#449: FILE: drivers/net/wan/hdlc_cisco.c:43:
+
+

ERROR:SPACING: space required after that close brace '}'
#456: FILE: drivers/net/wan/hdlc_cisco.c:50:
+}__attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#456: FILE: drivers/net/wan/hdlc_cisco.c:50:
+}__attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#460: FILE: drivers/net/wan/hdlc_cisco.c:54:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#472: FILE: drivers/net/wan/hdlc_cisco.c:66:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#475: FILE: drivers/net/wan/hdlc_cisco.c:69:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: drivers/net/wan/hdlc_cisco.c:70:
+static inline struct cisco_state * state(hdlc_device *hdlc)

ERROR:SPACING: space required before the open parenthesis '('
#478: FILE: drivers/net/wan/hdlc_cisco.c:72:
+	return(struct cisco_state *)(hdlc->state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: drivers/net/wan/hdlc_cisco.c:75:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#495: FILE: drivers/net/wan/hdlc_cisco.c:86:
+	data = (struct hdlc_header*)skb->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#526: FILE: drivers/net/wan/hdlc_cisco.c:115:
+	data = (struct cisco_packet*)(skb->data + 4);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#544: FILE: drivers/net/wan/hdlc_cisco.c:136:
+	struct hdlc_header *data = (struct hdlc_header*)skb->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#566: FILE: drivers/net/wan/hdlc_cisco.c:161:
+	struct hdlc_header *data = (struct hdlc_header*)skb->data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#589: FILE: drivers/net/wan/hdlc_cisco.c:184:
+			printk(KERN_INFO "%s: Invalid length of Cisco control"

WARNING:SPLIT_STRING: quoted string split across lines
#590: FILE: drivers/net/wan/hdlc_cisco.c:185:
+			printk(KERN_INFO "%s: Invalid length of Cisco control"
+			       " packet (%d bytes)\n", dev->name, skb->len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#595: FILE: drivers/net/wan/hdlc_cisco.c:189:
+		cisco_data = (struct cisco_packet*)(skb->data + sizeof

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/net/wan/hdlc_cisco.c:319:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/net/wan/hdlc_cisco.c:319:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: drivers/net/wan/hdlc_cisco.c:320:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#720: FILE: drivers/net/wan/hdlc_cisco.c:320:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: drivers/net/wan/hdlc_cisco.c:320:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#771: FILE: drivers/net/wan/hdlc_cisco.c:379:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#778: FILE: drivers/net/wan/hdlc_cisco.c:386:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#785: FILE: drivers/net/wan/hdlc_cisco.c:393:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#818: FILE: drivers/net/wan/hdlc_fr.c:120:
+typedef struct pvc_device_struct {

ERROR:SPACING: space required after that close brace '}'
#834: FILE: drivers/net/wan/hdlc_fr.c:136:
+	}state;

ERROR:SPACING: space required after that close brace '}'
#835: FILE: drivers/net/wan/hdlc_fr.c:137:
+}pvc_device;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#837: FILE: drivers/net/wan/hdlc_fr.c:139:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: drivers/net/wan/hdlc_fr.c:157:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#858: FILE: drivers/net/wan/hdlc_fr.c:160:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#873: FILE: drivers/net/wan/hdlc_fr.c:174:
+static inline struct frad_state * state(hdlc_device *hdlc)

ERROR:SPACING: space required before the open parenthesis '('
#875: FILE: drivers/net/wan/hdlc_fr.c:176:
+	return(struct frad_state *)(hdlc->state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#878: FILE: drivers/net/wan/hdlc_fr.c:179:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#879: FILE: drivers/net/wan/hdlc_fr.c:180:
+static __inline__ pvc_device* dev_to_pvc(struct net_device *dev)

WARNING:INLINE: plain inline is preferred over __inline__
#879: FILE: drivers/net/wan/hdlc_fr.c:180:
+static __inline__ pvc_device* dev_to_pvc(struct net_device *dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#897: FILE: drivers/net/wan/hdlc_fr.c:202:
+static pvc_device* add_pvc(struct net_device *dev, u16 dlci)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#910: FILE: drivers/net/wan/hdlc_fr.c:217:
+	printk(KERN_DEBUG "add_pvc: allocated pvc %p, frad %p\n", pvc, dev);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_pvc', this function's name, in a string
#910: FILE: drivers/net/wan/hdlc_fr.c:217:
+	printk(KERN_DEBUG "add_pvc: allocated pvc %p, frad %p\n", pvc, dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#942: FILE: drivers/net/wan/hdlc_fr.c:265:
+			printk(KERN_DEBUG "freeing unused pvc: %p\n", pvc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#961: FILE: drivers/net/wan/hdlc_fr.c:362:
+		hdlc_device *hdlc = dev_to_hdlc(pvc->frad);
+		if (state(hdlc)->settings.lmi == LMI_NONE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/net/wan/hdlc_fr.c:379:
+		hdlc_device *hdlc = dev_to_hdlc(pvc->frad);
+		if (state(hdlc)->settings.lmi == LMI_NONE)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1205: FILE: drivers/net/wan/hdlc_fr.c:705:
+		printk(KERN_INFO "%s: Received non-LMI frame with LMI DLCI\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1348: FILE: drivers/net/wan/hdlc_fr.c:945:
+		printk(KERN_DEBUG "%s: DLCI %d FECN O%s\n", frad->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1357: FILE: drivers/net/wan/hdlc_fr.c:953:
+		printk(KERN_DEBUG "%s: DLCI %d BECN O%s\n", frad->name,

WARNING:SPLIT_STRING: quoted string split across lines
#1375: FILE: drivers/net/wan/hdlc_fr.c:997:
 			printk(KERN_INFO "%s: Unsupported protocol, OUI=%x "
+			       "PID=%x\n", frad->name, oui, pid);

WARNING:SPLIT_STRING: quoted string split across lines
#1382: FILE: drivers/net/wan/hdlc_fr.c:1003:
 		printk(KERN_INFO "%s: Unsupported protocol, NLPID=%x "
+		       "length = %i\n", frad->name, data[3], skb->len);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1409: FILE: drivers/net/wan/hdlc_fr.c:1036:
+	if (state(hdlc)->settings.lmi != LMI_NONE) {
[...]
+		state(hdlc)->timer.expires = jiffies + HZ;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1462: FILE: drivers/net/wan/hdlc_fr.c:1082:
 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1484: FILE: drivers/net/wan/hdlc_fr.c:1102:
+	if ((pvc = add_pvc(frad, dlci)) == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1542: FILE: drivers/net/wan/hdlc_fr.c:1199:
+	pvc_device *pvc = state(hdlc)->first_pvc;
+	state(hdlc)->first_pvc = NULL; /* All PVCs destroyed */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1628: FILE: drivers/net/wan/hdlc_fr.c:1331:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1635: FILE: drivers/net/wan/hdlc_fr.c:1338:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1641: FILE: drivers/net/wan/hdlc_fr.c:1344:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1675: FILE: drivers/net/wan/hdlc_ppp.c:35:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1676: FILE: drivers/net/wan/hdlc_ppp.c:36:
+static inline struct ppp_state* state(hdlc_device *hdlc)

ERROR:SPACING: space required before the open parenthesis '('
#1678: FILE: drivers/net/wan/hdlc_ppp.c:38:
+	return(struct ppp_state *)(hdlc->state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1728: FILE: drivers/net/wan/hdlc_ppp.c:99:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1764: FILE: drivers/net/wan/hdlc_ppp.c:140:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1771: FILE: drivers/net/wan/hdlc_ppp.c:147:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1778: FILE: drivers/net/wan/hdlc_ppp.c:154:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1818: FILE: drivers/net/wan/hdlc_raw.c:42:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1862: FILE: drivers/net/wan/hdlc_raw.c:102:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1869: FILE: drivers/net/wan/hdlc_raw.c:109:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1876: FILE: drivers/net/wan/hdlc_raw.c:116:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1915: FILE: drivers/net/wan/hdlc_raw_eth.c:54:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1959: FILE: drivers/net/wan/hdlc_raw_eth.c:119:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1966: FILE: drivers/net/wan/hdlc_raw_eth.c:126:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1973: FILE: drivers/net/wan/hdlc_raw_eth.c:133:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2058: FILE: drivers/net/wan/hdlc_x25.c:214:
+		if ((result = attach_hdlc_protocol(dev, &proto,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2069: FILE: drivers/net/wan/hdlc_x25.c:228:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2076: FILE: drivers/net/wan/hdlc_x25.c:235:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2083: FILE: drivers/net/wan/hdlc_x25.c:242:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2131: FILE: include/linux/hdlc.h:16:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2197: FILE: include/linux/hdlc.h:37:
+/* This structure is a private property of HDLC protocols.
+   Hardware drivers have no interest here */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2197: FILE: include/linux/hdlc.h:37:
+   Hardware drivers have no interest here */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2212: FILE: include/linux/hdlc.h:52:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2213: FILE: include/linux/hdlc.h:53:
+typedef struct hdlc_device {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2307: FILE: include/linux/hdlc.h:81:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2314: FILE: include/linux/hdlc.h:87:
 
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2315: FILE: include/linux/hdlc.h:88:
+static __inline__ struct hdlc_device_desc* dev_to_desc(struct net_device *dev)

WARNING:INLINE: plain inline is preferred over __inline__
#2315: FILE: include/linux/hdlc.h:88:
+static __inline__ struct hdlc_device_desc* dev_to_desc(struct net_device *dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2322: FILE: include/linux/hdlc.h:93:
+static __inline__ hdlc_device* dev_to_hdlc(struct net_device *dev)

WARNING:INLINE: plain inline is preferred over __inline__
#2322: FILE: include/linux/hdlc.h:93:
+static __inline__ hdlc_device* dev_to_hdlc(struct net_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2371: FILE: include/linux/hdlc/ioctl.h:4:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2380: FILE: include/linux/hdlc/ioctl.h:13:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2388: FILE: include/linux/hdlc/ioctl.h:21:
+
+

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.34632.commit.2e214e2f2ca2e725ba28d301fcaba4ec7d7c9cad total: 28 errors, 40 warnings, 48 checks, 2209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.34632.commit.2e214e2f2ca2e725ba28d301fcaba4ec7d7c9cad has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
