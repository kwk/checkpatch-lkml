WARNING:REPEATED_WORD: Possible repeated word: 'the'
#32: 
	- what is recorded in the the sampling buffer

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
It is possible to list the available formats by looking at /sys/kernel/perfmon/formats.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: perfmon/perfmon_fmt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: perfmon/perfmon_fmt.c:22:
+ * ^Ihttp://www.hpl.hp.com/research/linux/perfmon$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: perfmon/perfmon_fmt.c:41:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: perfmon/perfmon_fmt.c:49:
+	struct pfm_smpl_fmt * entry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: perfmon/perfmon_fmt.c:60:
+	struct pfm_smpl_fmt * entry;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: perfmon/perfmon_fmt.c:68:
+}
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: perfmon/perfmon_fmt.c:73:
+	struct pfm_smpl_fmt * fmt;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt"
#155: FILE: perfmon/perfmon_fmt.c:92:
+	if (fmt == NULL || !fmt_is_mod(fmt))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: perfmon/perfmon_fmt.c:94:
+	BUG_ON(fmt->owner == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt->owner"
#157: FILE: perfmon/perfmon_fmt.c:94:
+	BUG_ON(fmt->owner == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt"
#169: FILE: perfmon/perfmon_fmt.c:106:
+	if (fmt == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt->fmt_name"
#174: FILE: perfmon/perfmon_fmt.c:111:
+	if (fmt->fmt_name == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: perfmon/perfmon_fmt.c:122:
+		PFM_INFO("perfmon: format %s requires %u msg queue depth (max %d)",
+		       fmt->fmt_name,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt->owner"
#195: FILE: perfmon/perfmon_fmt.c:132:
+	if (fmt->owner == NULL && fmt_is_mod(fmt)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fmt->fmt_handler"
#202: FILE: perfmon/perfmon_fmt.c:139:
+	if (fmt->fmt_handler == NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#267: FILE: perfmon/perfmon_fmt.c:204:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: perfmon/perfmon_fmt.c:214:
+	struct pfm_smpl_fmt * entry;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: include/linux/perfmon_fmt.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: include/linux/perfmon_fmt.h:17:
+^Iu64 smpl_pmds_values[PFM_MAX_PMDS]; ^I/* values of other PMDs */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: include/linux/perfmon_fmt.h:29:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#319: FILE: include/linux/perfmon_fmt.h:30:
+typedef int (*fmt_validate_t )(u32 flags, u16 npmds, void *arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#346: FILE: include/linux/perfmon_fmt.h:57:
+};
+#define to_smpl_fmt(n) container_of(n, struct pfm_smpl_fmt, kobj)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44989.commit.ffd12e7ddc43d44213b0309941693adfa5a23c3d total: 5 errors, 7 warnings, 12 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44989.commit.ffd12e7ddc43d44213b0309941693adfa5a23c3d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
