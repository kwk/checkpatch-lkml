WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#40: 
13- LTTng architecture dependant instrumentation : PPC
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
OpenPGP public key:              http://krystal.dyndns.org:8080/key/compudj.gpg

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#51: 
--- a/arch/ppc/kernel/entry.S

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/ppc/kernel/time.c:203:
+ ^Itrace_kernel_trap_exit();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: arch/ppc/kernel/time.c:203:
+ ^Itrace_kernel_trap_exit();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/ppc/kernel/time.c:203:
+ ^Itrace_kernel_trap_exit();$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#223: FILE: arch/ppc/kernel/traps.c:751:
+	trace_kernel_arch_syscall_entry(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#225: FILE: arch/ppc/kernel/traps.c:753:
+			(void*)instruction_pointer(regs));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#253: FILE: arch/ppc/mm/fault.c:118:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#266: FILE: arch/ppc/mm/fault.c:130:
+			trace_kernel_trap_exit();;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#274: FILE: arch/ppc/mm/fault.c:137:
+	if (in_atomic() || mm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#274: FILE: arch/ppc/mm/fault.c:137:
+	if (in_atomic() || mm == NULL) {

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42453.commit.7f00a308791c4b2941615bc53bca25eabab90a0f total: 4 errors, 6 warnings, 2 checks, 237 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.42453.commit.7f00a308791c4b2941615bc53bca25eabab90a0f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
