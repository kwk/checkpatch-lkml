WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: net/ipv6/udplite.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#56: FILE: net/ipv6/udplite.c:6:
+ *  Version:    $Id: udplite.c,v 1.7 2006/06/30 07:10:06 gerrit Exp gerrit $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#86: FILE: net/ipv6/udplite.c:36:
+#include <asm/uaccess.h>

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#127: FILE: net/ipv6/udplite.c:77:
+		best = result = udplite_port_rover;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:INDENTED_LABEL: labels should not be indented
#146: FILE: net/ipv6/udplite.c:96:
+		next:;

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: net/ipv6/udplite.c:99:
+		for(i = 0; i < (1 << 16) / UDP_HTABLE_SIZE;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#161: FILE: net/ipv6/udplite.c:111:
+		udplite_port_rover = snum = result;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: net/ipv6/udplite.c:141:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: net/ipv6/udplite.c:146:
+ ^Iwrite_lock_bh(&udplite_hash_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: net/ipv6/udplite.c:146:
+ ^Iwrite_lock_bh(&udplite_hash_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: net/ipv6/udplite.c:146:
+ ^Iwrite_lock_bh(&udplite_hash_lock);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: net/ipv6/udplite.c:155:
+static struct sock *udplite_v6_lookup(struct in6_addr *saddr, u16 sport,
+				  struct in6_addr *daddr, u16 dport, int dif)

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: net/ipv6/udplite.c:162:
+ ^Iread_lock(&udplite_hash_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: net/ipv6/udplite.c:162:
+ ^Iread_lock(&udplite_hash_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: net/ipv6/udplite.c:162:
+ ^Iread_lock(&udplite_hash_lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: net/ipv6/udplite.c:169:
+			int score = 0;
+			if (inet->dport) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: net/ipv6/udplite.c:189:
+			if(score == 4) {

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: net/ipv6/udplite.c:192:
+			} else if(score > badness) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: net/ipv6/udplite.c:200:
+ ^Iread_unlock(&udplite_hash_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: net/ipv6/udplite.c:200:
+ ^Iread_unlock(&udplite_hash_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: net/ipv6/udplite.c:200:
+ ^Iread_unlock(&udplite_hash_lock);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#255: FILE: net/ipv6/udplite.c:205:
+/*
+ *

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: net/ipv6/udplite.c:214:
+ * ^IThis should be easy, if there is something there we$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#264: FILE: net/ipv6/udplite.c:214:
+/*
+ * 	This should be easy, if there is something there we

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: net/ipv6/udplite.c:215:
+ * ^Ireturn it, otherwise we block.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: net/ipv6/udplite.c:219:
+static int udplitev6_recvmsg(struct kiocb *iocb, struct sock *sk,
+		  struct msghdr *msg, size_t len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: net/ipv6/udplite.c:224:
+  ^Istruct sk_buff *skb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: net/ipv6/udplite.c:224:
+  ^Istruct sk_buff *skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: net/ipv6/udplite.c:224:
+  ^Istruct sk_buff *skb;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: net/ipv6/udplite.c:226:
+  ^Iint err;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: net/ipv6/udplite.c:226:
+  ^Iint err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: net/ipv6/udplite.c:226:
+  ^Iint err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: net/ipv6/udplite.c:228:
+  ^Iif (addr_len)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: net/ipv6/udplite.c:228:
+  ^Iif (addr_len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: net/ipv6/udplite.c:228:
+  ^Iif (addr_len)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: net/ipv6/udplite.c:229:
+  ^I^I*addr_len=sizeof(struct sockaddr_in6);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: net/ipv6/udplite.c:229:
+  ^I^I*addr_len=sizeof(struct sockaddr_in6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: net/ipv6/udplite.c:229:
+  ^I^I*addr_len=sizeof(struct sockaddr_in6);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#279: FILE: net/ipv6/udplite.c:229:
+  		*addr_len=sizeof(struct sockaddr_in6);
   		         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: net/ipv6/udplite.c:239:
+ ^Icopied = skb->len - sizeof(struct udplitehdr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: net/ipv6/udplite.c:239:
+ ^Icopied = skb->len - sizeof(struct udplitehdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: net/ipv6/udplite.c:239:
+ ^Icopied = skb->len - sizeof(struct udplitehdr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: net/ipv6/udplite.c:240:
+  ^Iif (copied > len) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: net/ipv6/udplite.c:240:
+  ^Iif (copied > len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: net/ipv6/udplite.c:240:
+  ^Iif (copied > len) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: net/ipv6/udplite.c:241:
+  ^I^Icopied = len;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: net/ipv6/udplite.c:241:
+  ^I^Icopied = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: net/ipv6/udplite.c:241:
+  ^I^Icopied = len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: net/ipv6/udplite.c:242:
+  ^I^Imsg->msg_flags |= MSG_TRUNC;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: net/ipv6/udplite.c:242:
+  ^I^Imsg->msg_flags |= MSG_TRUNC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: net/ipv6/udplite.c:242:
+  ^I^Imsg->msg_flags |= MSG_TRUNC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: net/ipv6/udplite.c:243:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: net/ipv6/udplite.c:243:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: net/ipv6/udplite.c:243:
+  ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#298: FILE: net/ipv6/udplite.c:248:
+	 * of UDP-Lite variable-length checksums.    */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#312: FILE: net/ipv6/udplite.c:262:
+	 * data_ready handler.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: net/ipv6/udplite.c:264:
+        if(UDPLITE_SKB_CB(skb)->partial)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: net/ipv6/udplite.c:264:
+        if(UDPLITE_SKB_CB(skb)->partial)$

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: net/ipv6/udplite.c:264:
+        if(UDPLITE_SKB_CB(skb)->partial)

CHECK:SPACING: No space is necessary after a cast
#321: FILE: net/ipv6/udplite.c:271:
+		sin6 = (struct sockaddr_in6 *) msg->msg_name;

CHECK:BRACES: Unbalanced braces around else statement
#330: FILE: net/ipv6/udplite.c:280:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#332: FILE: net/ipv6/udplite.c:282:
+			if(ipv6_addr_type(&sin6->sin6_addr)&IPV6_ADDR_LINKLOCAL)
 			                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: net/ipv6/udplite.c:282:
+			if(ipv6_addr_type(&sin6->sin6_addr)&IPV6_ADDR_LINKLOCAL)

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#333: FILE: net/ipv6/udplite.c:283:
+				sin6->sin6_scope_id = IP6CB(skb)->iif;
 				                                  ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#336: FILE: net/ipv6/udplite.c:286:
+
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: net/ipv6/udplite.c:293:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: net/ipv6/udplite.c:293:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: net/ipv6/udplite.c:293:
+  ^I}$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#355: FILE: net/ipv6/udplite.c:305:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDPLITE: csum error \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: net/ipv6/udplite.c:317:
+static void udplitev6_err(struct sk_buff *skb, struct inet6_skb_parm *opt,
+	       int type, int code, int offset, __u32 info)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#370: FILE: net/ipv6/udplite.c:320:
+	struct ipv6hdr *hdr = (struct ipv6hdr*)skb->data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#374: FILE: net/ipv6/udplite.c:324:
+	struct udplitehdr *uh = (struct udplitehdr*)(skb->data+offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: net/ipv6/udplite.c:324:
+	struct udplitehdr *uh = (struct udplitehdr*)(skb->data+offset);
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: net/ipv6/udplite.c:328:
+	sk = udplite_v6_lookup(daddr,uh->dest, saddr, uh->source, dev->ifindex);
 	                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sk"
#380: FILE: net/ipv6/udplite.c:330:
+	if (sk == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: net/ipv6/udplite.c:342:
+		ipv6_icmp_error(sk, skb,err,uh->dest,ntohl(info), (u8 *)(uh+1));
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: net/ipv6/udplite.c:342:
+		ipv6_icmp_error(sk, skb,err,uh->dest,ntohl(info), (u8 *)(uh+1));
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: net/ipv6/udplite.c:342:
+		ipv6_icmp_error(sk, skb,err,uh->dest,ntohl(info), (u8 *)(uh+1));
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#392: FILE: net/ipv6/udplite.c:342:
+		ipv6_icmp_error(sk, skb,err,uh->dest,ntohl(info), (u8 *)(uh+1));
 		                                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: net/ipv6/udplite.c:350:
+static int udplitev6_queue_rcv_skb(struct sock * sk, struct sk_buff *skb)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#412: FILE: net/ipv6/udplite.c:362:
+		/*
+		 * see net/ipv4/udplite.c for detailed comments/justifications

WARNING:SPLIT_STRING: quoted string split across lines
#416: FILE: net/ipv6/udplite.c:366:
+			LIMIT_NETDEBUG(KERN_WARNING "UDPLITE: partial coverage "
+				"%d while full coverage %d requested\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: net/ipv6/udplite.c:383:
+	if (sock_queue_rcv_skb(sk,skb)<0)
 	                         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#433: FILE: net/ipv6/udplite.c:383:
+	if (sock_queue_rcv_skb(sk,skb)<0)
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: net/ipv6/udplite.c:394:
+static struct sock *udplite_v6_mcast_next(struct sock *sk,
+				      u16 loc_port, struct in6_addr *loc_addr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: net/ipv6/udplite.c:407:
+			struct ipv6_pinfo *np = inet6_sk(s);
+			if (inet->dport) {

ERROR:SPACING: space required before the open parenthesis '('
#472: FILE: net/ipv6/udplite.c:422:
+			if(!inet6_mc_check(s, loc_addr, rmt_addr))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#481: FILE: net/ipv6/udplite.c:431:
+/*
+ * Note: called only from the BH handler context,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: net/ipv6/udplite.c:435:
+static void udplitev6_mcast_deliver(struct udplitehdr *uh,
+				struct in6_addr *saddr, struct in6_addr *daddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: net/ipv6/udplite.c:452:
+	while ((sk2 = udplite_v6_mcast_next(sk_next(sk2), uh->dest, daddr,
+					uh->source, saddr, dif))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: net/ipv6/udplite.c:454:
+		struct sk_buff *buff = skb_clone(skb, GFP_ATOMIC);
+		if (buff)

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: net/ipv6/udplite.c:466:
+  ^Istruct udplitehdr *ulh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: net/ipv6/udplite.c:466:
+  ^Istruct udplitehdr *ulh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: net/ipv6/udplite.c:466:
+  ^Istruct udplitehdr *ulh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#520: FILE: net/ipv6/udplite.c:470:
+^Iu16 cscov;^I            ^I  /* csum coverage length */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: net/ipv6/udplite.c:484:
+        /* In UDPv4 a zero checksum means that the transmitter generated no$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: net/ipv6/udplite.c:485:
+         * checksum. UDP-Lite (like IPv6) mandates checksums, hence packets$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: net/ipv6/udplite.c:486:
+         * with a zero checksum field are illegal. (cf. RFC 2460, sec. 8.1)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#538: FILE: net/ipv6/udplite.c:488:
+	 * corrupted in transit. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: net/ipv6/udplite.c:495:
+        UDPLITE_SKB_CB(skb)->cscov   = cscov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: net/ipv6/udplite.c:495:
+        UDPLITE_SKB_CB(skb)->cscov   = cscov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: net/ipv6/udplite.c:496:
+        UDPLITE_SKB_CB(skb)->partial = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: net/ipv6/udplite.c:496:
+        UDPLITE_SKB_CB(skb)->partial = 0;$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#551: FILE: net/ipv6/udplite.c:501:
+		 cscov > len  )	 /* Coverage length exceeds datagram length.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: net/ipv6/udplite.c:504:
+        ^IUDPLITE_SKB_CB(skb)->partial = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#554: FILE: net/ipv6/udplite.c:504:
+        ^IUDPLITE_SKB_CB(skb)->partial = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: net/ipv6/udplite.c:504:
+        ^IUDPLITE_SKB_CB(skb)->partial = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: net/ipv6/udplite.c:509:
+^I^I^I            IPPROTO_UDPLITE, skb->csum) == 0)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: net/ipv6/udplite.c:509:
+		if (csum_ipv6_magic(saddr, daddr, len,
+			            IPPROTO_UDPLITE, skb->csum) == 0)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#567: FILE: net/ipv6/udplite.c:517:
+	/*
+	 *	Multicast receive code

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#577: FILE: net/ipv6/udplite.c:527:
+	/*
+	 * check socket cache ... must talk to Alan about his plans

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sk"
#583: FILE: net/ipv6/udplite.c:533:
+	if (sk == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#593: FILE: net/ipv6/udplite.c:543:
+		icmpv6_send(skb,ICMPV6_DEST_UNREACH, ICMPV6_PORT_UNREACH,0,dev);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#593: FILE: net/ipv6/udplite.c:543:
+		icmpv6_send(skb,ICMPV6_DEST_UNREACH, ICMPV6_PORT_UNREACH,0,dev);
 		                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#593: FILE: net/ipv6/udplite.c:543:
+		icmpv6_send(skb,ICMPV6_DEST_UNREACH, ICMPV6_PORT_UNREACH,0,dev);
 		                                                          ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#596: FILE: net/ipv6/udplite.c:546:
+		return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#603: FILE: net/ipv6/udplite.c:553:
+	return(0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: net/ipv6/udplite.c:557:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: net/ipv6/udplite.c:557:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#607: FILE: net/ipv6/udplite.c:557:
+	LIMIT_NETDEBUG(KERN_INFO  "UDPLITE: short packet of %d bytes "
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: net/ipv6/udplite.c:558:
+^I^I       ^I^I  len, NIP6(*saddr), NIP6(*daddr));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#608: FILE: net/ipv6/udplite.c:558:
+^I^I       ^I^I  len, NIP6(*saddr), NIP6(*daddr));$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#613: FILE: net/ipv6/udplite.c:563:
+	/*
+	 * Coverage length violates RFC 3828: log and discard it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: net/ipv6/udplite.c:566:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: net/ipv6/udplite.c:566:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#616: FILE: net/ipv6/udplite.c:566:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDPLITE: bad csum coverage %d/%d "
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: net/ipv6/udplite.c:567:
+^I      ^I^I^I  cscov, len, NIP6(*saddr), NIP6(*daddr));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: net/ipv6/udplite.c:567:
+^I      ^I^I^I  cscov, len, NIP6(*saddr), NIP6(*daddr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: net/ipv6/udplite.c:573:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: net/ipv6/udplite.c:573:
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#623: FILE: net/ipv6/udplite.c:573:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDPLITE: bad csum "
+                                  "[" NIP6_FMT " > " NIP6_FMT "]\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: net/ipv6/udplite.c:574:
+^I      ^I^I^I   NIP6(*saddr), NIP6(*daddr));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#624: FILE: net/ipv6/udplite.c:574:
+^I      ^I^I^I   NIP6(*saddr), NIP6(*daddr));$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#630: FILE: net/ipv6/udplite.c:580:
+	return(0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#632: FILE: net/ipv6/udplite.c:582:
+}
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#633: FILE: net/ipv6/udplite.c:583:
+/*
+ * Throw away all pending data and cancel the corking. Socket is locked.

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: net/ipv6/udplite.c:593:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: net/ipv6/udplite.c:593:
+        }$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#647: FILE: net/ipv6/udplite.c:597:
+/*
+ *	Sending

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: net/ipv6/udplite.c:607:
+        int                err   = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: net/ipv6/udplite.c:607:
+        int                err   = 0,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#660: FILE: net/ipv6/udplite.c:610:
+^Iu32 ^I^I   csum  = 0;^I/* intermediate checksum value. */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#663: FILE: net/ipv6/udplite.c:613:
+	if ((skb = skb_peek(&sk->sk_write_queue)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#667: FILE: net/ipv6/udplite.c:617:
+	/*
+	 * Create a UDP-Lite header

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: net/ipv6/udplite.c:625:
+^I        /* Sender has requested partial coverage via sockopts.       */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 30)
#677: FILE: net/ipv6/udplite.c:627:
+			if (up->pcslen == 0)	/* Full coverage (RFC 3828)  */
+			      cscov = up->len;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 30)
#679: FILE: net/ipv6/udplite.c:629:
+			else {	                /* Genuine partial coverage  */
+			      cscov = up->pcslen;

CHECK:BRACES: Unbalanced braces around else statement
#679: FILE: net/ipv6/udplite.c:629:
+			else {	                /* Genuine partial coverage  */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#695: FILE: net/ipv6/udplite.c:645:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#700: FILE: net/ipv6/udplite.c:650:
+		/*
+		 * Only one fragment on the socket.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: net/ipv6/udplite.c:659:
+			skb->csum = skb_checksum(skb, skb->h.raw - skb->data,
+						(cscov > len) ? len : cscov, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: net/ipv6/udplite.c:668:
+^I^I^I             IPPROTO_UDPLITE, csum);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: net/ipv6/udplite.c:668:
+	ulh->check = csum_ipv6_magic(&fl->fl6_src, &fl->fl6_dst, up->len,
+			             IPPROTO_UDPLITE, csum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: net/ipv6/udplite.c:681:
+static int udplitev6_sendmsg(struct kiocb *iocb, struct sock *sk,
+		  struct msghdr *msg, size_t len)

CHECK:SPACING: No space is necessary after a cast
#737: FILE: net/ipv6/udplite.c:687:
+	struct sockaddr_in6 *sin6 = (struct sockaddr_in6 *) msg->msg_name;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#747: FILE: net/ipv6/udplite.c:697:
+	int corkreq = up->corkflag || msg->msg_flags&MSG_MORE;
 	                                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#752: FILE: net/ipv6/udplite.c:702:
+	if (sin6) {
[...]
+	} else if (!up->pending) {
[...]
+	} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#765: FILE: net/ipv6/udplite.c:715:
+			msg->msg_name = sin6 = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#766: FILE: net/ipv6/udplite.c:716:
+			msg->msg_namelen = addr_len = 0;

CHECK:BRACES: Unbalanced braces around else statement
#776: FILE: net/ipv6/udplite.c:726:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#782: FILE: net/ipv6/udplite.c:732:
+			struct sockaddr_in sin;
+			sin.sin_family = AF_INET;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#798: FILE: net/ipv6/udplite.c:748:
+	/* Rough check on arithmetic overflow,
+	   better check is made in ip6_build_xmit

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#805: FILE: net/ipv6/udplite.c:755:
+		/*
+		 * There are pending frames.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#833: FILE: net/ipv6/udplite.c:783:
+			if (fl->fl6_flowlabel&IPV6_FLOWLABEL_MASK) {
 			                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#834: FILE: net/ipv6/udplite.c:784:
+				flowlabel=fl6_sock_lookup(sk,fl->fl6_flowlabel);
 				         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: net/ipv6/udplite.c:784:
+				flowlabel=fl6_sock_lookup(sk,fl->fl6_flowlabel);
 				                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!flowlabel"
#835: FILE: net/ipv6/udplite.c:785:
+				if (flowlabel == NULL)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#842: FILE: net/ipv6/udplite.c:792:
+		/*
+		 * Otherwise it will be difficult to maintain

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#851: FILE: net/ipv6/udplite.c:801:
+		    ipv6_addr_type(daddr)&IPV6_ADDR_LINKLOCAL)
 		                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#876: FILE: net/ipv6/udplite.c:826:
+		if ((fl->fl6_flowlabel&IPV6_FLOWLABEL_MASK) && !flowlabel) {
 		                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!flowlabel"
#878: FILE: net/ipv6/udplite.c:828:
+			if (flowlabel == NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#881: FILE: net/ipv6/udplite.c:831:
+		if (!(opt->opt_nflen|opt->opt_flen))
 		                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opt"
#885: FILE: net/ipv6/udplite.c:835:
+	if (opt == NULL)

CHECK:SPACING: No space is necessary after a cast
#899: FILE: net/ipv6/udplite.c:849:
+		struct rt0_hdr *rt0 = (struct rt0_hdr *) opt->srcrt;

WARNING:LINE_SPACING: Missing a blank line after declarations
#900: FILE: net/ipv6/udplite.c:850:
+		struct rt0_hdr *rt0 = (struct rt0_hdr *) opt->srcrt;
+		ipv6_addr_copy(&final, &fl->fl6_dst);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#917: FILE: net/ipv6/udplite.c:867:
+	if ((err = xfrm_lookup(&dst, fl, sk, 0)) < 0)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#937: FILE: net/ipv6/udplite.c:887:
+	if (msg->msg_flags&MSG_CONFIRM)
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: net/ipv6/udplite.c:907:
+	err = ip6_append_data(sk, udplite_getfrag, msg->msg_iov, ulen,
+		sizeof(struct udplitehdr), hlimit, tclass, opt, fl,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#958: FILE: net/ipv6/udplite.c:908:
+		(struct rt6_info*)dst,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#959: FILE: net/ipv6/udplite.c:909:
+		corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags);
 		                        ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#968: FILE: net/ipv6/udplite.c:918:
+				      ipv6_addr_equal(&fl->fl6_dst, &np->daddr)?
 				                                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#988: FILE: net/ipv6/udplite.c:938:
+	if (!(msg->msg_flags&MSG_PROBE) || len)
 	                    ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1006: FILE: net/ipv6/udplite.c:956:
+/*
+ *	Socket option code for UDP

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1009: FILE: net/ipv6/udplite.c:959:
+static int do_udplitev6_setsockopt(struct sock *sk, int level, int optname,
+			  char __user *optval, int optlen)

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1015: FILE: net/ipv6/udplite.c:965:
+	if(optlen<sizeof(int))
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#1015: FILE: net/ipv6/udplite.c:965:
+	if(optlen<sizeof(int))

ERROR:SPACING: space required before the open parenthesis '('
#1021: FILE: net/ipv6/udplite.c:971:
+	switch(optname) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1044: FILE: net/ipv6/udplite.c:994:
+	/* Sender sets actual checksum coverage length via this option.
+	   The case coverage > packet length is handled by send module.       */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1044: FILE: net/ipv6/udplite.c:994:
+	   The case coverage > packet length is handled by send module.       */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: net/ipv6/udplite.c:1002:
+        /* The receiver specifies a minimum checksum coverage value. To make$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: net/ipv6/udplite.c:1003:
+         * sense, this should be set to at least 8 (as done below). If zero is$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1054: FILE: net/ipv6/udplite.c:1004:
+	 * used, this again means full checksum coverage.                     */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: net/ipv6/udplite.c:1021:
+static int udplitev6_setsockopt(struct sock *sk, int level, int optname,
+			  char __user *optval, int optlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1080: FILE: net/ipv6/udplite.c:1030:
+static int compat_udplitev6_setsockopt(struct sock *sk, int level, int optname,
+				   char __user *optval, int optlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: net/ipv6/udplite.c:1040:
+static int do_udplitev6_getsockopt(struct sock *sk, int level, int optname,
+			  char __user *optval, int __user *optlen)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1095: FILE: net/ipv6/udplite.c:1045:
+	if(get_user(len,optlen))
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#1095: FILE: net/ipv6/udplite.c:1045:
+	if(get_user(len,optlen))

ERROR:SPACING: space required before the open parenthesis '('
#1100: FILE: net/ipv6/udplite.c:1050:
+	if(len < 0)

ERROR:SPACING: space required before the open parenthesis '('
#1103: FILE: net/ipv6/udplite.c:1053:
+	switch(optname) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: net/ipv6/udplite.c:1074:
+  ^Iif(put_user(len, optlen))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1124: FILE: net/ipv6/udplite.c:1074:
+  ^Iif(put_user(len, optlen))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: net/ipv6/udplite.c:1074:
+  ^Iif(put_user(len, optlen))$

ERROR:SPACING: space required before the open parenthesis '('
#1124: FILE: net/ipv6/udplite.c:1074:
+  	if(put_user(len, optlen))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: net/ipv6/udplite.c:1075:
+  ^I^Ireturn -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1125: FILE: net/ipv6/udplite.c:1075:
+  ^I^Ireturn -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: net/ipv6/udplite.c:1075:
+  ^I^Ireturn -EFAULT;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1126: FILE: net/ipv6/udplite.c:1076:
+	if(copy_to_user(optval, &val,len))
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#1126: FILE: net/ipv6/udplite.c:1076:
+	if(copy_to_user(optval, &val,len))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1128: FILE: net/ipv6/udplite.c:1078:
+  ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1128: FILE: net/ipv6/udplite.c:1078:
+  ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: net/ipv6/udplite.c:1078:
+  ^Ireturn 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1132: FILE: net/ipv6/udplite.c:1082:
+static int udplitev6_getsockopt(struct sock *sk, int level, int optname,
+			  char __user *optval, int __user *optlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1141: FILE: net/ipv6/udplite.c:1091:
+static int compat_udplitev6_getsockopt(struct sock *sk, int level, int optname,
+				   char __user *optval, int __user *optlen)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1153: FILE: net/ipv6/udplite.c:1103:
+	.flags		=	INET6_PROTO_NOPOLICY|INET6_PROTO_FINAL,
 	      		 	                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#1173: FILE: net/ipv6/udplite.c:1123:
+		   "%4d: %08X%08X%08X%08X:%04X %08X%08X%08X%08X:%04X "
+		   "%02X %08X:%08X %02X:%08lX %08X %5d %8d %lu %d %p\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1193: FILE: net/ipv6/udplite.c:1143:
+			   "  sl  "
+			   "local_address                         "

WARNING:SPLIT_STRING: quoted string split across lines
#1194: FILE: net/ipv6/udplite.c:1144:
+			   "local_address                         "
+			   "remote_address                        "

WARNING:SPLIT_STRING: quoted string split across lines
#1195: FILE: net/ipv6/udplite.c:1145:
+			   "remote_address                        "
+			   "st tx_queue rx_queue tr tm->when retrnsmt"

WARNING:SPLIT_STRING: quoted string split across lines
#1196: FILE: net/ipv6/udplite.c:1146:
+			   "st tx_queue rx_queue tr tm->when retrnsmt"
+			   "   uid  timeout inode\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1199: FILE: net/ipv6/udplite.c:1149:
+^I^I^I^I^I^I ^Iseq->private)->bucket);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1199: FILE: net/ipv6/udplite.c:1149:
+^I^I^I^I^I^I ^Iseq->private)->bucket);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1203: FILE: net/ipv6/udplite.c:1153:
+static struct file_operations udplite6_seq_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1217: FILE: net/ipv6/udplite.c:1167:
+void udplite6_proc_exit(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#1278: FILE: net/ipv6/udplite.c:1228:
+	.capability =-1,
 	            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1278: FILE: net/ipv6/udplite.c:1228:
+	.capability =-1,
 	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1283: FILE: net/ipv6/udplite.c:1233:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1287: FILE: net/ipv6/udplite.c:1237:
+		printk(KERN_ERR "udplitev6_init: Could not register.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udplitev6_init', this function's name, in a string
#1287: FILE: net/ipv6/udplite.c:1237:
+		printk(KERN_ERR "udplitev6_init: Could not register.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1298: FILE: net/ipv6/af_inet6.c:740:
+	if (snmp6_mib_init((void **)udplite_stats_in6, sizeof (struct udplite_mib),

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1402: FILE: include/net/ipv6.h:153:
+#define UDPLITE6_INC_STATS_USER(field) ^ISNMP_INC_STATS_USER(udplite_stats_in6, field)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1413: FILE: include/net/ipv6.h:594:
+extern int  udplite6_proc_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1414: FILE: include/net/ipv6.h:595:
+extern void udplite6_proc_exit(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1428: FILE: include/net/transp_v6.h:30:
+extern void ^I^I^I^Iudplitev6_init(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1428: FILE: include/net/transp_v6.h:30:
+extern void 				udplitev6_init(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: net/ipv6/proc.c:55:
+^I^I        fold_prot_inuse(&udplitev6_prot));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: net/ipv6/proc.c:55:
+	seq_printf(seq, "UDPLITE6: inuse %d\n",
+		        fold_prot_inuse(&udplitev6_prot));

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62608.commit.a592e6f4b3a4a12b7c1540c3660d25dd3a68b516 total: 81 errors, 102 warnings, 53 checks, 1408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62608.commit.a592e6f4b3a4a12b7c1540c3660d25dd3a68b516 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
