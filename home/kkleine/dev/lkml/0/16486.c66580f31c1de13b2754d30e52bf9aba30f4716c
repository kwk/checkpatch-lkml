WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/rtc/Kconfig:185:
+config RTC_DRV_OMAP
+	tristate "TI OMAP1"
+	depends on RTC_CLASS && ( \
+		ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 )
+	help
+	  Say "yes" here to support the real time clock on TI OMAP1 chips.
+	  This driver can also be built as a module called rtc-omap.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#72: FILE: arch/arm/mach-omap1/devices.c:58:
+#if defined(CONFIG_RTC_DRV_OMAP) || defined(CONFIG_RTC_DRV_OMAP_MODULE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: drivers/rtc/rtc-omap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#116: FILE: drivers/rtc/rtc-omap.c:24:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/rtc/rtc-omap.c:27:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#160: FILE: drivers/rtc/rtc-omap.c:68:
+#define OMAP_RTC_CTRL_SPLIT		(1<<7)
                            		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: drivers/rtc/rtc-omap.c:68:
+#define OMAP_RTC_CTRL_SPLIT		(1<<7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: drivers/rtc/rtc-omap.c:69:
+#define OMAP_RTC_CTRL_DISABLE		(1<<6)
                              		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: drivers/rtc/rtc-omap.c:69:
+#define OMAP_RTC_CTRL_DISABLE		(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#162: FILE: drivers/rtc/rtc-omap.c:70:
+#define OMAP_RTC_CTRL_SET_32_COUNTER	(1<<5)
                                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#162: FILE: drivers/rtc/rtc-omap.c:70:
+#define OMAP_RTC_CTRL_SET_32_COUNTER	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#163: FILE: drivers/rtc/rtc-omap.c:71:
+#define OMAP_RTC_CTRL_TEST		(1<<4)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: drivers/rtc/rtc-omap.c:71:
+#define OMAP_RTC_CTRL_TEST		(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#164: FILE: drivers/rtc/rtc-omap.c:72:
+#define OMAP_RTC_CTRL_MODE_12_24	(1<<3)
                                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: drivers/rtc/rtc-omap.c:72:
+#define OMAP_RTC_CTRL_MODE_12_24	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: drivers/rtc/rtc-omap.c:73:
+#define OMAP_RTC_CTRL_AUTO_COMP		(1<<2)
                                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: drivers/rtc/rtc-omap.c:73:
+#define OMAP_RTC_CTRL_AUTO_COMP		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#166: FILE: drivers/rtc/rtc-omap.c:74:
+#define OMAP_RTC_CTRL_ROUND_30S		(1<<1)
                                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: drivers/rtc/rtc-omap.c:74:
+#define OMAP_RTC_CTRL_ROUND_30S		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: drivers/rtc/rtc-omap.c:75:
+#define OMAP_RTC_CTRL_STOP		(1<<0)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: drivers/rtc/rtc-omap.c:75:
+#define OMAP_RTC_CTRL_STOP		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#170: FILE: drivers/rtc/rtc-omap.c:78:
+#define OMAP_RTC_STATUS_POWER_UP        (1<<7)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: drivers/rtc/rtc-omap.c:78:
+#define OMAP_RTC_STATUS_POWER_UP        (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#171: FILE: drivers/rtc/rtc-omap.c:79:
+#define OMAP_RTC_STATUS_ALARM           (1<<6)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: drivers/rtc/rtc-omap.c:79:
+#define OMAP_RTC_STATUS_ALARM           (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#172: FILE: drivers/rtc/rtc-omap.c:80:
+#define OMAP_RTC_STATUS_1D_EVENT        (1<<5)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: drivers/rtc/rtc-omap.c:80:
+#define OMAP_RTC_STATUS_1D_EVENT        (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#173: FILE: drivers/rtc/rtc-omap.c:81:
+#define OMAP_RTC_STATUS_1H_EVENT        (1<<4)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#173: FILE: drivers/rtc/rtc-omap.c:81:
+#define OMAP_RTC_STATUS_1H_EVENT        (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#174: FILE: drivers/rtc/rtc-omap.c:82:
+#define OMAP_RTC_STATUS_1M_EVENT        (1<<3)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: drivers/rtc/rtc-omap.c:82:
+#define OMAP_RTC_STATUS_1M_EVENT        (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#175: FILE: drivers/rtc/rtc-omap.c:83:
+#define OMAP_RTC_STATUS_1S_EVENT        (1<<2)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#175: FILE: drivers/rtc/rtc-omap.c:83:
+#define OMAP_RTC_STATUS_1S_EVENT        (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#176: FILE: drivers/rtc/rtc-omap.c:84:
+#define OMAP_RTC_STATUS_RUN             (1<<1)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/rtc/rtc-omap.c:84:
+#define OMAP_RTC_STATUS_RUN             (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#177: FILE: drivers/rtc/rtc-omap.c:85:
+#define OMAP_RTC_STATUS_BUSY            (1<<0)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: drivers/rtc/rtc-omap.c:85:
+#define OMAP_RTC_STATUS_BUSY            (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#180: FILE: drivers/rtc/rtc-omap.c:88:
+#define OMAP_RTC_INTERRUPTS_IT_ALARM    (1<<3)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#180: FILE: drivers/rtc/rtc-omap.c:88:
+#define OMAP_RTC_INTERRUPTS_IT_ALARM    (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#181: FILE: drivers/rtc/rtc-omap.c:89:
+#define OMAP_RTC_INTERRUPTS_IT_TIMER    (1<<2)
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: drivers/rtc/rtc-omap.c:89:
+#define OMAP_RTC_INTERRUPTS_IT_TIMER    (1<<2)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: drivers/rtc/rtc-omap.c:91:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#187: FILE: drivers/rtc/rtc-omap.c:95:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#193: FILE: drivers/rtc/rtc-omap.c:101:
+#undef	__devexit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#195: FILE: drivers/rtc/rtc-omap.c:103:
+#define	__devexit	__exit

CHECK:LINE_SPACING: Please don't use multiple blank lines
#199: FILE: drivers/rtc/rtc-omap.c:107:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: drivers/rtc/rtc-omap.c:228:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#391: FILE: drivers/rtc/rtc-omap.c:299:
+	if (alm->time.tm_mday <= 0
+			&& alm->time.tm_mon < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#392: FILE: drivers/rtc/rtc-omap.c:300:
+			&& alm->time.tm_mon < 0
+			&& alm->time.tm_year < 0) {

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#438: FILE: drivers/rtc/rtc-omap.c:346:
+static struct rtc_class_ops omap_rtc_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#449: FILE: drivers/rtc/rtc-omap.c:357:
+static int __devinit omap_rtc_probe(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/rtc/rtc-omap.c:379:
+		pr_debug("%s: RTC registers at %08x, expected %08x\n",
+			pdev->name, (unsigned) res->start, OMAP_RTC_BASE);

CHECK:SPACING: No space is necessary after a cast
#471: FILE: drivers/rtc/rtc-omap.c:379:
+			pdev->name, (unsigned) res->start, OMAP_RTC_BASE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#471: FILE: drivers/rtc/rtc-omap.c:379:
+			pdev->name, (unsigned) res->start, OMAP_RTC_BASE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/rtc/rtc-omap.c:385:
+		mem = request_mem_region(res->start,
+				res->end - res->start + 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/rtc/rtc-omap.c:391:
+		pr_debug("%s: RTC registers at %08x are not free\n",
+			pdev->name, OMAP_RTC_BASE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/rtc/rtc-omap.c:396:
+	rtc = rtc_device_register(pdev->name, &pdev->dev,
+			&omap_rtc_ops, THIS_MODULE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/rtc/rtc-omap.c:399:
+		pr_debug("%s: can't register RTC device, err %ld\n",
+			pdev->name, PTR_ERR(rtc));

CHECK:SPACING: No space is necessary after a cast
#504: FILE: drivers/rtc/rtc-omap.c:412:
+	if (reg & (u8) OMAP_RTC_STATUS_POWER_UP) {

CHECK:SPACING: No space is necessary after a cast
#509: FILE: drivers/rtc/rtc-omap.c:417:
+	if (reg & (u8) OMAP_RTC_STATUS_ALARM)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/rtc/rtc-omap.c:424:
+		pr_debug("%s: RTC timer interrupt IRQ%d already claimed\n",
+			pdev->name, omap_rtc_timer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/rtc/rtc-omap.c:430:
+		pr_debug("%s: RTC alarm interrupt IRQ%d already claimed\n",
+			pdev->name, omap_rtc_alarm);

CHECK:SPACING: No space is necessary after a cast
#528: FILE: drivers/rtc/rtc-omap.c:436:
+	if (reg & (u8) OMAP_RTC_CTRL_STOP)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#532: FILE: drivers/rtc/rtc-omap.c:440:
+	new_ctrl = reg & ~(OMAP_RTC_CTRL_SPLIT|OMAP_RTC_CTRL_AUTO_COMP);
 	                                      ^

CHECK:SPACING: No space is necessary after a cast
#548: FILE: drivers/rtc/rtc-omap.c:456:
+	if (new_ctrl & (u8) OMAP_RTC_CTRL_SPLIT)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#565: FILE: drivers/rtc/rtc-omap.c:473:
+static int __devexit omap_rtc_remove(struct platform_device *pdev)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#567: FILE: drivers/rtc/rtc-omap.c:475:
+	struct rtc_device	*rtc = platform_get_drvdata(pdev);;

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.16486.commit.c66580f31c1de13b2754d30e52bf9aba30f4716c total: 0 errors, 11 warnings, 56 checks, 601 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.16486.commit.c66580f31c1de13b2754d30e52bf9aba30f4716c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
