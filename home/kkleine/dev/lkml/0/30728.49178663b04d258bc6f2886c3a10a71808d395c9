WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
I also moved the the clock source list to a plist, which removes some lookup

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#36: 
I also moved the the clock source list to a plist, which removes some lookup

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#39: 
Signed-Off-By: Daniel Walker <dwalker@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/clocksource.h:208:
+extern struct clocksource *clocksource_get_next(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#119: FILE: include/linux/clocksource.h:209:
+extern int clocksource_register(struct clocksource*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/clocksource.h:209:
+extern int clocksource_register(struct clocksource*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clocksource*' should also have an identifier name
#119: FILE: include/linux/clocksource.h:209:
+extern int clocksource_register(struct clocksource*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#120: FILE: include/linux/clocksource.h:210:
+extern void clocksource_rating_change(struct clocksource*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/clocksource.h:210:
+extern void clocksource_rating_change(struct clocksource*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clocksource*' should also have an identifier name
#120: FILE: include/linux/clocksource.h:210:
+extern void clocksource_rating_change(struct clocksource*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#121: FILE: include/linux/clocksource.h:211:
+extern struct clocksource * clocksource_get_clock(char*);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: include/linux/clocksource.h:211:
+extern struct clocksource * clocksource_get_clock(char*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/clocksource.h:211:
+extern struct clocksource * clocksource_get_clock(char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#121: FILE: include/linux/clocksource.h:211:
+extern struct clocksource * clocksource_get_clock(char*);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: include/linux/clocksource.h:219:
+static inline struct clocksource * clocksource_get_best_clock(void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: kernel/time/clocksource.c:82:
+static struct clocksource * __is_registered(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: kernel/time/clocksource.c:82:
+static struct clocksource * __is_registered(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: kernel/time/clocksource.c:106:
+static inline struct clocksource * __get_clock(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: kernel/time/clocksource.c:106:
+static inline struct clocksource * __get_clock(char * name)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#204: FILE: kernel/time/clocksource.c:108:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: kernel/time/clocksource.c:125:
+struct clocksource * clocksource_get_clock(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: kernel/time/clocksource.c:125:
+struct clocksource * clocksource_get_clock(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: kernel/time/clocksource.c:127:
+	struct clocksource * ret;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: kernel/time/clocksource.c:136:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#250: FILE: kernel/time/clocksource.c:154:
+}
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: kernel/time/clocksource.c:197:
+		printk("register_clocksource: Cannot register %s clocksource. "

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: kernel/time/clocksource.c:202:
+ ^I^I__sorted_list_add(c);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: kernel/time/clocksource.c:202:
+ ^I^I__sorted_list_add(c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: kernel/time/clocksource.c:202:
+ ^I^I__sorted_list_add(c);$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30728.commit.49178663b04d258bc6f2886c3a10a71808d395c9 total: 13 errors, 9 warnings, 7 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.30728.commit.49178663b04d258bc6f2886c3a10a71808d395c9 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
