WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#57: FILE: drivers/s390/block/dasd_devmap.c:694:
+	val = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 1'
#58: FILE: drivers/s390/block/dasd_devmap.c:695:
+	if (((endp + 1) < (buf + count)) || (val > 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#88: FILE: drivers/s390/block/dasd_devmap.c:744:
+	val = simple_strtoul(buf, &endp, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 1'
#89: FILE: drivers/s390/block/dasd_devmap.c:745:
+	if (((endp + 1) < (buf + count)) || (val > 1))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#117: FILE: drivers/s390/block/dasd_devmap.c:876:
+	val = simple_strtoul(buf, &endp, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 1'
#118: FILE: drivers/s390/block/dasd_devmap.c:877:
+	if (((endp + 1) < (buf + count)) || (val > 1))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24426.commit.dc85201f4cbf67364bbbace12b52f98e0ffb8296 total: 0 errors, 3 warnings, 3 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24426.commit.dc85201f4cbf67364bbbace12b52f98e0ffb8296 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
