WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
The one noted by Hugh Dickins. A thread may get a fault because a PTE is absent,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#52: FILE: mm/memory.c:2219:
+ * in access_mask? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#53: FILE: mm/memory.c:2220:
+static inline int insufficient_perms(pte_t pte, int access_mask) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: mm/memory.c:2232:
+static inline int insufficient_vma_perms(struct vm_area_struct * vma, int access_mask) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#65: FILE: mm/memory.c:2232:
+static inline int insufficient_vma_perms(struct vm_area_struct * vma, int access_mask) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: mm/memory.c:2341:
+	 * the slow way. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#113: FILE: mm/memory.c:2342:
+	if (unlikely(vma->vm_flags & VM_MANYPROTS) &&
[...]
+			goto out_segv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: mm/memory.c:2343:
+ ^I^Iunlikely(insufficient_perms(entry, access_mask)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: mm/memory.c:2343:
+ ^I^Iunlikely(insufficient_perms(entry, access_mask)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: mm/memory.c:2343:
+	if (unlikely(vma->vm_flags & VM_MANYPROTS) &&
+ 		unlikely(insufficient_perms(entry, access_mask)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: mm/memory.c:2343:
+ ^I^Iunlikely(insufficient_perms(entry, access_mask)))$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43760.commit.5782253a408a1bf9c97c4b0b4eb662041d7a32fb total: 4 errors, 6 warnings, 1 checks, 70 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43760.commit.5782253a408a1bf9c97c4b0b4eb662041d7a32fb has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
