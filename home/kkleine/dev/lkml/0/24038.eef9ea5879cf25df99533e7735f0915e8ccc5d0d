WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
    http://www.kernel.org/pub/linux/kernel/people/gregkh/gregkh-2.6/patches/

WARNING:BAD_SIGN_OFF: Unexpected content after email: '<greg@kroah.com>, <alan@redhat.com>, <jesse.barnes@intel.com>,', should be: '"<greg@kroah.com>, <alan@redhat.com>," <jesse.barnes@intel.com>'
#43: 
Cc: <greg@kroah.com>, <alan@redhat.com>, <jesse.barnes@intel.com>,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#89: FILE: arch/i386/pci/fixup.c:315:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE'
#110: FILE: arch/i386/pci/fixup.c:336:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS'
#110: FILE: arch/i386/pci/fixup.c:336:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#111: FILE: arch/i386/pci/fixup.c:337:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)

ERROR:SPACING: spaces required around that '&&' (ctx:ExV)
#111: FILE: arch/i386/pci/fixup.c:337:
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#112: FILE: arch/i386/pci/fixup.c:338:
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#112: FILE: arch/i386/pci/fixup.c:338:
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/i386/pci/fixup.c:340:
+			pci_read_config_word(bridge, PCI_BRIDGE_CONTROL,
+						&config);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#123: FILE: arch/i386/pci/fixup.c:349:
+		printk(KERN_DEBUG "Boot video device is %s\n", pci_name(pdev));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: arch/ia64/pci/fixup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#169: FILE: arch/ia64/pci/fixup.c:27:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#176: FILE: arch/ia64/pci/fixup.c:34:
+	if ((strcmp(platform_name, "dig") != 0)
+	    && (strcmp(platform_name, "hpzx1")  != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE'
#195: FILE: arch/ia64/pci/fixup.c:53:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS'
#195: FILE: arch/ia64/pci/fixup.c:53:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#196: FILE: arch/ia64/pci/fixup.c:54:
+		if (bridge
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)

ERROR:SPACING: spaces required around that '&&' (ctx:ExV)
#196: FILE: arch/ia64/pci/fixup.c:54:
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
 		    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#197: FILE: arch/ia64/pci/fixup.c:55:
+		    &&((bridge->hdr_type == PCI_HEADER_TYPE_BRIDGE)
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#197: FILE: arch/ia64/pci/fixup.c:55:
+		       ||(bridge->hdr_type == PCI_HEADER_TYPE_CARDBUS))) {
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: arch/ia64/pci/fixup.c:57:
+			pci_read_config_word(bridge, PCI_BRIDGE_CONTROL,
+						&config);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#208: FILE: arch/ia64/pci/fixup.c:66:
+		printk(KERN_DEBUG "Boot video device is %s\n", pci_name(pdev));

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24038.commit.eef9ea5879cf25df99533e7735f0915e8ccc5d0d total: 4 errors, 7 warnings, 11 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24038.commit.eef9ea5879cf25df99533e7735f0915e8ccc5d0d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
