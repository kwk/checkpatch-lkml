WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch implements the inactive_clean list spoken of during the VM summit.

WARNING:TYPO_SPELLING: 'freeed' may be misspelled - perhaps 'freed'?
#28: 
The LRU tail pages will be unmapped and ready to free, but not freeed.
                                                               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Peter Zijlstra <a.p.zijlstra@chello.nl>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: mm/swap.c:112:
+	struct zone *zone = NULL;
+	if (PageClean(page) && PageLRU(page)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageClean>
#192: FILE: include/linux/mm_inline.h:56:
+		__ClearPageClean(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#221: FILE: include/linux/mmzone.h:403:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: include/linux/mmzone.h:404:
+int min_clean_kbytes_sysctl_handler(struct ctl_table *, int, struct file *,
+					void __user *, size_t *, loff_t *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: mm/page_alloc.c:160:
+^I^I        1 << PG_clean );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited before that close parenthesis ')'
#268: FILE: mm/page_alloc.c:160:
+		        1 << PG_clean );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#278: FILE: mm/page_alloc.c:396:
+			1 << PG_clean ))))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#288: FILE: mm/page_alloc.c:546:
+			1 << PG_clean ))))

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: mm/page_alloc.c:1473:
 			" high:%lukB"
+			" clean: %lukB"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: mm/page_alloc.c:1474:
+			" clean: %lukB"
+			" low: %lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: mm/page_alloc.c:1475:
+			" low: %lukB"
+			" high: %lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#329: FILE: mm/page_alloc.c:2351:
 			   "\n        high     %lu"
+			   "\n        clean    %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#330: FILE: mm/page_alloc.c:2352:
+			   "\n        clean    %lu"
+			   "\n        low      %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: mm/page_alloc.c:2353:
+			   "\n        low      %lu"
+			   "\n        high     %lu"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: mm/page_alloc.c:2797:
+int min_clean_kbytes_sysctl_handler(ctl_table *table, int write,
+	struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: mm/vmscan.c:634:
+static unsigned long shrink_list(unsigned long max_scan,
+				struct zone *zone, struct scan_control *sc,

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: mm/vmscan.c:637:
+^I^I^I       ^Ishrink_func_t shrink_func)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: mm/vmscan.c:637:
+^I^I^I       ^Ishrink_func_t shrink_func)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: mm/vmscan.c:708:
+static inline unsigned long shrink_inactive_list(unsigned long max_scan,
+		struct zone *zone, struct scan_control *sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: mm/vmscan.c:868:
+static unsigned long shrink_clean_page_list(struct list_head *page_list,
+		struct scan_control *sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: mm/vmscan.c:914:
+static inline unsigned long shrink_clean_list(unsigned long max_scan,
+		struct zone *zone, struct scan_control *sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: mm/vmscan.c:1359:
+	if (zone_watermark_ok(zone, order, zone->pages_low, 0, 0) &&
+			zone->nr_clean + zone->free_pages > zone->clean_high)

WARNING:TYPO_SPELLING: 'Minimun' may be misspelled - perhaps 'Minimum'?
#612: FILE: include/linux/sysctl.h:194:
+	VM_MIN_CLEAN_KBYTES=35, /* Minimun clean kilobytes to maintain */
 	                           ^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#612: FILE: include/linux/sysctl.h:194:
+	VM_MIN_CLEAN_KBYTES=35, /* Minimun clean kilobytes to maintain */
 	                   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#624: FILE: kernel/sysctl.c:71:
+extern int min_clean_kbytes;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#639: FILE: kernel/sysctl.c:862:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56454.commit.5a509de50cd8fccbfe609391065cf04caf0710a3 total: 6 errors, 20 warnings, 8 checks, 518 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.56454.commit.5a509de50cd8fccbfe609391065cf04caf0710a3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
