WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#53: 
 * on the current CPU.  The result is that noone is holding a spinlock
                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/dontdiff --minimal linux-2.6.18-rc4/Documentation/cpu-hotplug.txt working-2.6.18-rc4-stop_machine_no_preempt/Documentation/cpu-hotplug.txt

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#102: FILE: include/linux/module.h:20:
+#include <asm/atomic.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: include/linux/stop_machine.h:5:
+/* "Bogolock": flushes all preempted tasks, stop the entire machine,
+   disable interrupts.  This is a very heavy lock, which is equivalent

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#181: FILE: include/linux/stop_machine.h:7:
+   a lock is anything which doesn't sleep. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: kernel/sched.c:3253:
+	unsigned int i, j;
+	for (i = 0; i < 2; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: kernel/sched.c:3255:
+		const struct prio_array *arr = &rq->arrays[i];
+		for (j = 0; j < MAX_PRIO; j++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: kernel/sched.c:3257:
+			struct task_struct *t;
+			list_for_each_entry(t, &arr->queue[j], run_list) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: kernel/sched.c:3272:
+	if (preempt_count() & PREEMPT_ACTIVE)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#307: FILE: kernel/sched.c:3274:
+		return current;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#307: FILE: kernel/sched.c:3274:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: kernel/sched.c:3276:
+		struct task_struct *tsk = find_preempted_task(rq);
+		if (!tsk)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#328: FILE: kernel/sched.c:3370:
+	if (unlikely(next = flush_for_stop_machine(rq)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43482.commit.742727044adb05806a1b9d8af84e46e19afb5a1c total: 1 errors, 10 warnings, 2 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.43482.commit.742727044adb05806a1b9d8af84e46e19afb5a1c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
