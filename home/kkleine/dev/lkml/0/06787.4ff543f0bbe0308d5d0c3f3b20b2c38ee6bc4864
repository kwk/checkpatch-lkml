Use of uninitialized value $typo_fix in ucfirst at /home/kkleine/dev/linux/scripts/checkpatch.pl line 3363.
WARNING:TYPO_SPELLING: 'attrubites' may be misspelled - perhaps 'attributes'?
#40: 
> >     * show sensor attrubites only if hwmon is present
                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
> > + * FIXME make external vREF_mV be a module option, and use that as needed...

WARNING:TYPO_SPELLING: 'ingore' may be misspelled - perhaps 'ignore'?
#71: 
work fine, but obviously the line numbers changed so you should ingore those
                                                                ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/input/touchscreen/Kconfig:22:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#156: FILE: drivers/input/touchscreen/ads7846.c:177:
+static unsigned vREF_mV;

CHECK:CAMELCASE: Avoid CamelCase: <vREF_mV>
#156: FILE: drivers/input/touchscreen/ads7846.c:177:
+static unsigned vREF_mV;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: drivers/input/touchscreen/ads7846.c:277:
+#define SHOW(name,var,adjust) static ssize_t \
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: drivers/input/touchscreen/ads7846.c:277:
+#define SHOW(name,var,adjust) static ssize_t \
                      ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#251: FILE: drivers/input/touchscreen/ads7846.c:277:
+#define SHOW(name,var,adjust) static ssize_t \
 name ## _show(struct device *dev, struct device_attribute *attr, char *buf) \
 { \
+	struct ads7846 *ts = dev_get_drvdata(dev); \
 	ssize_t v = ads7846_read12_ser(dev, \
+			READ_12BIT_SER(var) | ADS_PD10_ALL_ON); \
 	if (v < 0) \
 		return v; \
+	return sprintf(buf, "%u\n", adjust(ts, v)); \
 } \
 static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: drivers/input/touchscreen/ads7846.c:289:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Celcius' may be misspelled - perhaps ''?
#270: FILE: drivers/input/touchscreen/ads7846.c:290:
+/* Sysfs conventions report temperatures in millidegrees Celcius.
                                                          ^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#275: FILE: drivers/input/touchscreen/ads7846.c:295:
+static inline unsigned null_adjust(struct ads7846 *ts, ssize_t v)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: drivers/input/touchscreen/ads7846.c:303:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#288: FILE: drivers/input/touchscreen/ads7846.c:308:
+static inline unsigned vaux_adjust(struct ads7846 *ts, ssize_t v)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#290: FILE: drivers/input/touchscreen/ads7846.c:310:
+	unsigned retval = v;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: drivers/input/touchscreen/ads7846.c:318:
+static inline unsigned vbatt_adjust(struct ads7846 *ts, ssize_t v)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: drivers/input/touchscreen/ads7846.c:320:
+	unsigned retval = vaux_adjust(ts, v);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: drivers/input/touchscreen/ads7846.c:331:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/input/touchscreen/ads7846.c:380:
+			dev_warn(&spi->dev,
+				"external vREF for ADS%d not specified\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#404: FILE: drivers/input/touchscreen/ads7846.c:424:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#476: FILE: drivers/input/touchscreen/ads7846.c:1007:
+	if (err != 0) {
+		goto err_free_irq;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/input/touchscreen/ads7846.c:1012:
+	dev_info(&spi->dev, "touchscreen%s, irq %d\n",
+			ts->hwmon ? " + hwmon" : "",

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06787.commit.4ff543f0bbe0308d5d0c3f3b20b2c38ee6bc4864 total: 3 errors, 12 warnings, 7 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.06787.commit.4ff543f0bbe0308d5d0c3f3b20b2c38ee6bc4864 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
