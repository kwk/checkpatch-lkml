WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#75: FILE: fs/gfs2/dir.c:1534:
+		 const struct gfs2_inum_host *inum, unsigned type)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#168: FILE: fs/gfs2/inode.c:153:
+struct inode *gfs2_inode_lookup(struct super_block *sb, struct gfs2_inum_host *inum, unsigned int type)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#236: FILE: fs/gfs2/inode.h:30:
+struct inode *gfs2_inode_lookup(struct super_block *sb, struct gfs2_inum_host *inum, unsigned type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/linux/gfs2_ondisk.h:511:
+extern void gfs2_inum_in(struct gfs2_inum_host *no, const void *buf);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: include/linux/gfs2_ondisk.h:512:
+extern void gfs2_inum_out(const struct gfs2_inum_host *no, void *buf);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13955.commit.f302697a4cc35ed0585484f73b2a224dfbeca73f total: 0 errors, 3 warnings, 2 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.13955.commit.f302697a4cc35ed0585484f73b2a224dfbeca73f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
