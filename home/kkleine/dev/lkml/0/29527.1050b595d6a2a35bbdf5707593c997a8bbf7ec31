WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Content-Disposition: attachment; filename=B0-helpers-for-custom-struct_files.patch

WARNING:CONST_STRUCT: struct file_operations should normally be const
#71: FILE: include/linux/file.h:70:
+struct file_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/file.h:73:
+extern struct file *alloc_file(struct vfsmount *, struct dentry *dentry,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#74: FILE: include/linux/file.h:73:
+extern struct file *alloc_file(struct vfsmount *, struct dentry *dentry,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: include/linux/file.h:74:
+extern struct file *alloc_file(struct vfsmount *, struct dentry *dentry,
+		mode_t mode, const struct file_operations *fop);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/file_table.c:144:
+struct file *alloc_file(struct vfsmount *mnt,  struct dentry *dentry,
+		mode_t mode, const struct file_operations *fop)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: fs/hugetlbfs/inode.c:783:
+	file = alloc_file(hugetlbfs_vfsmount, dentry,
+			FMODE_WRITE | FMODE_READ,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: mm/shmem.c:2474:
+	file = alloc_file(shm_mnt, dentry, FMODE_WRITE | FMODE_READ,
+				&shmem_file_operations);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#193: FILE: mm/shmem.c:2485:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: mm/tiny-shmem.c:77:
+	file = alloc_file(shm_mnt, dentry, FMODE_WRITE | FMODE_READ,
+			&ramfs_file_operations);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#240: FILE: mm/tiny-shmem.c:90:
+	iput(inode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: net/socket.c:351:
+	file = alloc_file(sock_mnt, dentry, FMODE_READ | FMODE_WRITE,
+			&socket_file_ops);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29527.commit.1050b595d6a2a35bbdf5707593c997a8bbf7ec31 total: 0 errors, 5 warnings, 7 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.29527.commit.1050b595d6a2a35bbdf5707593c997a8bbf7ec31 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
