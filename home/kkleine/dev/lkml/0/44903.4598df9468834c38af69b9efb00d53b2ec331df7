WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
[Net/IPv4]: UDP-Lite standalone support and shared UDP/-Lite socket structure.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: include/linux/udp.h:60:
+ * ^IFields specific to UDP-Lite.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: include/linux/udp.h:65:
+#define UDPLITE_BIT      0x1  ^I^I/* set by udplite proto init function */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: include/linux/udp.h:66:
+#define UDPLITE_SEND_CC  0x2  ^I^I/* set via udplite setsockopt         */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#80: FILE: include/linux/udp.h:75:
 }
+#define IS_UDPLITE(__sk) (udp_sk(__sk)->pcflag)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#87: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: net/ipv4/udplite.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#95: FILE: net/ipv4/udplite.c:4:
+ *  Version:    $Id: udplite.c,v 1.22 2006/08/22 13:01:52 gerrit Exp gerrit $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: net/ipv4/udplite.c:17:
+struct hlist_head ^Iudplite_hash[UDP_HTABLE_SIZE];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: net/ipv4/udplite.c:18:
+int    ^I^I^Iudplite_port_rover;$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#114: FILE: net/ipv4/udplite.c:23:
+				   struct hlist_head *, int *    );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#115: FILE: net/ipv4/udplite.c:24:
+static struct sock *__udp_lookup(u32 , u16, u32, u16, int, struct hlist_head *);
                                      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#117: FILE: net/ipv4/udplite.c:26:
+					u32, u32, struct hlist_head *     );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: net/ipv4/udplite.c:34:
+ * ^IDesignate sk as UDP-Lite socket$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#125: FILE: net/ipv4/udplite.c:34:
+/*
+ * 	Designate sk as UDP-Lite socket

WARNING:INLINE: plain inline is preferred over __inline__
#133: FILE: net/ipv4/udplite.c:42:
+static __inline__ int udplite_v4_get_port(struct sock *sk, unsigned short snum)

WARNING:INLINE: plain inline is preferred over __inline__
#138: FILE: net/ipv4/udplite.c:47:
+static __inline__ struct sock *udplite_v4_lookup(u32 saddr, u16 sport,

WARNING:INLINE: plain inline is preferred over __inline__
#144: FILE: net/ipv4/udplite.c:53:
+static __inline__ int udplite_v4_mcast_deliver(struct sk_buff *skb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: net/ipv4/udplite.c:54:
+static __inline__ int udplite_v4_mcast_deliver(struct sk_buff *skb,
+					struct udphdr *uh, u32 saddr, u32 daddr)

WARNING:INLINE: plain inline is preferred over __inline__
#150: FILE: net/ipv4/udplite.c:59:
+__inline__ int udplite_rcv(struct sk_buff *skb)

WARNING:INLINE: plain inline is preferred over __inline__
#155: FILE: net/ipv4/udplite.c:64:
+__inline__ void udplite_err(struct sk_buff *skb, u32 info)

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: net/ipv4/udplite.c:74:
+        /* In UDPv4 a zero checksum means that the transmitter generated no$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: net/ipv4/udplite.c:75:
+         * checksum. UDP-Lite (like IPv6) mandates checksums, hence packets$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: net/ipv4/udplite.c:76:
+         * with a zero checksum field are illegal.                            */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#167: FILE: net/ipv4/udplite.c:76:
+         * with a zero checksum field are illegal.                            */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: net/ipv4/udplite.c:79:
+^I                "(%d.%d.%d.%d:%d -> %d.%d.%d.%d:%d)\n", NIPQUAD(saddr),$

WARNING:SPLIT_STRING: quoted string split across lines
#170: FILE: net/ipv4/udplite.c:79:
+		LIMIT_NETDEBUG(KERN_DEBUG "UDPLITE: zeroed csum field"
+	                "(%d.%d.%d.%d:%d -> %d.%d.%d.%d:%d)\n", NIPQUAD(saddr),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that close parenthesis ')'
#171: FILE: net/ipv4/udplite.c:80:
+			ntohs(uh->source), NIPQUAD(daddr), ntohs(uh->dest)    );

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: net/ipv4/udplite.c:84:
+        UDP_SKB_CB(skb)->partial_cov = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: net/ipv4/udplite.c:84:
+        UDP_SKB_CB(skb)->partial_cov = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: net/ipv4/udplite.c:85:
+        cscov = ntohs(uh->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: net/ipv4/udplite.c:85:
+        cscov = ntohs(uh->len);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#178: FILE: net/ipv4/udplite.c:87:
+	if (cscov == 0)		 /* Indicates that full coverage is required. */
[...]
+	else if (cscov < 8  || cscov > len) {
[...]
+	} else if (cscov < len)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#182: FILE: net/ipv4/udplite.c:91:
+		/*
+		 * Coverage length violates RFC 3828: log and discard silently.

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: net/ipv4/udplite.c:94:
+		LIMIT_NETDEBUG(KERN_DEBUG "UDPLITE: bad csum coverage %d/%d "
+			"(%d.%d.%d.%d:%d -> %d.%d.%d.%d:%d)\n", cscov, len,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#187: FILE: net/ipv4/udplite.c:96:
+			NIPQUAD(daddr), ntohs(uh->dest)                       );

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: net/ipv4/udplite.c:100:
+        ^IUDP_SKB_CB(skb)->partial_cov = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: net/ipv4/udplite.c:100:
+        ^IUDP_SKB_CB(skb)->partial_cov = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: net/ipv4/udplite.c:100:
+        ^IUDP_SKB_CB(skb)->partial_cov = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: net/ipv4/udplite.c:102:
+        UDP_SKB_CB(skb)->cscov = cscov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: net/ipv4/udplite.c:102:
+        UDP_SKB_CB(skb)->cscov = cscov;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#196: FILE: net/ipv4/udplite.c:105:
+	/*
+	 * Initialise pseudo-header for checksum computation.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#219: FILE: net/ipv4/udplite.c:128:
+		/*
+		 * Only one fragment on the socket.

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#228: FILE: net/ipv4/udplite.c:137:
+						 (cscov > len)? len : cscov, 0);
 						              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: net/ipv4/udplite.c:151:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#274: FILE: net/ipv4/udplite.c:183:
+	printk(KERN_ERR "udplite4_register: Cannot add UDP-Lite protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udplite4_register', this function's name, in a string
#274: FILE: net/ipv4/udplite.c:183:
+	printk(KERN_ERR "udplite4_register: Cannot add UDP-Lite protocol\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#278: FILE: net/ipv4/udplite.c:187:
+static struct file_operations udplite4_seq_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INLINE: plain inline is preferred over __inline__
#288: FILE: net/ipv4/udplite.c:197:
+__inline__ int __init udplite4_proc_init(void)

WARNING:INLINE: plain inline is preferred over __inline__
#293: FILE: net/ipv4/udplite.c:202:
+__inline__ void udplite4_proc_exit(void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#299: FILE: net/ipv4/udplite.c:208:
+EXPORT_SYMBOL(udplite_hash);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#300: FILE: net/ipv4/udplite.c:209:
+EXPORT_SYMBOL(udplite_prot);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#307: FILE: include/net/udplite.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: include/net/udplite.h:11:
+extern struct proto ^I^Iudplite_prot;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: include/net/udplite.h:12:
+extern struct hlist_head ^Iudplite_hash[UDP_HTABLE_SIZE];$

WARNING:INLINE: plain inline is preferred over __inline__
#326: FILE: include/net/udplite.h:20:
+static __inline__ int udplite_getfrag(void *from, char *to, int  offset,

CHECK:SPACING: No space is necessary after a cast
#329: FILE: include/net/udplite.h:23:
+	return memcpy_fromiovecend(to, (struct iovec *) from, offset, len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: include/net/udplite.h:27:
+ *  ^Inet/ipv4/udplite.c$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: include/net/udplite.h:29:
+extern void	udplite4_register(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: include/net/udplite.h:31:
+extern int	udplite4_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: include/net/udplite.h:32:
+extern void	udplite4_proc_exit(void);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44903.commit.4598df9468834c38af69b9efb00d53b2ec331df7 total: 14 errors, 39 warnings, 8 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44903.commit.4598df9468834c38af69b9efb00d53b2ec331df7 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
