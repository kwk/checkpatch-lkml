WARNING:TYPO_SPELLING: 'inlclude' may be misspelled - perhaps 'include'?
#39: 
It might also inlclude parts from other subsystem (like network related
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#115: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: include/linux/kevent.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: include/linux/kevent.h:2:
+ * ^Ikevent.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: include/linux/kevent.h:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: include/linux/kevent.h:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: include/linux/kevent.h:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#138: FILE: include/linux/kevent.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: include/linux/kevent.h:40:
+#define KEVENT_SOCKET ^I^I0$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#216: FILE: include/linux/kevent.h:97:
+struct kevent_id
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#221: FILE: include/linux/kevent.h:102:
+struct ukevent
+{

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#222: FILE: include/linux/kevent.h:103:
+	struct kevent_id	id;			/* Id of this request, e.g. socket number, file descriptor and so on... */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 131 exceeds 100 columns
#223: FILE: include/linux/kevent.h:104:
+	__u32			type;			/* Event type, e.g. KEVENT_SOCK, KEVENT_INODE, KEVENT_TIMER and so on... */

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#224: FILE: include/linux/kevent.h:105:
+	__u32			event;			/* Event itself, e.g. SOCK_ACCEPT, INODE_CREATED, TIMER_FIRED... */

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#227: FILE: include/linux/kevent.h:108:
+	__u32			ret_data[2];		/* Event return data. Event originator fills it with anything it likes. */

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#229: FILE: include/linux/kevent.h:110:
+		__u32		user[2];		/* User's data. It is not used, just copied to/from user. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: include/linux/kevent.h:115:
+#define^IKEVENT_CTL_ADD ^I^I0$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#257: FILE: include/linux/kevent.h:138:
+typedef int (* kevent_callback_t)(struct kevent *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#257: FILE: include/linux/kevent.h:138:
+typedef int (* kevent_callback_t)(struct kevent *);
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#268: FILE: include/linux/kevent.h:149:
+struct kevent
+{

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#270: FILE: include/linux/kevent.h:151:
+	spinlock_t		ulock;			/* This lock protects ukevent manipulations, e.g. ret_flags changes. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: include/linux/kevent.h:162:
+^Ivoid^I^I^I*priv;^I^I^I/* Private data for different storages. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: include/linux/kevent.h:163:
+^I^I^I^I^I^I^I * poll()/select storage has a list of wait_queue_t containers $

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#282: FILE: include/linux/kevent.h:163:
+							 * poll()/select storage has a list of wait_queue_t containers 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#292: FILE: include/linux/kevent.h:173:
+struct kevent_user
+{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#293: FILE: include/linux/kevent.h:174:
+	struct list_head	kevent_list[KEVENT_HASH_MASK+1];
 	                	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#294: FILE: include/linux/kevent.h:175:
+	spinlock_t		kevent_lock;

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#299: FILE: include/linux/kevent.h:180:
+	spinlock_t 		ready_lock;		/* Protects all manipulations with ready queue. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: include/linux/kevent.h:180:
+^Ispinlock_t ^I^Iready_lock;^I^I/* Protects all manipulations with ready queue. */$

WARNING:LONG_LINE_COMMENT: line length of 126 exceeds 100 columns
#303: FILE: include/linux/kevent.h:184:
+	struct mutex		ctl_mutex;		/* Protects against simultaneous kevent_user control manipulations. */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#304: FILE: include/linux/kevent.h:185:
+	struct mutex		wait_mutex;		/* Protects against simultaneous kevent_user waits. */

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#307: FILE: include/linux/kevent.h:188:
+	atomic_t		refcnt;			/* Reference counter, increased for each new kevent. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: include/linux/kevent.h:189:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#309: FILE: include/linux/kevent.h:190:
+	unsigned long		*pring;			/* Array of pages forming mapped ring buffer */
 	             		 ^^^^^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#309: FILE: include/linux/kevent.h:190:
+	unsigned long		*pring;			/* Array of pages forming mapped ring buffer */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: include/linux/kevent.h:209:
+void kevent_storage_ready(struct kevent_storage *st, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: include/linux/kevent.h:210:
+void kevent_storage_ready(struct kevent_storage *st, 
+		kevent_callback_t ready_callback, u32 event);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#345: FILE: include/linux/kevent.h:226:
+}
+static inline void kevent_inode_notify_parent(struct dentry *dentry, u32 event)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#348: FILE: include/linux/kevent.h:229:
+}
+static inline void kevent_inode_remove(struct inode *inode)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#362: FILE: include/linux/kevent.h:243:
+}
+#define sock_async(__sk)	({ (void)__sk; 0; })

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#368: FILE: include/linux/kevent.h:249:
+	u->wait_num = u->im_num = u->total = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: include/linux/kevent.h:251:
+}
+static inline void kevent_user_stat_print(struct kevent_user *u)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: include/linux/kevent.h:253:
+^Ipr_debug("%s: u=%p, wait=%lu, immediately=%lu, total=%lu.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: include/linux/kevent.h:254:
+	pr_debug("%s: u=%p, wait=%lu, immediately=%lu, total=%lu.\n", 
+			__func__, u, u->wait_num, u->im_num, u->total);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#375: FILE: include/linux/kevent.h:256:
+}
+static inline void kevent_user_stat_increase_im(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#379: FILE: include/linux/kevent.h:260:
+}
+static inline void kevent_user_stat_increase_wait(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#383: FILE: include/linux/kevent.h:264:
+}
+static inline void kevent_user_stat_increase_total(struct kevent_user *u)

CHECK:SPACING: No space is necessary after a cast
#388: FILE: include/linux/kevent.h:269:
+#define kevent_user_stat_print(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#388: FILE: include/linux/kevent.h:269:
+#define kevent_user_stat_print(u)		({ (void) u;})
                                  		           ^

CHECK:SPACING: No space is necessary after a cast
#389: FILE: include/linux/kevent.h:270:
+#define kevent_user_stat_init(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#389: FILE: include/linux/kevent.h:270:
+#define kevent_user_stat_init(u)		({ (void) u;})
                                 		           ^

CHECK:SPACING: No space is necessary after a cast
#390: FILE: include/linux/kevent.h:271:
+#define kevent_user_stat_increase_im(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#390: FILE: include/linux/kevent.h:271:
+#define kevent_user_stat_increase_im(u)		({ (void) u;})
                                        		           ^

CHECK:SPACING: No space is necessary after a cast
#391: FILE: include/linux/kevent.h:272:
+#define kevent_user_stat_increase_wait(u)	({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#391: FILE: include/linux/kevent.h:272:
+#define kevent_user_stat_increase_wait(u)	({ (void) u;})
                                          	           ^

CHECK:SPACING: No space is necessary after a cast
#392: FILE: include/linux/kevent.h:273:
+#define kevent_user_stat_increase_total(u)	({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#392: FILE: include/linux/kevent.h:273:
+#define kevent_user_stat_increase_total(u)	({ (void) u;})
                                           	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#403: FILE: include/linux/kevent_storage.h:1:
+#ifndef __KEVENT_STORAGE_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#407: FILE: include/linux/kevent_storage.h:5:
+struct kevent_storage
+{

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#408: FILE: include/linux/kevent_storage.h:6:
+	void			*origin;		/* Originator's pointer, e.g. struct sock or struct file. Can be NULL. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#423: FILE: include/linux/syscalls.h:600:
+asmlinkage long sys_aio_recv(int ctl_fd, int s, void __user *buf, size_t size, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#424: FILE: include/linux/syscalls.h:601:
+asmlinkage long sys_aio_send(int ctl_fd, int s, void __user *buf, size_t size, unsigned flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: include/linux/syscalls.h:602:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: include/linux/syscalls.h:603:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max, 
+		unsigned int timeout, void __user *buf, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#426: FILE: include/linux/syscalls.h:603:
+		unsigned int timeout, void __user *buf, unsigned flags);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#460: FILE: kernel/kevent/Kconfig:1:
+config KEVENT
+	bool "Kernel event notification mechanism"
+	help
+	  This option enables event queue mechanism.
+	  It can be used as replacement for poll()/select(), AIO callback invocations,
+	  advanced timer notifications and other kernel object status changes.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#478: FILE: kernel/kevent/Kconfig:19:
+config KEVENT_SOCKET
+	bool "Kernel event notifications for sockets"
+	depends on NET && KEVENT
+	help
+	  This option enables notifications through KEVENT subsystem of 
+	  sockets operations, like new packet receiving conditions, ready for accept
+  	  conditions and so on.
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: kernel/kevent/Kconfig:23:
+^I  This option enables notifications through KEVENT subsystem of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: kernel/kevent/Kconfig:26:
+^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#486: FILE: kernel/kevent/Kconfig:27:
+config KEVENT_INODE
+	bool "Kernel event notifications for inodes"
+	depends on KEVENT
+	help
+	  This option enables notifications through KEVENT subsystem of 
+	  inode operations, like file creation, removal and so on.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: kernel/kevent/Kconfig:31:
+^I  This option enables notifications through KEVENT subsystem of $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#493: FILE: kernel/kevent/Kconfig:34:
+config KEVENT_TIMER
+	bool "Kernel event notifications for timers"
+	depends on KEVENT
+	help
+	  This option allows to use timers through KEVENT subsystem.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#499: FILE: kernel/kevent/Kconfig:40:
+config KEVENT_POLL
+	bool "Kernel event notifications for poll()/select()"
+	depends on KEVENT
+	help
+	  This option allows to use kevent subsystem for poll()/select() notifications.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#505: FILE: kernel/kevent/Kconfig:46:
+config KEVENT_NAIO
+	bool "Network asynchronous IO"
+	depends on KEVENT && KEVENT_SOCKET
+	help
+	  This option enables kevent based network asynchronous IO subsystem.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#511: FILE: kernel/kevent/Kconfig:52:
+config KEVENT_AIO
+	bool "Asynchronous IO"
+	depends on KEVENT
+	help
+	  This option allows to use kevent subsystem for AIO operations.
+	  AIO read is currently supported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#536: FILE: kernel/kevent/kevent.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: kernel/kevent/kevent.c:2:
+ * ^Ikevent.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/kevent/kevent.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: kernel/kevent/kevent.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#553: FILE: kernel/kevent/kevent.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#554: FILE: kernel/kevent/kevent.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: kernel/kevent/kevent.c:49:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: kernel/kevent/kevent.c:61:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: kernel/kevent/kevent.c:125:
+ * Dequeue kevent from origin's queue. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#661: FILE: kernel/kevent/kevent.c:126:
+ * It does not decrease origin's reference counter in any way $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#693: FILE: kernel/kevent/kevent.c:158:
+		err = (k->event.ret_flags & (KEVENT_RET_BROKEN|KEVENT_RET_DONE));
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: kernel/kevent/kevent.c:166:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: kernel/kevent/kevent.c:181:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: kernel/kevent/kevent.c:190:
+void kevent_storage_ready(struct kevent_storage *st, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: kernel/kevent/kevent.c:191:
+void kevent_storage_ready(struct kevent_storage *st, 
+		kevent_callback_t ready_callback, u32 event)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: kernel/kevent/kevent.c:234:
+^Ikevent_cache = kmem_cache_create("kevent_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#770: FILE: kernel/kevent/kevent.c:235:
+	kevent_cache = kmem_cache_create("kevent_cache", 
+			sizeof(struct kevent), 0, 0, NULL, NULL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#774: FILE: kernel/kevent/kevent.c:239:
+	for (i=0; i<ARRAY_SIZE(kevent_registered_callbacks); ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#774: FILE: kernel/kevent/kevent.c:239:
+	for (i=0; i<ARRAY_SIZE(kevent_registered_callbacks); ++i) {
 	           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#777: FILE: kernel/kevent/kevent.c:242:
+		c->callback = c->enqueue = c->dequeue = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: kernel/kevent/kevent.c:244:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#790: FILE: kernel/kevent/kevent_user.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#791: FILE: kernel/kevent/kevent_user.c:2:
+ * ^Ikevent_user.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: kernel/kevent/kevent_user.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: kernel/kevent/kevent_user.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#807: FILE: kernel/kevent/kevent_user.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#808: FILE: kernel/kevent/kevent_user.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#824: FILE: kernel/kevent/kevent_user.c:35:
+#include <asm/io.h>

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#827: FILE: kernel/kevent/kevent_user.c:38:
+static char kevent_name[] = "kevent";

WARNING:CONST_STRUCT: struct file_operations should normally be const
#835: FILE: kernel/kevent/kevent_user.c:46:
+static struct file_operations kevent_user_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: kernel/kevent/kevent_user.c:54:
+static int kevent_get_sb(struct file_system_type *fs_type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: kernel/kevent/kevent_user.c:55:
+static int kevent_get_sb(struct file_system_type *fs_type, 
+		int flags, const char *dev_name, void *data, struct vfsmount *mnt)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: kernel/kevent/kevent_user.c:58:
+^Ireturn get_sb_pseudo(fs_type, kevent_name, NULL, 0xabcdef, mnt);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: kernel/kevent/kevent_user.c:73:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: kernel/kevent/kevent_user.c:86:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#876: FILE: kernel/kevent/kevent_user.c:87:
+	idx = (unsigned int *)u->pring[0];
 	                         ^^^^^

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#882: FILE: kernel/kevent/kevent_user.c:93:
+ * so we reuse 4 bytes at the begining of the first page to store index.
                               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#885: FILE: kernel/kevent/kevent_user.c:96:
+#define KEVENTS_ON_PAGE PAGE_SIZE/sizeof(struct ukevent)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#885: FILE: kernel/kevent/kevent_user.c:96:
+#define KEVENTS_ON_PAGE PAGE_SIZE/sizeof(struct ukevent)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#894: FILE: kernel/kevent/kevent_user.c:105:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#895: FILE: kernel/kevent/kevent_user.c:106:
+	idx_ptr = (unsigned int *)k->user->pring[0];
 	                                   ^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#898: FILE: kernel/kevent/kevent_user.c:109:
+	pidx = idx/KEVENTS_ON_PAGE;
 	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#899: FILE: kernel/kevent/kevent_user.c:110:
+	off = idx%KEVENTS_ON_PAGE;
 	         ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#902: FILE: kernel/kevent/kevent_user.c:113:
+		ukev = (struct ukevent *)(k->user->pring[pidx] + sizeof(unsigned int));
 		                                   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#904: FILE: kernel/kevent/kevent_user.c:115:
+		ukev = (struct ukevent *)(k->user->pring[pidx]);
 		                                   ^^^^^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#919: FILE: kernel/kevent/kevent_user.c:130:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#919: FILE: kernel/kevent/kevent_user.c:130:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#919: FILE: kernel/kevent/kevent_user.c:130:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                                                                                        ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#921: FILE: kernel/kevent/kevent_user.c:132:
+	u->pring = kmalloc(pnum * sizeof(unsigned long), GFP_KERNEL);
 	   ^^^^^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#921: FILE: kernel/kevent/kevent_user.c:132:
+	u->pring = kmalloc(pnum * sizeof(unsigned long), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#922: FILE: kernel/kevent/kevent_user.c:133:
+	if (!u->pring)
 	        ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#925: FILE: kernel/kevent/kevent_user.c:136:
+	for (i=0; i<pnum; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#925: FILE: kernel/kevent/kevent_user.c:136:
+	for (i=0; i<pnum; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#926: FILE: kernel/kevent/kevent_user.c:137:
+		u->pring[i] = __get_free_page(GFP_KERNEL);
 		   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#927: FILE: kernel/kevent/kevent_user.c:138:
+		if (!u->pring)
 		        ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#941: FILE: kernel/kevent/kevent_user.c:152:
+	for (i=0; i<pnum; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#941: FILE: kernel/kevent/kevent_user.c:152:
+	for (i=0; i<pnum; ++i)
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#942: FILE: kernel/kevent/kevent_user.c:153:
+		free_page(u->pring[i]);
 		             ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#944: FILE: kernel/kevent/kevent_user.c:155:
+	kfree(u->pring);
 	         ^^^^^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#953: FILE: kernel/kevent/kevent_user.c:164:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#953: FILE: kernel/kevent/kevent_user.c:164:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#953: FILE: kernel/kevent/kevent_user.c:164:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                                                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: kernel/kevent/kevent_user.c:165:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#955: FILE: kernel/kevent/kevent_user.c:166:
+	for (i=0; i<pnum; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#955: FILE: kernel/kevent/kevent_user.c:166:
+	for (i=0; i<pnum; ++i)
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#956: FILE: kernel/kevent/kevent_user.c:167:
+		free_page(u->pring[i]);
 		             ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#958: FILE: kernel/kevent/kevent_user.c:169:
+	kfree(u->pring);
 	         ^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*u)...) over kzalloc(sizeof(struct kevent_user)...)
#966: FILE: kernel/kevent/kevent_user.c:177:
+	u = kzalloc(sizeof(struct kevent_user), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#975: FILE: kernel/kevent/kevent_user.c:186:
+	for (i=0; i<ARRAY_SIZE(u->kevent_list); ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#975: FILE: kernel/kevent/kevent_user.c:186:
+	for (i=0; i<ARRAY_SIZE(u->kevent_list); ++i)
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#978: FILE: kernel/kevent/kevent_user.c:189:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: kernel/kevent/kevent_user.c:208:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: kernel/kevent/kevent_user.c:213:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1023: FILE: kernel/kevent/kevent_user.c:234:
+	int pnum = size/PAGE_SIZE, i;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1027: FILE: kernel/kevent/kevent_user.c:238:
+	psize = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct ukevent) + sizeof(unsigned int), PAGE_SIZE);
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1029: FILE: kernel/kevent/kevent_user.c:240:
+	if (size + vma->vm_pgoff*PAGE_SIZE != psize)
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1037: FILE: kernel/kevent/kevent_user.c:248:
+	for (i=0; i<pnum; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1037: FILE: kernel/kevent/kevent_user.c:248:
+	for (i=0; i<pnum; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1038: FILE: kernel/kevent/kevent_user.c:249:
+		if (remap_pfn_range(vma, start, virt_to_phys((void *)u->pring[i+vma->vm_pgoff]), PAGE_SIZE,
 		                                                        ^^^^^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1038: FILE: kernel/kevent/kevent_user.c:249:
+		if (remap_pfn_range(vma, start, virt_to_phys((void *)u->pring[i+vma->vm_pgoff]), PAGE_SIZE,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1038: FILE: kernel/kevent/kevent_user.c:249:
+		if (remap_pfn_range(vma, start, virt_to_phys((void *)u->pring[i+vma->vm_pgoff]), PAGE_SIZE,
 		                                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: kernel/kevent/kevent_user.c:250:
+		if (remap_pfn_range(vma, start, virt_to_phys((void *)u->pring[i+vma->vm_pgoff]), PAGE_SIZE,
+					vma->vm_page_prot))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1047: FILE: kernel/kevent/kevent_user.c:258:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: kernel/kevent/kevent_user.c:262:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1093: FILE: kernel/kevent/kevent_user.c:304:
+ * Remove kevent from user's list of all events, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: kernel/kevent/kevent_user.c:340:
+static struct kevent *__kevent_search(struct list_head *head, struct ukevent *uk, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: kernel/kevent/kevent_user.c:341:
+static struct kevent *__kevent_search(struct list_head *head, struct ukevent *uk, 
+		struct kevent_user *u)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: kernel/kevent/kevent_user.c:345:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: kernel/kevent/kevent_user.c:349:
+^I^I^I^Ik->event.id.raw[0] == uk->id.raw[0] && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: kernel/kevent/kevent_user.c:349:
+		if (k->event.user[0] == uk->user[0] && k->event.user[1] == uk->user[1] &&
+				k->event.id.raw[0] == uk->id.raw[0] && 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1147: FILE: kernel/kevent/kevent_user.c:358:
+	return (found)?k:NULL;
 	              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1147: FILE: kernel/kevent/kevent_user.c:358:
+	return (found)?k:NULL;
 	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: kernel/kevent/kevent_user.c:367:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: kernel/kevent/kevent_user.c:380:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1201: FILE: kernel/kevent/kevent_user.c:412:
+	for (i=0; i<KEVENT_HASH_MASK+1; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1201: FILE: kernel/kevent/kevent_user.c:412:
+	for (i=0; i<KEVENT_HASH_MASK+1; ++i) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1201: FILE: kernel/kevent/kevent_user.c:412:
+	for (i=0; i<KEVENT_HASH_MASK+1; ++i) {
 	                            ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ukev)...) over kmalloc(sizeof(struct ukevent)...)
#1216: FILE: kernel/kevent/kevent_user.c:427:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1216: FILE: kernel/kevent/kevent_user.c:427:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: kernel/kevent/kevent_user.c:445:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1240: FILE: kernel/kevent/kevent_user.c:451:
+			for (i=0; i<num; ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1240: FILE: kernel/kevent/kevent_user.c:451:
+			for (i=0; i<num; ++i) {
 			           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1245: FILE: kernel/kevent/kevent_user.c:456:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1252: FILE: kernel/kevent/kevent_user.c:463:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1252: FILE: kernel/kevent/kevent_user.c:463:
+	for (i=0; i<num; ++i) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1281: FILE: kernel/kevent/kevent_user.c:492:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1287: FILE: kernel/kevent/kevent_user.c:498:
+			for (i=0; i<num; ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1287: FILE: kernel/kevent/kevent_user.c:498:
+			for (i=0; i<num; ++i) {
 			           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1292: FILE: kernel/kevent/kevent_user.c:503:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1299: FILE: kernel/kevent/kevent_user.c:510:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1299: FILE: kernel/kevent/kevent_user.c:510:
+	for (i=0; i<num; ++i) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1366: FILE: kernel/kevent/kevent_user.c:577:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: kernel/kevent/kevent_user.c:584:
+ * Copy all ukevents from userspace, allocate kevent for each one $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: kernel/kevent/kevent_user.c:585:
+ * and add them into appropriate kevent_storages, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: kernel/kevent/kevent_user.c:587:
+ * If something goes wrong, all events will be dequeued and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1377: FILE: kernel/kevent/kevent_user.c:588:
+ * negative error will be returned. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: kernel/kevent/kevent_user.c:589:
+ * On success number of finished events is returned and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: kernel/kevent/kevent_user.c:590:
+ * Array of finished events (struct ukevent) will be placed behind $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1380: FILE: kernel/kevent/kevent_user.c:591:
+ * kevent_user_control structure. User must run through that array and check $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1400: FILE: kernel/kevent/kevent_user.c:611:
+			for (i=0; i<num; ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1400: FILE: kernel/kevent/kevent_user.c:611:
+			for (i=0; i<num; ++i) {
 			           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1402: FILE: kernel/kevent/kevent_user.c:613:
+				if (err) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1405: FILE: kernel/kevent/kevent_user.c:616:
+						memcpy(&ukev[rnum], &ukev[i], sizeof(struct ukevent));

CHECK:BRACES: Unbalanced braces around else statement
#1407: FILE: kernel/kevent/kevent_user.c:618:
+				} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1410: FILE: kernel/kevent/kevent_user.c:621:
+			if (copy_to_user(orig, ukev, rnum*sizeof(struct ukevent)))
 			                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1417: FILE: kernel/kevent/kevent_user.c:628:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1417: FILE: kernel/kevent/kevent_user.c:628:
+	for (i=0; i<num; ++i) {
 	           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1425: FILE: kernel/kevent/kevent_user.c:636:
+		if (err) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1433: FILE: kernel/kevent/kevent_user.c:644:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1456: FILE: kernel/kevent/kevent_user.c:667:
+static int kevent_user_wait(struct file *file, struct kevent_user *u, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1457: FILE: kernel/kevent/kevent_user.c:668:
+^I^Iunsigned int min_nr, unsigned int max_nr, unsigned int timeout, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1457: FILE: kernel/kevent/kevent_user.c:668:
+static int kevent_user_wait(struct file *file, struct kevent_user *u, 
+		unsigned int min_nr, unsigned int max_nr, unsigned int timeout, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: kernel/kevent/kevent_user.c:676:
+^I^I^Iwait_event_interruptible_timeout(u->wait, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: kernel/kevent/kevent_user.c:677:
+			wait_event_interruptible_timeout(u->wait, 
+				u->ready_num >= min_nr, msecs_to_jiffies(timeout));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1468: FILE: kernel/kevent/kevent_user.c:679:
+^I^I^Iwait_event_interruptible_timeout(u->wait, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: kernel/kevent/kevent_user.c:680:
+			wait_event_interruptible_timeout(u->wait, 
+					u->ready_num > 0, msecs_to_jiffies(1000));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1471: FILE: kernel/kevent/kevent_user.c:682:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1474: FILE: kernel/kevent/kevent_user.c:685:
+^I^Iif (copy_to_user(buf + num*sizeof(struct ukevent), $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1474: FILE: kernel/kevent/kevent_user.c:685:
+		if (copy_to_user(buf + num*sizeof(struct ukevent), 
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1475: FILE: kernel/kevent/kevent_user.c:686:
+		if (copy_to_user(buf + num*sizeof(struct ukevent), 
+					&k->event, sizeof(struct ukevent))) {

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1491: FILE: kernel/kevent/kevent_user.c:702:
+	return (cerr)?cerr:num;
 	             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1491: FILE: kernel/kevent/kevent_user.c:702:
+	return (cerr)?cerr:num;
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: kernel/kevent/kevent_user.c:734:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1535: FILE: kernel/kevent/kevent_user.c:746:
+static int kevent_ctl_process(struct file *file, unsigned int cmd, unsigned int num, void __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1562: FILE: kernel/kevent/kevent_user.c:773:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min_nr, unsigned int max_nr,
+		unsigned int timeout, void __user *buf, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1562: FILE: kernel/kevent/kevent_user.c:773:
+		unsigned int timeout, void __user *buf, unsigned flags)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1604: FILE: kernel/kevent/kevent_user.c:815:
+static int __devinit kevent_user_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1608: FILE: kernel/kevent/kevent_user.c:819:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1612: FILE: kernel/kevent/kevent_user.c:823:
+		panic("%s: failed to register filesystem: err=%d.\n",
+			       kevent_name, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1616: FILE: kernel/kevent/kevent_user.c:827:
+^I^Ipanic("%s: failed to mount silesystem: err=%ld.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1617: FILE: kernel/kevent/kevent_user.c:828:
+		panic("%s: failed to mount silesystem: err=%ld.\n", 
+				kevent_name, PTR_ERR(kevent_mnt));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1618: FILE: kernel/kevent/kevent_user.c:829:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1621: FILE: kernel/kevent/kevent_user.c:832:
+^I^Iprintk(KERN_ERR "Failed to register \"%s\" char device: err=%d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1621: FILE: kernel/kevent/kevent_user.c:832:
+		printk(KERN_ERR "Failed to register \"%s\" char device: err=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1622: FILE: kernel/kevent/kevent_user.c:833:
+		printk(KERN_ERR "Failed to register \"%s\" char device: err=%d.\n", 
+				kevent_name, kevent_user_major);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: kernel/kevent/kevent_user.c:839:
+^I^Iprintk(KERN_ERR "Failed to register \"%s\" class: err=%ld.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1628: FILE: kernel/kevent/kevent_user.c:839:
+		printk(KERN_ERR "Failed to register \"%s\" class: err=%ld.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1629: FILE: kernel/kevent/kevent_user.c:840:
+		printk(KERN_ERR "Failed to register \"%s\" class: err=%ld.\n", 
+				kevent_name, PTR_ERR(kevent_user_class));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1634: FILE: kernel/kevent/kevent_user.c:845:
+^Idev = class_device_create(kevent_user_class, NULL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1635: FILE: kernel/kevent/kevent_user.c:846:
+	dev = class_device_create(kevent_user_class, NULL, 
+			MKDEV(kevent_user_major, 0), NULL, kevent_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: kernel/kevent/kevent_user.c:848:
+^I^Iprintk(KERN_ERR "Failed to create %d.%d class device in \"%s\" class: err=%ld.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1637: FILE: kernel/kevent/kevent_user.c:848:
+		printk(KERN_ERR "Failed to create %d.%d class device in \"%s\" class: err=%ld.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: kernel/kevent/kevent_user.c:849:
+		printk(KERN_ERR "Failed to create %d.%d class device in \"%s\" class: err=%ld.\n", 
+				kevent_user_major, 0, kevent_name, PTR_ERR(dev));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1643: FILE: kernel/kevent/kevent_user.c:854:
+	printk("KEVENT subsystem: chardev helper: major=%d.\n", kevent_user_major);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1655: FILE: kernel/kevent/kevent_user.c:866:
+static void __devexit kevent_user_fini(void)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.51787.commit.4d0ee581f356592346f9929a7244dc926c007e96 total: 108 errors, 69 warnings, 63 checks, 1561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.51787.commit.4d0ee581f356592346f9929a7244dc926c007e96 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
