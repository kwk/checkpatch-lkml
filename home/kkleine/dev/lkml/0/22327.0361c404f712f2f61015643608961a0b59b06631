WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#35: 
writes all of the data for a backup block, and then blocks untill
                                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#67: FILE: fs/fat/fatent.c:347:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#70: FILE: fs/fat/fatent.c:350:
+			       int nr_bhs , int wait)
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#79: FILE: fs/fat/fatent.c:357:
+	if (sb->s_flags & MS_SYNCHRONOUS )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#81: FILE: fs/fat/fatent.c:359:
+	c_bh = kmalloc(nr_bhs*(sbi->fats) , GFP_KERNEL);
 	                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#81: FILE: fs/fat/fatent.c:359:
+	c_bh = kmalloc(nr_bhs*(sbi->fats) , GFP_KERNEL);
 	                                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->fats
#81: FILE: fs/fat/fatent.c:359:
+	c_bh = kmalloc(nr_bhs*(sbi->fats) , GFP_KERNEL);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#82: FILE: fs/fat/fatent.c:360:
+	if (NULL == c_bh) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#83: FILE: fs/fat/fatent.c:361:
+		printk(KERN_CRIT "not enough memory to store pointers to FAT blocks, will not sync. Possible data loss\n");

ERROR:SPACING: space prohibited before that close parenthesis ')'
#97: FILE: fs/fat/fatent.c:369:
+		for (n = 0 ; n < nr_bhs ;  n++ ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#98: FILE: fs/fat/fatent.c:370:
+			c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 			          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#98: FILE: fs/fat/fatent.c:370:
+			c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 			             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: fs/fat/fatent.c:370:
+			c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 			                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#100: FILE: fs/fat/fatent.c:372:
+			if (!c_bh[(copy-1)*nr_bhs+n]) {
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#100: FILE: fs/fat/fatent.c:372:
+			if (!c_bh[(copy-1)*nr_bhs+n]) {
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#100: FILE: fs/fat/fatent.c:372:
+			if (!c_bh[(copy-1)*nr_bhs+n]) {
 			                         ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);
 				                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);
 				                                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);
 				                                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);
 				                                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#101: FILE: fs/fat/fatent.c:373:
+				printk("fat: not enough memory for all blocks , syncing at %d\n" ,(copy-1)*nr_bhs+n);
 				                                                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );
 				                                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#102: FILE: fs/fat/fatent.c:374:
+				fat_sync_bhs_optw( c_bh+i  , (copy-1)*nr_bhs+n-i-1 , wait );

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#104: FILE: fs/fat/fatent.c:376:
+				for (; i < (copy-1)*nr_bhs+n ; i++)
 				                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#104: FILE: fs/fat/fatent.c:376:
+				for (; i < (copy-1)*nr_bhs+n ; i++)
 				                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#104: FILE: fs/fat/fatent.c:376:
+				for (; i < (copy-1)*nr_bhs+n ; i++)
 				                          ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#107: FILE: fs/fat/fatent.c:379:
+				c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: fs/fat/fatent.c:379:
+				c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 				          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#107: FILE: fs/fat/fatent.c:379:
+				c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 				             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: fs/fat/fatent.c:379:
+				c_bh[(copy-1)*nr_bhs+n] = sb_getblk(sb, backup_fat + bhs[n]->b_blocknr);
 				                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: fs/fat/fatent.c:380:
+				if (!c_bh[(copy-1)*nr_bhs+n]) {
 				               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#108: FILE: fs/fat/fatent.c:380:
+				if (!c_bh[(copy-1)*nr_bhs+n]) {
 				                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: fs/fat/fatent.c:380:
+				if (!c_bh[(copy-1)*nr_bhs+n]) {
 				                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#109: FILE: fs/fat/fatent.c:381:
+					printk(KERN_CRIT "fat:not enough memory for block after existing blocks released. Possible data loss.\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#122: FILE: fs/fat/fatent.c:386:
+			memcpy(c_bh[(copy-1)*nr_bhs+n]->b_data, bhs[n]->b_data, sb->s_blocksize);
 			                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#122: FILE: fs/fat/fatent.c:386:
+			memcpy(c_bh[(copy-1)*nr_bhs+n]->b_data, bhs[n]->b_data, sb->s_blocksize);
 			                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: fs/fat/fatent.c:386:
+			memcpy(c_bh[(copy-1)*nr_bhs+n]->b_data, bhs[n]->b_data, sb->s_blocksize);
 			                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#123: FILE: fs/fat/fatent.c:387:
+			set_buffer_uptodate(c_bh[(copy-1)*nr_bhs+n]);
 			                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#123: FILE: fs/fat/fatent.c:387:
+			set_buffer_uptodate(c_bh[(copy-1)*nr_bhs+n]);
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: fs/fat/fatent.c:387:
+			set_buffer_uptodate(c_bh[(copy-1)*nr_bhs+n]);
 			                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#124: FILE: fs/fat/fatent.c:388:
+			mark_buffer_dirty(c_bh[(copy-1)*nr_bhs+n]);
 			                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: fs/fat/fatent.c:388:
+			mark_buffer_dirty(c_bh[(copy-1)*nr_bhs+n]);
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: fs/fat/fatent.c:388:
+			mark_buffer_dirty(c_bh[(copy-1)*nr_bhs+n]);
 			                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#130: FILE: fs/fat/fatent.c:394:
+			c_bh[nr_bhs*(sbi->fats-1)+n] = bhs[n];
 			           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#130: FILE: fs/fat/fatent.c:394:
+			c_bh[nr_bhs*(sbi->fats-1)+n] = bhs[n];
 			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#130: FILE: fs/fat/fatent.c:394:
+			c_bh[nr_bhs*(sbi->fats-1)+n] = bhs[n];
 			                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );
 	                                                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#132: FILE: fs/fat/fatent.c:396:
+	err = fat_sync_bhs_optw( c_bh+i  , nr_bhs*(sbi->fats+wait-1)-i , wait );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: fs/fat/fatent.c:399:
+	for (n = 0; n+i < nr_bhs*(sbi->fats-1); n++ ) {
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: fs/fat/fatent.c:399:
+	for (n = 0; n+i < nr_bhs*(sbi->fats-1); n++ ) {
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: fs/fat/fatent.c:399:
+	for (n = 0; n+i < nr_bhs*(sbi->fats-1); n++ ) {
 	                                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: fs/fat/fatent.c:399:
+	for (n = 0; n+i < nr_bhs*(sbi->fats-1); n++ ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#135: FILE: fs/fat/fatent.c:399:
+	for (n = 0; n+i < nr_bhs*(sbi->fats-1); n++ ) {
+		brelse(c_bh[n+i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#136: FILE: fs/fat/fatent.c:400:
+		brelse(c_bh[n+i]);
 		             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#139: FILE: fs/fat/fatent.c:403:
+	if (NULL != c_bh) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#139: FILE: fs/fat/fatent.c:403:
+	if (NULL != c_bh) {
+		kfree(c_bh);
+	}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: fs/fat/fatent.c:410:
+				 int nr_bhs )

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#148: FILE: fs/fat/fatent.c:412:
+	return fat_mirror_bhs_optw(sb , bhs , nr_bhs, 0);
 	                              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#148: FILE: fs/fat/fatent.c:412:
+	return fat_mirror_bhs_optw(sb , bhs , nr_bhs, 0);
 	                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: fs/fat/fatent.c:415:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#166: FILE: fs/fat/fatent.c:423:
+	return fat_mirror_bhs_optw(sb, fatent->bhs, fatent->nr_bhs , wait);
 	                                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#177: FILE: fs/fat/fatent.c:540:
+			err = fat_mirror_bhs_optw(sb , bhs, nr_bhs , 1);
 			                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#177: FILE: fs/fat/fatent.c:540:
+			err = fat_mirror_bhs_optw(sb , bhs, nr_bhs , 1);
 			                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#179: FILE: fs/fat/fatent.c:542:
+			err = fat_mirror_bhs_optw(sb, bhs, nr_bhs , 0 );
 			                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#179: FILE: fs/fat/fatent.c:542:
+			err = fat_mirror_bhs_optw(sb, bhs, nr_bhs , 0 );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: fs/fat/misc.c:197:
 
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#216: FILE: fs/fat/misc.c:199:
+int fat_sync_bhs_optw(struct buffer_head **bhs, int nr_bhs ,int wait)
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#216: FILE: fs/fat/misc.c:199:
+int fat_sync_bhs_optw(struct buffer_head **bhs, int nr_bhs ,int wait)
                                                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#231: FILE: fs/fat/misc.c:207:
+			if (buffer_eopnotsupp(bhs[i])) {
[...]
+			} else if (!err && !buffer_uptodate(bhs[i]))
[...]

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#242: FILE: fs/fat/misc.c:218:
+inline int fat_sync_bhs(struct buffer_head **bhs, int nr_bhs ) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#242: FILE: fs/fat/misc.c:218:
+inline int fat_sync_bhs(struct buffer_head **bhs, int nr_bhs ) {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#243: FILE: fs/fat/misc.c:219:
+	return fat_sync_bhs_optw(bhs , nr_bhs , 1);
 	                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#243: FILE: fs/fat/misc.c:219:
+	return fat_sync_bhs_optw(bhs , nr_bhs , 1);
 	                                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/linux/msdos_fs.h:422:
+extern int fat_sync_bhs_optw(struct buffer_head **bhs, int nr_bhs, int wait);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22327.commit.0361c404f712f2f61015643608961a0b59b06631 total: 29 errors, 10 warnings, 52 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.22327.commit.0361c404f712f2f61015643608961a0b59b06631 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
