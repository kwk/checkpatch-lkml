WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#102: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: include/linux/kevent.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: include/linux/kevent.h:4:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#122: FILE: include/linux/kevent.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#123: FILE: include/linux/kevent.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#143: FILE: include/linux/kevent.h:37:
+typedef int (* kevent_callback_t)(struct kevent *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#143: FILE: include/linux/kevent.h:37:
+typedef int (* kevent_callback_t)(struct kevent *);
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#158: FILE: include/linux/kevent.h:52:
+struct kevent
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: include/linux/kevent.h:75:
+^I/* Private data for different storages. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: include/linux/kevent.h:76:
+^I * poll()/select storage has a list of wait_queue_t containers $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#191: FILE: include/linux/kevent.h:85:
+struct kevent_user
+{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#192: FILE: include/linux/kevent.h:86:
+	struct list_head	kevent_list[KEVENT_HASH_MASK+1];
 	                	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#193: FILE: include/linux/kevent.h:87:
+	spinlock_t		kevent_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: include/linux/kevent.h:96:
+^Ispinlock_t ^I^Iready_lock;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: include/linux/kevent.h:105:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#214: FILE: include/linux/kevent.h:108:
+	unsigned long		*pring;
 	             		 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: include/linux/kevent.h:127:
+void kevent_storage_ready(struct kevent_storage *st, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: include/linux/kevent.h:128:
+void kevent_storage_ready(struct kevent_storage *st, 
+		kevent_callback_t ready_callback, u32 event);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#253: FILE: include/linux/kevent.h:147:
+	u->wait_num = u->im_num = u->total = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#255: FILE: include/linux/kevent.h:149:
+}
+static inline void kevent_stat_print(struct kevent_user *u)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: include/linux/kevent.h:151:
+^Ipr_debug("%s: u=%p, wait=%lu, immediately=%lu, total=%lu.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: include/linux/kevent.h:152:
+	pr_debug("%s: u=%p, wait=%lu, immediately=%lu, total=%lu.\n", 
+			__func__, u, u->wait_num, u->im_num, u->total);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#260: FILE: include/linux/kevent.h:154:
+}
+static inline void kevent_stat_im(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#264: FILE: include/linux/kevent.h:158:
+}
+static inline void kevent_stat_wait(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#268: FILE: include/linux/kevent.h:162:
+}
+static inline void kevent_stat_total(struct kevent_user *u)

CHECK:SPACING: No space is necessary after a cast
#273: FILE: include/linux/kevent.h:167:
+#define kevent_stat_print(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#273: FILE: include/linux/kevent.h:167:
+#define kevent_stat_print(u)		({ (void) u;})
                             		           ^

CHECK:SPACING: No space is necessary after a cast
#274: FILE: include/linux/kevent.h:168:
+#define kevent_stat_init(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#274: FILE: include/linux/kevent.h:168:
+#define kevent_stat_init(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#275: FILE: include/linux/kevent.h:169:
+#define kevent_stat_im(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#275: FILE: include/linux/kevent.h:169:
+#define kevent_stat_im(u)		({ (void) u;})
                          		           ^

CHECK:SPACING: No space is necessary after a cast
#276: FILE: include/linux/kevent.h:170:
+#define kevent_stat_wait(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#276: FILE: include/linux/kevent.h:170:
+#define kevent_stat_wait(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#277: FILE: include/linux/kevent.h:171:
+#define kevent_stat_total(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#277: FILE: include/linux/kevent.h:171:
+#define kevent_stat_total(u)		({ (void) u;})
                             		           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#287: FILE: include/linux/kevent_storage.h:1:
+#ifndef __KEVENT_STORAGE_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#291: FILE: include/linux/kevent_storage.h:5:
+struct kevent_storage
+{

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#292: FILE: include/linux/kevent_storage.h:6:
+	void			*origin;		/* Originator's pointer, e.g. struct sock or struct file. Can be NULL. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: include/linux/syscalls.h:600:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: include/linux/syscalls.h:601:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max, 
+		unsigned int timeout, void __user *buf, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#307: FILE: include/linux/syscalls.h:601:
+		unsigned int timeout, void __user *buf, unsigned flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: kernel/kevent/Kconfig:5:
+^I  It can be used as replacement for poll()/select(), AIO callback $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: kernel/kevent/Kconfig:6:
+^I  invocations, advanced timer notifications and other kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: kernel/kevent/Kconfig:15:
+^I  Statistic data includes total number of kevent, number of kevents $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: kernel/kevent/Kconfig:16:
+^I  which are ready immediately at insertion time and number of kevents $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: kernel/kevent/Kconfig:17:
+^I  which were removed through readiness completion. $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#360: FILE: kernel/kevent/Kconfig:20:
+config KEVENT_TIMER
+	bool "Kernel event notifications for timers"
+	depends on KEVENT
+	help
+	  This option allows to use timers through KEVENT subsystem.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#366: FILE: kernel/kevent/Kconfig:26:
+config KEVENT_POLL
+	bool "Kernel event notifications for poll()/select()"
+	depends on KEVENT
+	help
+	  This option allows to use kevent subsystem for poll()/select() 
+	  notifications.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: kernel/kevent/Kconfig:30:
+^I  This option allows to use kevent subsystem for poll()/select() $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#387: FILE: kernel/kevent/kevent.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: kernel/kevent/kevent.c:2:
+ * ^Ikevent.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: kernel/kevent/kevent.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/kevent/kevent.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#404: FILE: kernel/kevent/kevent.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#405: FILE: kernel/kevent/kevent.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: kernel/kevent/kevent.c:47:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: kernel/kevent/kevent.c:59:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#474: FILE: kernel/kevent/kevent.c:88:
+	printk(KERN_INFO "KEVENT: Added callbacks for type %d.\n", pos);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: kernel/kevent/kevent.c:133:
+ * Dequeue kevent from origin's queue. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: kernel/kevent/kevent.c:134:
+ * It does not decrease origin's reference counter in any way $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#556: FILE: kernel/kevent/kevent.c:170:
+		ret = (k->event.ret_flags & (KEVENT_RET_BROKEN|KEVENT_RET_DONE));
 		                                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#560: FILE: kernel/kevent/kevent.c:174:
+		if ((rem || ret < 0) && k->flags &KEVENT_STORAGE) {
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: kernel/kevent/kevent.c:178:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: kernel/kevent/kevent.c:198:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: kernel/kevent/kevent.c:207:
+void kevent_storage_ready(struct kevent_storage *st, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: kernel/kevent/kevent.c:208:
+void kevent_storage_ready(struct kevent_storage *st, 
+		kevent_callback_t ready_callback, u32 event)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#633: FILE: kernel/kevent/kevent_user.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: kernel/kevent/kevent_user.c:4:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#648: FILE: kernel/kevent/kevent_user.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#649: FILE: kernel/kevent/kevent_user.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#666: FILE: kernel/kevent/kevent_user.c:34:
+#include <asm/io.h>

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#668: FILE: kernel/kevent/kevent_user.c:36:
+static char kevent_name[] = "kevent";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: kernel/kevent/kevent_user.c:39:
+static int kevent_get_sb(struct file_system_type *fs_type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: kernel/kevent/kevent_user.c:40:
+static int kevent_get_sb(struct file_system_type *fs_type, 
+		int flags, const char *dev_name, void *data, struct vfsmount *mnt)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: kernel/kevent/kevent_user.c:55:
+ * kevents are pollable, return POLLIN and POLLRDNORM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: kernel/kevent/kevent_user.c:62:
+^I$

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#706: FILE: kernel/kevent/kevent_user.c:74:
+ * so we reuse 4 bytes at the begining of the first page to store index.
                               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#709: FILE: kernel/kevent/kevent_user.c:77:
+#define KEVENTS_ON_PAGE ((PAGE_SIZE-sizeof(unsigned int))/sizeof(struct mukevent))
                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#709: FILE: kernel/kevent/kevent_user.c:77:
+#define KEVENTS_ON_PAGE ((PAGE_SIZE-sizeof(unsigned int))/sizeof(struct mukevent))
                                                          ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#711: FILE: kernel/kevent/kevent_user.c:79:
+struct kevent_mring
+{

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#720: FILE: kernel/kevent/kevent_user.c:88:
+	ring = (struct kevent_mring *)u->pring[0];
 	                                 ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#728: FILE: kernel/kevent/kevent_user.c:96:
+	ring = (struct kevent_mring *)u->pring[0];
 	                                 ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#737: FILE: kernel/kevent/kevent_user.c:105:
+	ring = (struct kevent_mring *)u->pring[0];
 	                                 ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#741: FILE: kernel/kevent/kevent_user.c:109:
+		u->pring[idx] = __get_free_page(GFP_KERNEL);
 		   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#742: FILE: kernel/kevent/kevent_user.c:110:
+		if (!u->pring[idx])
 		        ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#757: FILE: kernel/kevent/kevent_user.c:125:
+	ring = (struct kevent_mring *)k->user->pring[0];
 	                                       ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: kernel/kevent/kevent_user.c:126:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#759: FILE: kernel/kevent/kevent_user.c:127:
+	pidx = ring->index/KEVENTS_ON_PAGE;
 	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#760: FILE: kernel/kevent/kevent_user.c:128:
+	off = ring->index%KEVENTS_ON_PAGE;
 	                 ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#762: FILE: kernel/kevent/kevent_user.c:130:
+	copy_ring = (struct kevent_mring *)k->user->pring[pidx];
 	                                            ^^^^^

WARNING:TYPO_SPELLING: 'Esentially' may be misspelled - perhaps 'Essentially'?
#775: FILE: kernel/kevent/kevent_user.c:143:
+ * of using syscall. Esentially syscall becomes just a waiting point.
                      ^^^^^^^^^^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#781: FILE: kernel/kevent/kevent_user.c:149:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct mukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#781: FILE: kernel/kevent/kevent_user.c:149:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct mukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#781: FILE: kernel/kevent/kevent_user.c:149:
+	pnum = ALIGN(KEVENT_MAX_EVENTS*sizeof(struct mukevent) + sizeof(unsigned int), PAGE_SIZE)/PAGE_SIZE;
 	                                                                                         ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#783: FILE: kernel/kevent/kevent_user.c:151:
+	u->pring = kmalloc(pnum * sizeof(unsigned long), GFP_KERNEL);
 	   ^^^^^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#783: FILE: kernel/kevent/kevent_user.c:151:
+	u->pring = kmalloc(pnum * sizeof(unsigned long), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#784: FILE: kernel/kevent/kevent_user.c:152:
+	if (!u->pring)
 	        ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#787: FILE: kernel/kevent/kevent_user.c:155:
+	u->pring[0] = __get_free_page(GFP_KERNEL);
 	   ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#788: FILE: kernel/kevent/kevent_user.c:156:
+	if (!u->pring[0])
 	        ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#797: FILE: kernel/kevent/kevent_user.c:165:
+	kfree(u->pring);
 	         ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: kernel/kevent/kevent_user.c:173:
+^I$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#807: FILE: kernel/kevent/kevent_user.c:175:
+		free_page(u->pring[i]);
 		             ^^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#809: FILE: kernel/kevent/kevent_user.c:177:
+	kfree(u->pring);
 	         ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#812: FILE: kernel/kevent/kevent_user.c:180:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*u)...) over kzalloc(sizeof(struct kevent_user)...)
#821: FILE: kernel/kevent/kevent_user.c:189:
+	u = kzalloc(sizeof(struct kevent_user), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: kernel/kevent/kevent_user.c:199:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: kernel/kevent/kevent_user.c:216:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: kernel/kevent/kevent_user.c:221:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#857: FILE: kernel/kevent/kevent_user.c:225:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#881: FILE: kernel/kevent/kevent_user.c:249:
+	unsigned long off = (addr - vma->vm_start)/PAGE_SIZE;
 	                                          ^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#889: FILE: kernel/kevent/kevent_user.c:257:
+	return virt_to_page(u->pring[off]);
 	                       ^^^^^

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#895: FILE: kernel/kevent/kevent_user.c:263:
+static struct vm_operations_struct kevent_user_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#917: FILE: kernel/kevent/kevent_user.c:285:
+	if (vm_insert_page(vma, start, virt_to_page((void *)u->pring[0])))
 	                                                       ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: kernel/kevent/kevent_user.c:298:
+ * Free entry in RCU callback, it is dequeued from all lists at $

WARNING:LINE_SPACING: Missing a blank line after declarations
#937: FILE: kernel/kevent/kevent_user.c:305:
+	struct kevent *kevent = container_of(rcu, struct kevent, rcu_head);
+	kmem_cache_free(kevent_cache, kevent);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: kernel/kevent/kevent_user.c:335:
+ * Must be called under kevent_user->kevent_lock to protect $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: kernel/kevent/kevent_user.c:349:
+ * Remove kevent from user's list of all events, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: kernel/kevent/kevent_user.c:389:
+static struct kevent *__kevent_search(struct list_head *head, struct ukevent *uk, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1022: FILE: kernel/kevent/kevent_user.c:390:
+static struct kevent *__kevent_search(struct list_head *head, struct ukevent *uk, 
+		struct kevent_user *u)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1025: FILE: kernel/kevent/kevent_user.c:393:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: kernel/kevent/kevent_user.c:397:
+^I^I^I^Ik->event.id.raw[0] == uk->id.raw[0] && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: kernel/kevent/kevent_user.c:397:
+		if (k->event.user[0] == uk->user[0] && k->event.user[1] == uk->user[1] &&
+				k->event.id.raw[0] == uk->id.raw[0] && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: kernel/kevent/kevent_user.c:418:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: kernel/kevent/kevent_user.c:431:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: kernel/kevent/kevent_user.c:457:
+ * Detaches userspace control block from file descriptor $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ukev)...) over kmalloc(sizeof(struct ukevent)...)
#1117: FILE: kernel/kevent/kevent_user.c:485:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1117: FILE: kernel/kevent/kevent_user.c:485:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: kernel/kevent/kevent_user.c:500:
+ * to allocate a room for them and copy in one shot instead of copy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: kernel/kevent/kevent_user.c:514:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1157: FILE: kernel/kevent/kevent_user.c:525:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1190: FILE: kernel/kevent/kevent_user.c:558:
+ * to allocate a room for them and copy in one shot instead of copy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: kernel/kevent/kevent_user.c:567:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: kernel/kevent/kevent_user.c:572:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1215: FILE: kernel/kevent/kevent_user.c:583:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: kernel/kevent/kevent_user.c:684:
+ * Copy all ukevents from userspace, allocate kevent for each one $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: kernel/kevent/kevent_user.c:685:
+ * and add them into appropriate kevent_storages, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: kernel/kevent/kevent_user.c:687:
+ * Ready events will replace ones provided by used and number $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1321: FILE: kernel/kevent/kevent_user.c:689:
+ * User must check ret_flags field of each ukevent structure $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1343: FILE: kernel/kevent/kevent_user.c:711:
+				if (err) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1346: FILE: kernel/kevent/kevent_user.c:714:
+						memcpy(&ukev[rnum], &ukev[i], sizeof(struct ukevent));

CHECK:BRACES: Unbalanced braces around else statement
#1348: FILE: kernel/kevent/kevent_user.c:716:
+				} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1351: FILE: kernel/kevent/kevent_user.c:719:
+			if (copy_to_user(orig, ukev, rnum*sizeof(struct ukevent)))
 			                                 ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1366: FILE: kernel/kevent/kevent_user.c:734:
+		if (err) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1374: FILE: kernel/kevent/kevent_user.c:742:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: kernel/kevent/kevent_user.c:763:
+static int kevent_user_wait(struct file *file, struct kevent_user *u, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1396: FILE: kernel/kevent/kevent_user.c:764:
+^I^Iunsigned int min_nr, unsigned int max_nr, unsigned int timeout, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1396: FILE: kernel/kevent/kevent_user.c:764:
+static int kevent_user_wait(struct file *file, struct kevent_user *u, 
+		unsigned int min_nr, unsigned int max_nr, unsigned int timeout, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: kernel/kevent/kevent_user.c:771:
+^I^Iwait_event_interruptible_timeout(u->wait, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: kernel/kevent/kevent_user.c:772:
+		wait_event_interruptible_timeout(u->wait, 
+			u->ready_num >= min_nr, msecs_to_jiffies(timeout));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: kernel/kevent/kevent_user.c:774:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1408: FILE: kernel/kevent/kevent_user.c:776:
+^I^Iif (copy_to_user(buf + num*sizeof(struct ukevent), $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1408: FILE: kernel/kevent/kevent_user.c:776:
+		if (copy_to_user(buf + num*sizeof(struct ukevent), 
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1409: FILE: kernel/kevent/kevent_user.c:777:
+		if (copy_to_user(buf + num*sizeof(struct ukevent), 
+					&k->event, sizeof(struct ukevent)))

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1425: FILE: kernel/kevent/kevent_user.c:793:
+static struct file_operations kevent_user_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1439: FILE: kernel/kevent/kevent_user.c:807:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: kernel/kevent/kevent_user.c:840:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1484: FILE: kernel/kevent/kevent_user.c:852:
+static int kevent_ctl_process(struct file *file, unsigned int cmd, unsigned int num, void __user *arg)

WARNING:TYPO_SPELLING: 'ununsed' may be misspelled - perhaps 'unused'?
#1517: FILE: kernel/kevent/kevent_user.c:885:
+ * @flags - ununsed for now (will be used for mmap implementation).
             ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1520: FILE: kernel/kevent/kevent_user.c:888:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min_nr, unsigned int max_nr,
+		unsigned int timeout, void __user *buf, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1520: FILE: kernel/kevent/kevent_user.c:888:
+		unsigned int timeout, void __user *buf, unsigned flags)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1573: FILE: kernel/kevent/kevent_user.c:941:
+static int __devinit kevent_user_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1576: FILE: kernel/kevent/kevent_user.c:944:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1577: FILE: kernel/kevent/kevent_user.c:945:
+^Ikevent_cache = kmem_cache_create("kevent_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1578: FILE: kernel/kevent/kevent_user.c:946:
+	kevent_cache = kmem_cache_create("kevent_cache", 
+			sizeof(struct kevent), 0, SLAB_PANIC, NULL, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: kernel/kevent/kevent_user.c:951:
+		panic("%s: failed to register filesystem: err=%d.\n",
+			       kevent_name, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: kernel/kevent/kevent_user.c:955:
+^I^Ipanic("%s: failed to mount silesystem: err=%ld.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1588: FILE: kernel/kevent/kevent_user.c:956:
+		panic("%s: failed to mount silesystem: err=%ld.\n", 
+				kevent_name, PTR_ERR(kevent_mnt));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1589: FILE: kernel/kevent/kevent_user.c:957:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1592: FILE: kernel/kevent/kevent_user.c:960:
+		printk(KERN_ERR "Failed to register kevent miscdev: err=%d.\n", err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1596: FILE: kernel/kevent/kevent_user.c:964:
+	printk("KEVENT subsystem has been successfully registered.\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1607: FILE: kernel/kevent/kevent_user.c:975:
+static void __devexit kevent_user_fini(void)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.46991.commit.0b0f5f73ba00624b14a3e0520f53ce64fc0fe486 total: 75 errors, 48 warnings, 48 checks, 1512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.46991.commit.0b0f5f73ba00624b14a3e0520f53ce64fc0fe486 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
