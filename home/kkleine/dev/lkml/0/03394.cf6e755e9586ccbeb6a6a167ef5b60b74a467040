CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#47: FILE: mm/swapfile.c:642:
+static int try_to_unuse_entry(swp_entry_t entry, unsigned short *swap_map,
+			struct page *page, struct mm_struct **start_mm_p)

CHECK:BRACES: braces {} should be used on all arms of this statement
#54: FILE: mm/swapfile.c:649:
+	if (start_mm_p)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#56: FILE: mm/swapfile.c:651:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: mm/swapfile.c:703:
+		while (*swap_map > 1 && !retval &&
+				(p = p->next) != &start_mm->mmlist) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#119: FILE: mm/swapfile.c:714:
+			if (swcount <= 1)
[...]
+			else if (mm == &init_mm) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#124: FILE: mm/swapfile.c:719:
+			} else

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#157: FILE: mm/swapfile.c:752:
+		if (printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#158: FILE: mm/swapfile.c:753:
+			printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'try_to_unuse_entry', this function's name, in a string
#159: FILE: mm/swapfile.c:754:
+				"try_to_unuse_entry: cleared swap entry overflow\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.03394.commit.cf6e755e9586ccbeb6a6a167ef5b60b74a467040 total: 0 errors, 3 warnings, 6 checks, 351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.03394.commit.cf6e755e9586ccbeb6a6a167ef5b60b74a467040 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
