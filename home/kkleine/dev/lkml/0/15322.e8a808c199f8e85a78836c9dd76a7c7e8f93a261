WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: ltt/ltt-control.c:1:
+/* ltt-control.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#55: FILE: ltt/ltt-control.c:8:
+ * ^IMathieu Desnoyers <mathieu.desnoyers@polymtl.ca>$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#83: FILE: ltt/ltt-control.c:36:
+	printk(KERN_DEBUG "ltt-control ltt_control_input\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_control_input', this function's name, in a string
#83: FILE: ltt/ltt-control.c:36:
+	printk(KERN_DEBUG "ltt-control ltt_control_input\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#86: FILE: ltt/ltt-control.c:39:
+	while ((skb = skb_dequeue(&sk->sk_receive_queue)) != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: ltt/ltt-control.c:49:
+^I^I/* process netlink message with header pointed by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#102: FILE: ltt/ltt-control.c:55:
+			printk(KERN_ALERT "ltt-control bad message length %d vs. %zu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: ltt/ltt-control.c:56:
+			printk(KERN_ALERT "ltt-control bad message length %d vs. %zu\n",
+				nlh->nlmsg_len, sizeof(lttctl_peer_msg_t) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#109: FILE: ltt/ltt-control.c:62:
+		msg = (lttctl_peer_msg_t*)payload;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#111: FILE: ltt/ltt-control.c:64:
+		switch (msg->op) {
+			case OP_CREATE:
[...]
+			case OP_DESTROY:
[...]
+			case OP_START:
[...]
+			case OP_STOP:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: ltt/ltt-control.c:67:
+				err = ltt_control(LTT_CONTROL_CREATE_TRACE,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: ltt/ltt-control.c:72:
+				err = ltt_control(LTT_CONTROL_DESTROY_TRACE,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: ltt/ltt-control.c:77:
+				err = ltt_control(LTT_CONTROL_START,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: ltt/ltt-control.c:82:
+				err = ltt_control(LTT_CONTROL_STOP,
+						msg->trace_name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: ltt/ltt-control.c:87:
+^I^I^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#134: FILE: ltt/ltt-control.c:87:
+				printk(KERN_INFO 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: ltt/ltt-control.c:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#145: FILE: ltt/ltt-control.c:98:
+	printk(KERN_INFO "ltt-control init\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: ltt/ltt-control.c:101:
+	socket = netlink_kernel_create(NETLINK_LTT, 1,
+			ltt_control_input, THIS_MODULE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!socket"
#149: FILE: ltt/ltt-control.c:102:
+	if (socket == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#157: FILE: ltt/ltt-control.c:110:
+	printk(KERN_INFO "ltt-control exit\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#161: FILE: ltt/ltt-control.c:114:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#172: FILE: ltt/ltt-control.h:1:
+/* ltt-control.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: ltt/ltt-control.h:8:
+ * ^IMathieu Desnoyers <mathieu.desnoyers@polymtl.ca>$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#194: FILE: ltt/ltt-control.h:23:
+typedef struct lttctl_peer_msg {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: include/linux/netlink.h:24:
+#define NETLINK_LTT^I^I31 ^I/* Linux Trace Toolkit FIXME */$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.15322.commit.e8a808c199f8e85a78836c9dd76a7c7e8f93a261 total: 4 errors, 12 warnings, 10 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.15322.commit.e8a808c199f8e85a78836c9dd76a7c7e8f93a261 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
