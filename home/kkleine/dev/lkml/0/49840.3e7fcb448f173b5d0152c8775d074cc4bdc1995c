WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/net/ehea/ehea_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#40: FILE: drivers/net/ehea/ehea_main.c:2:
+ *  linux/drivers/net/ehea/ehea_main.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: drivers/net/ehea/ehea_main.c:26:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#65: FILE: drivers/net/ehea/ehea_main.c:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#82: FILE: drivers/net/ehea/ehea_main.c:44:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#88: FILE: drivers/net/ehea/ehea_main.c:50:
+static int __devinit ehea_probe(struct ibmebus_dev *dev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#90: FILE: drivers/net/ehea/ehea_main.c:52:
+static int __devexit ehea_remove(struct ibmebus_dev *dev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: drivers/net/ehea/ehea_main.c:55:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: drivers/net/ehea/ehea_main.c:63:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: drivers/net/ehea/ehea_main.c:87:
+	EDEB_DMP(7, (u8*)cb2,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#128: FILE: drivers/net/ehea/ehea_main.c:90:
+	for (i = 0; i < port->num_def_qps; i++) {
+		rx_packets += port->port_res[i].rx_packets;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#154: FILE: drivers/net/ehea/ehea_main.c:116:
+#define EHEA_OD_ADDR(address, segment) (((address) & (PAGE_SIZE - 1)) \
+					| ((segment) << 12));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: drivers/net/ehea/ehea_main.c:122:
+	u64 addr;
+	addr = tmp_addr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: drivers/net/ehea/ehea_main.c:131:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: drivers/net/ehea/ehea_main.c:140:
+	struct sk_buff **skb_arr_rq1 = port_res->skb_arr_rq1;
+	EDEB_EN(7, "port_res=%p, arr_index=%d, nr_of_wqes=%d, arr_rq1_len=%d",

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: drivers/net/ehea/ehea_main.c:170:
+	struct ehea_qp *qp;
+	EDEB_EN(7, "port_res=%p, nr_rq1a=%d", port_res, nr_rq1a);

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/net/ehea/ehea_main.c:216:
+^I^I            | EHEA_BMASK_SET(EHEA_WR_ID_INDEX, index);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: drivers/net/ehea/ehea_main.c:230:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: drivers/net/ehea/ehea_main.c:244:
+	struct sk_buff **skb_arr_rq3 = pr->skb_arr_rq3;
+	EDEB_EN(8, "pr=%p, nr_of_wqes=%d", pr, nr_of_wqes);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: drivers/net/ehea/ehea_main.c:279:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: drivers/net/ehea/ehea_main.c:285:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cqe->header_length == 0'
#330: FILE: drivers/net/ehea/ehea_main.c:292:
+	if (((cqe->status & EHEA_CQE_STAT_ERR_TCP) != 0)
+	    && (cqe->header_length == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#331: FILE: drivers/net/ehea/ehea_main.c:293:
+	if (((cqe->status & EHEA_CQE_STAT_ERR_TCP) != 0)
+	    && (cqe->header_length == 0))

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#333: FILE: drivers/net/ehea/ehea_main.c:295:
+		return 0;
+	else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#334: FILE: drivers/net/ehea/ehea_main.c:296:
+		printk("WARNING: Packet discarded. Wrong TCP/UDP chksum"

WARNING:SPLIT_STRING: quoted string split across lines
#335: FILE: drivers/net/ehea/ehea_main.c:297:
+		printk("WARNING: Packet discarded. Wrong TCP/UDP chksum"
+		       "and header_length != 0. cqe->status=%X", cqe->status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#335: FILE: drivers/net/ehea/ehea_main.c:297:
+		printk("WARNING: Packet discarded. Wrong TCP/UDP chksum"
+		       "and header_length != 0. cqe->status=%X", cqe->status);

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: drivers/net/ehea/ehea_main.c:306:
+	int length = cqe->num_bytes_transfered - 4;	/*remove CRC */
+	EDEB_EN(7, "dev=%p, skb=%p, cqe=%p", dev, skb, cqe);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#345: FILE: drivers/net/ehea/ehea_main.c:307:
+	memcpy(skb->data, ((char*)cqe) + 64, length);

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: drivers/net/ehea/ehea_main.c:319:
+	int length = cqe->num_bytes_transfered - 4;	/*remove CRC */
+	EDEB_EN(7, "dev=%p, skb=%p, cqe=%p", dev, skb, cqe);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#365: FILE: drivers/net/ehea/ehea_main.c:327:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#370: FILE: drivers/net/ehea/ehea_main.c:332:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#402: FILE: drivers/net/ehea/ehea_main.c:364:
+		EDEB_DMP(6, (u8*)cqe, 4 * 16, "CQE");

WARNING:MEMORY_BARRIER: memory barrier without comment
#404: FILE: drivers/net/ehea/ehea_main.c:366:
+		rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: drivers/net/ehea/ehea_main.c:369:
+			struct sk_buff *skb;
+			if (rq == 1) {	/* LL RQ1 */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#411: FILE: drivers/net/ehea/ehea_main.c:373:
+				pref = (void*)skb_arr_rq1[x];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#416: FILE: drivers/net/ehea/ehea_main.c:378:
+				pref = (void*)(skb_arr_rq1[x]->data);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#435: FILE: drivers/net/ehea/ehea_main.c:397:
+				pref = (void*)skb_arr_rq2[x];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#440: FILE: drivers/net/ehea/ehea_main.c:402:
+				pref = (void*)(skb_arr_rq2[x]->data);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#461: FILE: drivers/net/ehea/ehea_main.c:423:
+				pref = (void*)skb_arr_rq3[x];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#466: FILE: drivers/net/ehea/ehea_main.c:428:
+				pref = (void*)(skb_arr_rq3[x]->data);

WARNING:SPLIT_STRING: quoted string split across lines
#485: FILE: drivers/net/ehea/ehea_main.c:447:
+			     "skb=%p skb->data=%p skb->len=%d"
+			     " skb->data_len=0x%x nr_frags=%d",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#508: FILE: drivers/net/ehea/ehea_main.c:470:
+			EDEB_DMP(4, (u8*)cqe, 4 * 16, "");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#511: FILE: drivers/net/ehea/ehea_main.c:473:
+				skb = skb_arr_rq2[

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/net/ehea/ehea_main.c:475:
+					EHEA_BMASK_GET(EHEA_WR_ID_INDEX,
+							  cqe->wr_id)];

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#520: FILE: drivers/net/ehea/ehea_main.c:482:
+				skb = skb_arr_rq3[

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/net/ehea/ehea_main.c:484:
+					EHEA_BMASK_GET(EHEA_WR_ID_INDEX,
+								cqe->wr_id)];

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ehea_poll', this function's name, in a string
#552: FILE: drivers/net/ehea/ehea_main.c:514:
+		EDEB(7, "CQE=%p, break ehea_poll while loop", cqe);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#571: FILE: drivers/net/ehea/ehea_main.c:533:
+	struct ehea_port_res *port_res = (struct ehea_port_res*)data;

WARNING:SPLIT_STRING: quoted string split across lines
#586: FILE: drivers/net/ehea/ehea_main.c:548:
+				EDEB(7, "No cqe found after having"
+				     " reset N1/EP\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#592: FILE: drivers/net/ehea/ehea_main.c:554:
+		EDEB_DMP(7, (u8*)cqe, 4 * 16, "");

WARNING:MEMORY_BARRIER: memory barrier without comment
#593: FILE: drivers/net/ehea/ehea_main.c:555:
+		rmb();

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#601: FILE: drivers/net/ehea/ehea_main.c:563:
+						       cqe->wr_id); i++) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#610: FILE: drivers/net/ehea/ehea_main.c:572:
+					EDEB_ERR(4, "s_irq_tasklet: SKB=NULL "
+						 "WQ_ID=%lX, loop=%d, index=%d",

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/net/ehea/ehea_main.c:594:
+			EDEB(7, "port %d swqes_avail >=10 (%d),"
+			     "netif_wake_queue called",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#648: FILE: drivers/net/ehea/ehea_main.c:610:
+	struct ehea_port_res *pr = (struct ehea_port_res*)param;

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: drivers/net/ehea/ehea_main.c:611:
+	struct ehea_port_res *pr = (struct ehea_port_res*)param;
+	EDEB_EN(7, "irq=%d, param=%p, pt_regs=%p", irq, param, regs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: drivers/net/ehea/ehea_main.c:617:
+irqreturn_t ehea_recv_irq_handler(int irq, void *param, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#657: FILE: drivers/net/ehea/ehea_main.c:619:
+	struct ehea_port_res *pr = (struct ehea_port_res*)param;

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: drivers/net/ehea/ehea_main.c:621:
+	struct ehea_port *port = pr->port;
+	EDEB_EN(7, "irq=%d, param=%p, pt_regs=%p", irq, param, regs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#665: FILE: drivers/net/ehea/ehea_main.c:627:
+irqreturn_t ehea_qp_aff_irq_handler(int irq, void *param, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#667: FILE: drivers/net/ehea/ehea_main.c:629:
+	struct ehea_port *port = (struct ehea_port*)param;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#672: FILE: drivers/net/ehea/ehea_main.c:634:
+	eqe = (struct ehea_eqe*)ehea_poll_eq(port->qp_eq);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#675: FILE: drivers/net/ehea/ehea_main.c:637:
+		EDEB(7, "*eqe=%lx", *(u64*)eqe);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#676: FILE: drivers/net/ehea/ehea_main.c:638:
+		eqe = (struct ehea_eqe*)ehea_poll_eq(port->qp_eq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#726: FILE: drivers/net/ehea/ehea_main.c:688:
+				printk("%s: Logical port up: %dMbps %s Duplex",

CHECK:BRACES: Unbalanced braces around else statement
#735: FILE: drivers/net/ehea/ehea_main.c:697:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: drivers/net/ehea/ehea_main.c:699:
+				printk("%s: Logical port down",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#744: FILE: drivers/net/ehea/ehea_main.c:706:
+			printk("%s: Physical port up", port->netdev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#746: FILE: drivers/net/ehea/ehea_main.c:708:
+			printk("%s: Physical port down", port->netdev->name);

WARNING:TYPO_SPELLING: 'Externel' may be misspelled - perhaps 'External'?
#749: FILE: drivers/net/ehea/ehea_main.c:711:
+			printk("Externel switch port is primary port");
 			        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#749: FILE: drivers/net/ehea/ehea_main.c:711:
+			printk("Externel switch port is primary port");

WARNING:TYPO_SPELLING: 'Externel' may be misspelled - perhaps 'External'?
#751: FILE: drivers/net/ehea/ehea_main.c:713:
+			printk("Externel switch port is backup port");
 			        ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#751: FILE: drivers/net/ehea/ehea_main.c:713:
+			printk("Externel switch port is backup port");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#774: FILE: drivers/net/ehea/ehea_main.c:736:
+	struct ehea_adapter *adapter = (struct ehea_adapter*)data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#779: FILE: drivers/net/ehea/ehea_main.c:741:
+	eqe = (struct ehea_eqe*)ehea_poll_eq(adapter->neq);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#785: FILE: drivers/net/ehea/ehea_main.c:747:
+		eqe = (struct ehea_eqe*)ehea_poll_eq(adapter->neq);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#800: FILE: drivers/net/ehea/ehea_main.c:762:
+	struct ehea_adapter *adapter = (struct ehea_adapter*)param;

WARNING:LINE_SPACING: Missing a blank line after declarations
#801: FILE: drivers/net/ehea/ehea_main.c:763:
+	struct ehea_adapter *adapter = (struct ehea_adapter*)param;
+	EDEB_EN(7, "dev_id=%p", adapter);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: drivers/net/ehea/ehea_main.c:769:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#829: FILE: drivers/net/ehea/ehea_main.c:791:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#843: FILE: drivers/net/ehea/ehea_main.c:805:
+				 "port_res_nr:%d, ist=%X", i,
 				                  ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#843: FILE: drivers/net/ehea/ehea_main.c:805:
+			EDEB_ERR(4, "Failed registering irq for ehea_recv_int:"
+				 "port_res_nr:%d, ist=%X", i,

WARNING:SPLIT_STRING: quoted string split across lines
#848: FILE: drivers/net/ehea/ehea_main.c:810:
+		EDEB(7, "irq_handle 0x%X for function ehea_recv_int %d "
+		     " registered", pr->recv_eq->attr.ist1, i);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#859: FILE: drivers/net/ehea/ehea_main.c:821:
+			 " ist=%X", port->qp_eq->attr.ist1);
 			   ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#859: FILE: drivers/net/ehea/ehea_main.c:821:
+		EDEB_ERR(4, "Failed registering irq for qp_aff_irq_handler:"
+			 " ist=%X", port->qp_eq->attr.ist1);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#876: FILE: drivers/net/ehea/ehea_main.c:838:
+				 " port_res_nr:%d, ist=%X", i,
 				                   ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#876: FILE: drivers/net/ehea/ehea_main.c:838:
+			EDEB_ERR(4, "Registering irq for ehea_send failed"
+				 " port_res_nr:%d, ist=%X", i,

WARNING:SPLIT_STRING: quoted string split across lines
#881: FILE: drivers/net/ehea/ehea_main.c:843:
+		EDEB(7, "irq_handle 0x%X for function ehea_send_int %d"
+		     " registered", pr->send_eq->attr.ist1, i);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/net/ehea/ehea_main.c:852:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: drivers/net/ehea/ehea_main.c:899:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_XTRACT, 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#937: FILE: drivers/net/ehea/ehea_main.c:899:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_XTRACT, 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/net/ehea/ehea_main.c:899:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_XTRACT, 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/net/ehea/ehea_main.c:900:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_TAG_FILTER,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#938: FILE: drivers/net/ehea/ehea_main.c:900:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_TAG_FILTER,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: drivers/net/ehea/ehea_main.c:900:
+                ^I^I| EHEA_BMASK_SET(PXLY_RC_VLAN_TAG_FILTER,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: drivers/net/ehea/ehea_main.c:901:
+^I^I^I^I                 PXLY_RC_VLAN_FILTER)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#951: FILE: drivers/net/ehea/ehea_main.c:913:
+	EDEB_DMP(7, (u8*)ehea_port_cb_0, sizeof(*ehea_port_cb_0), "");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#960: FILE: drivers/net/ehea/ehea_main.c:922:
+				       (void*)ehea_port_cb_0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#962: FILE: drivers/net/ehea/ehea_main.c:924:
+	if (hret != H_SUCCESS) {
+		goto modify_ehea_port_failed;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: drivers/net/ehea/ehea_main.c:938:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#981: FILE: drivers/net/ehea/ehea_main.c:943:
+	struct ehea_adapter *adapter = pr->port->adapter;
+	EDEB_EN(7, "ehea_port_res=%p", pr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1014: FILE: drivers/net/ehea/ehea_main.c:976:
+	struct ehea_adapter *adapter = pr->port->adapter;
+	EDEB_EN(7, "ehea_port_res=%p", pr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1073: FILE: drivers/net/ehea/ehea_main.c:1035:
+	init_attr = (struct ehea_qp_init_attr*)

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1112: FILE: drivers/net/ehea/ehea_main.c:1074:
+	pr->skb_arr_sq = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1112: FILE: drivers/net/ehea/ehea_main.c:1074:
+	pr->skb_arr_sq = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1112: FILE: drivers/net/ehea/ehea_main.c:1074:
+	pr->skb_arr_sq = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1118: FILE: drivers/net/ehea/ehea_main.c:1080:
+	memset(pr->skb_arr_sq, 0, sizeof(void*) * (max_rq_entries + 1));

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1124: FILE: drivers/net/ehea/ehea_main.c:1086:
+	pr->skb_arr_rq1 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1124: FILE: drivers/net/ehea/ehea_main.c:1086:
+	pr->skb_arr_rq1 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1124: FILE: drivers/net/ehea/ehea_main.c:1086:
+	pr->skb_arr_rq1 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1130: FILE: drivers/net/ehea/ehea_main.c:1092:
+	memset(pr->skb_arr_rq1, 0, sizeof(void*) * (max_rq_entries + 1));

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1135: FILE: drivers/net/ehea/ehea_main.c:1097:
+	pr->skb_arr_rq2 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1135: FILE: drivers/net/ehea/ehea_main.c:1097:
+	pr->skb_arr_rq2 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1135: FILE: drivers/net/ehea/ehea_main.c:1097:
+	pr->skb_arr_rq2 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1141: FILE: drivers/net/ehea/ehea_main.c:1103:
+	memset(pr->skb_arr_rq2, 0, sizeof(void*) * (max_rq_entries + 1));

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1147: FILE: drivers/net/ehea/ehea_main.c:1109:
+	pr->skb_arr_rq3 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1147: FILE: drivers/net/ehea/ehea_main.c:1109:
+	pr->skb_arr_rq3 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1147: FILE: drivers/net/ehea/ehea_main.c:1109:
+	pr->skb_arr_rq3 = (struct sk_buff**)vmalloc(sizeof(struct sk_buff*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1153: FILE: drivers/net/ehea/ehea_main.c:1115:
+	memset(pr->skb_arr_rq3, 0, sizeof(void*) * (max_rq_entries + 1));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1250: FILE: drivers/net/ehea/ehea_main.c:1212:
+{
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1283: FILE: drivers/net/ehea/ehea_main.c:1245:
+	skb_frag_t *frag;
+	EDEB_EN(7, "");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1288: FILE: drivers/net/ehea/ehea_main.c:1250:
+	sg_list = (struct ehea_vsgentry*)&swqe->u.immdata_desc.sg_list;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1304: FILE: drivers/net/ehea/ehea_main.c:1266:
+		if (skb_data_size >= headersize) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1320: FILE: drivers/net/ehea/ehea_main.c:1282:
+		} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1366: FILE: drivers/net/ehea/ehea_main.c:1328:
+		for (i = sg1entry_contains_frag_data; i < nfrags; i++) {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1394: FILE: drivers/net/ehea/ehea_main.c:1356:
+	if (hcallid == H_REG_BCMC) {
[...]
+	} else {
[...]

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1422: FILE: drivers/net/ehea/ehea_main.c:1384:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1423: FILE: drivers/net/ehea/ehea_main.c:1385:
+	struct sockaddr *mac_addr = (struct sockaddr*)sa;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1426: FILE: drivers/net/ehea/ehea_main.c:1388:
+	EDEB_DMP(7, (u8*)&(mac_addr->sa_data[0]), 14, "");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mac_addr->sa_data[0]
#1426: FILE: drivers/net/ehea/ehea_main.c:1388:
+	EDEB_DMP(7, (u8*)&(mac_addr->sa_data[0]), 14, "");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1441: FILE: drivers/net/ehea/ehea_main.c:1403:
+	memcpy((u8*)(&(ehea_port_cb_0->port_mac_addr)),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ehea_port_cb_0->port_mac_addr
#1441: FILE: drivers/net/ehea/ehea_main.c:1403:
+	memcpy((u8*)(&(ehea_port_cb_0->port_mac_addr)),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1442: FILE: drivers/net/ehea/ehea_main.c:1404:
+	       (u8*)&(mac_addr->sa_data[0]), 6);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mac_addr->sa_data[0]
#1442: FILE: drivers/net/ehea/ehea_main.c:1404:
+	       (u8*)&(mac_addr->sa_data[0]), 6);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1447: FILE: drivers/net/ehea/ehea_main.c:1409:
+	EDEB_DMP(7, (u8*)ehea_port_cb_0,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1454: FILE: drivers/net/ehea/ehea_main.c:1416:
+				       (void*)ehea_port_cb_0);

WARNING:SPLIT_STRING: quoted string split across lines
#1498: FILE: drivers/net/ehea/ehea_main.c:1460:
+			EDEB_ERR(4, "Enable promiscuous mode: "
+				 "not yet implemented");

WARNING:SPLIT_STRING: quoted string split across lines
#1506: FILE: drivers/net/ehea/ehea_main.c:1468:
+			EDEB_ERR(4, "Disable promiscuous mode: "
+				 "not yet implemented");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->mc_list->list
#1550: FILE: drivers/net/ehea/ehea_main.c:1512:
+		list_for_each_safe(pos, temp, &(port->mc_list->list)) {

CHECK:BRACES: Unbalanced braces around else statement
#1588: FILE: drivers/net/ehea/ehea_main.c:1550:
+	} else

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1600: FILE: drivers/net/ehea/ehea_main.c:1562:
+static void ehea_add_multicast_entry(struct ehea_port* port, u8* mc_mac_addr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1600: FILE: drivers/net/ehea/ehea_main.c:1562:
+static void ehea_add_multicast_entry(struct ehea_port* port, u8* mc_mac_addr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1609: FILE: drivers/net/ehea/ehea_main.c:1571:
+	    (struct ehea_mc_list*)kzalloc(sizeof(struct ehea_mc_list),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1609: FILE: drivers/net/ehea/ehea_main.c:1571:
+	    (struct ehea_mc_list*)kzalloc(sizeof(struct ehea_mc_list),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1618: FILE: drivers/net/ehea/ehea_main.c:1580:
+	memcpy((u8*)&ehea_mcl_entry->macaddr, mc_mac_addr, ETH_ALEN);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1622: FILE: drivers/net/ehea/ehea_main.c:1584:
+	if (!hret)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1624: FILE: drivers/net/ehea/ehea_main.c:1586:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#1665: FILE: drivers/net/ehea/ehea_main.c:1627:
+			EDEB_ERR(4, "Mcast registration limit reached "
+				 "(0x%lx). Use ALLMULTI!",

WARNING:RETURN_VOID: void function return statements are not generally useful
#1681: FILE: drivers/net/ehea/ehea_main.c:1643:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < 68'
#1685: FILE: drivers/net/ehea/ehea_main.c:1647:
+	if ((new_mtu < 68) || (new_mtu > EHEA_MAX_PACKET_SIZE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu > EHEA_MAX_PACKET_SIZE'
#1685: FILE: drivers/net/ehea/ehea_main.c:1647:
+	if ((new_mtu < 68) || (new_mtu > EHEA_MAX_PACKET_SIZE))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1697: FILE: drivers/net/ehea/ehea_main.c:1659:
+	unsigned short skb_protocol = skb->protocol;
+	nfrags = skb_shinfo(skb)->nr_frags;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1712: FILE: drivers/net/ehea/ehea_main.c:1674:
+			if ((skb->nh.iph->frag_off & IP_MF)
+			    || (skb->nh.iph->frag_off & IP_OFFSET))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1723: FILE: drivers/net/ehea/ehea_main.c:1685:
+		/* icmp (big data) and ip segmentation packets (all other ip
+		   packets) do not require any special handling */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1723: FILE: drivers/net/ehea/ehea_main.c:1685:
+		   packets) do not require any special handling */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1761: FILE: drivers/net/ehea/ehea_main.c:1723:
+			if ((skb->nh.iph->frag_off & IP_MF)
+			    || (skb->nh.iph->frag_off & IP_OFFSET))

CHECK:BRACES: Unbalanced braces around else statement
#1765: FILE: drivers/net/ehea/ehea_main.c:1727:
+			else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1774: FILE: drivers/net/ehea/ehea_main.c:1736:
+			/* icmp (big data) and
+			   ip segmentation packets (all other ip packets) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1774: FILE: drivers/net/ehea/ehea_main.c:1736:
+			   ip segmentation packets (all other ip packets) */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1810: FILE: drivers/net/ehea/ehea_main.c:1772:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1815: FILE: drivers/net/ehea/ehea_main.c:1777:
+	int swqe_index;
+	EDEB_EN(7, "");

WARNING:SPLIT_STRING: quoted string split across lines
#1821: FILE: drivers/net/ehea/ehea_main.c:1783:
+	     "PAGE_SIZE=%d MAX_SKB_FRAGS=%d"
+	     "skb=%p skb->data=%p skb->len=%d skb->data_len=0x%x nr_frags=%d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#1821: FILE: drivers/net/ehea/ehea_main.c:1783:
+	     "PAGE_SIZE=%d MAX_SKB_FRAGS=%d"
+	     "skb=%p skb->data=%p skb->len=%d skb->data_len=0x%x nr_frags=%d",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1822: FILE: drivers/net/ehea/ehea_main.c:1784:
+	     *(u32*)port->netdev->dev_addr, dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1828: FILE: drivers/net/ehea/ehea_main.c:1790:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1841: FILE: drivers/net/ehea/ehea_main.c:1803:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1842: FILE: drivers/net/ehea/ehea_main.c:1804:
+	EDEB_DMP(7, (u8*)skb->data, (skb->len - skb->data_len), "SKB_DATA");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1854: FILE: drivers/net/ehea/ehea_main.c:1816:
+		u32 swqe_num = pr->swqe_id_counter;
+		ehea_xmit3(skb, dev, swqe);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1858: FILE: drivers/net/ehea/ehea_main.c:1820:
+		if (pr->swqe_ll_count >= (EHEA_SIG_IV - 1)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1861: FILE: drivers/net/ehea/ehea_main.c:1823:
+		} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1864: FILE: drivers/net/ehea/ehea_main.c:1826:
+		EDEB_DMP(6, (u8*)swqe, 128, "swqe format 3");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1878: FILE: drivers/net/ehea/ehea_main.c:1840:
+		if (pr->swqe_count >= (EHEA_SIG_IV_LONG - 1)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1881: FILE: drivers/net/ehea/ehea_main.c:1843:
+		} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1884: FILE: drivers/net/ehea/ehea_main.c:1846:
+		EDEB_DMP(6, (u8*)swqe, 256, "swqe format 2");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1907: FILE: drivers/net/ehea/ehea_main.c:1869:
+	struct ehea_port *port =  (struct ehea_port*)dev->priv;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1930: FILE: drivers/net/ehea/ehea_main.c:1892:
+	if (hret != H_SUCCESS) {
+		EDEB_ERR(4, "query_ehea_port failed for cb3");
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1943: FILE: drivers/net/ehea/ehea_main.c:1905:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1946: FILE: drivers/net/ehea/ehea_main.c:1908:
+	struct ehea_adapter *adapter = port->adapter;
+	EDEB_EN(7, "dev=%p, vlan_id=%d", dev, vid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1954: FILE: drivers/net/ehea/ehea_main.c:1916:
+	hret = ehea_h_query_ehea_port(adapter->handle,
+				       port->logical_port_id,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1980: FILE: drivers/net/ehea/ehea_main.c:1942:
+
+}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1986: FILE: drivers/net/ehea/ehea_main.c:1948:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1989: FILE: drivers/net/ehea/ehea_main.c:1951:
+	struct hcp_query_ehea_port_cb_1 *cb1 = NULL;
+	EDEB_EN(7, "dev=%p, vlan_id=%d", dev, vid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1999: FILE: drivers/net/ehea/ehea_main.c:1961:
+	hret = ehea_h_query_ehea_port(adapter->handle,
+				       port->logical_port_id,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2084: FILE: drivers/net/ehea/ehea_main.c:2046:
+	struct hcp_modify_qp_cb_0* cb0 = NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2176: FILE: drivers/net/ehea/ehea_main.c:2138:
+	port->qp_eq = ehea_create_eq(port->adapter, eq_type,
+				   EHEA_MAX_ENTRIES_EQ, 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2196: FILE: drivers/net/ehea/ehea_main.c:2158:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#2213: FILE: drivers/net/ehea/ehea_main.c:2175:
+	for(k = 0; k < i; k++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2213: FILE: drivers/net/ehea/ehea_main.c:2175:
+	for(k = 0; k < i; k++) {
+		ehea_clean_port_res(port, &port->port_res[k]);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2229: FILE: drivers/net/ehea/ehea_main.c:2191:
+	int i;
+	for(i = 0; i < port->num_def_qps + port->num_tx_qps; i++)

ERROR:SPACING: space required before the open parenthesis '('
#2229: FILE: drivers/net/ehea/ehea_main.c:2191:
+	for(i = 0; i < port->num_def_qps + port->num_tx_qps; i++)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2242: FILE: drivers/net/ehea/ehea_main.c:2204:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2264: FILE: drivers/net/ehea/ehea_main.c:2226:
+	mac_addr = (*(u64*)dev->dev_addr) >> 16;

ERROR:SPACING: space required before the open parenthesis '('
#2270: FILE: drivers/net/ehea/ehea_main.c:2232:
+	for(i = 0; i < port->num_def_qps + port->num_tx_qps; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#2276: FILE: drivers/net/ehea/ehea_main.c:2238:
+	for(i = 0; i < port->num_def_qps + port->num_tx_qps; i++)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2300: FILE: drivers/net/ehea/ehea_main.c:2262:
+	struct ehea_port *port = (struct ehea_port*)dev->priv;

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#2315: FILE: drivers/net/ehea/ehea_main.c:2277:
+static struct of_device_id ehea_device_table[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "IBM,lhea" appears un-documented -- check /home/kkleine/dev/linux/Documentation/devicetree/bindings/
#2318: FILE: drivers/net/ehea/ehea_main.c:2280:
+	 .compatible = "IBM,lhea",

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string vendor "IBM" appears un-documented -- check /home/kkleine/dev/linux/Documentation/devicetree/bindings/vendor-prefixes.yaml
#2318: FILE: drivers/net/ehea/ehea_main.c:2280:
+	 .compatible = "IBM,lhea",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2347: FILE: drivers/net/ehea/ehea_main.c:2309:
+	if (hret != H_SUCCESS) {
+		goto query_ehea_failed;
+	}

CHECK:SPACING: No space is necessary after a cast
#2395: FILE: drivers/net/ehea/ehea_main.c:2357:
+	EDEB_DMP(7, (u8 *) query_ehea_port_cb_0,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2398: FILE: drivers/net/ehea/ehea_main.c:2360:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2449: FILE: drivers/net/ehea/ehea_main.c:2411:
+	EDEB_EX(7,"MACaddr=0x%lX, portspeed=%dMbps, fullduplex=%d, "
 	         ^

WARNING:SPLIT_STRING: quoted string split across lines
#2450: FILE: drivers/net/ehea/ehea_main.c:2412:
+	EDEB_EX(7,"MACaddr=0x%lX, portspeed=%dMbps, fullduplex=%d, "
+		  "num_def_qps=%d",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2478: FILE: drivers/net/ehea/ehea_main.c:2440:
+	dn_log_port_id = (u32*)get_property(dn, "ibm,hea-port-no", NULL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2488: FILE: drivers/net/ehea/ehea_main.c:2450:
+	    (struct ehea_mc_list*)kzalloc(sizeof(struct ehea_mc_list),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2488: FILE: drivers/net/ehea/ehea_main.c:2450:
+	    (struct ehea_mc_list*)kzalloc(sizeof(struct ehea_mc_list),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2519: FILE: drivers/net/ehea/ehea_main.c:2481:
+					       (void*)cb4);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2584: FILE: drivers/net/ehea/ehea_main.c:2546:
+	for (i = 0; i < adapter->num_ports; i++) {
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*port)...) over kzalloc(sizeof(struct ehea_port)...)
#2589: FILE: drivers/net/ehea/ehea_main.c:2551:
+		port = kzalloc(sizeof(struct ehea_port), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2602: FILE: drivers/net/ehea/ehea_main.c:2564:
+			/* Free mem for this port struct. the others will be
+			   processed on rollback */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2602: FILE: drivers/net/ehea/ehea_main.c:2564:
+			   processed on rollback */

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#2610: FILE: drivers/net/ehea/ehea_main.c:2572:
+	/* Check for succesfully set up ports */
 	             ^^^^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2622: FILE: drivers/net/ehea/ehea_main.c:2584:
+static int __devinit ehea_probe(struct ibmebus_dev *dev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2639: FILE: drivers/net/ehea/ehea_main.c:2601:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2640: FILE: drivers/net/ehea/ehea_main.c:2602:
+	adapter_handle = (u64*)get_property(dev->ofdev.node, "ibm,hea-handle",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2674: FILE: drivers/net/ehea/ehea_main.c:2636:
+	ret = ibmebus_request_irq(NULL, adapter->neq->attr.ist1,
+				ehea_interrupt_neq, SA_INTERRUPT, "ehea_neq",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2675: FILE: drivers/net/ehea/ehea_main.c:2637:
+				(void*)adapter);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2707: FILE: drivers/net/ehea/ehea_main.c:2669:
+	printk(KERN_INFO "%s Ethernet Device Driver (Release %s)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2711: FILE: drivers/net/ehea/ehea_main.c:2673:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#2728: FILE: drivers/net/ehea/ehea_main.c:2690:
+	if (port) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2735: FILE: drivers/net/ehea/ehea_main.c:2697:
+	} else

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2741: FILE: drivers/net/ehea/ehea_main.c:2703:
+static int __devexit ehea_remove(struct ibmebus_dev *dev)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49840.commit.3e7fcb448f173b5d0152c8775d074cc4bdc1995c total: 83 errors, 89 warnings, 53 checks, 2738 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.49840.commit.3e7fcb448f173b5d0152c8775d074cc4bdc1995c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
