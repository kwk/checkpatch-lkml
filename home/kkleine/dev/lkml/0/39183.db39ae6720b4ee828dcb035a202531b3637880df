WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#56: FILE: drivers/dma/dmaengine.c:634:
+EXPORT_SYMBOL_GPL(dma_async_map_single);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#57: FILE: drivers/dma/dmaengine.c:635:
+EXPORT_SYMBOL_GPL(dma_async_unmap_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#58: FILE: drivers/dma/dmaengine.c:636:
+EXPORT_SYMBOL_GPL(dma_async_unmap_single);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/dma/ioatdma.c:641:
+static dma_addr_t ioat_map_page(struct dma_chan *chan, struct page *page,
+					unsigned long offset, size_t size,

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: drivers/dma/ioatdma.c:645:
+	struct ioat_dma_chan *ioat_chan = to_ioat_chan(chan);
+	return pci_map_page(ioat_chan->device->pdev, page, offset, size,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: drivers/dma/ioatdma.c:650:
+static dma_addr_t ioat_map_single(struct dma_chan *chan, void *cpu_addr,
+					size_t size, int direction)

WARNING:LINE_SPACING: Missing a blank line after declarations
#80: FILE: drivers/dma/ioatdma.c:653:
+	struct ioat_dma_chan *ioat_chan = to_ioat_chan(chan);
+	return pci_map_single(ioat_chan->device->pdev, cpu_addr, size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/dma/ioatdma.c:658:
+static void ioat_unmap_page(struct dma_chan *chan, dma_addr_t handle,
+				size_t size, int direction)

WARNING:LINE_SPACING: Missing a blank line after declarations
#88: FILE: drivers/dma/ioatdma.c:661:
+	struct ioat_dma_chan *ioat_chan = to_ioat_chan(chan);
+	pci_unmap_page(ioat_chan->device->pdev, handle, size, direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/dma/ioatdma.c:665:
+static void ioat_unmap_single(struct dma_chan *chan, dma_addr_t handle,
+				size_t size, int direction)

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: drivers/dma/ioatdma.c:668:
+	struct ioat_dma_chan *ioat_chan = to_ioat_chan(chan);
+	pci_unmap_single(ioat_chan->device->pdev, handle, size,	direction);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#98: FILE: drivers/dma/ioatdma.c:671:
 static int __devinit ioat_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/dmaengine.h:291:
+	dma_addr_t (*map_page)(struct dma_chan *chan, struct page *page,
+				unsigned long offset, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: include/linux/dmaengine.h:294:
+	dma_addr_t (*map_single)(struct dma_chan *chan, void *cpu_addr,
+				size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: include/linux/dmaengine.h:296:
+	void (*unmap_page)(struct dma_chan *chan, dma_addr_t handle,
+				size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: include/linux/dmaengine.h:298:
+	void (*unmap_single)(struct dma_chan *chan, dma_addr_t handle,
+				size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: include/linux/dmaengine.h:605:
+static inline dma_addr_t dma_async_map_page(struct dma_chan *chan,
+			struct page *page, unsigned long offset, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: include/linux/dmaengine.h:612:
+static inline dma_addr_t dma_async_map_single(struct dma_chan *chan,
+			void *cpu_addr,	size_t size, int direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/dmaengine.h:618:
+static inline void dma_async_unmap_page(struct dma_chan *chan,
+			dma_addr_t handle, size_t size, int direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: include/linux/dmaengine.h:624:
+static inline void dma_async_unmap_single(struct dma_chan *chan,
+			dma_addr_t handle, size_t size, int direction)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39183.commit.db39ae6720b4ee828dcb035a202531b3637880df total: 0 errors, 8 warnings, 12 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39183.commit.db39ae6720b4ee828dcb035a202531b3637880df has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
