WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
the required position/timing info. This kind of estimation is more conservative

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
# diffprofile oprofile.50.stateful oprofile.50.stateless

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#177: 
# diffprofile oprofile.50.stateful2 oprofile.50.stateless2

WARNING:BAD_SIGN_OFF: Duplicate signature
#243: 
Signed-off-by: Wu Fengguang <wfg@mail.ustc.edu.cn>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#251: 
Signed-off-by: Wu Fengguang <wfg@mail.ustc.edu.cn>

WARNING:BAD_SIGN_OFF: Duplicate signature
#272: 
Signed-off-by: Wu Fengguang <wfg@mail.ustc.edu.cn>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: mm/readahead.c:1143:
+ * ^Il: the number of pages read by the stream$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: mm/readahead.c:1145:
+ * ^IL: the number of pages pushed into inactive_list in the mean time$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: mm/readahead.c:1147:
+ * ^If(l01) <= L0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: mm/readahead.c:1148:
+ * ^If(l11 + l12) = L1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: mm/readahead.c:1149:
+ * ^If(l21 + l22) = L2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: mm/readahead.c:1150:
+ * ^I...$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: mm/readahead.c:1151:
+ * ^If(l01 + l11 + ...) <= Sum(L0 + L1 + ...)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: mm/readahead.c:1163:
+#define PAGE_REFCNT_1           (1 << PG_referenced)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: mm/readahead.c:1164:
+#define PAGE_REFCNT_2           (1 << PG_active)

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: mm/readahead.c:1179:
+        return page->flags & PAGE_REFCNT_MASK;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: mm/readahead.c:1179:
+        return page->flags & PAGE_REFCNT_MASK;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: mm/readahead.c:1186:
+ * ^I^Ilen(inactive_list) / speed(leader)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: mm/readahead.c:1211:
+static int count_cache_hit(struct address_space *mapping,
+						pgoff_t begin, pgoff_t end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: mm/readahead.c:1239:
+static unsigned long count_history_pages(struct address_space *mapping,
+					struct file_ra_state *ra,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'count_history_pages', this function's name, in a string
#441: FILE: mm/readahead.c:1285:
+	ddprintk("count_history_pages: ino=%lu, idx=%lu, count=%lu\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: mm/readahead.c:1286:
+	ddprintk("count_history_pages: ino=%lu, idx=%lu, count=%lu\n",
+				mapping->host->i_ino, offset, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: mm/readahead.c:1303:
+static void adjust_rala_aggressive(unsigned long ra_max,
+				unsigned long *ra_size, unsigned long *la_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: mm/readahead.c:1322:
+try_context_based_readahead(struct address_space *mapping,
+			struct file_ra_state *ra,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: mm/readahead.c:1334:
+^I * ^I   Search forward for a nearby hole.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#494: FILE: mm/readahead.c:1338:
+		unsigned long max_scan = ra_max + ra_min;
+		start = radix_tree_scan_hole(&mapping->page_tree,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: mm/readahead.c:1339:
+		start = radix_tree_scan_hole(&mapping->page_tree,
+							offset, max_scan);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: mm/readahead.c:1349:
+^I * ^Ia) seek => read => this read$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: mm/readahead.c:1350:
+^I * ^Ib) cache hit read(s) => this read$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#521: FILE: mm/readahead.c:1365:
+		if (ra_min > 2 * readahead_hit_rate)
+		    ra_min = 2 * readahead_hit_rate;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: mm/readahead.c:1376:
+		start = radix_tree_scan_data_backward(&mapping->page_tree,
+							       offset, ra_min);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18292.commit.4f8121c4e859772cd79f0535f0cc07f2f289af43 total: 1 errors, 21 warnings, 9 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.18292.commit.4f8121c4e859772cd79f0535f0cc07f2f289af43 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
