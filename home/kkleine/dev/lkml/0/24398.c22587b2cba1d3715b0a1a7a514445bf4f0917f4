CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: drivers/cpufreq/cpufreq.c:46:
+static int __cpufreq_governor(struct cpufreq_policy *policy,
+						unsigned int event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/cpufreq/cpufreq.c:157:
+void cpufreq_debug_printk(unsigned int type, const char *prefix,
+							const char *fmt, ...)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#85: FILE: drivers/cpufreq/cpufreq.c:168:
+		if (!disable_ratelimit && debug_ratelimit
+					&& !printk_ratelimit()) {

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#85: FILE: drivers/cpufreq/cpufreq.c:168:
+					&& !printk_ratelimit()) {

WARNING:SPLIT_STRING: quoted string split across lines
#95: FILE: drivers/cpufreq/cpufreq.c:190:
+MODULE_PARM_DESC(debug, "CPUfreq debugging: add 1 to debug core,"
+			" 2 to debug drivers, and 4 to debug governors.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#100: FILE: drivers/cpufreq/cpufreq.c:194:
+MODULE_PARM_DESC(debug_ratelimit, "CPUfreq debugging:"
+					" set to 0 to disable ratelimiting.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/cpufreq/cpufreq.c:235:
+		loops_per_jiffy = cpufreq_scale(l_p_j_ref, l_p_j_ref_freq,
+								ci->new);

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: drivers/cpufreq/cpufreq.c:237:
+		dprintk("scaling loops_per_jiffy to %lu"
+			"for frequency %u kHz\n", loops_per_jiffy, ci->new);

WARNING:MISSING_SPACE: break quoted strings at a space character
#120: FILE: drivers/cpufreq/cpufreq.c:237:
+		dprintk("scaling loops_per_jiffy to %lu"
+			"for frequency %u kHz\n", loops_per_jiffy, ci->new);

WARNING:RETURN_VOID: void function return statements are not generally useful
#128: FILE: drivers/cpufreq/cpufreq.c:244:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: drivers/cpufreq/cpufreq.c:435:
+static ssize_t show_cpuinfo_cur_freq (struct cpufreq_policy * policy,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: drivers/cpufreq/cpufreq.c:435:
+static ssize_t show_cpuinfo_cur_freq (struct cpufreq_policy * policy,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/cpufreq/cpufreq.c:436:
+static ssize_t show_cpuinfo_cur_freq (struct cpufreq_policy * policy,
+							char *buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: drivers/cpufreq/cpufreq.c:448:
+static ssize_t show_scaling_governor (struct cpufreq_policy * policy,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: drivers/cpufreq/cpufreq.c:448:
+static ssize_t show_scaling_governor (struct cpufreq_policy * policy,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/cpufreq/cpufreq.c:449:
+static ssize_t show_scaling_governor (struct cpufreq_policy * policy,
+							char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/cpufreq/cpufreq.c:480:
+	if (cpufreq_parse_governor(str_governor, &new_policy.policy,
+						&new_policy.governor))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: drivers/cpufreq/cpufreq.c:513:
+static ssize_t show_scaling_available_governors (struct cpufreq_policy *policy,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/cpufreq/cpufreq.c:514:
+static ssize_t show_scaling_available_governors (struct cpufreq_policy *policy,
 				char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/cpufreq/cpufreq.c:1006:
+	if (ret_freq && policy->cur &&
+		!(cpufreq_driver->flags & CPUFREQ_CONST_LOOPS)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#302: FILE: drivers/cpufreq/cpufreq.c:1008:
+		/* verify no discrepancy between actual and
+					saved value exists */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: drivers/cpufreq/cpufreq.c:1008:
+					saved value exists */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#313: FILE: drivers/cpufreq/cpufreq.c:1020:
+	return (ret_freq);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: drivers/cpufreq/cpufreq.c:1336:
+static int __cpufreq_governor(struct cpufreq_policy *policy,
+					unsigned int event)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cpufreq_governor', this function's name, in a string
#349: FILE: drivers/cpufreq/cpufreq.c:1343:
+	dprintk("__cpufreq_governor for CPU %u, event %u\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/cpufreq/cpufreq.c:1344:
+	dprintk("__cpufreq_governor for CPU %u, event %u\n",
+						policy->cpu, event);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: drivers/cpufreq/cpufreq.c:1348:
+	/* we keep one module reference alive for
+			each CPU governed by this CPU */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: drivers/cpufreq/cpufreq.c:1348:
+			each CPU governed by this CPU */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/cpufreq/cpufreq.c:1438:
+	memcpy(&policy->cpuinfo, &data->cpuinfo,
+				sizeof(struct cpufreq_cpuinfo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/cpufreq/cpufreq.c:1472:
+	dprintk("new min and max freqs are %u - %u kHz\n",
+					data->min, data->max);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/cpufreq/cpufreq.c:1494:
+				dprintk("starting governor %s failed\n",
+							data->governor->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/cpufreq/cpufreq.c:1589:
+				cpufreq_out_of_sync(cpu, data->cur,
+								policy.cur);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/cpufreq/cpufreq.c:1694:
+			dprintk("no CPU initialized for driver %s\n",
+							driver_data->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/cpufreq/cpufreq.c:1696:
+			sysdev_driver_unregister(&cpu_sysdev_class,
+						&cpufreq_sysdev_driver);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/cpufreq/cpufreq_performance.c:29:
+		dprintk("setting to %u kHz because of event %u\n",
+						policy->max, event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/cpufreq/cpufreq_performance.c:31:
+		__cpufreq_driver_target(policy, policy->max,
+						CPUFREQ_RELATION_H);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/cpufreq/cpufreq_powersave.c:28:
+		dprintk("setting to %u kHz because of event %u\n",
+							policy->min, event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/cpufreq/cpufreq_powersave.c:30:
+		__cpufreq_driver_target(policy, policy->min,
+						CPUFREQ_RELATION_L);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: drivers/cpufreq/cpufreq_ondemand.c:44:
+#define MIN_STAT_SAMPLING_RATE ^I^I^I\$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#508: FILE: drivers/cpufreq/cpufreq_ondemand.c:208:
+	if (ret != 1 || input > MAX_SAMPLING_RATE
+		     || input < MIN_SAMPLING_RATE) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/cpufreq/cpufreq_ondemand.c:502:
+				printk(KERN_ERR

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: drivers/cpufreq/cpufreq_conservative.c:113:
+^Iret = ^Ikstat_cpu(cpu).cpustat.idle +$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/cpufreq/cpufreq_stats.c:355:
+		cpufreq_stat_cpu_callback(&cpufreq_stat_cpu_notifier,
+				CPU_ONLINE, (void *)(long)cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: drivers/cpufreq/cpufreq_stats.c:372:
+		cpufreq_stat_cpu_callback(&cpufreq_stat_cpu_notifier,
+						CPU_DEAD, (void *)(long)cpu);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: drivers/cpufreq/cpufreq_stats.c:378:
+MODULE_DESCRIPTION ("'cpufreq_stats' - A driver to export cpufreq stats"

WARNING:SPLIT_STRING: quoted string split across lines
#599: FILE: drivers/cpufreq/cpufreq_stats.c:379:
+MODULE_DESCRIPTION ("'cpufreq_stats' - A driver to export cpufreq stats"
+				"through sysfs filesystem");

WARNING:MISSING_SPACE: break quoted strings at a space character
#599: FILE: drivers/cpufreq/cpufreq_stats.c:379:
+MODULE_DESCRIPTION ("'cpufreq_stats' - A driver to export cpufreq stats"
+				"through sysfs filesystem");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: drivers/cpufreq/freq_table.c:34:
+		dprintk("table entry %u: %u kHz, %u index\n",
+					i, freq, table[i].index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/cpufreq/freq_table.c:60:
+	dprintk("request for verification of policy (%u - %u kHz) for cpu %u\n",
+					policy->min, policy->max, policy->cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/cpufreq/freq_table.c:85:
+	dprintk("verification lead to (%u - %u kHz) for cpu %u\n",
+				policy->min, policy->max, policy->cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/cpufreq/freq_table.c:109:
+	dprintk("request for target %u kHz (relation: %u) for cpu %u\n",
+					target_freq, relation, policy->cpu);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#677: FILE: drivers/cpufreq/freq_table.c:202:
+		  .owner=THIS_MODULE
 		        ^

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24398.commit.c22587b2cba1d3715b0a1a7a514445bf4f0917f4 total: 4 errors, 20 warnings, 28 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.24398.commit.c22587b2cba1d3715b0a1a7a514445bf4f0917f4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
