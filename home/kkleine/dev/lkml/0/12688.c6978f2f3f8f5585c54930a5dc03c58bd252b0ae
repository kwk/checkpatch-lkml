WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: arch/s390/lib/uaccess_mvcos.c:30:
+extern size_t copy_from_user_std(size_t, const void __user *, void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#64: FILE: arch/s390/lib/uaccess_mvcos.c:30:
+extern size_t copy_from_user_std(size_t, const void __user *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void __user *' should also have an identifier name
#64: FILE: arch/s390/lib/uaccess_mvcos.c:30:
+extern size_t copy_from_user_std(size_t, const void __user *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#64: FILE: arch/s390/lib/uaccess_mvcos.c:30:
+extern size_t copy_from_user_std(size_t, const void __user *, void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: arch/s390/lib/uaccess_mvcos.c:31:
+extern size_t copy_to_user_std(size_t, void __user *, const void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#65: FILE: arch/s390/lib/uaccess_mvcos.c:31:
+extern size_t copy_to_user_std(size_t, void __user *, const void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#65: FILE: arch/s390/lib/uaccess_mvcos.c:31:
+extern size_t copy_to_user_std(size_t, void __user *, const void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#65: FILE: arch/s390/lib/uaccess_mvcos.c:31:
+extern size_t copy_to_user_std(size_t, void __user *, const void *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: arch/s390/lib/uaccess_pt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#126: FILE: arch/s390/lib/uaccess_pt.c:2:
+ *  arch/s390/lib/uaccess_pt.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#135: FILE: arch/s390/lib/uaccess_pt.c:11:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: arch/s390/lib/uaccess_pt.c:54:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#188: FILE: arch/s390/lib/uaccess_pt.c:64:
+		yield();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: arch/s390/lib/uaccess_pt.c:67:
+	printk("VM: killing process %s\n", current->comm);

CHECK:SPACING: No space is necessary after a cast
#261: FILE: arch/s390/lib/uaccess_pt.c:137:
+		memcpy(to, (void __kernel __force *) from, n);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#264: FILE: arch/s390/lib/uaccess_pt.c:140:
+	rc = __user_copy_pt((unsigned long) from, to, n, 0);

CHECK:SPACING: No space is necessary after a cast
#273: FILE: arch/s390/lib/uaccess_pt.c:149:
+		memcpy((void __kernel __force *) to, from, n);

CHECK:SPACING: No space is necessary after a cast
#276: FILE: arch/s390/lib/uaccess_pt.c:152:
+	return __user_copy_pt((unsigned long) to, (void *) from, n, 1);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#285: FILE: arch/s390/lib/uaccess_std.c:31:
+extern size_t copy_from_user_pt(size_t n, const void __user *from, void *to);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#286: FILE: arch/s390/lib/uaccess_std.c:32:
+extern size_t copy_to_user_pt(size_t n, void __user *to, const void *from);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12688.commit.c6978f2f3f8f5585c54930a5dc03c58bd252b0ae total: 0 errors, 15 warnings, 5 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.12688.commit.c6978f2f3f8f5585c54930a5dc03c58bd252b0ae has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
