WARNING:TYPO_SPELLING: 'probelm' may be misspelled - perhaps 'problem'?
#26: 
Hi, this is an experimental patch for the probelm
                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occationally' may be misspelled - perhaps 'occasionally'?
#27: 
	- "ps command can miss some pid occationally"
	                                ^^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
2. at getdents() iteration 'N', ps command's getdents() read entries before taskC.

WARNING:TYPO_SPELLING: 'becasue' may be misspelled - perhaps 'because'?
#65: 
4. at getdents(N+1), becasue getdents() cannot find taskC, it skips 'X'
                     ^^^^^^^

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#78: 
Signed-Off-By: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#110: FILE: fs/proc/base.c:2138:
+#define get_tgid_buf(p) ((struct tgid_buffer *)((unsigned long)p & PAGE_MASK))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#111: FILE: fs/proc/base.c:2139:
+#define ENT_PER_TGIDBUF ((PAGE_SIZE - sizeof(struct tgid_buffer))/sizeof(int))
                                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: fs/proc/base.c:2144:
+	struct tgid_buffer *buf =  get_tgid_buf(tgid);
+	return buf->base_pos + (tgid - buf->data);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#126: FILE: fs/proc/base.c:2149:
+	struct tgid_buffer *buf = (void *) get_zeroed_page(GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: fs/proc/base.c:2150:
+	struct tgid_buffer *buf = (void *) get_zeroed_page(GFP_KERNEL);
+	BUG_ON(!buf);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: fs/proc/base.c:2150:
+	BUG_ON(!buf);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxO)
#133: FILE: fs/proc/base.c:2156:
+	list_add_tail(&buf->list,&tgid_table);
 	                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#133: FILE: fs/proc/base.c:2156:
+	list_add_tail(&buf->list,&tgid_table);
 	                         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: fs/proc/base.c:2181:
+		if (ent - buf->data >= ENT_PER_TGIDBUF) {
+			ent = buf->data;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: fs/proc/base.c:2197:
+	int *ent;
+	if (task->tgid_buf_pos == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task->tgid_buf_pos"
#207: FILE: fs/proc/base.c:2197:
+	if (task->tgid_buf_pos == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: fs/proc/base.c:2212:
+	int pos;
+	buf = get_tgid_buf(ent);

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: fs/proc/base.c:2233:
+	struct tgid_buffer *buf;
+	list_for_each_entry(buf, &tgid_table, list) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/linux/proc_fs.h:203:
+extern void proc_register_tgid(struct task_struct *task);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: include/linux/proc_fs.h:204:
+extern void proc_unregister_tgid(struct task_struct *task);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.57147.commit.a37fea87e0ce57da04e3b21b6b4c0e2fdc7aa8cc total: 2 errors, 12 warnings, 6 checks, 269 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.57147.commit.a37fea87e0ce57da04e3b21b6b4c0e2fdc7aa8cc has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
