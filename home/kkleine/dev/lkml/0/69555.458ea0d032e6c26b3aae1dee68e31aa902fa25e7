WARNING:TYPO_SPELLING: 'accesing' may be misspelled - perhaps 'accessing'?
#26: 
Currently they get to this API by directly accesing the function pointers
                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
I used kernel_ prefix for this API to match with the existing kernel_sendmsg

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/net.h:211:
+extern int kernel_bind(struct socket *sock, struct sockaddr *addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/net.h:213:
+extern int kernel_listen(struct socket *sock, int backlog);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: include/linux/net.h:214:
+extern int kernel_accept(struct socket *sock, struct socket **newsock,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: include/linux/net.h:216:
+extern int kernel_connect(struct socket *sock, struct sockaddr *addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/net.h:218:
+extern int kernel_getsockname(struct socket *sock, struct sockaddr *addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: include/linux/net.h:220:
+extern int kernel_getpeername(struct socket *sock, struct sockaddr *addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/net.h:222:
+extern int kernel_getsockopt(struct socket *sock, int level, int optname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/net.h:224:
+extern int kernel_setsockopt(struct socket *sock, int level, int optname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/net.h:226:
+extern int kernel_sendpage(struct socket *sock, struct page *page, int offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/net.h:228:
+extern int kernel_ioctl(struct socket *sock, int cmd, unsigned long arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: net/socket.c:2179:
+^I^I^I       newsock);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: net/socket.c:2181:
+^I^Igoto done;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: net/socket.c:2188:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: net/socket.c:2196:
+                   int flags)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: net/socket.c:2196:
+                   int flags)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: net/socket.c:2199:
+}^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: net/socket.c:2202:
+int kernel_getsockname(struct socket *sock, struct sockaddr *addr,
+			 int *addrlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: net/socket.c:2208:
+int kernel_getpeername(struct socket *sock, struct sockaddr *addr,
+			 int *addrlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: net/socket.c:2214:
+int kernel_getsockopt(struct socket *sock, int level, int optname,
+			char *optval, int *optlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: net/socket.c:2230:
+int kernel_setsockopt(struct socket *sock, int level, int optname,
+			char *optval, int optlen)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: net/socket.c:2250:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: net/socket.c:2262:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: net/socket.c:2283:
+EXPORT_SYMBOL(kernel_listen);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#192: FILE: net/socket.c:2284:
+EXPORT_SYMBOL(kernel_accept);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: net/socket.c:2285:
+EXPORT_SYMBOL(kernel_connect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#194: FILE: net/socket.c:2286:
+EXPORT_SYMBOL(kernel_getsockname);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#195: FILE: net/socket.c:2287:
+EXPORT_SYMBOL(kernel_getpeername);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#196: FILE: net/socket.c:2288:
+EXPORT_SYMBOL(kernel_getsockopt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#197: FILE: net/socket.c:2289:
+EXPORT_SYMBOL(kernel_setsockopt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#198: FILE: net/socket.c:2290:
+EXPORT_SYMBOL(kernel_sendpage);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#199: FILE: net/socket.c:2291:
+EXPORT_SYMBOL(kernel_ioctl);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.69555.commit.458ea0d032e6c26b3aae1dee68e31aa902fa25e7 total: 7 errors, 12 warnings, 14 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.69555.commit.458ea0d032e6c26b3aae1dee68e31aa902fa25e7 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
