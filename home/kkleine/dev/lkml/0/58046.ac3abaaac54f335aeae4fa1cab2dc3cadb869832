WARNING:TYPO_SPELLING: 'implemetation' may be misspelled - perhaps 'implementation'?
#14: 
Subject: Re: [PATCH 6/6] PCI-Express AER implemetation
                                         ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/pci/pcie/aer/aerdrv.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#85: FILE: drivers/pci/pcie/aer/aerdrv.c:30:
+static int __devinit aer_probe (struct pcie_device *dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: drivers/pci/pcie/aer/aerdrv.c:30:
+static int __devinit aer_probe (struct pcie_device *dev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/pci/pcie/aer/aerdrv.c:31:
+static int __devinit aer_probe (struct pcie_device *dev,
+	const struct pcie_port_service_id *id );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#86: FILE: drivers/pci/pcie/aer/aerdrv.c:31:
+	const struct pcie_port_service_id *id );

ERROR:SPACING: space required after that ';' (ctx:VxV)
#89: FILE: drivers/pci/pcie/aer/aerdrv.c:34:
+{return 0;}
          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#90: FILE: drivers/pci/pcie/aer/aerdrv.c:35:
+static int aer_resume(struct pcie_device *dev) {return 0;}
                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/pci/pcie/aer/aerdrv.c:37:
+static pci_ers_result_t aer_error_detected(struct pci_dev *dev,
+	enum pci_channel_state error);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/pci/pcie/aer/aerdrv.c:46:
+^I.vendor ^I= PCI_ANY_ID, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/pci/pcie/aer/aerdrv.c:46:
+^I.vendor ^I= PCI_ANY_ID, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: drivers/pci/pcie/aer/aerdrv.c:47:
+^I.device ^I= PCI_ANY_ID,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/pci/pcie/aer/aerdrv.c:48:
+^I.port_type ^I= PCIE_RC_PORT, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: drivers/pci/pcie/aer/aerdrv.c:48:
+^I.port_type ^I= PCIE_RC_PORT, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: drivers/pci/pcie/aer/aerdrv.c:49:
+^I.service_type ^I= PCIE_PORT_SERVICE_AER,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: drivers/pci/pcie/aer/aerdrv.c:82:
+static irqreturn_t aer_irq(int irq, void *context, struct pt_regs * r)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/pci/pcie/aer/aerdrv.c:92:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/pci/pcie/aer/aerdrv.c:93:
+^I * Must lock access to Root Error Status Reg, Root Error ID Reg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: drivers/pci/pcie/aer/aerdrv.c:94:
+^I * and Root error producer/consumer index $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/pci/pcie/aer/aerdrv.c:114:
+^I^I/* $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#193: FILE: drivers/pci/pcie/aer/aerdrv.c:138:
+static struct aer_rpc* aer_alloc_rpc(struct pcie_device *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+^Iif (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#197: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rpc)...) over kmalloc(sizeof(struct aer_rpc)...)
#197: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/pci/pcie/aer/aerdrv.c:143:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 
+		GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/pci/pcie/aer/aerdrv.c:147:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/pci/pcie/aer/aerdrv.c:148:
+^I * Initialize Root lock access, e_lock, to Root Error Status Reg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/pci/pcie/aer/aerdrv.c:149:
+^I * Root Error ID Reg, and Root error producer/consumer index. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/pci/pcie/aer/aerdrv.c:153:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/pci/pcie/aer/aerdrv.c:155:
+^I * or print AER aware devices in this RPC hierarchy $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#218: FILE: drivers/pci/pcie/aer/aerdrv.c:163:
+	rpc->prod_idx = rpc->cons_idx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#254: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: drivers/pci/pcie/aer/aerdrv.c:200:
+				const struct pcie_port_service_id *id )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#262: FILE: drivers/pci/pcie/aer/aerdrv.c:207:
+	if ((status = aer_init(dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#266: FILE: drivers/pci/pcie/aer/aerdrv.c:211:
+	if (!(rpc = aer_alloc_rpc(dev))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#267: FILE: drivers/pci/pcie/aer/aerdrv.c:212:
+		printk(KERN_DEBUG "%s: Alloc rpc fails on PCIE device[%s]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/pci/pcie/aer/aerdrv.c:213:
+		printk(KERN_DEBUG "%s: Alloc rpc fails on PCIE device[%s]\n",
+			__FUNCTION__, device->bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#268: FILE: drivers/pci/pcie/aer/aerdrv.c:213:
+			__FUNCTION__, device->bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/pci/pcie/aer/aerdrv.c:219:
+^Iif ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#274: FILE: drivers/pci/pcie/aer/aerdrv.c:219:
+	if ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/pci/pcie/aer/aerdrv.c:220:
+	if ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", 
+				dev))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/pci/pcie/aer/aerdrv.c:221:
+^I^Iprintk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#276: FILE: drivers/pci/pcie/aer/aerdrv.c:221:
+		printk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: drivers/pci/pcie/aer/aerdrv.c:222:
+		printk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", 
+			__FUNCTION__, device->bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#277: FILE: drivers/pci/pcie/aer/aerdrv.c:222:
+			__FUNCTION__, device->bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/pci/pcie/aer/aerdrv.c:249:
+^I/* Disable Root's interrupt in response to error messages */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/pci/pcie/aer/aerdrv.c:261:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: drivers/pci/pcie/aer/aerdrv.c:262:
+^I * System software must wait for at least 100ms from the end $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#322: FILE: drivers/pci/pcie/aer/aerdrv.c:267:
+	printk(KERN_DEBUG "Complete link reset at Root[%s]\n", dev->dev.bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/pci/pcie/aer/aerdrv.c:269:
+^I/* Enable Root Port's interrupt in response to error messages */ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/pci/pcie/aer/aerdrv.c:273:
+	pci_write_config_dword(dev,
+		pos + PCI_ERR_ROOT_COMMAND,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/pci/pcie/aer/aerdrv.c:287:
+static pci_ers_result_t aer_error_detected(struct pci_dev *dev,
+			enum pci_channel_state error)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/pci/pcie/aer/aerdrv.c:336:
+static void __exit aer_service_exit(void) $

CHECK:SPACING: No space is necessary after a cast
#391: FILE: drivers/pci/pcie/aer/aerdrv.c:336:
+static void __exit aer_service_exit(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/pci/pcie/aer/Kconfig:7:
+^Idepends on PCIEPORTBUS $

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.58046.commit.ac3abaaac54f335aeae4fa1cab2dc3cadb869832 total: 31 errors, 16 warnings, 11 checks, 374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.58046.commit.ac3abaaac54f335aeae4fa1cab2dc3cadb869832 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
