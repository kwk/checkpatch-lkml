WARNING:TYPO_SPELLING: 'dirver' may be misspelled - perhaps 'driver'?
#35: 
2) The original dirver is s3c2410-rtc, abut the new one is now named
                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#36: 
   rtc-s3c24xx to fit in with the new drivers. This will mean tha the
                                                              ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/rtc/Kconfig:128:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/rtc/rtc-s3c24xx.c:1:
+/* drivers/rtc/rtc-s3c24xx.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#76: FILE: drivers/rtc/rtc-s3c24xx.c:1:
+/* drivers/rtc/rtc-s3c24xx.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/rtc/rtc-s3c24xx.c:4:
+ *^IBen Dooks, <ben@simtec.co.uk>^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/rtc/rtc-s3c24xx.c:5:
+ *^Ihttp://armlinux.simtec.co.uk/^I^I      $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#87: FILE: drivers/rtc/rtc-s3c24xx.c:12:
+ * S3C2410/S3C2440/S3C24XX Internal RTC Driver
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#100: FILE: drivers/rtc/rtc-s3c24xx.c:25:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#101: FILE: drivers/rtc/rtc-s3c24xx.c:26:
+#include <asm/io.h>

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#109: FILE: drivers/rtc/rtc-s3c24xx.c:34:
+#if 0

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#150: FILE: drivers/rtc/rtc-s3c24xx.c:75:
+	pr_debug("%s: aie=%d\n", __FUNCTION__, to);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#164: FILE: drivers/rtc/rtc-s3c24xx.c:89:
+	pr_debug("%s: pie=%d\n", __FUNCTION__, to);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#185: FILE: drivers/rtc/rtc-s3c24xx.c:110:
+	tmp |= (128 / freq)-1;
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#205: FILE: drivers/rtc/rtc-s3c24xx.c:130:
+	/* the only way to work out wether the system was mid-update
 	                            ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: drivers/rtc/rtc-s3c24xx.c:157:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: drivers/rtc/rtc-s3c24xx.c:194:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#272: FILE: drivers/rtc/rtc-s3c24xx.c:197:
+	if (alm_en & S3C2410_RTCALM_SECEN) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#278: FILE: drivers/rtc/rtc-s3c24xx.c:203:
+	if (alm_en & S3C2410_RTCALM_MINEN) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#284: FILE: drivers/rtc/rtc-s3c24xx.c:209:
+	if (alm_en & S3C2410_RTCALM_HOUREN) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#290: FILE: drivers/rtc/rtc-s3c24xx.c:215:
+	if (alm_en & S3C2410_RTCALM_DAYEN) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#303: FILE: drivers/rtc/rtc-s3c24xx.c:228:
+	if (alm_en & S3C2410_RTCALM_YEAREN) {
[...]
+	} else {
[...]

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 's3c24xx_rtc_setalarm', this function's name, in a string
#320: FILE: drivers/rtc/rtc-s3c24xx.c:245:
+	pr_debug("s3c24xx_rtc_setalarm: %d, %02x/%02x/%02x %02x.%02x.%02x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#384: FILE: drivers/rtc/rtc-s3c24xx.c:309:
+		if ((arg & (arg-1)) != 0)
 		               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: drivers/rtc/rtc-s3c24xx.c:328:
+	unsigned int ticnt = readb (S3C2410_TICNT);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#406: FILE: drivers/rtc/rtc-s3c24xx.c:331:
+		   (rtcalm & S3C2410_RTCALM_ALMEN) ? "yes" : "no" );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/rtc/rtc-s3c24xx.c:334:
+	seq_printf(seq, "periodic_IRQ\t: %s\n",
+		     (ticnt & S3C2410_TICNT_ENABLE) ? "yes" : "no" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#409: FILE: drivers/rtc/rtc-s3c24xx.c:334:
+		     (ticnt & S3C2410_TICNT_ENABLE) ? "yes" : "no" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#424: FILE: drivers/rtc/rtc-s3c24xx.c:349:
+		printk(KERN_ERR "IRQ%d already in use\n", s3c24xx_rtc_alarmno);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: drivers/rtc/rtc-s3c24xx.c:355:
+		printk(KERN_ERR "IRQ%d already in use\n", s3c24xx_rtc_tickno);

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#450: FILE: drivers/rtc/rtc-s3c24xx.c:375:
+static struct rtc_class_ops s3c24xx_rtcops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s3c24xx_rtc_base"
#465: FILE: drivers/rtc/rtc-s3c24xx.c:390:
+	if (s3c24xx_rtc_base == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#477: FILE: drivers/rtc/rtc-s3c24xx.c:402:
+		if ((readb(S3C2410_RTCCON) & S3C2410_RTCCON_RTCEN) == 0){

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#481: FILE: drivers/rtc/rtc-s3c24xx.c:406:
+			writeb(tmp | S3C2410_RTCCON_RTCEN , S3C2410_RTCCON);
 			                                  ^

ERROR:SPACING: space required before the open brace '{'
#484: FILE: drivers/rtc/rtc-s3c24xx.c:409:
+		if ((readb(S3C2410_RTCCON) & S3C2410_RTCCON_CNTSEL)){

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#488: FILE: drivers/rtc/rtc-s3c24xx.c:413:
+			writeb(tmp& ~S3C2410_RTCCON_CNTSEL , S3C2410_RTCCON);
 			          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#488: FILE: drivers/rtc/rtc-s3c24xx.c:413:
+			writeb(tmp& ~S3C2410_RTCCON_CNTSEL , S3C2410_RTCCON);
 			                                   ^

ERROR:SPACING: space required before the open brace '{'
#491: FILE: drivers/rtc/rtc-s3c24xx.c:416:
+		if ((readb(S3C2410_RTCCON) & S3C2410_RTCCON_CLKRST)){

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#523: FILE: drivers/rtc/rtc-s3c24xx.c:448:
+	pr_debug("%s: probe=%p\n", __FUNCTION__, pdev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#545: FILE: drivers/rtc/rtc-s3c24xx.c:470:
+	if (res == NULL) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#551: FILE: drivers/rtc/rtc-s3c24xx.c:476:
+					     res->end-res->start+1,
 					             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#551: FILE: drivers/rtc/rtc-s3c24xx.c:476:
+					     res->end-res->start+1,
 					                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s3c24xx_rtc_mem"
#554: FILE: drivers/rtc/rtc-s3c24xx.c:479:
+	if (s3c24xx_rtc_mem == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s3c24xx_rtc_base"
#561: FILE: drivers/rtc/rtc-s3c24xx.c:486:
+	if (s3c24xx_rtc_base == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: drivers/rtc/rtc-s3c24xx.c:496:
+ ^Ipr_debug("s3c2410_rtc: RTCCON=%02x\n", readb(S3C2410_RTCCON));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#571: FILE: drivers/rtc/rtc-s3c24xx.c:496:
+ ^Ipr_debug("s3c2410_rtc: RTCCON=%02x\n", readb(S3C2410_RTCCON));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/rtc/rtc-s3c24xx.c:496:
+ ^Ipr_debug("s3c2410_rtc: RTCCON=%02x\n", readb(S3C2410_RTCCON));$

WARNING:MISPLACED_INIT: __initdata should be placed after banner[]
#660: FILE: drivers/rtc/rtc-s3c24xx.c:585:
+static char __initdata banner[] = "S3C24XX RTC, (c) 2004,2006 Simtec Electronics\n";

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#664: FILE: drivers/rtc/rtc-s3c24xx.c:589:
+	printk(banner);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67927.commit.bc963e87fa3b8a0d74c4882432bcc7566187f454 total: 11 errors, 26 warnings, 12 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.67927.commit.bc963e87fa3b8a0d74c4882432bcc7566187f454 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
