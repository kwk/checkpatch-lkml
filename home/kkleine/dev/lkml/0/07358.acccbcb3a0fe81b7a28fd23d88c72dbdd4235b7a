WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Here is a patch, result of the combined work of Tom Zanussi and myself, to add

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/include/linux/relay.h

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: kernel/relay.c:11:
+ * ^I(mathieu.desnoyers@polymtl.ca)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: kernel/relay.c:377:
+ ^Iif (chan->is_global && chan->buf[0]) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: kernel/relay.c:377:
+ ^Iif (chan->is_global && chan->buf[0]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/relay.c:377:
+ ^Iif (chan->is_global && chan->buf[0]) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/relay.c:397:
+ ^Istruct rchan_buf *buf = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: kernel/relay.c:397:
+ ^Istruct rchan_buf *buf = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/relay.c:397:
+ ^Istruct rchan_buf *buf = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/relay.c:399:
+ ^Ichar *tmpname;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: kernel/relay.c:399:
+ ^Ichar *tmpname;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/relay.c:399:
+ ^Ichar *tmpname;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: kernel/relay.c:401:
+ ^Iif (chan->is_global)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: kernel/relay.c:401:
+ ^Iif (chan->is_global)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: kernel/relay.c:401:
+ ^Iif (chan->is_global)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: kernel/relay.c:405:
+ ^Iif (!tmpname)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: kernel/relay.c:405:
+ ^Iif (!tmpname)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/relay.c:405:
+ ^Iif (!tmpname)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/relay.c:406:
+ ^I^Igoto end;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: kernel/relay.c:406:
+ ^I^Igoto end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/relay.c:406:
+ ^I^Igoto end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: kernel/relay.c:407:
+ ^Isnprintf(tmpname, NAME_MAX, "%s%d", chan->base_filename, cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: kernel/relay.c:407:
+ ^Isnprintf(tmpname, NAME_MAX, "%s%d", chan->base_filename, cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: kernel/relay.c:407:
+ ^Isnprintf(tmpname, NAME_MAX, "%s%d", chan->base_filename, cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: kernel/relay.c:411:
+ ^I^Igoto free_name;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: kernel/relay.c:411:
+ ^I^Igoto free_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: kernel/relay.c:411:
+ ^I^Igoto free_name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/relay.c:413:
+ ^Ibuf->cpu = cpu;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: kernel/relay.c:413:
+ ^Ibuf->cpu = cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/relay.c:413:
+ ^Ibuf->cpu = cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/relay.c:414:
+ ^I__relay_reset(buf, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: kernel/relay.c:414:
+ ^I__relay_reset(buf, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/relay.c:414:
+ ^I__relay_reset(buf, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/relay.c:417:
+ ^Identry = chan->cb->create_buf_file(tmpname, chan->parent, S_IRUSR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: kernel/relay.c:417:
+ ^Identry = chan->cb->create_buf_file(tmpname, chan->parent, S_IRUSR,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/relay.c:417:
+ ^Identry = chan->cb->create_buf_file(tmpname, chan->parent, S_IRUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#178: FILE: kernel/relay.c:417:
+ 	dentry = chan->cb->create_buf_file(tmpname, chan->parent, S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/relay.c:418:
+ ^I^I^I^I^I   buf, &chan->is_global);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: kernel/relay.c:418:
+ ^I^I^I^I^I   buf, &chan->is_global);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/relay.c:418:
+ ^I^I^I^I^I   buf, &chan->is_global);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/relay.c:419:
+ ^Iif (!dentry)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: kernel/relay.c:419:
+ ^Iif (!dentry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/relay.c:419:
+ ^Iif (!dentry)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/relay.c:420:
+ ^I^Igoto free_buf;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: kernel/relay.c:420:
+ ^I^Igoto free_buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/relay.c:420:
+ ^I^Igoto free_buf;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: kernel/relay.c:421:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/relay.c:421:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: kernel/relay.c:424:
+ ^Iif(chan->is_global) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: kernel/relay.c:424:
+ ^Iif(chan->is_global) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/relay.c:424:
+ ^Iif(chan->is_global) {$

ERROR:SPACING: space required before the open parenthesis '('
#186: FILE: kernel/relay.c:424:
+ 	if(chan->is_global) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: kernel/relay.c:425:
+ ^I^Ichan->buf[0] = buf;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: kernel/relay.c:425:
+ ^I^Ichan->buf[0] = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/relay.c:425:
+ ^I^Ichan->buf[0] = buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/relay.c:426:
+ ^I^Ibuf->cpu = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: kernel/relay.c:426:
+ ^I^Ibuf->cpu = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/relay.c:426:
+ ^I^Ibuf->cpu = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: kernel/relay.c:427:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: kernel/relay.c:427:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/relay.c:427:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: kernel/relay.c:429:
+ ^Igoto free_name;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: kernel/relay.c:429:
+ ^Igoto free_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/relay.c:429:
+ ^Igoto free_name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: kernel/relay.c:432:
+ ^Irelay_destroy_buf(buf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: kernel/relay.c:432:
+ ^Irelay_destroy_buf(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/relay.c:432:
+ ^Irelay_destroy_buf(buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: kernel/relay.c:434:
+ ^Ikfree(tmpname);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: kernel/relay.c:434:
+ ^Ikfree(tmpname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/relay.c:434:
+ ^Ikfree(tmpname);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/relay.c:442:
+ *^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: kernel/relay.c:478:
+ * ^Irelay_hotcpu_callback - CPU hotplug callback$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: kernel/relay.c:479:
+ * ^I@nb: notifier block$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#216: FILE: kernel/relay.c:480:
+ * ^I@action: hotplug action to take$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: kernel/relay.c:481:
+ * ^I@hcpu: CPU number$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: kernel/relay.c:483:
+ * ^IReturns the success/failure of the operation. (NOTIFY_OK, NOTIFY_BAD)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: kernel/relay.c:486:
+static int __cpuinit relay_hotcpu_callback(struct notifier_block *nb,
+				unsigned long action,

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: kernel/relay.c:492:
+	switch(action) {

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: kernel/relay.c:499:
+			if(!chan->buf[hotcpu]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#236: FILE: kernel/relay.c:500:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'relay_hotcpu_callback', this function's name, in a string
#237: FILE: kernel/relay.c:501:
+					"relay_hotcpu_callback: cpu %d buffer "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: kernel/relay.c:502:
+					"relay_hotcpu_callback: cpu %d buffer "
+					"creation failed\n", hotcpu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: kernel/relay.c:511:
+		 * final relay_flush() call. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#286: FILE: kernel/relay.c:558:
+	strlcpy(chan->base_filename, base_filename, NAME_MAX);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#400: FILE: kernel/relay.c:1098:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07358.commit.acccbcb3a0fe81b7a28fd23d88c72dbdd4235b7a total: 27 errors, 56 warnings, 2 checks, 354 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07358.commit.acccbcb3a0fe81b7a28fd23d88c72dbdd4235b7a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
