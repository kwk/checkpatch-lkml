CHECK:LINE_SPACING: Please don't use multiple blank lines
#48: FILE: drivers/pci/pm.c:311:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: drivers/pci/pm.c:332:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#69: FILE: drivers/pci/pm.c:332:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#69: FILE: drivers/pci/pm.c:332:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#72: FILE: drivers/pci/pm.c:335:
+		printk(KERN_DEBUG

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#78: FILE: drivers/pci/pm.c:341:
+	dev->pm = pm_data = kmalloc(sizeof(struct pci_dev_pm), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pm_data)...) over kmalloc(sizeof(struct pci_dev_pm)...)
#78: FILE: drivers/pci/pm.c:341:
+	dev->pm = pm_data = kmalloc(sizeof(struct pci_dev_pm), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#85: FILE: drivers/pci/pm.c:348:
+	 * -- all PM capable devices support at least D0 and D3 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'initilization' may be misspelled - perhaps 'initialization'?
#126: FILE: include/linux/pci.h:74:
+	unsigned char	dsi:1;		/* vendor-specific initilization needed after a reset */
 	             	      		                   ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#127: FILE: include/linux/pci.h:75:
+	unsigned char	no_soft_reset:1;/* PCI config context retained when going from D3_hot to D0 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#142: FILE: include/linux/pci.h:93:
+#define PCI_PME_D0	((pci_wake_t __force) 0x01)

CHECK:SPACING: No space is necessary after a cast
#143: FILE: include/linux/pci.h:94:
+#define PCI_PME_D1	((pci_wake_t __force) 0x02)

CHECK:SPACING: No space is necessary after a cast
#144: FILE: include/linux/pci.h:95:
+#define PCI_PME_D2	((pci_wake_t __force) 0x04)

CHECK:SPACING: No space is necessary after a cast
#145: FILE: include/linux/pci.h:96:
+#define PCI_PME_D3hot	((pci_wake_t __force) 0x08)

CHECK:SPACING: No space is necessary after a cast
#146: FILE: include/linux/pci.h:97:
+#define PCI_PME_D3cold	((pci_wake_t __force) 0x10)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: drivers/pci/pci.h:70:
+extern int pci_setup_device_pm(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62197.commit.fd871a1eba5e50359f4f9c834cff7b8cf7f1622f total: 3 errors, 4 warnings, 9 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.62197.commit.fd871a1eba5e50359f4f9c834cff7b8cf7f1622f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
