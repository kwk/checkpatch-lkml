ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#60: FILE: drivers/md/raid5.c:1305:
+	int complete=0, work_queued = -EBUSY;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#62: FILE: drivers/md/raid5.c:1307:
+	if (test_bit(STRIPE_OP_CHECK, &sh->state) &&
[...]
+				clear_bit(STRIPE_OP_CHECK, &sh->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: drivers/md/raid5.c:1308:
+	if (test_bit(STRIPE_OP_CHECK, &sh->state) &&
+			test_bit(STRIPE_OP_CHECK_Done, &sh->ops.state)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#69: FILE: drivers/md/raid5.c:1314:
+	if (start_n == 0) {
[...]
+	} else if (complete)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/md/raid5.c:1328:
+	PRINTK("%s: stripe %llu start: %d complete: %d op_state: %lx\n",
+		__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#83: FILE: drivers/md/raid5.c:1328:
+		__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: drivers/md/raid5.c:1457:
+	int overlap=0, work=0, written=0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: drivers/md/raid5.c:1457:
+	int overlap=0, work=0, written=0;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: drivers/md/raid5.c:1457:
+	int overlap=0, work=0, written=0;
 	                              ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#120: FILE: drivers/md/raid5.c:1463:
+	ops_state_orig = ops_state = sh->ops.state;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: drivers/md/raid5.c:1467:
+		BUG_ON(test_bit(STRIPE_OP_RCW, &state));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#141: FILE: drivers/md/raid5.c:1522:
 
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: drivers/md/raid5.c:1525:
+		BUG_ON(test_bit(STRIPE_OP_RMW, &state));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/md/raid5.c:1570:
+		PRINTK("%s: stripe %llu STRIPE_OP_CHECK op_state: %lx\n",
+		__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#164: FILE: drivers/md/raid5.c:1570:
+		__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#170: FILE: drivers/md/raid5.c:1576:
+			for (i=disks; i--;)
 			      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/md/raid5.c:2005:
+	if ((syncing && locked == 0 &&
+	    !test_bit(STRIPE_INSYNC, &sh->state)) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/md/raid5.c:2006:
+^I    ^Itest_bit(STRIPE_OP_CHECK, &sh->state)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: drivers/md/raid5.c:2006:
+^I    ^Itest_bit(STRIPE_OP_CHECK, &sh->state)) {$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: drivers/md/raid5.c:2011:
+			BUG_ON(!test_bit(STRIPE_OP_CHECK, &sh->state) &&

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#231: FILE: drivers/md/raid5.c:2012:
+				(uptodate != disks));
 				 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/md/raid5.c:2012:
+			BUG_ON(!test_bit(STRIPE_OP_CHECK, &sh->state) &&
+				(uptodate != disks));

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#233: FILE: drivers/md/raid5.c:2014:
+							uptodate == disks);
 							^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/md/raid5.c:2014:
+			work_queued = handle_check_operations5(sh,
+							uptodate == disks);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: include/linux/raid/raid5.h:245:
+#define^ISTRIPE_OP_COMPLETION_MASK ^I(1 << STRIPE_OP_RCW_Done |\$

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: include/linux/raid/raid5.h:245:
+#define	STRIPE_OP_COMPLETION_MASK 	(1 << STRIPE_OP_RCW_Done |\

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63444.commit.7d3e26542daad134be3c75a28613a55f695180a5 total: 6 errors, 10 warnings, 10 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.63444.commit.7d3e26542daad134be3c75a28613a55f695180a5 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
