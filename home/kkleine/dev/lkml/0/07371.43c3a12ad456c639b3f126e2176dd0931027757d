ERROR:SPACING: space required after that ',' (ctx:VxV)
#47: FILE: include/asm-i386/system.h:277:
+#define cmpxchg_local(ptr,o,n)\
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#47: FILE: include/asm-i386/system.h:277:
+#define cmpxchg_local(ptr,o,n)\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#47: FILE: include/asm-i386/system.h:277:
+#define cmpxchg_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#48: FILE: include/asm-i386/system.h:278:
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#49: FILE: include/asm-i386/system.h:279:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#57: FILE: include/asm-i386/system.h:342:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: include/asm-i386/system.h:343:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#61: FILE: include/asm-i386/system.h:346:
+	unsigned long prev;
+	switch (size) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: include/asm-i386/system.h:405:
+#define cmpxchg_local(ptr,o,n)						\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: include/asm-i386/system.h:405:
+#define cmpxchg_local(ptr,o,n)						\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#91: FILE: include/asm-i386/system.h:405:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'o' - possible side-effects?
#91: FILE: include/asm-i386/system.h:405:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#91: FILE: include/asm-i386/system.h:405:
+#define cmpxchg_local(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg_local((ptr), (unsigned long)(o),	\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#109: FILE: include/asm-i386/system.h:434:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/asm-i386/system.h:435:
+static inline unsigned long long __cmpxchg64_local(volatile void *ptr,
+			unsigned long long old, unsigned long long new)

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: include/asm-i386/system.h:438:
+	unsigned long long prev;
+	__asm__ __volatile__("cmpxchg8b %3"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/system.h:451:
+#define cmpxchg64_local(ptr,o,n)\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/system.h:451:
+#define cmpxchg64_local(ptr,o,n)\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#127: FILE: include/asm-i386/system.h:451:
+#define cmpxchg64_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
+					(unsigned long long)(n)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: include/asm-i386/system.h:452:
+	((__typeof__(*(ptr)))__cmpxchg64_local((ptr),(unsigned long long)(o),\
 	                                            ^

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#140: FILE: include/asm-i386/local.h:6:
+#include <asm/atomic.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: include/asm-i386/local.h:16:
+#define local_set(l,i)	atomic_long_set(&(l)->a, (i))
                    ^

WARNING:INLINE: plain inline is preferred over __inline__
#157: FILE: include/asm-i386/local.h:18:
+static __inline__ void local_inc(local_t *l)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#162: FILE: include/asm-i386/local.h:22:
+		:"+m" (l->a.counter));
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#166: FILE: include/asm-i386/local.h:25:
+static __inline__ void local_dec(local_t *l)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#171: FILE: include/asm-i386/local.h:29:
+		:"+m" (l->a.counter));
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#175: FILE: include/asm-i386/local.h:32:
+static __inline__ void local_add(long i, local_t *l)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#180: FILE: include/asm-i386/local.h:36:
+		:"+m" (l->a.counter)
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#185: FILE: include/asm-i386/local.h:40:
+static __inline__ void local_sub(long i, local_t *l)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#190: FILE: include/asm-i386/local.h:44:
+		:"+m" (l->a.counter)
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: include/asm-i386/local.h:52:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#203: FILE: include/asm-i386/local.h:57:
+static __inline__ int local_sub_and_test(long i, local_t *l)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#207: FILE: include/asm-i386/local.h:61:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#209: FILE: include/asm-i386/local.h:63:
+		:"+m" (l->a.counter), "=qm" (c)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#210: FILE: include/asm-i386/local.h:64:
+		:"ir" (i) : "memory");
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: include/asm-i386/local.h:71:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: include/asm-i386/local.h:75:
+ */ $

WARNING:INLINE: plain inline is preferred over __inline__
#222: FILE: include/asm-i386/local.h:76:
+static __inline__ int local_dec_and_test(local_t *l)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#226: FILE: include/asm-i386/local.h:80:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#228: FILE: include/asm-i386/local.h:82:
+		:"+m" (l->a.counter), "=qm" (c)
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: include/asm-i386/local.h:88:
+ * local_inc_and_test - increment and test $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: include/asm-i386/local.h:90:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: include/asm-i386/local.h:94:
+ */ $

WARNING:INLINE: plain inline is preferred over __inline__
#241: FILE: include/asm-i386/local.h:95:
+static __inline__ int local_inc_and_test(local_t *l)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#245: FILE: include/asm-i386/local.h:99:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#247: FILE: include/asm-i386/local.h:101:
+		:"+m" (l->a.counter), "=qm" (c)
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: include/asm-i386/local.h:110:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: include/asm-i386/local.h:114:
+ */ $

WARNING:INLINE: plain inline is preferred over __inline__
#261: FILE: include/asm-i386/local.h:115:
+static __inline__ int local_add_negative(long i, local_t *l)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#265: FILE: include/asm-i386/local.h:119:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#267: FILE: include/asm-i386/local.h:121:
+		:"+m" (l->a.counter), "=qm" (c)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#268: FILE: include/asm-i386/local.h:122:
+		:"ir" (i) : "memory");
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#279: FILE: include/asm-i386/local.h:133:
+static __inline__ long local_add_return(long i, local_t *l)

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: include/asm-i386/local.h:138:
+	unsigned long flags;
+	if(unlikely(boot_cpu_data.x86==3))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#284: FILE: include/asm-i386/local.h:138:
+	if(unlikely(boot_cpu_data.x86==3))
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: include/asm-i386/local.h:138:
+	if(unlikely(boot_cpu_data.x86==3))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#289: FILE: include/asm-i386/local.h:143:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#291: FILE: include/asm-i386/local.h:145:
+		:"=r"(i)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#292: FILE: include/asm-i386/local.h:146:
+		:"m"(l->a.counter), "0"(i));
 		^

WARNING:INLINE: plain inline is preferred over __inline__
#305: FILE: include/asm-i386/local.h:159:
+static __inline__ long local_sub_return(long i, local_t *l)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: include/asm-i386/local.h:161:
+	return local_add_return(-i,l);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#310: FILE: include/asm-i386/local.h:164:
+#define local_inc_return(l)  (local_add_return(1,l))
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: include/asm-i386/local.h:165:
+#define local_dec_return(l)  (local_sub_return(1,l))
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#327: FILE: include/asm-i386/local.h:181:
+#define local_add_unless(l, a, u)				\
+({								\
+	long c, old;						\
+	c = local_read(l);					\
+	for (;;) {						\
+		if (unlikely(c == (u)))				\
+			break;					\
+		old = local_cmpxchg((l), c, c + (a));	\
+		if (likely(old == c))				\
+			break;					\
+		c = old;					\
+	}							\
+	c != (u);						\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'u' - possible side-effects?
#327: FILE: include/asm-i386/local.h:181:
+#define local_add_unless(l, a, u)				\
+({								\
+	long c, old;						\
+	c = local_read(l);					\
+	for (;;) {						\
+		if (unlikely(c == (u)))				\
+			break;					\
+		old = local_cmpxchg((l), c, c + (a));	\
+		if (likely(old == c))				\
+			break;					\
+		c = old;					\
+	}							\
+	c != (u);						\
+})

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: include/asm-i386/local.h:210:
+#define cpu_local_wrap_v(l)^I ^I\$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07371.commit.43c3a12ad456c639b3f126e2176dd0931027757d total: 35 errors, 17 warnings, 14 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.07371.commit.43c3a12ad456c639b3f126e2176dd0931027757d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
