WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .11
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#49: FILE: arch/ia64/kernel/sys_ia64.c:168:
+int ia64_map_check_rgn(unsigned long addr, unsigned long len,
+		unsigned long flags)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > RGN_MAP_LIMIT'
#59: FILE: arch/ia64/kernel/sys_ia64.c:178:
+	if ((len > RGN_MAP_LIMIT) || (roff > (RGN_MAP_LIMIT - len)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/sparc64/kernel/sys_sparc.c:553:
+int sparc64_mmap_check(unsigned long addr, unsigned long len,
+		unsigned long flags)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#271: FILE: drivers/md/raid1.c:1511:
+							else

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#272: FILE: drivers/md/raid1.c:1512:
+								atomic_add(s, &rdev->corrected_errors);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#286: FILE: drivers/net/sky2.c:237:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space prohibited before that close parenthesis ')'
#307: FILE: drivers/pci/quirks.c:430:
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_ICH6_0, quirk_ich6_lpc_acpi );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: fs/befs/linuxvfs.c:597:
+	 * in special cases */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#387: FILE: fs/ext3/super.c:642:
+	if (inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#390: FILE: fs/ext3/super.c:645:
+	if (is_bad_inode(inode)
+	    || (generation && inode->i_generation != generation)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#393: FILE: fs/ext3/super.c:648:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#401: FILE: fs/ext3/super.c:656:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: include/asm-ia64/mman.h:14:
+int ia64_map_check_rgn(unsigned long addr, unsigned long len,
+		unsigned long flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: include/asm-sparc/mman.h:8:
+int sparc_mmap_check(unsigned long addr, unsigned long len,
+		unsigned long flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: include/asm-sparc64/mman.h:8:
+int sparc64_mmap_check(unsigned long addr, unsigned long len,
+		unsigned long flags);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#545: FILE: lib/spinlock_debug.c:140:
+#if 0		/* __write_lock_debug() can lock up - maybe this can too? */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#568: FILE: lib/spinlock_debug.c:214:
+#if 0		/* This can cause lockups */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ulog_send', this function's name, in a string
#824: FILE: net/ipv4/netfilter/ipt_ULOG.c:120:
+		DEBUGP("ipt_ULOG: ulog_send: nothing to send\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#854: FILE: net/ipx/af_ipx.c:1651:
+	if (ipx_pktsize < sizeof(struct ipxhdr)
+	   || !pskb_may_pull(skb, ipx_pktsize))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44714.commit.dcfa6a1fe82f23d4b65cd265a72e09aa31dd6532 total: 1 errors, 10 warnings, 10 checks, 667 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.44714.commit.dcfa6a1fe82f23d4b65cd265a72e09aa31dd6532 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
