WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
one more EXT3 issue.journal_start() in prepare_write() causes different ranking

WARNING:TYPO_SPELLING: 'specificaly' may be misspelled - perhaps 'specifically'?
#40: 
inode extension in commit_write(). ENOSPC case must be specificaly
                                                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#45: 
2) We cant use block_prepare_write() for allocation needs inside 
      ^^^^

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#57: 
signed-off-by: Dmitriy Monakhov <dmonakhov@openvz.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/ext3/inode.c:1151:
+static int ext3_get_block_delay(struct inode *inode, sector_t iblock,
+			struct buffer_head *bh_result, int create)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: fs/ext3/inode.c:1174:
+static int ext3_check_block_mapping(struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: fs/ext3/inode.c:1174:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: fs/ext3/inode.c:1174:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: fs/ext3/inode.c:1177:
+	unsigned block_start, block_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: fs/ext3/inode.c:1178:
+	unsigned blocksize;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#139: FILE: fs/ext3/inode.c:1187:
+	for (	bh = head, block_start = 0;
+		bh != head || !block_start;
+	    	block_start = block_end, bh = next)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#139: FILE: fs/ext3/inode.c:1187:
+	for (	bh = head, block_start = 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/ext3/inode.c:1189:
+^I    ^Iblock_start = block_end, bh = next)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: fs/ext3/inode.c:1189:
+^I    ^Iblock_start = block_end, bh = next)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: fs/ext3/inode.c:1205:
+static int ext3_prepare_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#157: FILE: fs/ext3/inode.c:1205:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#157: FILE: fs/ext3/inode.c:1205:
+		unsigned from, unsigned to)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: fs/ext3/inode.c:1234:
+static void ext3_rollback_write(struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#187: FILE: fs/ext3/inode.c:1234:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#187: FILE: fs/ext3/inode.c:1234:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: fs/ext3/inode.c:1237:
+	unsigned block_start, block_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: fs/ext3/inode.c:1238:
+	unsigned blocksize;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: fs/ext3/inode.c:1248:
+	for (	bh = head, block_start = 0;
+		bh != head || !block_start;
+	    	block_start = block_end, bh = next)
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#201: FILE: fs/ext3/inode.c:1248:
+	for (	bh = head, block_start = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/ext3/inode.c:1250:
+^I    ^Iblock_start = block_end, bh = next)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: fs/ext3/inode.c:1250:
+^I    ^Iblock_start = block_end, bh = next)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: fs/ext3/inode.c:1263:
+static int ext3_do_map_write(struct inode *inode, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: fs/ext3/inode.c:1263:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: fs/ext3/inode.c:1263:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#219: FILE: fs/ext3/inode.c:1266:
+	unsigned block_start, block_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: fs/ext3/inode.c:1267:
+	unsigned blocksize, bbits;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#228: FILE: fs/ext3/inode.c:1275:
+	for (	bh = head, block_start = 0;
+		bh != head || !block_start;
+	    	block++, block_start = block_end, bh = next)
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#228: FILE: fs/ext3/inode.c:1275:
+	for (	bh = head, block_start = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: fs/ext3/inode.c:1277:
+^I    ^Iblock++, block_start = block_end, bh = next)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: fs/ext3/inode.c:1277:
+^I    ^Iblock++, block_start = block_end, bh = next)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: fs/ext3/inode.c:1296:
+static int ext3_map_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#249: FILE: fs/ext3/inode.c:1296:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#249: FILE: fs/ext3/inode.c:1296:
+		unsigned from, unsigned to)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#269: FILE: fs/ext3/inode.c:1310:
 
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: mm/filemap.c:2132:
+			if (status < 0) {
[...]
+				if (status != AOP_TRUNCATED_PAGE)
[...]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: mm/filemap.c:2147:
+^I^I^I} else ^Iif (status < bytes)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: mm/filemap.c:2198:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#402: FILE: mm/filemap.c:2198:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: mm/filemap.c:2198:
+ ^I^I^Ibreak;$

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28807.commit.e322d9127c22de664dfa91e720e0ab612a1c2e72 total: 10 errors, 26 warnings, 8 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28807.commit.e322d9127c22de664dfa91e720e0ab612a1c2e72 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
