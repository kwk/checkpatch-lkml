WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#66: FILE: fs/proc/base.c:1562:
+static int proc_attr_dir_readdir(struct file * filp,
                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: fs/proc/base.c:1562:
+static int proc_attr_dir_readdir(struct file * filp,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: fs/proc/base.c:1563:
+static int proc_attr_dir_readdir(struct file * filp,
 			     void * dirent, filldir_t filldir)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: fs/proc/base.c:1566:
+				   attr_dir_stuff,ARRAY_SIZE(attr_dir_stuff));
 				                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#87: FILE: fs/proc/base.c:1569:
+static struct file_operations proc_attr_dir_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: fs/proc/base.c:1575:
+static struct dentry *proc_attr_dir_lookup(struct inode *dir,
 				struct dentry *dentry, struct nameidata *nd)

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#109: FILE: fs/proc/base.c:1580:
+static struct inode_operations proc_attr_dir_inode_operations = {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#128: FILE: fs/proc/base.c:1762:
+	DIR("attr",       S_IRUGO|S_IXUGO, attr_dir),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#128: FILE: fs/proc/base.c:1762:
+	DIR("attr",       S_IRUGO|S_IXUGO, attr_dir),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#137: FILE: fs/proc/base.c:2037:
+	DIR("attr",      S_IRUGO|S_IXUGO, attr_dir),
 	                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#137: FILE: fs/proc/base.c:2037:
+	DIR("attr",      S_IRUGO|S_IXUGO, attr_dir),

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40629.commit.b2ae9a2dad63b7f31527f434ace4b793b778334d total: 2 errors, 5 warnings, 4 checks, 94 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.40629.commit.b2ae9a2dad63b7f31527f434ace4b793b778334d has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
