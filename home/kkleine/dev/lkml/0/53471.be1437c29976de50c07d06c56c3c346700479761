CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/security.h:50:
+extern void cap_d_instantiate(struct dentry *dentry, struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/security.h:53:
+extern int cap_inode_alloc_security(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/linux/security.h:54:
+extern void cap_inode_free_security(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/security.h:55:
+extern void cap_inode_free_security(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: include/linux/security.h:56:
+extern void cap_inode_post_setxattr(struct dentry *dentry, char *name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: include/linux/security.h:57:
+                                        void *value, size_t size, int flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: include/linux/security.h:57:
+extern void cap_inode_post_setxattr(struct dentry *dentry, char *name,
+                                        void *value, size_t size, int flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/security.h:57:
+                                        void *value, size_t size, int flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: security/commoncap.c:236:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#189: FILE: security/commoncap.c:251:
+#define XATTR_NAME_CAPS XATTR_SECURITY_PREFIX XATTR_CAPS_SUFFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#208: FILE: security/commoncap.c:270:
+		printk(KERN_NOTICE "%s: Error (%d) getting xattr\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: security/commoncap.c:271:
+		printk(KERN_NOTICE "%s: Error (%d) getting xattr\n",
+				__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#209: FILE: security/commoncap.c:271:
+				__FUNCTION__, rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#216: FILE: security/commoncap.c:278:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: security/commoncap.c:279:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%d)\n",
+					__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#217: FILE: security/commoncap.c:279:
+					__FUNCTION__, rc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: security/commoncap.c:292:
+                                        void *value, size_t size, int flags)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: security/commoncap.c:292:
+void cap_inode_post_setxattr(struct dentry *dentry, char *name,
+                                        void *value, size_t size, int flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: security/commoncap.c:292:
+                                        void *value, size_t size, int flags)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: security/commoncap.c:308:
+		int ret;
+		ret = cap_inode_alloc_security(inode);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: security/commoncap.c:332:
+                                        void *value, size_t size, int flags)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: security/commoncap.c:332:
+void cap_inode_post_setxattr(struct dentry *dentry, char *name,
+                                        void *value, size_t size, int flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: security/commoncap.c:332:
+                                        void *value, size_t size, int flags)$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#282: FILE: security/commoncap.c:463:
+EXPORT_SYMBOL(cap_inode_free_security);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#283: FILE: security/commoncap.c:464:
+EXPORT_SYMBOL(cap_inode_post_setxattr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#284: FILE: security/commoncap.c:465:
+EXPORT_SYMBOL(cap_d_instantiate);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.53471.commit.be1437c29976de50c07d06c56c3c346700479761 total: 5 errors, 11 warnings, 10 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.53471.commit.be1437c29976de50c07d06c56c3c346700479761 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
