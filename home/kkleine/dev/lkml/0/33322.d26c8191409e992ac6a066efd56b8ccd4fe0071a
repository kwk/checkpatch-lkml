CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/hrtimer.h:150:
+extern void hrtimer_clock_notify(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/hrtimer.h:151:
+extern void clock_was_set(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/hrtimer.h:152:
+extern void hrtimer_interrupt(struct pt_regs *regs);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: include/linux/hrtimer.h:154:
+# define hrtimer_cb_get_time(t)	(t)->base->get_time()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#161: FILE: include/linux/hrtimer.h:162:
+# define KTIME_HIGH_RES		(ktime_t) { .tv64 = CONFIG_HIGH_RES_RESOLUTION }

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: include/linux/hrtimer.h:177:
+# define hrtimer_cb_get_time(t)		(t)->base->softirq_time

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: include/linux/hrtimer.h:182:
+  extern ktime_t ktime_get(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/hrtimer.h:182:
+  extern ktime_t ktime_get(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/linux/hrtimer.h:183:
+  extern ktime_t ktime_get_real(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/hrtimer.h:183:
+  extern ktime_t ktime_get_real(void);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#216: FILE: include/linux/ktime.h:264:
+#define KTIME_LOW_RES		(ktime_t){ .tv64 = TICK_NSEC }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: kernel/hrtimer.c:354:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#391: FILE: kernel/hrtimer.c:400:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#405: FILE: kernel/hrtimer.c:414:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#409: FILE: kernel/hrtimer.c:418:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#431: FILE: kernel/hrtimer.c:440:
+	if (delta.tv64 >= nsec_per_hz.tv64) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: kernel/hrtimer.c:450:
+			s64 incr = ktime_to_ns(nsec_per_hz);
+			orun = ktime_divns(delta, incr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#534: FILE: kernel/hrtimer.c:543:
+	printk(KERN_INFO "hrtimers: Switched to high resolution mode CPU %d\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#579: FILE: kernel/hrtimer.c:588:
+	if (hrtimer_hres_active && hrtimer_reprogram(timer, base)) {
+

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: kernel/hrtimer.c:590:
+		switch(timer->cb_mode) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#587: FILE: kernel/hrtimer.c:596:
+			BUG_ON(timer->function(timer) != HRTIMER_NORESTART);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#607: FILE: kernel/hrtimer.c:616:
+			BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#627: FILE: kernel/hrtimer.c:636:
+# define hrtimer_enqueue_reprogram(t,b)	0
                                     ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#652: FILE: kernel/hrtimer.c:741:
+	    rb_entry(base->first, struct hrtimer, node)->expires.tv64) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#684: FILE: kernel/hrtimer.c:763:
+	if (hrtimer_cb_pending(timer))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#686: FILE: kernel/hrtimer.c:765:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#753: FILE: kernel/hrtimer.c:1011:
+	BUG_ON(!cpu_base->hres_active);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#803: FILE: kernel/hrtimer.c:1061:
+				BUG_ON(timer->state != HRTIMER_CALLBACK);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hrtimer *' should also have an identifier name
#843: FILE: kernel/hrtimer.c:1101:
+		int (*fn)(struct hrtimer *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#859: FILE: kernel/hrtimer.c:1117:
+			BUG_ON(hrtimer_active(timer));

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#986: FILE: kernel/time/Kconfig:4:
+config HIGH_RES_TIMERS
+	bool "High Resolution Timer Support"
+	depends on GENERIC_TIME
+	help
+	  This option enables high resolution timer support. If your
+	  hardware is not capable then this option only increases
+	  the size of the kernel image.
+

Kconfig symbols should have a help text which fully describes
it.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33322.commit.d26c8191409e992ac6a066efd56b8ccd4fe0071a total: 6 errors, 13 warnings, 12 checks, 896 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.33322.commit.d26c8191409e992ac6a066efd56b8ccd4fe0071a has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
