WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
> > One of the key requirements of resource management for us is to be able to

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: include/bc/beancounter.h:48:
+#define BC_TGID_HASH_SIZE	(1 << BC_TGID_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: include/bc/beancounter.h:119:
+static inline void tbc_adjust_maxheld(struct tgid_beancounter *tbc,
+					int resource)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#146: FILE: include/bc/beancounter.h:121:
+	struct bc_resource_parm *parm;
 	                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#148: FILE: include/bc/beancounter.h:123:
+	parm = &tbc->tbc_parms[resource];
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: include/bc/beancounter.h:138:
+static inline void tbc_adjust_minheld(struct tgid_beancounter *tbc,
+					int resource)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#163: FILE: include/bc/beancounter.h:140:
+	struct bc_resource_parm *parm;
 	                         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#165: FILE: include/bc/beancounter.h:142:
+	parm = &tbc->tbc_parms[resource];
 	^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#177: FILE: include/bc/beancounter.h:156:
+struct tgid_beancounter *tgid_beancounter_findcreate(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: kernel/bc/beancounter.c:22:
+static void init_tgid_beancounter_struct(struct tgid_beancounter *tbc,
+						struct beancounter *bc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: kernel/bc/beancounter.c:106:
+ * ^I^Ibc$

WARNING:REPEATED_WORD: Possible repeated word: 'tbc'
#235: FILE: kernel/bc/beancounter.c:107:
+ *	tbc tbc ...  tbc tbc

WARNING:REPEATED_WORD: Possible repeated word: 'tbc'
#235: FILE: kernel/bc/beancounter.c:107:
+ *	tbc tbc ...  tbc tbc

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: kernel/bc/beancounter.c:114:
+struct tgid_beancounter *tgid_beancounter_findcreate(struct beancounter *bc,
+							int mask, int locked)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: kernel/bc/beancounter.c:128:
+	hlist_for_each_entry (tbc, pos, slot, hash)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#260: FILE: kernel/bc/beancounter.c:132:
+	if (pos != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_tbc"
#266: FILE: kernel/bc/beancounter.c:138:
+		if (new_tbc != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: kernel/bc/beancounter.c:140:
+		printk("returning tbc %p: tgid %d\n", tbc, current->tgid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_tbc"
#272: FILE: kernel/bc/beancounter.c:144:
+	if (new_tbc != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: kernel/bc/beancounter.c:154:
+	new_tbc = kmem_cache_alloc(bc_tgid_cachep,
+			mask & BC_ALLOC_ATOMIC ? GFP_ATOMIC : GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_tbc"
#283: FILE: kernel/bc/beancounter.c:155:
+	if (new_tbc == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#296: FILE: kernel/bc/beancounter.c:168:
+	printk("returning tbc %p: tgid %d\n", tbc, current->tgid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: kernel/bc/beancounter.c:182:
+			printk("BC: %d has %lu of %s held on put", tbc->tgid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: kernel/bc/beancounter.c:183:
+			printk("BC: %d has %lu of %s held on put", tbc->tgid,
+				tbc->tbc_parms[i].held, bc_rnames[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: kernel/bc/beancounter.c:190:
+	printk("releasing tbc %p: tgid %d\n", tbc, current->tgid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#333: FILE: kernel/bc/beancounter.c:240:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: kernel/bc/beancounter.c:241:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d\n",
+			bc->bc_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#371: FILE: kernel/bc/beancounter.c:301:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: kernel/bc/beancounter.c:302:
+		printk(KERN_WARNING "Missing tgid beancounter for bc %d\n",
+			bc->bc_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: kernel/bc/beancounter.c:353:
+static void init_tgid_beancounter_struct(struct tgid_beancounter *tbc,
+						struct beancounter *bc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: kernel/bc/beancounter.c:413:
+	bc_tgid_cachep = kmem_cache_create("tgid_beancounters",
+			sizeof(struct tgid_beancounter), 0,

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: kernel/bc/misc.c:31:
+	struct tgid_beancounter *tbc;
+	tbc = tgid_beancounter_findcreate_unlocked(tsk->task_bc.exec_bc,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: kernel/bc/misc.c:32:
+	tbc = tgid_beancounter_findcreate_unlocked(tsk->task_bc.exec_bc,
+							BC_LOOKUP);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#441: FILE: kernel/bc/misc.c:38:
+		printk(KERN_WARNING "No tgid beancounter bc %d with task %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: kernel/bc/misc.c:39:
+		printk(KERN_WARNING "No tgid beancounter bc %d with task %d\n",
+			tsk->task_bc.exec_bc->bc_id, tsk->tgid);

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39989.commit.81b878e35578703b2393313e8221057c3586b8a4 total: 0 errors, 17 warnings, 18 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.39989.commit.81b878e35578703b2393313e8221057c3586b8a4 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
