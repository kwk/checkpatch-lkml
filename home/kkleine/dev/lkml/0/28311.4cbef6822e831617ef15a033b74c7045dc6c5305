WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
The idea is to modify the core write() code so that it won't take a pagefault

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#61: 
  - if the page was not uptodate, we cannot commit the write, because the
                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#63: 
    which should do the right thing (ie. not set the page uptodate).
                                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#65: 
  - if the page was uptodate, commit the copied portion so we make some
                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#73: 
- Now we have a non uptodate page, and we keep faulting on a 2nd or later
                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#75: 
  in the first iovec. To fix this situation, if we fault on a !uptodate page,
                                                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#79: 
  implementations that were setting the page uptodate in the prepare_write
                                             ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: mm/filemap.c:1939:
+			copied = filemap_copy_from_user_atomic(page, offset,
 							buf, bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: mm/filemap.c:1942:
+			copied = filemap_copy_from_user_iovec_atomic(page,
+						offset, cur_iov, iov_offset,

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#168: FILE: mm/filemap.c:1948:
+			 * If the page is not uptodate, we cannot allow a
 			                      ^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#182: FILE: mm/filemap.c:1961:
+		status = a_ops->commit_write(file, page, offset, offset+copied);
 		                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: mm/filemap.c:1979:
+				filemap_set_next_iovec(&cur_iov,
+						&iov_offset, copied);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#238: FILE: mm/filemap.c:1994:
+			 * uptodate. A smaller write will tend to bring it
 			   ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#239: FILE: mm/filemap.c:1995:
+			 * uptodate in ->prepare_write, and thus we have a
 			   ^^^^^^^^

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#258: FILE: mm/filemap.h:25:
+ * were sucessfully copied.  If a fault is encountered then return the number of
         ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: mm/filemap.h:38:
+filemap_copy_from_user_atomic(struct page *page, unsigned long offset,
 			const char __user *buf, unsigned bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: mm/filemap.h:52:
+filemap_copy_from_user_nonatomic(struct page *page, unsigned long offset,
+			const char __user *buf, unsigned bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: mm/filemap.h:52:
+			const char __user *buf, unsigned bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: mm/filemap.h:73:
+filemap_copy_from_user_iovec_atomic(struct page *page, unsigned long offset,
 			const struct iovec *iov, size_t base, size_t bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: mm/filemap.h:94:
+filemap_copy_from_user_iovec_nonatomic(struct page *page, unsigned long offset,
+			const struct iovec *iov, size_t base, size_t bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#389: FILE: fs/libfs.c:343:
+			unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#389: FILE: fs/libfs.c:343:
+			unsigned from, unsigned to)

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28311.commit.4cbef6822e831617ef15a033b74c7045dc6c5305 total: 0 errors, 14 warnings, 8 checks, 384 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.28311.commit.4cbef6822e831617ef15a033b74c7045dc6c5305 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
