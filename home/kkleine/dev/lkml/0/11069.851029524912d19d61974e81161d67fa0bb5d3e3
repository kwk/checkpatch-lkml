ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/char/agp/agp.h:117:
+        int (*agp_type_to_mask_type) (struct agp_bridge_data *, int);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/char/agp/agp.h:117:
+        int (*agp_type_to_mask_type) (struct agp_bridge_data *, int);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#76: FILE: drivers/char/agp/agp.h:117:
+        int (*agp_type_to_mask_type) (struct agp_bridge_data *, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct agp_bridge_data *' should also have an identifier name
#76: FILE: drivers/char/agp/agp.h:117:
+        int (*agp_type_to_mask_type) (struct agp_bridge_data *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#76: FILE: drivers/char/agp/agp.h:117:
+        int (*agp_type_to_mask_type) (struct agp_bridge_data *, int);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#156: FILE: drivers/char/agp/amd-k7-agp.c:382:
 static struct agp_device_ids amd_agp_device_ids[] __devinitdata =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/char/agp/amd64-agp.c:76:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#221: FILE: drivers/char/agp/efficeon-agp.c:341:
 static int __devinit agp_efficeon_probe(struct pci_dev *pdev,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#253: FILE: drivers/char/agp/generic.c:113:
+	unsigned long alloc_size = num_agp_pages*sizeof(struct page *);
 	                                        ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct agp_memory)...)
#255: FILE: drivers/char/agp/generic.c:115:
+	new = kmalloc(sizeof(struct agp_memory), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#257: FILE: drivers/char/agp/generic.c:117:
+	if (new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#268: FILE: drivers/char/agp/generic.c:128:
+	if (alloc_size <= PAGE_SIZE) {
+		new->memory = kmalloc(alloc_size, GFP_KERNEL);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#271: FILE: drivers/char/agp/generic.c:131:
+	if (new->memory == NULL) {
+		new->memory = vmalloc(alloc_size);
+	} 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new->memory"
#271: FILE: drivers/char/agp/generic.c:131:
+	if (new->memory == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/char/agp/generic.c:133:
+^I} $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new->memory"
#274: FILE: drivers/char/agp/generic.c:134:
+	if (new->memory == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/char/agp/generic.c:141:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/char/agp/generic.c:241:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#325: FILE: drivers/char/agp/generic.c:1047:
+	if (type != mem->type) {
+		return -EINVAL;
+	}

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#349: FILE: drivers/char/agp/generic.c:1078:
+		writel(bridge->driver->mask_memory(bridge, mem->memory[i], mask_type), bridge->gatt_table+j);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/char/agp/generic.c:1078:
+		writel(bridge->driver->mask_memory(bridge, mem->memory[i], mask_type), bridge->gatt_table+j);
 		                                                                                         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#364: FILE: drivers/char/agp/generic.c:1098:
+	if (type != mem->type) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: drivers/char/agp/generic.c:1147:
+^Iif (new == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#388: FILE: drivers/char/agp/generic.c:1147:
+	if (new == NULL) 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#391: FILE: drivers/char/agp/generic.c:1150:
+	for (i = 0; i < page_count; i++) {
+		new->memory[i] = 0;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: drivers/char/agp/generic.c:1161:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/char/agp/generic.c:1164:
+^Iif ((unsigned long) curr->memory >= VMALLOC_START $

CHECK:SPACING: No space is necessary after a cast
#405: FILE: drivers/char/agp/generic.c:1164:
+	if ((unsigned long) curr->memory >= VMALLOC_START 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#406: FILE: drivers/char/agp/generic.c:1165:
+	if ((unsigned long) curr->memory >= VMALLOC_START 
+	    && (unsigned long) curr->memory < VMALLOC_END) {

CHECK:SPACING: No space is necessary after a cast
#406: FILE: drivers/char/agp/generic.c:1165:
+	    && (unsigned long) curr->memory < VMALLOC_END) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#489: FILE: drivers/char/agp/intel-agp.c:29:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: drivers/char/agp/intel-agp.c:81:
+^I{.mask = I810_PTE_VALID | I830_PTE_SYSTEM_CACHED, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#514: FILE: drivers/char/agp/intel-agp.c:91:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/char/agp/intel-agp.c:214:
+^Iif (type < AGP_USER_TYPES) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#555: FILE: drivers/char/agp/intel-agp.c:241:
+		if (!PGE_EMPTY(agp_bridge, readl(agp_bridge->gatt_table+j))) {
 		                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: drivers/char/agp/intel-agp.c:254:
+^I^Iif (!mem->is_flushed) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/char/agp/intel-agp.c:257:
+^I^I^Iwritel((i*4096)|I810_PTE_LOCAL|I810_PTE_VALID, $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#578: FILE: drivers/char/agp/intel-agp.c:257:
+			writel((i*4096)|I810_PTE_LOCAL|I810_PTE_VALID, 
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#578: FILE: drivers/char/agp/intel-agp.c:257:
+			writel((i*4096)|I810_PTE_LOCAL|I810_PTE_VALID, 
 			               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#578: FILE: drivers/char/agp/intel-agp.c:257:
+			writel((i*4096)|I810_PTE_LOCAL|I810_PTE_VALID, 
 			                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#579: FILE: drivers/char/agp/intel-agp.c:258:
+			       intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#579: FILE: drivers/char/agp/intel-agp.c:258:
+			       intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#579: FILE: drivers/char/agp/intel-agp.c:258:
+			       intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#580: FILE: drivers/char/agp/intel-agp.c:259:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#580: FILE: drivers/char/agp/intel-agp.c:259:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#580: FILE: drivers/char/agp/intel-agp.c:259:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(i*4));
 			                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: drivers/char/agp/intel-agp.c:260:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#582: FILE: drivers/char/agp/intel-agp.c:261:
+			
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: drivers/char/agp/intel-agp.c:264:
+^I^Iif (!mem->is_flushed) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#593: FILE: drivers/char/agp/intel-agp.c:270:
+			       intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#593: FILE: drivers/char/agp/intel-agp.c:270:
+			       intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#593: FILE: drivers/char/agp/intel-agp.c:270:
+			       intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#594: FILE: drivers/char/agp/intel-agp.c:271:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#594: FILE: drivers/char/agp/intel-agp.c:271:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#594: FILE: drivers/char/agp/intel-agp.c:271:
+			readl(intel_i810_private.registers+I810_PTE_BASE+(j*4));
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: drivers/char/agp/intel-agp.c:296:
+		readl(intel_i810_private.registers+I810_PTE_BASE+(i*4))	;
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: drivers/char/agp/intel-agp.c:296:
+		readl(intel_i810_private.registers+I810_PTE_BASE+(i*4))	;
 		                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#634: FILE: drivers/char/agp/intel-agp.c:296:
+		readl(intel_i810_private.registers+I810_PTE_BASE+(i*4))	;
 		                                                   ^

WARNING:SPACING: space prohibited before semicolon
#634: FILE: drivers/char/agp/intel-agp.c:296:
+		readl(intel_i810_private.registers+I810_PTE_BASE+(i*4))	;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/char/agp/intel-agp.c:298:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/char/agp/intel-agp.c:646:
+^Iif (mask_type != 0 && mask_type != AGP_PHYS_MEMORY && $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#700: FILE: drivers/char/agp/intel-agp.c:656:
+		       intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#700: FILE: drivers/char/agp/intel-agp.c:656:
+		       intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#700: FILE: drivers/char/agp/intel-agp.c:656:
+		       intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#701: FILE: drivers/char/agp/intel-agp.c:657:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#701: FILE: drivers/char/agp/intel-agp.c:657:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#701: FILE: drivers/char/agp/intel-agp.c:657:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(j*4));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#721: FILE: drivers/char/agp/intel-agp.c:683:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(i*4));
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#721: FILE: drivers/char/agp/intel-agp.c:683:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(i*4));
 		                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#721: FILE: drivers/char/agp/intel-agp.c:683:
+		readl(intel_i830_private.registers+I810_PTE_BASE+(i*4));
 		                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: drivers/char/agp/intel-agp.c:685:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: drivers/char/agp/intel-agp.c:765:
+^Iif (type != mem->type) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: drivers/char/agp/intel-agp.c:770:
+^Iif (mask_type != 0 && mask_type != AGP_PHYS_MEMORY && $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#785: FILE: drivers/char/agp/intel-agp.c:779:
+			mem->memory[i], mask_type), intel_i830_private.gtt+j);
 			                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#786: FILE: drivers/char/agp/intel-agp.c:780:
+		readl(intel_i830_private.gtt+j);
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/char/agp/intel-agp.c:782:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/char/agp/intel-agp.c:1675:
+       .agp_type_to_mask_type  = intel_i830_type_to_mask_type,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#917: FILE: drivers/char/agp/nvidia-agp.c:316:
 static int __devinit agp_nvidia_probe(struct pci_dev *pdev,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#941: FILE: drivers/char/agp/sworks-agp.c:450:
 static int __devinit agp_serverworks_probe(struct pci_dev *pdev,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#981: FILE: drivers/char/agp/via-agp.c:221:
 static struct agp_device_ids via_agp_device_ids[] __devinitdata =

CHECK:BIT_MACRO: Prefer using the BIT macro
#990: FILE: include/linux/agp_backend.h:94:
+#define AGP_USER_TYPES (1 << 16)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11069.commit.851029524912d19d61974e81161d67fa0bb5d3e3 total: 19 errors, 17 warnings, 45 checks, 797 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

/tmp/tmp.gGZ8aIRHtl//home/kkleine/dev/lkml/0/patch.offset.11069.commit.851029524912d19d61974e81161d67fa0bb5d3e3 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
